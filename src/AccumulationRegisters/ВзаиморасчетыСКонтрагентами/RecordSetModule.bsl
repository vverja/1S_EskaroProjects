Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  ДокументОбъект    - объект проводимого документа, 
//  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, СтруктураПараметров, Отказ, Заголовок, РежимПроведения, ИмяСуммы = "СуммаПлатежа", Знак="") Экспорт

	Если РежимПроведения <> РежимПроведенияДокумента.Оперативный Тогда
		//Смартис Лиманчук начало 10.04.2013
		//Возврат;
		Если РольДоступна("ПолныеПрава") Тогда
			Возврат;
		КонецЕсли;
		//Смартис Лиманчук окончание 10.04.2013
	КонецЕсли;
	
	МетаданныеДокумента = ДокументОбъект.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	
	Если НЕ ЗначениеЗаполнено(ИмяТабличнойЧасти) ИЛИ ИмяТабличнойЧасти = "ДокументыРасчетовСКонтрагентом" Тогда
		
		ЕстьДоговорКонтрагента = (МетаданныеДокумента.Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено);
		ЕстьДоговорСделка      = (МетаданныеДокумента.Реквизиты.Найти("Сделка") <> Неопределено);
		
		Если ЕстьДоговорКонтрагента Тогда
			
			ДоговорКонтрагента = СтруктураШапкиДокумента.ДоговорКонтрагента;
			
			// Контроль общей суммы задолженности по договору 
			
			Если СтруктураШапкиДокумента.КонтролироватьСуммуЗадолженности Тогда
				
				Если глЗначениеПеременной("ИспользоватьБлокировкуДанных") Тогда
						
					СтруктураПараметровБлокировки = Новый Структура(
						"ИмяТаблицы", "ВзаиморасчетыСКонтрагентами");
					СтруктураЗначенийБлокировки   = Новый Структура(
						"ДоговорКонтрагента", СтруктураШапкиДокумента.ДоговорКонтрагента);
					ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, , Отказ, Заголовок);
					
				КонецЕсли;
							
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
				Запрос.УстановитьПараметр("Знак", ?(Знак = "", 1, -1));
				//Смартис Лиманчук начало 09.04.2013
				Запрос.УстановитьПараметр("Дата", СтруктураШапкиДокумента.Дата);
				//Смартис Лиманчук окончание 09.04.2013
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	ВзаиморасчетыПоДоговору.СуммаВзаиморасчетовОстаток * &Знак КАК СуммаВзаиморасчетовОстаток
				|ИЗ
				//Смартис Лиманчук начало 09.04.2013
				//|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ВзаиморасчетыПоДоговору
				|	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(&Дата, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ВзаиморасчетыПоДоговору
				//Смартис Лиманчук окончание 09.04.2013
				|
				|ДЛЯ ИЗМЕНЕНИЯ";
				
				Выборка = Запрос.Выполнить().Выбрать();
				Если Выборка.Следующий() Тогда
					
					СуммаВзаиморасчетовОстаток = ?(Выборка.СуммаВзаиморасчетовОстаток= NULL, 0, Выборка.СуммаВзаиморасчетовОстаток);
					
					СуммаВзаиморасчетовПоДокументу = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(
						СтруктураШапкиДокумента.СуммаДокумента, 
						СтруктураШапкиДокумента.ВалютаДокумента, СтруктураШапкиДокумента.ВалютаВзаиморасчетов, 
						ЗаполнениеДокументов.КурсДокумента(ДокументОбъект,СтруктураШапкиДокумента.ВалютаРегламентированногоУчета), СтруктураШапкиДокумента.КурсВзаиморасчетов, 
						ЗаполнениеДокументов.КратностьДокумента(ДокументОбъект, СтруктураШапкиДокумента.ВалютаРегламентированногоУчета), СтруктураШапкиДокумента.КратностьВзаиморасчетов);
																
					Валюта = ?(СтруктураШапкиДокумента.ВалютаВзаиморасчетов = NULL, "", СтруктураШапкиДокумента.ВалютаВзаиморасчетов);
					Если (СуммаВзаиморасчетовОстаток + СуммаВзаиморасчетовПоДокументу) > СтруктураШапкиДокумента.ДопустимаяСуммаЗадолженности Тогда
						ОбщегоНазначения.СообщитьОбОшибке(
							"Сумма задолженности по договору " + ДоговорКонтрагента + 
							" с учетом документа превышает допустимую сумму задолженности." + Символы.ПС +
							Символы.Таб + "Сумма задолженности с учетом документа: " + (СуммаВзаиморасчетовОстаток + СуммаВзаиморасчетовПоДокументу) +
							" " + Валюта + ", допустимая сумма задолженности: " + СтруктураШапкиДокумента.ДопустимаяСуммаЗадолженности + " " + Валюта + 
							", превышение: " + (ОбщегоНазначения.ФорматСумм(СуммаВзаиморасчетовОстаток + СуммаВзаиморасчетовПоДокументу - 
							СтруктураШапкиДокумента.ДопустимаяСуммаЗадолженности)) + " " + Валюта, Отказ, Заголовок);
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
			
			// Контроль процента предоплаты по сделкам документа
			
			Если Знак = "" И СтруктураШапкиДокумента.ПроцентПредоплаты > 0 Тогда
				
				Запрос = Новый Запрос;
				МенеджерВремТаблиц = Новый МенеджерВременныхТаблиц;
				Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
				Запрос.Текст =
				"ВЫБРАТЬ РАЗЛИЧНЫЕ
				|	Таб.Сделка
				|ПОМЕСТИТЬ
				|	ТаблицаСделок
				|ИЗ
				|	&ТаблицаСделок КАК Таб
				|ГДЕ
				|	ВЫБОР
				|		КОГДА
				|			&ВедениеВзаиморасчетов = ЗНАЧЕНИЕ(Перечисление.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом)
				|		ТОГДА
				|			НЕ Таб.Сделка В (&МассивПустыхСделок)
				|		ИНАЧЕ ИСТИНА
				|	КОНЕЦ";
				МассивПустыхСделок = Новый Массив;
				Для каждого ТипСделки Из СтруктураПараметров.ТаблицаСделок.Колонки.Сделка.ТипЗначения.Типы() Цикл
					МассивПустыхСделок.Добавить(Новый(ТипСделки));
				КонецЦикла;
				Запрос.УстановитьПараметр("МассивПустыхСделок",    МассивПустыхСделок);
				Запрос.УстановитьПараметр("ТаблицаСделок",         СтруктураПараметров.ТаблицаСделок);
				Запрос.УстановитьПараметр("ВедениеВзаиморасчетов", СтруктураШапкиДокумента.ВедениеВзаиморасчетов);
				
				Запрос.Выполнить();
				
				Если глЗначениеПеременной("ИспользоватьБлокировкуДанных") Тогда
					
					СтруктураПараметровБлокировки = Новый Структура(
						"ИмяТаблицы, ИсточникДанных, ИмяВременнойТаблицы", 
						"РасчетыСКонтрагентами", МенеджерВремТаблиц, "ТаблицаСделок");
					СтруктураЗначенийБлокировки   = Новый Структура(
						"ДоговорКонтрагента", СтруктураШапкиДокумента.ДоговорКонтрагента);
					СтруктураИсточникаДанных      = Новый Структура(
						"Сделка", "Сделка");
					ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных, Отказ, Заголовок);
					
				КонецЕсли;
				
				Запрос.Текст = 
				"ВЫБРАТЬ
				|	РасчетыСКонтрагентамиОбороты.Сделка КАК Сделка,
				|	ПРЕДСТАВЛЕНИЕ(РасчетыСКонтрагентамиОбороты.Сделка) КАК СделкаПредставление,
				|	РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовПриход КАК СуммаЗаказа,
				|	РасчетыСКонтрагентамиОбороты.СуммаВзаиморасчетовРасход КАК СуммаОплаты
				|ИЗ
				|	РегистрНакопления.РасчетыСКонтрагентами.Обороты(
				//Смартис Лиманчук начало 09.04.2013
				//|			,
				|			,&Дата
				//Смартис Лиманчук окончание 09.04.2013
				|			,
				|			,
				|			ДоговорКонтрагента = &ДоговорКонтрагента
				|				И Сделка В (ВЫБРАТЬ РАЗЛИЧНЫЕ Сделка ИЗ ТаблицаСделок)) КАК РасчетыСКонтрагентамиОбороты
				|
				|ДЛЯ ИЗМЕНЕНИЯ";
				
				Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
				//Смартис Лиманчук начало 09.04.2013
				Запрос.УстановитьПараметр("Дата", СтруктураШапкиДокумента.Дата);
				//Смартис Лиманчук окончание 09.04.2013
				
				Выборка = Запрос.Выполнить().Выбрать();
				Пока Выборка.Следующий() Цикл
					СуммаЗаказа = ?(Выборка.СуммаЗаказа = NULL, 0, Выборка.СуммаЗаказа);
					СуммаОплаты = ?(Выборка.СуммаОплаты = NULL, 0, Выборка.СуммаОплаты);
					ПроцентПредоплаты = СтруктураШапкиДокумента.ПроцентПредоплаты;
					ПроцентСовершеннойПредоплаты = ?(СуммаЗаказа = 0, 100, СуммаОплаты / СуммаЗаказа * 100);
					
					Если ПроцентСовершеннойПредоплаты < ПроцентПредоплаты Тогда
						ОбщегоНазначения.СообщитьОбОшибке(
							"Недостаточна предоплата по заказу " + Выборка.СделкаПредставление + 
							Символы.ПС + Символы.Таб + " По договору """ + ДоговорКонтрагента + 
							""" требуется предоплата в размере " + ПроцентПредоплаты + "% ; Поступила предоплата  в размере " 
							+ Окр(ПроцентСовершеннойПредоплаты, 2, 1) + "%", Отказ, Заголовок);
					КонецЕсли;
						
				КонецЦикла;
				
			КонецЕсли;
			
			// Контроль числа дней задолженности
				
            Если Знак = "" И СтруктураШапкиДокумента.КонтролироватьЧислоДнейЗадолженности Тогда
				
				Если глЗначениеПеременной("ИспользоватьБлокировкуДанных") Тогда
						
					СтруктураПараметровБлокировки = Новый Структура(
						"ИмяТаблицы", "ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов");
					СтруктураЗначенийБлокировки   = Новый Структура(
						"ДоговорКонтрагента", СтруктураШапкиДокумента.ДоговорКонтрагента);
					ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, , Отказ, Заголовок);
					
				КонецЕсли;
				
				Запрос = Новый Запрос;
				Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
				//Смартис Лиманчук начало 09.04.2013
				Запрос.УстановитьПараметр("Дата", СтруктураШапкиДокумента.Дата);
				//Смартис Лиманчук окончание 09.04.2013
				
				// Выбирает дату самого раннего документа из остатков по договору
				Запрос.Текст =
				"ВЫБРАТЬ
				|	ВзаиморасчетыПоДокументамОстатки.ДоговорКонтрагента,
				|	МИНИМУМ(ВзаиморасчетыПоДокументамОстатки.ДокументРасчетовСКонтрагентом.Дата) КАК ДатаПервогоДокумента
				|ИЗ
				//Смартис Лиманчук начало 09.04.2013
				//|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ВзаиморасчетыПоДокументамОстатки
				|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(&Дата, ДоговорКонтрагента = &ДоговорКонтрагента) КАК ВзаиморасчетыПоДокументамОстатки
				//Смартис Лиманчук окончание 09.04.2013
				|ГДЕ
				|	ВзаиморасчетыПоДокументамОстатки.СуммаВзаиморасчетовОстаток > 0
				|
				|СГРУППИРОВАТЬ ПО
				|	ВзаиморасчетыПоДокументамОстатки.ДоговорКонтрагента
				|
				|ДЛЯ ИЗМЕНЕНИЯ
				|	РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки";
				
				Выборка = Запрос.Выполнить().Выбрать();
				
				Если Выборка.Следующий() Тогда
					
					ДопустимоеЧислоДнейЗадолженности = СтруктураШапкиДокумента.ДопустимоеЧислоДнейЗадолженности;
					
					Если Константы.СпособКонтроляДнейЗадолженности.Получить() = Перечисления.СпособыКонтроляДнейЗадолженности.ПоКалендарнымДням Тогда
						РазницаДатВСекундах = (СтруктураШапкиДокумента.Дата - Выборка.ДатаПервогоДокумента);

						РазницаДней = Цел(РазницаДатВСекундах/(24 * 60 * 60));
					Иначе
						РазницаДней = ЗаполнениеДокументов.ЧислоРабочихДней(Выборка.ДатаПервогоДокумента, СтруктураШапкиДокумента.Дата);
					КонецЕсли;
					
					Если РазницаДней > ДопустимоеЧислоДнейЗадолженности Тогда

						ОбщегоНазначения.СообщитьОбОшибке(
							"Превышено допустимое число дней задолженности по договору " + ДоговорКонтрагента + 
							Символы.ПС + Символы.Таб +
							" Допустимое число дней задолженности: " + ДопустимоеЧислоДнейЗадолженности + 
							", дата самой старой задолженности: " + Выборка.ДатаПервогоДокумента + 
							", превышение: " + 
							(РазницаДней - ДопустимоеЧислоДнейЗадолженности) + " дней",
							Отказ, Заголовок);
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	Иначе
		
		// Контроль суммы задолженности по расчетному документу
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ДокументСсылка",        ДокументОбъект.Ссылка);
		МенеджерВремТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.МенеджерВременныхТаблиц = МенеджерВремТаблиц;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|   Док.ДоговорКонтрагента
		|ПОМЕСТИТЬ ТаблицаДоговоров
		|ИЗ Документ." + ИмяТаблицы +" КАК Док
		|ГДЕ Док.Ссылка = &ДокументСсылка";
		
		Запрос.Выполнить();
		
		Если глЗначениеПеременной("ИспользоватьБлокировкуДанных") Тогда
						
			СтруктураПараметровБлокировки = Новый Структура(
				"ИмяТаблицы, ИсточникДанных, ИмяВременнойТаблицы", 
				"ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов", МенеджерВремТаблиц, "ТаблицаДоговоров");
			СтруктураИсточникаДанных      = Новый Структура(
				"ДоговорКонтрагента", "ДоговорКонтрагента");
			ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, , СтруктураИсточникаДанных, Отказ, Заголовок);
			
		КонецЕсли;
		
		Запрос.Текст = "
		|ВЫБРАТЬ 
		|   Док.ДоговорКонтрагента,
		|   Док.ДоговорКонтрагента.ВалютаВзаиморасчетов,
		|   Док.ДокументРасчетовСКонтрагентом,
		|   Док."+ ИмяСуммы + " КАК СуммаДокумента,
		|   Док.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
		|   ЕСТЬNULL(Взаиморасчеты.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетовОстаток
		|ИЗ
		|	Документ." + ИмяТаблицы + " КАК Док
		|ЛЕВОЕ СОЕДИНЕНИЕ
		//Смартис Лиманчук начало 09.04.2013
		//|	 РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(,
		|	 РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(&Дата,
		//Смартис Лиманчук окончание 09.04.2013
		|	 ДоговорКонтрагента В (ВЫБРАТЬ ДоговорКонтрагента ИЗ ТаблицаДоговоров)
		|	 ) КАК Взаиморасчеты
		|ПО
		|	Док.ДоговорКонтрагента = Взаиморасчеты.ДоговорКонтрагента
		|		И Док.ДокументРасчетовСКонтрагентом = Взаиморасчеты.ДокументРасчетовСКонтрагентом
		|ГДЕ
		|	Док.Ссылка = &ДокументСсылка
		|		И НЕ Док.ДокументРасчетовСКонтрагентом В (&МассивПустыхДокументов)
		|
		|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки";
		
		ВозможныеТипыДокументов = Метаданные.РегистрыНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Измерения.ДокументРасчетовСКонтрагентом.Тип;
		МассивПустыхДокументов  = ОбщегоНазначения.МассивПустыхЗначений(ВозможныеТипыДокументов);
		Запрос.УстановитьПараметр("МассивПустыхДокументов", МассивПустыхДокументов);
		//Смартис Лиманчук начало 09.04.2013
		Запрос.УстановитьПараметр("Дата", СтруктураШапкиДокумента.Дата);
		//Смартис Лиманчук окончание 09.04.2013
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			
			СуммаВзаиморасчетовОстаток     = Макс(Выборка.СуммаВзаиморасчетовОстаток, -Выборка.СуммаВзаиморасчетовОстаток);
			СуммаВзаиморасчетовПоДокументу = Выборка.СуммаДокумента;

			Если СуммаВзаиморасчетовОстаток < СуммаВзаиморасчетовПоДокументу Тогда
				Валюта = Выборка.ВалютаВзаиморасчетов;
				УправлениеЗапасами.ОшибкаНетОстатка(
					"Сумма по документу превышает текущую задолженность по документу расчетов " + Выборка.ДокументРасчетовСКонтрагентом + ".",
					СуммаВзаиморасчетовОстаток, СуммаВзаиморасчетовПоДокументу, Валюта, Отказ, Заголовок);
			КонецЕсли;
			
		КонецЦикла;
		
   КонецЕсли;
	
КонецПроцедуры // КонтрольОстатков()

