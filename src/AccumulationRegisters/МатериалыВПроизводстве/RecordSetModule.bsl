Перем мПериод Экспорт; 
Перем мТаблицаДвижений Экспорт;

Процедура ВыполнитьПриход() Экспорт
	
	мТаблицаДвижений.ЗаполнитьЗначения( мПериод, "Период");
	мТаблицаДвижений.ЗаполнитьЗначения( Истина,  "Активность");
	мТаблицаДвижений.ЗаполнитьЗначения( ВидДвиженияНакопления.Приход, "ВидДвижения");

	Загрузить(мТаблицаДвижений);
	
КонецПроцедуры // ВыполнитьДвижение()

Процедура ВыполнитьРасход() Экспорт
	
	мТаблицаДвижений.ЗаполнитьЗначения( мПериод, "Период");
	мТаблицаДвижений.ЗаполнитьЗначения( Истина,  "Активность");
	мТаблицаДвижений.ЗаполнитьЗначения( ВидДвиженияНакопления.Расход, "ВидДвижения");

	Загрузить(мТаблицаДвижений);
	
КонецПроцедуры // ВыполнитьДвижение()

// Процедура формирует временную таблицу документа.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	Отказ - Булево - Признак отказа от проведения документа
//
Процедура СформироватьВременнуюТаблицуДокумента(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	Отказ
	)
	
	ТекстЗапросаПоМатериалам = УправлениеПроизводствомДвиженияПоРегистрам.СформироватьТекстЗапросаПоМатериалам(
		СтруктураШапкиДокумента,
		Истина // ФормироватьВременнуюТаблицу
	);
		
	Если ПустаяСтрока(ТекстЗапросаПоМатериалам) Тогда
		ОбщегоНазначения.Сообщение("Не определено формирование движений по материалам в производстве для документа: " + СтруктураШапкиДокумента.Ссылка);
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоМатериалам;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	УчетЗатратПоЗаказамНаПроизводство = ?(СтруктураШапкиДокумента.Свойство("УчетЗатратПоЗаказамНаПроизводство"), СтруктураШапкиДокумента.УчетЗатратПоЗаказамНаПроизводство, Истина);
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);
	Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводство", УчетЗатратПоЗаказамНаПроизводство);
	
	Запрос.Выполнить();
	
КонецПроцедуры // СформироватьВременнуюТаблицуДокумента()

// Процедура установки управляемой блокировки.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц -Менеджер временных таблиц
//	Отказ - Булево - Признак отказа от проведения документа
//	Заголовок - Строка - Заголовок документа
//
Процедура УстановитьУправляемуюБлокировку(
	МенеджерВременныхТаблиц,
	Отказ,
	Заголовок
	)
	
	Если Не глЗначениеПеременной("ИспользоватьБлокировкуДанных") Тогда
		Возврат;
	КонецЕсли;

	СтруктураПараметров = Новый Структура("
		|ТипТаблицы,
		|ИмяТаблицы,
		|ИсточникДанных,
		|ИмяВременнойТаблицы
		|",
		"РегистрНакопления",
		"МатериалыВПроизводстве",
		МенеджерВременныхТаблиц,
		"ТаблицаДокумента"
	);
		
	СтруктураИсточникаДанных = Новый Структура("
		|Подразделение,
		|Затрата,
		|ХарактеристикаЗатраты,
		|СерияЗатраты,
		|Заказ
		|",
		"Подразделение",
		"Затрата",
		"ХарактеристикаЗатраты",
		"СерияЗатраты",
		"Заказ"
	);
	
	ОбщегоНазначения.УстановитьУправляемуюБлокировку(
		СтруктураПараметров,
		, //СтруктураЗначенийБлокировки
		СтруктураИсточникаДанных, 
		Отказ, 
		Заголовок
	);
		
КонецПроцедуры // УстановитьУправляемуюБлокировку()

// Функция формирует запрос для контроля остатков пр регистру "Материалы в производстве".
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Запрос - запрос для контроля остатков
//
Функция СформироватьЗапросКонтроляОстатков(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки в производстве
	|	Док.Подразделение,
	|	Док.Затрата.Представление							КАК НоменклатураПредставление,
	|	Док.Затрата.ЕдиницаХраненияОстатков.Представление 	КАК ЕдиницаХраненияОстатковПредставление,
	|	Док.ХарактеристикаЗатраты,
	|	Док.СерияЗатраты,
	|	Док.Заказ,
	|	СУММА(Док.Количество) КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) КАК ОстатокКоличество
	|ИЗ (
	|	ВЫБРАТЬ
	|		Док.Подразделение,
	|		Док.Затрата,
	|		Док.ХарактеристикаЗатраты,
	|		ВЫБОР КОГДА Док.ВестиУчетПоСериямВНЗП ТОГДА
	|			Док.СерияЗатраты
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ КАК СерияЗатраты,
	|		Док.Заказ,
	|		СУММА(ВЫРАЗИТЬ(Док.Количество КАК Число(15,3))) КАК Количество
	|	ИЗ
	|		ТаблицаДокумента КАК Док
	|
	|	СГРУППИРОВАТЬ ПО
	|		Док.Подразделение,
	|		Док.Затрата,
	|		Док.ХарактеристикаЗатраты,
	|		ВЫБОР КОГДА Док.ВестиУчетПоСериямВНЗП ТОГДА
	|			Док.СерияЗатраты
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)
	|		КОНЕЦ,
	|		Док.Заказ
    |
	|	) КАК Док
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.МатериалыВПроизводстве.Остатки(,
	|			Затрата В (
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					Док.Затрата
	|				ИЗ
	|					ТаблицаДокумента КАК Док
	|				)
	|			) КАК Остатки
	|	ПО 
	|		Док.Подразделение = Остатки.Подразделение
	|		И Док.Затрата = Остатки.Затрата
	| 		И Док.ХарактеристикаЗатраты = Остатки.ХарактеристикаЗатраты
	| 		И Док.СерияЗатраты = Остатки.СерияЗатраты 
	| 		И Док.Заказ = Остатки.Заказ
	|
	|СГРУППИРОВАТЬ ПО
	|	Док.Подразделение,
	|	Док.Затрата,
	|	Док.ХарактеристикаЗатраты,
	|	Док.СерияЗатраты,
	|	Док.Заказ
	|
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) < СУММА(Док.Количество)
	|
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.МатериалыВПроизводстве.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Возврат Запрос;
	
КонецФункции // СформироватьЗапросКонтроляОстатков()

// Процедура контролирует остаток по данному регистру по переданному документу
// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
// выдается сообщение.
//
// Параметры:
//  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  Отказ             - флаг отказа в проведении,
//  Заголовок         - строка, заголовок сообщения об ошибке проведения.
//
Процедура КонтрольОстатков(СтруктураШапкиДокумента, Отказ, Заголовок, РежимПроведения) Экспорт
	
	Если РежимПроведения <> РежимПроведенияДокумента.Оперативный Тогда
		Возврат;
	КонецЕсли;

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВременнуюТаблицуДокумента(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		Отказ
	);
	УстановитьУправляемуюБлокировку(
		МенеджерВременныхТаблиц,
		Отказ,
		Заголовок
	);

    Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СформироватьЗапросКонтроляОстатков(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц
	);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка " + 
			УправлениеЗапасами.ПредставлениеНоменклатуры(
				Выборка.НоменклатураПредставление, 
				Выборка.ХарактеристикаЗатраты,
				Выборка.СерияЗатраты) + 
			" в подразделении """ + Выборка.Подразделение + """" +
			?(НЕ ЗначениеЗаполнено(Выборка.Заказ), "", ", заказанного по документу " + (Выборка.Заказ)) + 
			" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(
			СтрокаСообщения, 
			Выборка.ОстатокКоличество, 
			Выборка.ДокументКоличество,
			Выборка.ЕдиницаХраненияОстатковПредставление, 
			Отказ, 
			Заголовок
		);

	КонецЦикла;

КонецПроцедуры // КонтрольОстатков()
