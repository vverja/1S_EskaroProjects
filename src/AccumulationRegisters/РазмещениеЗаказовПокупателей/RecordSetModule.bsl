Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Переменные, используемые в процедурах контроля остатков
Перем МетаданныеДокумента, ИмяДокумента, ИмяТабличнойЧасти, МетаданныеТабЧасти, ИмяТаблицы, Заголовок;
Перем СтруктураШапкиДокумента, ДокументСсылка, Отказ; 


// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

//Процедура контроля остатков, которая вызывается из всех документов в которых требуется контролировать остатки по данному регистру
//Выполняет роль диспетчера - в зависимости от типа документа и других параметров вызывает требуемую процедуру
// Параметры:
//  ДокОбъект    - объект проводимого документа, 
//  ИмяТабЧасти - строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапки - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
//  ОтказПроведения             - флаг отказа в проведении,
//  ЗаголовокСообщения         - строка, заголовок сообщения об ошибке проведения.
Процедура КонтрольОстатков(ДокОбъект, ИмяТабЧасти, СтруктураШапки, ОтказПроведения, ЗаголовокСообщения, РежимПроведения) Экспорт
	
	Если РежимПроведения <> РежимПроведенияДокумента.Оперативный
		ИЛИ (ИмяТабЧасти <> "" И ДокОбъект[ИмяТабЧасти].Количество() = 0) Тогда
		
		Возврат;
	КонецЕсли;
	
	ДокументСсылка		    = ДокОбъект.Ссылка;
    СтруктураШапкиДокумента = СтруктураШапки;
	ИмяТабличнойЧасти 	    = ИмяТабЧасти;
	Отказ 				    = ОтказПроведения;
    Заголовок 			    = ЗаголовокСообщения;

	МетаданныеДокумента = ДокументСсылка.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	Если ИмяТабЧасти <> "" Тогда
		ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
		МетаданныеТабЧасти       = МетаданныеДокумента.ТабличныеЧасти[ИмяТабЧасти];
	Иначе
		ИмяТаблицы				= ИмяДокумента;
		МетаданныеТабЧасти 		= Неопределено;
	КонецЕсли;
	
	Если ИмяДокумента = "КорректировкаЗаказаПоставщику" Тогда
		//контроль достаточности размещенного товара при снятии размещения
		КонтрольОстатков_КорректировкаЗаказаПоставщику();
		
	ИначеЕсли ИмяДокумента = "РезервированиеТоваров" Тогда
		//контроль достаточности товара, доступного для размещения, при установке размещения (заполнен реквизит "Новое размещение")
	    КонтрольОстатков_Заказ_КорректировкаЗаказа_Резервирование();
		//контроль достаточности имеющегося размещения при снятии размещения (заполнен реквизит "Исходное размещение")
		КонтрольОстатков_СнятиеРазмещения();
	ИначеЕсли ИмяДокумента = "РазмещениеЗаказа" Тогда
		Если ИмяТабличнойЧасти = "Материалы" Тогда
			//контроль достаточности товара, доступного для размещения, при установке размещения 
			//контроль остатков при снятии размещения (корректировка с отрицательным количеством)
			КонтрольОстатков_Заказ_КорректировкаЗаказа_Резервирование();

		Иначе	
			//контроль достаточности товара, доступного для размещения, при установке размещения (заполнен реквизит "Новое размещение")
			КонтрольОстатков_РазмещениеЗаказа();
			//контроль достаточности имеющегося размещения при снятии размещения (заполнен реквизит "Исходное размещение")
			КонтрольОстатков_СнятиеРазмещения();
		КонецЕсли;	
	ИначеЕсли ИмяДокумента = "КорректировкаЗаказаНаПроизводство" Тогда
		Если ИмяТабличнойЧасти = "Материалы" Тогда
			//контроль достаточности товара, доступного для размещения, при установке размещения 
			//контроль остатков при снятии размещения (корректировка с отрицательным количеством)
			КонтрольОстатков_Заказ_КорректировкаЗаказа_Резервирование();
        КонецЕсли;
	ИначеЕсли ИмяДокумента = "КорректировкаЗаказаПокупателя"
		ИЛИ ИмяДокумента = "ИзменениеЗаказаПокупателя"
		ИЛИ ИмяДокумента = "КорректировкаВнутреннегоЗаказа"
		ИЛИ ИмяДокумента = "ЗаказПокупателя"
		ИЛИ ИмяДокумента = "ВнутреннийЗаказ"
		ИЛИ ИмяДокумента = "ЗаказНаПроизводство" Тогда
		//контроль достаточности товара, доступного для размещения, при установке размещения 
		//контроль остатков при снятии размещения (корректировка с отрицательным количеством)
		КонтрольОстатков_Заказ_КорректировкаЗаказа_Резервирование();
	ИначеЕсли ИмяДокумента = "ПоступлениеТоваровУслуг"
		ИЛИ ИмяДокумента = "ПоступлениеТоваровУслугВНТТ"
		ИЛИ ИмяДокумента = "ОтчетПроизводстваЗаСмену"
		ИЛИ ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		//контроль остатков при снятии размещения: 
		//1) поступление товаров на склад под заказ покупателя, внутренний, заказ на производство
		//2) поступление товаров в НТТ под исполнение внутреннего заказа
		//3) выпуск продукции по заказу на производство с резервированием под другой заказ на производство или заказ покупателя/внутренний заказ
		КонтрольОстатков_СнятиеРазмещения();
	Иначе
		Сообщить("Для документа "+ДокументСсылка+" не предусмотрен вызов процедуры 'Контроль остатков' модуля регистра 'Размещение заказов'");
	КонецЕсли;

	//вернем обратно признак отказа от проведения документа 
	ОтказПроведения = Отказ;
    ЗаголовокСообщения = Заголовок;
	
	//очистим переменные для экономии памяти
	МетаданныеДокумента = Неопределено;
	МетаданныеТабЧасти = Неопределено;
	СтруктураШапкиДокумента = Неопределено;
	
КонецПроцедуры

//Вспомогательная процедура для установки некоторых общих для многих процедур параметров запроса
Процедура ЗаполнитьОбщиеПараметрыЗапроса(Запрос)
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		Запрос.УстановитьПараметр("СтатусПартии", Перечисления.СтатусыПартийТоваров.ВозвратнаяТара);
		Запрос.УстановитьПараметр("ТоварТара", Перечисления.ТоварТара.Тара);
	Иначе
		МассивСтатусовПартий = Новый Массив;
		МассивСтатусовПартий.Добавить(Перечисления.СтатусыПартийТоваров.Купленный);
		МассивСтатусовПартий.Добавить(Перечисления.СтатусыПартийТоваров.ВПереработку);
			
		Запрос.УстановитьПараметр("СтатусПартии", МассивСтатусовПартий);
		Запрос.УстановитьПараметр("ТоварТара", Перечисления.ТоварТара.Товар);
	КонецЕсли;
	
    Запрос.УстановитьПараметр("ПустаяХарактеристика", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
    Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);

КонецПроцедуры

//Процедура контролирует остаток по данному регистру при снятии размещения документом КорректировкаЗаказаПоставщику
//	Анализируются только строки, в которых происходит снятие размещения (количество < 0)
//Особенность: ЗаказПоставщику располагается в шапке документа. В связи с этим используется соответствующий отбор в виртуальной таблице РазмещениеЗаказов
Процедура КонтрольОстатков_КорректировкаЗаказаПоставщику()

	Если глЗначениеПеременной("ИспользоватьБлокировкуДанных")  Тогда
		Запрос = новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|Номенклатура,
		|%ПОЛЕ_Док_Характеристика% КАК ХарактеристикаНоменклатуры,
		|Заказ КАК ЗаказПокупателя,
		|Ссылка.ЗаказПоставщику КАК ЗаказПоставщику
		|ИЗ Документ." + ИмяТаблицы +"
		|ГДЕ Ссылка = &ДокументСсылка И Количество<0 
		|И Заказ НЕ В (&МассивПустыхСсылок)";
		Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПОЛЕ_Док_Характеристика%","ХарактеристикаНоменклатуры");
		КонецЕсли;

		МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Заказ.Тип);
		Запрос.УстановитьПараметр("МассивПустыхСсылок",МассивПустыхСсылок);
		Запрос.УстановитьПараметр("ДокументСсылка",ДокументСсылка);
		Запрос.УстановитьПараметр("ПустаяХарактеристика",Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
		Результат = Запрос.Выполнить();
		Если не Результат.Пустой() Тогда
			СтруктураПараметровБлокировки = Новый Структура(
				"ТипТаблицы,ИмяТаблицы,ИсточникДанных"
				,"РегистрНакопления"
				,"РазмещениеЗаказовПокупателей"
				,Результат);
			
			СтруктураИсточникаДанных = Новый Структура(
				"Номенклатура,ХарактеристикаНоменклатуры,ЗаказПоставщику,ЗаказПокупателя"
				,"Номенклатура"
				,"ХарактеристикаНоменклатуры"
				,"ЗаказПоставщику"
				,"ЗаказПокупателя"
				);
			ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки,,СтруктураИсточникаДанных, Отказ, Заголовок);
				
        КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";


	// Установим параметры запроса
	ЗаполнитьОбщиеПараметрыЗапроса(Запрос);
	Запрос.УстановитьПараметр("ЗаказПоставщику", ДокументСсылка.ЗаказПоставщику);
    Запрос.УстановитьПараметр("МассивПустыхЗаказов", ОбщегоНазначения.МассивПустыхЗначений(МетаданныеТабЧасти.Реквизиты.Заказ.Тип));

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	ВложенныйЗапрос.ДокНоменклатура                             			КАК Номенклатура,
	|	ВложенныйЗапрос.ДокНоменклатура.Представление               			КАК НоменклатураПредставление,
	|	ВложенныйЗапрос.ДокРазмещение                               			КАК Размещение,
	|	ВложенныйЗапрос.ДокНоменклатура.ЕдиницаХраненияОстатков.Представление     КАК ЕдиницаХраненияОстатковПредставление,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры               			КАК ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры.Представление 			КАК ХарактеристикаНоменклатурыПредставление,
	|	ЕСТЬNULL(СУММА(ВложенныйЗапрос.ДокКоличество), 0)        				КАК ДокументКоличество,
	|	ЕСТЬNULL(СУММА(ВложенныйЗапрос.ОстКоличествоРазмещено), 0)			КАК ОстатокКоличествоРазмещено
	|
	|ИЗ (ВЫБРАТЬ
	|	Док.Номенклатура                                       	КАК ДокНоменклатура, 
	|	Док.Ссылка.ЗаказПоставщику                             	КАК ДокРазмещение, 
	|   %ПОЛЕ_Док_Характеристика% 								КАК ДокХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Количество%                       			КАК ДокКоличество,
	|	МАКСИМУМ(ОстаткиРазмещенные.КоличествоОстаток)         	КАК ОстКоличествоРазмещено
	|ИЗ 
	|	Документ." + ИмяТаблицы + " 							КАК Док
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(, %ВыборкаПоНоменклатуре% И
	|   ТоварТара = &ТоварТара
	|   И ЗаказПоставщику = &ЗаказПоставщику
	|) 															КАК ОстаткиРазмещенные
	|ПО 
	|	Док.Номенклатура     	= ОстаткиРазмещенные.Номенклатура 
	|	И Док.Заказ  			= ОстаткиРазмещенные.ЗаказПокупателя
	| //СОЕДИНЕНИЕ_Характеристика_Размещение
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка И Док.Заказ не в (&МассивПустыхЗаказов)
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура, 
	|	Док.Заказ,
	|	Док.Ссылка.ЗаказПоставщику,
	|	%ПОЛЕ_Док_Характеристика%
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	ВложенныйЗапрос.ДокНоменклатура,
	|	ВложенныйЗапрос.ДокРазмещение,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры
	|ИМЕЮЩИЕ (-1)*ЕСТЬNULL(СУММА(ВложенныйЗапрос.ДокКоличество), 0)>ЕСТЬNULL(СУММА(ВложенныйЗапрос.ОстКоличествоРазмещено), 0)	
	|";
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Размещение","И Док.ХарактеристикаНоменклатуры  = ОстаткиРазмещенные.ХарактеристикаНоменклатуры");

	КонецЕсли;
	
    Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДоступныйОстаток = Выборка.ОстатокКоличествоРазмещено;
		СтрокаСообщения = "Остатка " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
		Выборка.ХарактеристикаНоменклатурыПредставление) +
		", размещенного по документу " + (Выборка.Размещение) + " недостаточно для снятия размещения.";
		ДокументКоличество = -Выборка.ДокументКоличество;
	
		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, ДоступныйОстаток, ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);
		
	КонецЦикла;

КонецПроцедуры

//Процедура контролирует достаточность товара, доступного для размещения, при использовании документа РазмещениеЗаказа 
//	анализируются строки в которых заполнен реквизит "Новое размещение".
//Особенности:
//1) при анализе необходимо учитывать количество, которое снимается с размещения этим же документом
//2) заказ поставщику располагается в шапке документа. В связи с этим используется соответствующий отбор в виртуальной таблице РазмещениеЗаказов, ЗаказыПоставщикам
Процедура КонтрольОстатков_РазмещениеЗаказа()
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";
	
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	ЗаполнитьОбщиеПараметрыЗапроса(Запрос);
	Запрос.УстановитьПараметр("ЗаказПоставщику", ДокументСсылка.Заказ);
	
	МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.НовоеРазмещение.Тип);
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	ВложенныйЗапрос.ДокНоменклатура                             				КАК Номенклатура,
	|	ВложенныйЗапрос.ДокНоменклатура.Представление               				КАК НоменклатураПредставление,
	|	ВложенныйЗапрос.ДокРазмещение                               				КАК Размещение,
	|	ВложенныйЗапрос.ДокНоменклатура.ЕдиницаХраненияОстатков.Представление     	КАК ЕдиницаХраненияОстатковПредставление,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры               				КАК ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры.Представление 				КАК ХарактеристикаНоменклатурыПредставление,
	|	ЕСТЬNULL(Сумма(ВложенныйЗапрос.ДокКоличество), 0)        				КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.КолСнятиеРазмещений), 0)					КАК КоличествоСписатьРазмещение,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличество), 0)   						КАК ОстатокКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличествоРазмещено), 0)				КАК ОстатокКоличествоРазмещено
	|
	|ИЗ (ВЫБРАТЬ
	|	Док.Номенклатура                                    КАК ДокНоменклатура, 
	|	Док.Ссылка.Заказ		                            КАК ДокРазмещение, 
	|	%ПОЛЕ_Док_Характеристика%                         	КАК ДокХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Количество%                       		КАК ДокКоличество,
	|	МАКСИМУМ(ДокСнятиеРазмещений.Количество)            КАК КолСнятиеРазмещений,
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                 КАК ОстКоличество,
	|	МАКСИМУМ(ОстаткиРазмещенные.КоличествоОстаток)      КАК ОстКоличествоРазмещено
	|ИЗ 
	|	Документ." + ИмяТаблицы + " 						КАК Док
	|
	//остатки по заказу поставщику или заказу на производство
	|//Запрос_Остатки
	//размещение, выполенное в данном заказе поставщику
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,
	|   ТоварТара = &ТоварТара
	|	И %ВыборкаПоНоменклатуре%
	|   И ЗаказПоставщику = &ЗаказПоставщику
	|) 														КАК ОстаткиРазмещенные
	|ПО 
	|	Док.Номенклатура     = ОстаткиРазмещенные.Номенклатура 
	| //СОЕДИНЕНИЕ_Характеристика_Размещение
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	//количество размещения, которое снимается в этом же самом документе
	|(
	|ВЫБРАТЬ
	|	ДокументСнятие.Номенклатура,
	|	%ПОЛЕ_ДокСнятие_Характеристика%  					КАК ХарактеристикаНоменклатуры,
	|	%ПОЛЕ_ДокСнятие_Количество%      					КАК Количество
	|ИЗ
	|	Документ."+ИмяТаблицы+" 							КАК ДокументСнятие
	|ГДЕ
	|	ДокументСнятие.Ссылка = &ДокументСсылка И
	|//УСЛОВИЕ_СсылкаИсходноеРазмещение
	|	И ДокументСнятие.ИсходноеРазмещение НЕ В (&МассивПустыхСсылок)
	|СГРУППИРОВАТЬ ПО
	|	ДокументСнятие.Номенклатура,
	|	%ПОЛЕ_ДокСнятие_Характеристика%
	|) 														КАК ДокСнятиеРазмещений
	|ПО 
	|	Док.Номенклатура                  = ДокСнятиеРазмещений.Номенклатура
	| //СОЕДИНЕНИЕ_Характеристика_ДокСнятие
	|
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|   И Док.НовоеРазмещение НЕ В (&МассивПустыхСсылок)
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура, 
	|	Док.Ссылка.Заказ,
	|	%ПОЛЕ_Док_Характеристика%, 
	|	Док.НовоеРазмещение) 								КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	ВложенныйЗапрос.ДокНоменклатура,
	|	ВложенныйЗапрос.ДокРазмещение,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличество), 0) + ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.КолСнятиеРазмещений), 0) - 
	|ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличествоРазмещено), 0) < ЕСТЬNULL(Сумма(ВложенныйЗапрос.ДокКоличество), 0)
	|";

	ТекстЗапросаОстатки = "";
	Если ТипЗнч(ДокументСсылка.Заказ)=Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		Если Метаданные.РегистрыНакопления.Найти("ЗаказыНаПроизводство") <> Неопределено Тогда
			ТекстЗапросаОстатки = "
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(,
			|   %ВыборкаПоНоменклатуре%
			|   И ЗаказНаПроизводство =  &ЗаказПоставщику
			|	) 													КАК Остатки
			|ПО 
			|	Док.Номенклатура     = Остатки.Номенклатура
			| //СОЕДИНЕНИЕ_Характеристика_Остатки
			|";
		Иначе
			Возврат;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ДокументСсылка.Заказ)=Тип("ДокументСсылка.ВнутреннийЗаказ") Тогда
		ТекстЗапросаОстатки = "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ВнутренниеЗаказы.Остатки(,
		|   СтатусПартии В(&СтатусПартии)
		|	И %ВыборкаПоНоменклатуре%
		|   И ВнутреннийЗаказ =  &ЗаказПоставщику
		|	) 													КАК Остатки
		|ПО 
		|	Док.Номенклатура     = Остатки.Номенклатура
		| //СОЕДИНЕНИЕ_Характеристика_Остатки
		|";

	Иначе
		ТекстЗапросаОстатки = "
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ЗаказыПоставщикам.Остатки(,
		|   СтатусПартии В(&СтатусПартии)
		|	И %ВыборкаПоНоменклатуре%
		|   И ЗаказПоставщику =  &ЗаказПоставщику
		|	) 													КАК Остатки
		|ПО 
		|	Док.Номенклатура     = Остатки.Номенклатура
		| //СОЕДИНЕНИЕ_Характеристика_Остатки
		|";

	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//Запрос_Остатки",ТекстЗапросаОстатки);
	
    ТекстУсловиеСсылка = "ДокументСнятие.ИсходноеРазмещение ССЫЛКА Документ.ЗаказПокупателя 
	|	   ИЛИ ДокументСнятие.ИсходноеРазмещение ССЫЛКА Документ.ВнутреннийЗаказ";
	ТипИсходноеРазмещение = МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.ИсходноеРазмещение.Тип;
	Если ТипИсходноеРазмещение.СодержитТип(Тип("ДокументСсылка.ЗаказНаПроизводство")) Тогда
		ТекстУсловиеСсылка = ТекстУсловиеСсылка+"
		|	 	ИЛИ ДокументСнятие.ИсходноеРазмещение ССЫЛКА Документ.ЗаказНаПроизводство";
	КонецЕсли;
	ТекстУсловиеСсылка = "("+ТекстУсловиеСсылка+")";
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_СсылкаИсходноеРазмещение",ТекстУсловиеСсылка);

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_ДокСнятие_Количество%","Сумма(ДокументСнятие.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_ДокСнятие_Характеристика%","&ПустаяХарактеристика");

	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_ДокСнятие_Количество%","Сумма(ДокументСнятие.Количество * ДокументСнятие.Коэффициент / ДокументСнятие.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент)");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_ДокСнятие_Характеристика%","ДокументСнятие.ХарактеристикаНоменклатуры");

        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Остатки","И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Размещение","И Док.ХарактеристикаНоменклатуры  = ОстаткиРазмещенные.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_ДокСнятие","И Док.ХарактеристикаНоменклатуры  = ДокСнятиеРазмещений.ХарактеристикаНоменклатуры");

	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");

    Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДоступныйОстаток = Выборка.ОстатокКоличество + Выборка.КоличествоСписатьРазмещение - Выборка.ОстатокКоличествоРазмещено;	
			
		СтрокаСообщения = "Остатка " +  
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
		Выборка.ХарактеристикаНоменклатурыПредставление) +
		", заказанного по документу " + (Выборка.Размещение) + " недостаточно для размещения.";
		ДокументКоличество = Выборка.ДокументКоличество;
	
		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, ДоступныйОстаток, ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);
		
	КонецЦикла;
КонецПроцедуры

//Процедура выполняет следующие действия:
//1) контролирует достаточность товара, доступного для размещения, при использовании документов Заказ, КорректировкаЗаказа, Резервирование товаров
//2) контролирует остаток по данному регистру при снятии размещения с помощью документов Корректировка... (для строк в которых Количество<0)
//Особенности: 
//1) Заказ поставщику располагается в табличной части документа
//2) Если количество<0, контролируется остаток размещения по данному заказу покупателя и заказу поставщику
Процедура КонтрольОстатков_Заказ_КорректировкаЗаказа_Резервирование()
	Если ИмяДокумента = "РезервированиеТоваров" ИЛИ ИмяДокумента="РазмещениеЗаказа" Тогда
		ИмяРеквизитаРазмещение = "НовоеРазмещение";
	Иначе
		ИмяРеквизитаРазмещение = "Размещение";
	КонецЕсли;
	
	Если глЗначениеПеременной("ИспользоватьБлокировкуДанных")  Тогда
		Если ИмяДокумента = "КорректировкаЗаказаПокупателя"
			ИЛИ ИмяДокумента = "ИзменениеЗаказаПокупателя"
			ИЛИ ИмяДокумента = "КорректировкаВнутреннегоЗаказа"
			ИЛИ (ИмяДокумента = "КорректировкаЗаказаНаПроизводство" И ИмяТабличнойЧасти = "Материалы") Тогда
			
			Запрос = новый Запрос;
			Запрос.Текст = "ВЫБРАТЬ
				|Номенклатура,
				|%ПОЛЕ_Док_Характеристика% КАК ХарактеристикаНоменклатуры,
				|Размещение КАК ЗаказПоставщику,
				|%ЗаказПокупателя% КАК ЗаказПокупателя
				|ИЗ Документ." + ИмяТаблицы +"
				|ГДЕ Ссылка = &ДокументСсылка И Количество<0 
				|И Размещение НЕ В (&МассивПустыхСсылок) И НЕ Размещение ССЫЛКА Справочник.Склады";
			
			Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
				Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
			Иначе
				Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ПОЛЕ_Док_Характеристика%","ХарактеристикаНоменклатуры");
			КонецЕсли;
			
			ИмяЗаказПокупателя = "";
			
			Если ИмяДокумента = "КорректировкаЗаказаПокупателя"
				ИЛИ ИмяДокумента = "ИзменениеЗаказаПокупателя" Тогда
				
				ИмяЗаказПокупателя = "ЗаказПокупателя";
			ИначеЕсли ИмяДокумента = "КорректировкаВнутреннегоЗаказа" Тогда
				ИмяЗаказПокупателя = "ВнутреннийЗаказ";
			ИначеЕсли ИмяДокумента = "КорректировкаЗаказаНаПроизводство" Тогда
				ИмяЗаказПокупателя = "ЗаказНаПроизводство";
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"%ЗаказПокупателя%","Ссылка."+ИмяЗаказПокупателя);
			
		   	МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты.Размещение.Тип);
            Запрос.УстановитьПараметр("МассивПустыхСсылок",МассивПустыхСсылок);
			Запрос.УстановитьПараметр("ДокументСсылка",ДокументСсылка);
			Запрос.УстановитьПараметр("ПустаяХарактеристика",Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
			Результат = Запрос.Выполнить();
			Если не Результат.Пустой() Тогда
				СтруктураПараметровБлокировки = Новый Структура(
					"ТипТаблицы,ИмяТаблицы,ИсточникДанных"
					,"РегистрНакопления"
					,"РазмещениеЗаказовПокупателей"
					,Результат);
				
				СтруктураИсточникаДанных = Новый Структура(
					"Номенклатура,ХарактеристикаНоменклатуры,ЗаказПоставщику,ЗаказПокупателя"
					,"Номенклатура"
					,"ХарактеристикаНоменклатуры"
					,"ЗаказПоставщику"
					,"ЗаказПокупателя"
					);
				ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки,,СтруктураИсточникаДанных, Отказ, Заголовок);
					
			КонецЕсли;	
		КонецЕсли;
    КонецЕсли;
	
	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
	ТекстЗапросаСписокНоменклатуры = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Номенклатура 
	|ИЗ
	|	Документ." + ИмяТаблицы +"
	|ГДЕ Ссылка = &ДокументСсылка";
	
	//Запрос для получения списка заказов, используемых в документе
	ТекстЗапросаЗаказыПоставщику = "ВЫБРАТЬ РАЗЛИЧНЫЕ %ПОЛЕ_Размещение% КАК Размещение	
	|ИЗ Документ."+ИмяТаблицы+"
	|ГДЕ Ссылка = &ДокументСсылка
	|	//УСЛОВИЕ_РазмещениеСсылка 
	|";
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		ТекстЗапросаЗаказыПоставщику = СтрЗаменить(ТекстЗапросаЗаказыПоставщику,"//УСЛОВИЕ_ДокРазмещениеСсылка","И (%ПОЛЕ_Размещение% ССЫЛКА Документ.ВнутреннийЗаказ ИЛИ %ПОЛЕ_Размещение% ССЫЛКА Документ.ЗаказПоставщику)");
	Иначе	
		ТекстЗапросаЗаказыПоставщику = СтрЗаменить(ТекстЗапросаЗаказыПоставщику,"//УСЛОВИЕ_ДокРазмещениеСсылка","И (%ПОЛЕ_Размещение% ССЫЛКА Документ.ВнутреннийЗаказ ИЛИ %ПОЛЕ_Размещение% ССЫЛКА Документ.ЗаказПоставщику ИЛИ %ПОЛЕ_Размещение% ССЫЛКА Документ.ЗаказНаПроизводство)");
	КонецЕсли;
	
    ТекстЗапросаЗаказыПоставщику = СтрЗаменить(ТекстЗапросаЗаказыПоставщику,"%ПОЛЕ_Размещение%",ИмяРеквизитаРазмещение);
    ЗапросЗаказыПоставщику = новый Запрос;
	ЗапросЗаказыПоставщику.УстановитьПараметр("ДокументСсылка", ДокументСсылка);
	ЗапросЗаказыПоставщику.Текст = ТекстЗапросаЗаказыПоставщику;
	СписокЗаказовПоставщику = ЗапросЗаказыПоставщику.Выполнить().Выгрузить().ВыгрузитьКолонку("Размещение");
	
	Запрос = Новый Запрос;

	// Установим параметры запроса
	ЗаполнитьОбщиеПараметрыЗапроса(Запрос);
	Запрос.УстановитьПараметр("СписокЗаказовПоставщику", СписокЗаказовПоставщику);
	
	МассивПустыхСсылок = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[ИмяРеквизитаРазмещение].Тип);
	Запрос.УстановитьПараметр("МассивПустыхСсылок", МассивПустыхСсылок);

	
	Если ИмяДокумента = "КорректировкаЗаказаПокупателя" 
		ИЛИ ИмяДокумента = "ИзменениеЗаказаПокупателя" Тогда
		
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументСсылка.ЗаказПокупателя);
	ИначеЕсли  ИмяДокумента = "КорректировкаВнутреннегоЗаказа" Тогда
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументСсылка.ВнутреннийЗаказ);
	ИначеЕсли  ИмяДокумента = "КорректировкаЗаказаНаПроизводство" Тогда
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументСсылка.ЗаказНаПроизводство);
	ИначеЕсли  ИмяДокумента = "РезервированиеТоваров" или ИмяДокумента = "РазмещениеЗаказа" Тогда
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументСсылка.Заказ);	
	Иначе	
		Запрос.УстановитьПараметр("ЗаказПокупателя", ДокументСсылка);
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	ВложенныйЗапрос.ДокНоменклатура                             				КАК Номенклатура,
	|	ВложенныйЗапрос.ДокНоменклатура.Представление               				КАК НоменклатураПредставление,
	|	ВложенныйЗапрос.ДокРазмещение                               				КАК Размещение,
	|	ВложенныйЗапрос.ДокНоменклатура.ЕдиницаХраненияОстатков.Представление     	КАК ЕдиницаХраненияОстатковПредставление,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры               				КАК ХарактеристикаНоменклатуры,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры.Представление 				КАК ХарактеристикаНоменклатурыПредставление,
	|	ЕСТЬNULL(СУММА(ВложенныйЗапрос.ДокКоличество), 0)        				КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличество), 0)   						КАК ОстатокКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличествоРазмещено), 0)				КАК ОстатокКоличествоРазмещено,
	|	ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличествоРазмещеноПоЗаказу), 0)		КАК ОстатокКоличествоРазмещеноПоЗаказу
	|
	|ИЗ (ВЫБРАТЬ
	|	Док.Номенклатура                                       			КАК ДокНоменклатура, 
	|	%ПОЛЕ_Док_Размещение%                         					КАК ДокРазмещение,
	|   %ПОЛЕ_Док_Характеристика% 										КАК ДокХарактеристикаНоменклатуры,
	|	%ПОЛЕ_Док_Количество%                       					КАК ДокКоличество,
	|	МАКСИМУМ(Остатки.КоличествоОстаток)                    			КАК ОстКоличество,
	|	МАКСИМУМ(ОстаткиРазмещенные.КоличествоОстаток)         			КАК ОстКоличествоРазмещено,
	|	МАКСИМУМ(ОстаткиРазмещенныеПоЗаказу.КоличествоОстаток)         	КАК ОстКоличествоРазмещеноПоЗаказу
	|ИЗ 
	|	Документ." + ИмяТаблицы + " 									КАК Док
	//заказано в заказе поставщику, внутреннем заказе и в заказе на производство
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	( 
	|	ВЫБРАТЬ Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		ЗаказПоставщику,
	|		КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыПоставщикам.Остатки(,ЗаказПоставщику в (&СписокЗаказовПоставщику)
	|   	И СтатусПартии В(&СтатусПартии) И %ВыборкаПоНоменклатуре%)"
	+ ?(Метаданные.РегистрыНакопления.Найти("ЗаказыНаПроизводство") <> Неопределено, "
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		ЗаказНаПроизводство,
	|		КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ЗаказыНаПроизводство.Остатки(,ЗаказНаПроизводство в (&СписокЗаказовПоставщику)
	|   	 И %ВыборкаПоНоменклатуре%)", "") + "
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ Номенклатура,
	|		ХарактеристикаНоменклатуры,
	|		ВнутреннийЗаказ,
	|		КоличествоОстаток
	|	ИЗ
	|		РегистрНакопления.ВнутренниеЗаказы.Остатки(,ВнутреннийЗаказ в (&СписокЗаказовПоставщику)
	|   	И СтатусПартии В (&СтатусПартии) И %ВыборкаПоНоменклатуре%)
	|	) 															КАК Остатки
	|ПО 
	|	Док.Номенклатура     = Остатки.Номенклатура 
	|	И %ПОЛЕ_Док_Размещение%  = Остатки.ЗаказПоставщику
	| //СОЕДИНЕНИЕ_Характеристика_Остатки
	//размещение выполненное в заказе поставщику, внутреннем, на производство - в целом по всем заказам покупателей (для определения доступного для размещения остатка)
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,ЗаказПоставщику в (&СписокЗаказовПоставщику)
	|   И ТоварТара = &ТоварТара И %ВыборкаПоНоменклатуре%
	|) 																КАК ОстаткиРазмещенные
	|ПО 
	|	Док.Номенклатура     = ОстаткиРазмещенные.Номенклатура 
	|	И %ПОЛЕ_Док_Размещение%  = ОстаткиРазмещенные.ЗаказПоставщику
	| //СОЕДИНЕНИЕ_Характеристика_Размещение
	|	
	//размещение выполненное в заказе поставщику, внутреннем, на производство - по текущему заказу покупателя (для определения доступного для снятия остатка)
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,ЗаказПоставщику в (&СписокЗаказовПоставщику)
	|	И ЗаказПокупателя = &ЗаказПокупателя
	|   И ТоварТара = &ТоварТара И %ВыборкаПоНоменклатуре%
	|) 																КАК ОстаткиРазмещенныеПоЗаказу
	|ПО 
	|	Док.Номенклатура     = ОстаткиРазмещенныеПоЗаказу.Номенклатура 
	|	И %ПОЛЕ_Док_Размещение%  = ОстаткиРазмещенныеПоЗаказу.ЗаказПоставщику
	| //СОЕДИНЕНИЕ_Характеристика_РазмещениеПоЗаказу
	|ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|	И НЕ Док.Номенклатура.Комплект
	|	//УСЛОВИЕ_ДокРазмещениеСсылка 
	|	И %ПОЛЕ_Док_Размещение% НЕ В (&МассивПустыхСсылок)
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура, 
	|	%ПОЛЕ_Док_Размещение%,
	|	%ПОЛЕ_Док_Характеристика%
	|) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	ВложенныйЗапрос.ДокНоменклатура,
	|	ВложенныйЗапрос.ДокРазмещение,
	|	ВложенныйЗапрос.ДокХарактеристикаНоменклатуры
	|ИМЕЮЩИЕ (ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличество), 0) - ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличествоРазмещено), 0) < ЕСТЬNULL(СУММА(ВложенныйЗапрос.ДокКоличество), 0))
	|ИЛИ (ЕСТЬNULL(СУММА(ВложенныйЗапрос.ДокКоличество), 0)<0 И (-1)*ЕСТЬNULL(СУММА(ВложенныйЗапрос.ДокКоличество), 0)>ЕСТЬNULL(МАКСИМУМ(ВложенныйЗапрос.ОстКоличествоРазмещеноПоЗаказу), 0))	
	|";
    ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ВыборкаПоНоменклатуре%","Номенклатура В ("+ТекстЗапросаСписокНоменклатуры+")");
	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ДокРазмещениеСсылка","И (%ПОЛЕ_Док_Размещение% ССЫЛКА Документ.ВнутреннийЗаказ ИЛИ %ПОЛЕ_Док_Размещение% ССЫЛКА Документ.ЗаказПоставщику)");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ДокРазмещениеСсылка","И (%ПОЛЕ_Док_Размещение% ССЫЛКА Документ.ВнутреннийЗаказ ИЛИ %ПОЛЕ_Док_Размещение% ССЫЛКА Документ.ЗаказПоставщику ИЛИ %ПОЛЕ_Док_Размещение% ССЫЛКА Документ.ЗаказНаПроизводство)");

		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
		
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_РазмещениеПоЗаказу","И Док.ХарактеристикаНоменклатуры  = ОстаткиРазмещенныеПоЗаказу.ХарактеристикаНоменклатуры");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Размещение","И Док.ХарактеристикаНоменклатуры  = ОстаткиРазмещенные.ХарактеристикаНоменклатуры");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Остатки","И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры");

	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Размещение%","Док."+ИмяРеквизитаРазмещение);

    Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ДокументКоличество>0 Тогда
			ДоступныйОстаток = Выборка.ОстатокКоличество - Выборка.ОстатокКоличествоРазмещено;	
			
			СтрокаСообщения = "Остатка " +  
			УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			Выборка.ХарактеристикаНоменклатурыПредставление) +
			", заказанного по документу " + (Выборка.Размещение) + " недостаточно для размещения.";
			ДокументКоличество = Выборка.ДокументКоличество;
		Иначе   //актуально для корректировок - происходит снятие размещения
			ДоступныйОстаток = Выборка.ОстатокКоличествоРазмещеноПоЗаказу;
			СтрокаСообщения = "Остатка " + 
			УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
			Выборка.ХарактеристикаНоменклатурыПредставление) +
			", размещенного по документу " + (Выборка.Размещение) + " недостаточно для снятия размещения.";
            ДокументКоличество = -Выборка.ДокументКоличество;

		КонецЕсли;
		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, ДоступныйОстаток, ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;

КонецПроцедуры

Процедура КонтрольОстатков_СнятиеРазмещения()
	Если ИмяДокумента = "РазмещениеЗаказа" Тогда
		ИмяЗаказПоставщику = "Заказ";
		ИмяЗаказПокупателя = "ИсходноеРазмещение";
        ЗаказПоставщикуВШапке = истина;
		ЗаказПокупателяВШапке = ложь;
	ИначеЕсли ИмяДокумента = "ПоступлениеТоваровУслуг"
		ИЛИ ИмяДокумента = "ПоступлениеТоваровУслугВНТТ"
		ИЛИ ИмяДокумента = "ОтчетПроизводстваЗаСмену"	Тогда
		
		ЗаказПоставщикуВШапке = ложь;
		ЗаказПокупателяВШапке = ложь;

		Если ИмяДокумента = "ОтчетПроизводстваЗаСмену" Тогда
			ИмяЗаказПокупателя = "ЗаказРезерв";
			ИмяЗаказПоставщику = "ЗаказВыпуска";
		Иначе  //ПТиУ, ПТиУ в НТТ
			ИмяЗаказПоставщику = "ЗаказПоставщику";
			ИмяЗаказПокупателя = "Заказ";
		КонецЕсли;

	ИначеЕсли ИмяДокумента = "РезервированиеТоваров" Тогда
		ЗаказПоставщикуВШапке = ложь;
		ЗаказПокупателяВШапке = истина;

		ИмяЗаказПоставщику = "ИсходноеРазмещение";
		ИмяЗаказПокупателя = "Заказ";
	ИначеЕсли ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		ЗаказПоставщикуВШапке = истина;
		ЗаказПокупателяВШапке = истина;
		ИмяЗаказПоставщику = "ЗаказВыпуска";
		ИмяЗаказПокупателя = "ЗаказРезерв";
	Иначе
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = новый Структура("ИмяЗаказПоставщику,ЗаказПоставщикуВШапке,ИмяЗаказПокупателя,ЗаказПокупателяВШапке",ИмяЗаказПоставщику,ЗаказПоставщикуВШапке,ИмяЗаказПокупателя,ЗаказПокупателяВШапке);

	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	СформироватьВременнуюТаблицуДокумента(МенеджерВременныхТаблиц, СтруктураПараметров);

	Если глЗначениеПеременной("ИспользоватьБлокировкуДанных") Тогда
		СтруктураПараметровБлокировки = Новый Структура(
			"ТипТаблицы,ИмяТаблицы,ИсточникДанных,ИмяВременнойТаблицы"
			,"РегистрНакопления"
			,"РазмещениеЗаказовПокупателей"
			,МенеджерВременныхТаблиц
			,"ВременнаяТаблицаДокумента");
		
		СтруктураЗначенийБлокировки = Новый Структура();
		
		СтруктураИсточникаДанных = Новый Структура("Номенклатура,ЗаказПоставщику,ЗаказПокупателя", 
													"Номенклатура", 
													"ЗаказПоставщику",
													"ЗаказПокупателя");
		Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
			СтруктураЗначенийБлокировки.Вставить("ТоварТара", Перечисления.ТоварТара.Тара);
		Иначе											
			СтруктураЗначенийБлокировки.Вставить("ТоварТара", Перечисления.ТоварТара.Товар);
			СтруктураИсточникаДанных.Вставить("ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры");
		КонецЕсли;
			
		ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных, Отказ, Заголовок);
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;

	Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	// Установим параметры запроса
	ЗаполнитьОбщиеПараметрыЗапроса(Запрос);

	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура КАК Номенклатура,
	|	Док.Номенклатура.Представление                         	КАК НоменклатураПредставление,
	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление 	КАК ЕдиницаХраненияОстатковПредставление,
	|	Док.ХарактеристикаНоменклатуры			           		КАК ХарактеристикаНоменклатуры,
	|	Док.ЗаказПокупателя			                      		КАК ЗаказПокупателя,
	|	Док.ЗаказПоставщику			                      		КАК ЗаказПоставщику,
	|	СУММА(Док.ДокументКоличество)                           КАК ДокументКоличество,
	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)       	КАК ОстатокКоличество
	|ИЗ 
	|	ВременнаяТаблицаДокумента 								КАК Док
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(,
	|	(Номенклатура,ХарактеристикаНоменклатуры,ЗаказПокупателя,ЗаказПоставщику) 
	|		В (ВЫБРАТЬ Номенклатура,ХарактеристикаНоменклатуры,ЗаказПокупателя,ЗаказПоставщику ИЗ ВременнаяТаблицаДокумента)
	|	И ТоварТара = &ТоварТара
	|	) 														КАК Остатки
	|ПО 
	|	Док.Номенклатура                = Остатки.Номенклатура
	|	И Остатки.ЗаказПоставщику       = Док.ЗаказПоставщику
	|	И Остатки.ЗаказПокупателя       = Док.ЗаказПокупателя
	| //СОЕДИНЕНИЕ_Характеристика_Остатки
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|	Док.ХарактеристикаНоменклатуры,
	|	Док.ЗаказПоставщику,
	|	Док.ЗаказПокупателя
	|
	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) < СУММА(Док.ДокументКоличество)
	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
	|";
	
	Если ИмяТабличнойЧасти <> "ВозвратнаяТара" Тогда
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//СОЕДИНЕНИЕ_Характеристика_Остатки","И Док.ХарактеристикаНоменклатуры  = Остатки.ХарактеристикаНоменклатуры");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл

		СтрокаСообщения = "Остатка " + 
		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
								  Выборка.ХарактеристикаНоменклатуры) +
		", размещенного в документе "+Выборка.ЗаказПоставщику+" по документу " + (Выборка.ЗаказПокупателя) +" недостаточно.";

		УправлениеЗапасами.ОшибкаНетОстатка(СтрокаСообщения, Выборка.ОстатокКоличество, Выборка.ДокументКоличество,
		Выборка.ЕдиницаХраненияОстатковПредставление, Отказ, Заголовок);

	КонецЦикла;

КонецПроцедуры

Процедура СформироватьВременнуюТаблицуДокумента(МенеджерВременныхТаблиц,СтруктураПараметров)
	Запрос = Новый Запрос;
    Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
    ЗаполнитьОбщиеПараметрыЗапроса(Запрос);


	ТекстЗапроса = "
	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
	|	Док.Номенклатура КАК Номенклатура,
	|	%ПОЛЕ_Док_Характеристика%				           		КАК ХарактеристикаНоменклатуры,
	|	%Поле_Док_ЗаказПоставщику%                      		КАК ЗаказПоставщику,
	|	%Поле_Док_ЗаказПокупателя%                      		КАК ЗаказПокупателя,
	|	%ПОЛЕ_Док_Количество%                                  	КАК ДокументКоличество
	|ПОМЕСТИТЬ ВременнаяТаблицаДокумента
	|ИЗ 
	|	Документ." + ИмяТаблицы + " 							КАК Док
    |ГДЕ
	|	Док.Ссылка  =  &ДокументСсылка
	|   И %Поле_Док_ЗаказПоставщику% не в (&МассивПустыхСсылокЗаказПоставщику)
	|   И %Поле_Док_ЗаказПокупателя% не в (&МассивПустыхСсылокЗаказПокупателя)
	|	//УСЛОВИЕ_ЗаказПоставщику
	|	//УСЛОВИЕ_ЗаказПокупателя
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Док.Номенклатура,
	|	%ПОЛЕ_Док_Характеристика%,
	|	%Поле_Док_ЗаказПоставщику%,
	|	%Поле_Док_ЗаказПокупателя%
	|";
	Если СтруктураПараметров.ЗаказПоставщикуВШапке Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Поле_Док_ЗаказПоставщику%","Док.Ссылка."+СтруктураПараметров.ИмяЗаказПоставщику);
		МассивПустыхСсылокЗаказПоставщику = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.Реквизиты[СтруктураПараметров.ИмяЗаказПоставщику].Тип);
	Иначе	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Поле_Док_ЗаказПоставщику%","Док."+СтруктураПараметров.ИмяЗаказПоставщику);
		МассивПустыхСсылокЗаказПоставщику = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[СтруктураПараметров.ИмяЗаказПоставщику].Тип);
	КонецЕсли;
	Если СтруктураПараметров.ЗаказПокупателяВШапке Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Поле_Док_ЗаказПокупателя%","Док.Ссылка."+СтруктураПараметров.ИмяЗаказПокупателя);
		МассивПустыхСсылокЗаказПокупателя = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.Реквизиты[СтруктураПараметров.ИмяЗаказПокупателя].Тип);
	Иначе	
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%Поле_Док_ЗаказПокупателя%","Док."+СтруктураПараметров.ИмяЗаказПокупателя);
		МассивПустыхСсылокЗаказПокупателя = ОбщегоНазначения.МассивПустыхЗначений(МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти].Реквизиты[СтруктураПараметров.ИмяЗаказПокупателя].Тип);
	КонецЕсли;

    Если ИмяДокумента = "ОтчетПроизводстваЗаСмену" Тогда
		//разместить можем только в заказе на производство (надо исключить строки где указан заказ на обслуживание ОС)
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ЗаказПоставщику","И Док.ЗаказВыпуска ССЫЛКА Документ.ЗаказНаПроизводство");
		МассивПустыхСсылокЗаказПоставщику = новый Массив;
		МассивПустыхСсылокЗаказПоставщику.Добавить(Документы.ЗаказНаПроизводство.ПустаяСсылка());
        МассивПустыхСсылокЗаказПоставщику.Добавить(неопределено);
	ИначеЕсли ИмяДокумента = "ПоступлениеТоваровУслугВНТТ" Тогда
		// Заказ - только внутренний заказ где заказчик = склад указанный в документе. В противном случае регистр размещений не закрывается.
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ЗаказПокупателя","И ВЫРАЗИТЬ(Док.Заказ КАК Документ.ВнутреннийЗаказ).Заказчик = &ТекСклад");
		Запрос.УстановитьПараметр("ТекСклад",ДокументСсылка.Склад);
	ИначеЕсли ИмяДокумента = "РезервированиеТоваров" Тогда
		//исключить строки где в качестве размещения указан склад - это относится к другому регистру
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//УСЛОВИЕ_ЗаказПоставщику","И НЕ Док."+СтруктураПараметров.ИмяЗаказПоставщику+" ССЫЛКА Справочник.Склады");
	КонецЕсли;
	Запрос.УстановитьПараметр("МассивПустыхСсылокЗаказПоставщику",МассивПустыхСсылокЗаказПоставщику);
	Запрос.УстановитьПараметр("МассивПустыхСсылокЗаказПокупателя",МассивПустыхСсылокЗаказПокупателя);

	Если ИмяТабличнойЧасти = "ВозвратнаяТара" Тогда
		//нет серии, характеристики, единицы измерения и коэффициента
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(Док.Количество)");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","&ПустаяХарактеристика");
	Иначе
		//есть характеристика, единица измерения и коэффициент. 
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Количество%","Сумма(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент / Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)))");
        ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"%ПОЛЕ_Док_Характеристика%","Док.ХарактеристикаНоменклатуры");
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;

    Запрос.Выполнить();
КонецПроцедуры

