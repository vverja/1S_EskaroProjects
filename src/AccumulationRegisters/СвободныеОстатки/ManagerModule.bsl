////////////////////////////////////////////////////////////////////////////////
//В данном модуле расположены процедуры контроля остатков, которые выполняются после записи движений документа

// Процедура контролирует остаток в регистре СвободдныеОстатки 
//	с отбором по складу и номенклатуре, указанных в переданном документе и его табличной части.
// В случае наличия отрицательного остатка выставляется флаг отказа и выдается сообщение.
//
// Параметры:
//  ИмяТабличнойЧасти	- строка, имя табличной части, которая проводится по регистру, 
//  СтруктураШапкиДокумента	- структура, содержащая значения ссылочных реквизитов по шапке документа,
//  ОтказПроведения		- флаг отказа в проведении,
//  ЗаголовокСообщения	- строка, заголовок сообщения об ошибке проведения.
//  РежимПроведения		- режим проведения документа (оперативный / неоперативный)
//
Процедура КонтрольОстатков(ИмяТабличнойЧасти, СтруктураШапкиДокумента, ОтказПроведения, ЗаголовокСообщения, РежимПроведения) Экспорт
	Если РежимПроведения <> РежимПроведенияДокумента.Оперативный Тогда
		Возврат;
	КонецЕсли;
	
	Если УправлениеДопПравамиПользователей.РазрешеноПревышениеОстаткаТоваровНаСкладе() Тогда
		Возврат;
	КонецЕсли;
	
	Отказ     = ОтказПроведения;
    Заголовок = ЗаголовокСообщения;

	СтруктураПараметров = ПолучитьСтруктуруПараметров(СтруктураШапкиДокумента, ИмяТабличнойЧасти, Заголовок);
	Если СтруктураПараметров = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	// Подготовим временную таблицу табличной части документа
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Если НЕ СформироватьВременнуюТаблицуПоТаблицеДокумента(МенеджерВременныхТаблиц, СтруктураПараметров) Тогда
		// Нет номенклатуры, по которой необходимо контролировать остатки
		Возврат;
	КонецЕсли;
	// Получим данные для передачи в процедуру ПроверитьОстатки()
	
	ТекстЗапроса = "
	//Контроль остатков без учета серии (резервирование может выполняться без указания серии)
	|ВЫБРАТЬ
	|	ТаблицаОстатков.Склад               					КАК Склад,
	|	ТаблицаОстатков.Номенклатура                   			КАК Номенклатура,
	|	ТаблицаОстатков.Номенклатура.ЕдиницаХраненияОстатков  	КАК ЕдиницаИзмерения,
	|	ТаблицаОстатков.ХарактеристикаНоменклатуры              КАК ХарактеристикаНоменклатуры,
	|	ТаблицаОстатков.Номенклатура.ВестиУчетПоСериям          КАК НоменклатураВестиУчетПоСериям,
	|	ТаблицаОстатков.Номенклатура.ВестиУчетПоХарактеристикам КАК НоменклатураВестиУчетПоХарактеристикам,
	//серия - пустая
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) 	КАК СерияНоменклатуры,
	|	ТаблицаОстатков.Качество 								КАК Качество,
	|	ТаблицаОстатков.КоличествоОстаток              			КАК Количество
	|ИЗ
	|	РегистрНакопления.СвободныеОстатки.Остатки(,
	|			(Склад, Номенклатура, ХарактеристикаНоменклатуры, Качество) В
	|				(ВЫБРАТЬ
	|					Таблица.Склад,
	|					Таблица.Номенклатура,
	|					Таблица.ХарактеристикаНоменклатуры,
	|					Таблица.Качество
	|				ИЗ
	|					ВременнаяТаблицаДокумента КАК Таблица)
	|	) КАК ТаблицаОстатков
	|
	|ГДЕ
	|	ТаблицаОстатков.КоличествоОстаток < 0";
	Если СтруктураПараметров.ЕстьСерия Тогда
		//Контроль остатков с учетом серии - отличия от предыдущего запроса помечены комментариями
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|ВЫБРАТЬ
		|	ТаблицаОстатков.Склад               						КАК Склад,
		|	ТаблицаОстатков.Номенклатура                   				КАК Номенклатура,
		|	ТаблицаОстатков.Номенклатура.ЕдиницаХраненияОстатков 		КАК ЕдиницаИзмерения,
		|	ТаблицаОстатков.ХарактеристикаНоменклатуры          		КАК ХарактеристикаНоменклатуры,
		|	ТаблицаОстатков.Номенклатура.ВестиУчетПоСериям          	КАК НоменклатураВестиУчетПоСериям,
		|	ТаблицаОстатков.Номенклатура.ВестиУчетПоХарактеристикам 	КАК НоменклатураВестиУчетПоХарактеристикам,
		//серия - из документа
		|	ТаблицаОстатков.СерияНоменклатуры 							КАК СерияНоменклатуры,
		|	ТаблицаОстатков.Качество 									КАК Качество,
		|	ТаблицаОстатков.КоличествоСУчетомСерииОстаток              	КАК Количество
		|ИЗ
		|	РегистрНакопления.СвободныеОстатки.Остатки(,
		//			остатки отбираются с учетом серии номенклатуры
		|			(Склад, Номенклатура, ХарактеристикаНоменклатуры, Качество, СерияНоменклатуры) В
		|				(ВЫБРАТЬ
		|					Таблица.Склад,
		|					Таблица.Номенклатура,
		|					Таблица.ХарактеристикаНоменклатуры,
		|					Таблица.Качество,
		|					Таблица.СерияНоменклатуры
		|				ИЗ
		|					ВременнаяТаблицаДокумента КАК Таблица
		//				учитывается только та номенклатура, по которой ведется учет по сериям
		|				ГДЕ Таблица.Номенклатура.ВестиУчетПоСериям
		|				)
		|	) КАК ТаблицаОстатков
		|
		|ГДЕ
		|	ТаблицаОстатков.КоличествоСУчетомСерииОстаток < 0";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураПараметров.ДокументСсылка);

	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ПроверитьОстатки(Выборка, Отказ, Заголовок, СтруктураПараметров);
	
	ОтказПроведения = Отказ;
    ЗаголовокСообщения = Заголовок;

КонецПроцедуры // КонтрольОстатков()

// Функция возвращает структуру параметров необходимую для заполнения временной таблицы документа
//
// Возвращаемое значение - <Структура> содержит ключи:
//		ИмяДокумента
//      ИмяТаблицы					- полный путь к данным табличной части (имя документа + имя табличной части
//      ЕстьСерия, ЕстьХарактеристика - признаки наличия серии и характеристики в табличной части
//		ЕстьКачество				- признак наличия реквизита Качество табличной части
//		Склад						- имя реквизита ТЧ содержащий склад или значение склада (например, если склад в шапке),
//		ЕстьСоставНабора			- булево. Истина, если к табличной части необходимо присоединить состав набора,
//      ДопУсловияТабличнойЧасти	- условия для отбора строк документа (не учитываем услуги, 
//										комплекты, при резервировании не учитываем строки в которых не указан Склад для резервирования)
Функция ПолучитьСтруктуруПараметров(СтруктураШапкиДокумента, ИмяТабличнойЧасти, ЗаголовокСообщения)
	
	РеквизитСклад            = "Склад";
	ЕстьСоставНабора         = Ложь;
	ДопУсловияТабличнойЧасти = " НЕ Док.Номенклатура.Комплект 
								|И НЕ Док.Номенклатура.Услуга";

	Если СтруктураШапкиДокумента.Свойство("ДокументСсылка") Тогда
		// Некоторые документы формируют структуру шапки по другому объекту,
		// например, документ "Корректировка заказа покупателя"
		ДокументСсылка = СтруктураШапкиДокумента.ДокументСсылка;
	Иначе
		ДокументСсылка = СтруктураШапкиДокумента.Ссылка;
	КонецЕсли; 
	
	МетаданныеДокумента = ДокументСсылка.Метаданные();
	ИмяДокумента        = МетаданныеДокумента.Имя;
	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);
	
	ИспользоватьУказаниеСерийНоменклатурыПриРезервировании = Ложь;
	Если НЕ СтруктураШапкиДокумента.Свойство("ИспользоватьУказаниеСерийНоменклатурыПриРезервировании", ИспользоватьУказаниеСерийНоменклатурыПриРезервировании) Тогда
		ИспользоватьУказаниеСерийНоменклатурыПриРезервировании = глЗначениеПеременной("ИспользоватьУказаниеСерийНоменклатурыПриРезервировании");
	КонецЕсли;
	
	Если ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		ЕстьСерия           = Истина;
		ЕстьХарактеристика  = Истина;
		ЕстьКачество        = Ложь;
	ИначеЕсли ИмяТабличнойЧасти <> "" Тогда
		МетаданныеТабЧасти = МетаданныеДокумента.ТабличныеЧасти[ИмяТабличнойЧасти];
		
		Если ИмяДокумента = "КорректировкаСерийИХарактеристикТоваров" Тогда			
			ЕстьСерия          = Истина; // Контроль по реквизиту "СерияНоменклатурыСтарая"
			ЕстьХарактеристика = Истина; // Контроль по реквизиту "ХарактеристикаНоменклатурыСтарая"
		Иначе
			ЕстьСерия          = МетаданныеТабЧасти.Реквизиты.Найти("СерияНоменклатуры")          <> Неопределено;
			ЕстьХарактеристика = МетаданныеТабЧасти.Реквизиты.Найти("ХарактеристикаНоменклатуры") <> Неопределено;
		КонецЕсли; 
		
		ЕстьКачество        = МетаданныеТабЧасти.Реквизиты.Найти("Качество")                     <> Неопределено;
	КонецЕсли;
	
	// Если в параметрах учета отключен режим использования серий и характеристик
	ЕстьСерия           = ЕстьСерия И глЗначениеПеременной("ИспользоватьСерииНоменклатуры");
	ЕстьХарактеристика  = ЕстьХарактеристика И глЗначениеПеременной("ИспользоватьХарактеристикиНоменклатуры");
	
	Если ИмяДокумента = "РеализацияТоваровУслуг" Тогда
		Если НРег(ИмяТабличнойЧасти) = "товары" Тогда
			ЕстьСоставНабора = Истина;
		КонецЕсли;
	ИначеЕсли ИмяДокумента = "ОтчетОРозничныхПродажах" Тогда
		ЕстьСоставНабора = Истина;
	ИначеЕсли ИмяДокумента = "ЧекККМ" Тогда
		ЕстьСоставНабора = Истина;
		РеквизитСклад    = СтруктураШапкиДокумента.Склад;
	ИначеЕсли ИмяДокумента = "ПеремещениеТоваров"
		ИЛИ ИмяДокумента = "РасходныйОрдерНаТовары"
		ИЛИ ИмяДокумента = "СписаниеТоваров" 
		ИЛИ ИмяДокумента = "ПередачаТоваров"
		ИЛИ ИмяДокумента = "ПередачаМатериаловВЭксплуатацию"
		ИЛИ ИмяДокумента = "ПередачаОборудованияВМонтаж"
		ИЛИ ИмяДокумента = "КорректировкаСерийИХарактеристикТоваров" 
		ИЛИ ИмяДокумента = "КорректировкаКачестваТоваров" Тогда
		РеквизитСклад     = СтруктураШапкиДокумента.Склад;
	ИначеЕсли ИмяДокумента = "КомплектацияНоменклатуры" Тогда
		Если СтруктураШапкиДокумента.ВидКомплектации = Перечисления.ВидыКомплектации.Разборка Тогда
			//при разукомплектации все берем из шапки
			ИмяТаблицы = ИмяДокумента;
		КонецЕсли;
		РеквизитСклад        = СтруктураШапкиДокумента.Склад;
	ИначеЕсли ИмяДокумента = "РезервированиеТоваров" Тогда
		РеквизитСклад            = "НовоеРазмещение";
		ЕстьСерия = ЕстьСерия И ИспользоватьУказаниеСерийНоменклатурыПриРезервировании;
		ДопУсловияТабличнойЧасти = ДопУсловияТабличнойЧасти + Символы.ПС + 
			" И (ВЫРАЗИТЬ(Док.НовоеРазмещение КАК Справочник.Склады) ССЫЛКА Справочник.Склады И ВЫРАЗИТЬ(Док.НовоеРазмещение КАК Справочник.Склады) <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";
	ИначеЕсли ИмяДокумента = "ЗаказПокупателя" 
			ИЛИ ИмяДокумента = "КорректировкаЗаказаПокупателя"
			ИЛИ  ИмяДокумента = "ИзменениеЗаказаПокупателя" Тогда
		РеквизитСклад            = "Размещение";
		ЕстьСерия = ЕстьСерия И ИспользоватьУказаниеСерийНоменклатурыПриРезервировании;
		ДопУсловияТабличнойЧасти = ДопУсловияТабличнойЧасти + Символы.ПС + 
			" И (ВЫРАЗИТЬ(Док.Размещение КАК Справочник.Склады) ССЫЛКА Справочник.Склады И Док.Размещение <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";
	ИначеЕсли ИмяДокумента = "ВнутреннийЗаказ" 
		ИЛИ ИмяДокумента = "ЗаказНаПроизводство" 
		ИЛИ ИмяДокумента = "КорректировкаВнутреннегоЗаказа"
		ИЛИ ИмяДокумента = "КорректировкаЗаказаНаПроизводство" Тогда
		РеквизитСклад            = "Размещение";
		ДопУсловияТабличнойЧасти = ДопУсловияТабличнойЧасти + Символы.ПС + 
			" И (ВЫРАЗИТЬ(Док.Размещение КАК Справочник.Склады) ССЫЛКА Справочник.Склады И Док.Размещение <> ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка))";
	ИначеЕсли ИмяДокумента = "ТребованиеНакладная" Тогда
		//Ничего специально обрабатывать не надо
	Иначе
		Сообщить("Для документа вида """ + ИмяДокумента + """ не предусмотрен вызов процедуры контроля остатков (процедура СвободныеОстаткиКонтрольОстатков)", СтатусСообщения.ОченьВажное);
		Возврат Неопределено;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИмяДокумента",						ИмяДокумента);
	СтруктураПараметров.Вставить("ИмяТаблицы",							ИмяТаблицы);
	СтруктураПараметров.Вставить("ДокументСсылка",						ДокументСсылка);
	
	СтруктураПараметров.Вставить("Склад",								РеквизитСклад);
	СтруктураПараметров.Вставить("ДопУсловияТабличнойЧасти",			ДопУсловияТабличнойЧасти);
	СтруктураПараметров.Вставить("ЕстьСерия",							ЕстьСерия);
	СтруктураПараметров.Вставить("ЕстьХарактеристика",					ЕстьХарактеристика);
	СтруктураПараметров.Вставить("ЕстьКачество",						ЕстьКачество);
	СтруктураПараметров.Вставить("ЕстьСоставНабора",					ЕстьСоставНабора);
	
	Возврат СтруктураПараметров;

КонецФункции // ПолучитьСтруктуруПараметров()

// Функция возвращает текст запроса к табличной части СоставНабора
//
// Особенности: 
//	- если значение реквизита "Склад" пустое, то
//	берется его значение из соединения таблицы по ключу
//  
Функция ТекстСоставНабора(СтруктураПараметров)
	
	СкладСтрока = ТипЗнч(СтруктураПараметров.Склад) = Тип("Строка");
	Если СкладСтрока Тогда
		ПолеСклад =
		"	ВЫБОР КОГДА ДокТов." + СтруктураПараметров.Склад + " = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		ТОГДА Док." + СтруктураПараметров.Склад + "
		|		ИНАЧЕ ДокТов." + СтруктураПараметров.Склад + "
		|	КОНЕЦ";
	Иначе
		ПолеСклад = "&Склад";
	КонецЕсли; 
	Если СтруктураПараметров.ЕстьКачество Тогда
		ПОЛЕ_Набор_Качество =
		"ВЫБОР КОГДА ДокТов.Качество = ЗНАЧЕНИЕ(Справочник.Качество.ПустаяСсылка)
		|		ТОГДА Док.Качество
		|		ИНАЧЕ ДокТов.Качество 
		|	КОНЕЦ";
	Иначе
		ПОЛЕ_Набор_Качество = "ЗНАЧЕНИЕ(Справочник.Качество.Новый)";
	КонецЕсли;
	Если СтруктураПараметров.ЕстьХарактеристика Тогда
		ПОЛЕ_Набор_Характеристика = "ДокТов.ХарактеристикаНоменклатуры"; 
	Иначе
		ПОЛЕ_Набор_Характеристика = "ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)";
	КонецЕсли;
	Если СтруктураПараметров.ЕстьСерия Тогда
		ПОЛЕ_Набор_Серия = "ДокТов.СерияНоменклатуры"; 
	Иначе
		ПОЛЕ_Набор_Серия = "ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)";
	КонецЕсли;

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДокТов.Номенклатура 				КАК Номенклатура
	|,	" + ПолеСклад + " 					КАК Склад
	|,	" + ПОЛЕ_Набор_Качество + " 		КАК Качество
	|,  " + ПОЛЕ_Набор_Характеристика + " 	КАК ХарактеристикаНоменклатуры
	|,  " + ПОЛЕ_Набор_Серия + " 			КАК СерияНоменклатуры
	|ИЗ
	|	Документ." + СтруктураПараметров.ИмяДокумента + ".СоставНабора КАК ДокТов
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ." + СтруктураПараметров.ИмяТаблицы + " КАК Док
	|	ПО Док.КлючСтроки = ДокТов.КлючСтроки
	|		 И Док.Ссылка = &Ссылка
	|ГДЕ
	|	ДокТов.Ссылка = &Ссылка
	|	// Только те строки для который в основной таблице есть ключ
	|	И НЕ Док.КлючСтроки ЕСТЬ NULL"; 

	Возврат ТекстЗапроса;

КонецФункции // ТекстСоставНабора

// Процедура формирует временную таблицу по табличной части документа
//
// Структура временной таблицы:
//	Склад						- реквизит табличной части или значение шапки
//	Номенклатура				- реквизит табличной части или шапки
//	ХарактеристикаНоменклатуры	- реквизит табличной части или шапки (может быть пустая)
//	СерияНоменклатуры			- реквизит табличной части или шапки (может быть пустая)
//	Качество					- реквизит табличной части или <Новый>
//
Функция СформироватьВременнуюТаблицуПоТаблицеДокумента(МенеджерВременныхТаблиц, СтруктураПараметров)
	
	Если СтруктураПараметров.ИмяДокумента = "КорректировкаСерийИХарактеристикТоваров" Тогда
		ПолеХарактеристикаНоменклатуры = "ХарактеристикаНоменклатурыСтарая";
		ПолеСерияНоменклатуры          = "СерияНоменклатурыСтарая";
	Иначе
		ПолеХарактеристикаНоменклатуры = "ХарактеристикаНоменклатуры";
		ПолеСерияНоменклатуры          = "СерияНоменклатуры";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	СкладСтрока = ТипЗнч(СтруктураПараметров.Склад) = Тип("Строка");
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Док.Номенклатура КАК Номенклатура
		|,	//ПОЛЕ_Склад КАК Склад
		|,	//ПОЛЕ_Качество КАК Качество
		|,  //ПОЛЕ_Характеристика КАК ХарактеристикаНоменклатуры
		|,	//ПОЛЕ_Серия КАК СерияНоменклатуры
		|ПОМЕСТИТЬ ВременнаяТаблицаДокумента
		|	ИЗ
		|		Документ." + СтруктураПараметров.ИмяТаблицы + " КАК Док
		|	ГДЕ Док.Ссылка = &Ссылка И " + СтруктураПараметров.ДопУсловияТабличнойЧасти;
		
		Если СтруктураПараметров.ЕстьСоставНабора Тогда
			ТекстЗапроса = ТекстЗапроса + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|" + ТекстСоставНабора(СтруктураПараметров);
				
		КонецЕсли;
	
		ТекстЗапроса = ТекстЗапроса + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Склад
		|	,Номенклатура
		|	,Качество"
		+ ?(СтруктураПараметров.ЕстьХарактеристика, Символы.ПС + "	, ХарактеристикаНоменклатуры", "");

	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_Склад", ?(СкладСтрока, "Док." + СтруктураПараметров.Склад, "&Склад"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_Качество", ?(СтруктураПараметров.ЕстьКачество, "Док.Качество", "ЗНАЧЕНИЕ(Справочник.Качество.Новый)"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_Характеристика", ?(СтруктураПараметров.ЕстьХарактеристика, "Док." + ПолеХарактеристикаНоменклатуры, "ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)"));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ПОЛЕ_Серия", ?(СтруктураПараметров.ЕстьСерия, "Док." + ПолеСерияНоменклатуры, "ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)"));

	Если НЕ СкладСтрока Тогда
		Запрос.УстановитьПараметр("Склад", СтруктураПараметров.Склад);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Ссылка", СтруктураПараметров.ДокументСсылка);
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество <> 0;
	
КонецФункции // СформироватьВременнуюТаблицуПоТаблицеДокумента

// Процедура проверяет полученные остатки
//
Процедура ПроверитьОстатки(Выборка, Отказ, Заголовок, СтруктураПараметров)
	ШаблонСообщения = НСтр("ru = 'Номенклатура: %НоменклатураХарактеристикаСерия%, качество %Качество% 
	|Свободного остатка на складе %Склад% недостаточно: не хватает %Количество% %Единица%'");

	Пока Выборка.Следующий() Цикл
		ПредставлениеНоменклатуры = УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.Номенклатура, 
							?(Выборка.НоменклатураВестиУчетПоХарактеристикам,Выборка.ХарактеристикаНоменклатуры,""),
							?(СтруктураПараметров.ЕстьСерия И Выборка.НоменклатураВестиУчетПоСериям,Выборка.СерияНоменклатуры,""));
		ТекстСообщения = СтрЗаменить(ШаблонСообщения, "%НоменклатураХарактеристикаСерия%",
									ПредставлениеНоменклатуры);
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Количество%",       Строка(-Выборка.Количество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Склад%",            Строка(Выборка.Склад));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Качество%", 		   Строка(Выборка.Качество));
		ТекстСообщения = СтрЗаменить(ТекстСообщения, "%Единица%",          Строка(Выборка.ЕдиницаИзмерения));

		ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения , Отказ, Заголовок);
	КонецЦикла;
КонецПроцедуры //ПроверитьОстатки


