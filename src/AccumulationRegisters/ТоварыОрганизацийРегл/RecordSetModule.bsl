Перем мПериод          Экспорт; // Период движений
Перем мТаблицаДвижений Экспорт; // Таблица движений

// Выполняет приход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьПриход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Приход);

КонецПроцедуры // ВыполнитьПриход()

// Выполняет расход по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьРасход() Экспорт

	ОбщегоНазначения.ВыполнитьДвижениеПоРегистру(ЭтотОбъект, ВидДвиженияНакопления.Расход);

КонецПроцедуры // ВыполнитьРасход()

// Выполняет движения по регистру.
//
// Параметры:
//  Нет.
//
Процедура ВыполнитьДвижения() Экспорт

	Загрузить(мТаблицаДвижений);

КонецПроцедуры // ВыполнитьДвижения()

//// Процедура контролирует остаток по данному регистру по переданному документу
//// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
//// выдается сообщегние.
////
//// Параметры:
////  ДокументОбъект    - объект проводимого документа, 
////  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
////  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
////  Отказ             - флаг отказа в проведении,
////  Заголовок         - строка, заголовок сообщения об ошибке проведения.
////
//Процедура КонтрольОстатков(ДокументОбъект, ИмяТабличнойЧасти, СтруктураШапкиДокумента, Отказ, Заголовок, РежимПроведения) Экспорт
//	
//	//Если РежимПроведения <> РежимПроведенияДокумента.Оперативный
//	//	ИЛИ УправлениеДопПравамиПользователей.РазрешеноПревышениеОстаткаТоваровОрганизации(СтруктураШапкиДокумента.Организация) Тогда
//	//	
//	//	Возврат;
//	//КонецЕсли;
//	
//	МетаданныеДокумента = ДокументОбъект.Метаданные();
//	ИмяДокумента        = МетаданныеДокумента.Имя;
//	ИмяТаблицы          = ИмяДокумента + "." + СокрЛП(ИмяТабличнойЧасти);

//	Если ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаСерийИХарактеристикТоваров") Тогда
//		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатурыСтарая";
//		ТекстСерияНоменклатуры = "СерияНоменклатурыСтарая";
//	Иначе
//		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатуры";
//		ТекстСерияНоменклатуры = "СерияНоменклатуры";
//	КонецЕсли; 

//	ТекстКачество = "Качество";
//	
//	ТекстСчетУчетаБУ         = "СчетУчетаБУ";
//	ТекстНалоговоеНазначение = "НалоговоеНазначение";
//	
//	Если ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ТребованиеНакладная") Тогда
//		ТекстСчетУчетаБУ         = "Счет";
//		ТекстНалоговоеНазначение = "НалоговоеНазначениеЗапасов";
//	КонецЕсли;	
//														  
//	ЕстьСерия             = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента(ТекстСерияНоменклатуры, МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьХарактеристика    = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента(ТекстХарактеристикаНоменклатуры, МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьСчетУчетаБУ       = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента(ТекстСчетУчетаБУ, МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьНалоговоеНазначение = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента(ТекстНалоговоеНазначение, МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьДокументРезерва   = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("ДокументРезерва", МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьДокументПередачи  = (МетаданныеДокумента.Реквизиты.Найти("ДокументПередачи") <> Неопределено);
//	ЕстьКачество          = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента(ТекстКачество, МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьФлагУказанияСерий = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("СерияУказываетсяПриОтпускеСоСклада", МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьКоэффициент       = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Коэффициент", МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьКлючСтроки         = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("КлючСтроки", МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьСкладВТабЧасти     = ОбщегоНазначения.ЕстьРеквизитТабЧастиДокумента("Склад", МетаданныеДокумента, ИмяТабличнойЧасти);
//	ЕстьСоставНабора       = Ложь;

//	Если ЕстьКлючСтроки Тогда
//		Если МетаданныеДокумента.ТабличныеЧасти.Найти("СоставНабора") <> Неопределено
//		   И ДокументОбъект.СоставНабора.Количество() > 0 Тогда
//			ЕстьСоставНабора = Истина;
//		КонецЕсли;
//	КонецЕсли;
//	
//	
//	СтруктураУП = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиУпр(СтруктураШапкиДокумента.Ссылка.Дата);
//	Если НЕ ЗначениеЗаполнено(СтруктураУП) Тогда
//		Отказ = Истина;
//		КонтролироватьОстатокПоСкладу = ложь;
//	Иначе
//		КонтролироватьОстатокПоСкладу = СтруктураУП.ВестиУчетТоваровОрганизацийВРазрезеСкладов;
//	КонецЕсли; 

//	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
//	Если ЕстьСоставНабора Тогда
//		ТекстЗапросаСписокНоменклатуры = "
//		|ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	Док.Номенклатура КАК Номенклатура
//		|ИЗ
//		|	(
//		|	ВЫБРАТЬ
//		|		Док.Номенклатура
//		|	ИЗ
//		|		Документ." + ИмяТаблицы +" КАК Док
//		|	ГДЕ
//		|		Док.Ссылка = &ДокументСсылка
//		|		И НЕ Док.Номенклатура.Комплект
//		|       И Не Док.Номенклатура.Услуга
//		|	ОБЪЕДИНИТЬ ВСЕ
//		|
//		|	ВЫБРАТЬ
//		|		Док.Номенклатура
//		|	ИЗ
//		|		Документ." + ИмяДокумента + ".СоставНабора КАК Док
//		|	ГДЕ
//		|		Док.Ссылка = &ДокументСсылка
//		|		И НЕ Док.Номенклатура.Комплект
//		|       И Не Док.Номенклатура.Услуга
//		|
//		|	) КАК Док
//		|";

//		ТекстЗапросаРеквизитыДокумента = "
//		|	(ВЫБРАТЬ
//		|			Док.Ссылка,
//		|			Док.Номенклатура,
//		|		" + ?(ЕстьКачество,        "Док.Качество,",                     "") + "
//		|		" + ?(ЕстьХарактеристика,  "Док.ХарактеристикаНоменклатуры,",   "") + "
//		|		" + ?(ЕстьСерия,           "Док.СерияНоменклатуры,",            "") + "
//		|		" + ?(ЕстьКоэффициент,     "Док.Коэффициент,",                  "") + "
//		|		" + ?(ЕстьДокументРезерва, "Док.ДокументРезерва,",              "") + "
//		|		" + ?(ЕстьСкладВТабЧасти, "Док.Склад,",              "") + "
//		|			Док.Количество
//		|		ИЗ
//		|			Документ." + ИмяТаблицы + " КАК Док
//		|		ГДЕ
//		|			Док.Ссылка = &ДокументСсылка
//		|			И НЕ Док.Номенклатура.Комплект
//		|           И Не Док.Номенклатура.Услуга
//		|		ОБЪЕДИНИТЬ ВСЕ
//		|
//		|		ВЫБРАТЬ
//		|			Док.Ссылка,
//		|			Док.Номенклатура,
//		|		" + ?(ЕстьКачество,        "Док.Качество,",                     "") + "
//		|		" + ?(ЕстьХарактеристика,  "Док.ХарактеристикаНоменклатуры,",   "") + "
//		|		" + ?(ЕстьСерия,           "Док.СерияНоменклатуры,",            "") + "
//		|		" + ?(ЕстьКоэффициент,     "Док.Коэффициент,",                  "") + "
//		|		" + ?(ЕстьДокументРезерва, "Док.ДокументРезерва,",              "") + "
//		|		" + ?(ЕстьСкладВТабЧасти, "Док.Склад,",              "") + "
//		|			Док.Количество
//		|		ИЗ
//		|			(ВЫБРАТЬ
//		|				ДокНаб.Ссылка,
//		|				ДокНаб.Номенклатура,
//		|";
//		Если ЕстьКачество Тогда
//		ТекстЗапросаРеквизитыДокумента = ТекстЗапросаРеквизитыДокумента + "
//		|				ВЫБОР
//		|					КОГДА ДокНаб.Качество = &ПустоеКачество ТОГДА ДокТов.Качество
//		|					ИНАЧЕ ДокНаб.Качество
//		|				КОНЕЦ КАК Качество,
//		|";
//		КонецЕсли;
//		ТекстЗапросаРеквизитыДокумента = ТекстЗапросаРеквизитыДокумента + "
//		|			" + ?(ЕстьХарактеристика,  "ДокНаб.ХарактеристикаНоменклатуры,",                   "") + "
//		|			" + ?(ЕстьСерия,           "ДокНаб.СерияНоменклатуры,",                            "") + "
//		|			" + ?(ЕстьКоэффициент,     "ДокНаб.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,", "") + "
//		|			" + ?(ЕстьДокументРезерва, "ДокТов.ДокументРезерва,",                              "") + "
//		|			" + ?(ЕстьСкладВТабЧасти, "ДокТов.Склад,",              "") + "
//		|				ДокНаб.Количество * ДокТов.Количество КАК Количество
//		|			ИЗ
//		|				Документ." + ИмяДокумента + ".СоставНабора   КАК ДокНаб
//		|				ЛЕВОЕ СОЕДИНЕНИЕ Документ." + ИмяТаблицы + " КАК ДокТов
//		|					ПО ДокТов.КлючСтроки = ДокНаб.КлючСтроки
//		|					 И ДокТов.Ссылка     = &ДокументСсылка
//		|			ГДЕ
//		|				ДокНаб.Ссылка = &ДокументСсылка
//		|			И НЕ ДокНаб.Номенклатура.Комплект
//		|           И Не ДокНаб.Номенклатура.Услуга

//		|			) КАК Док
//		|
//		|		) КАК Док
//		|";
//	Иначе
//		ТекстЗапросаСписокНоменклатуры = "
//		|ВЫБРАТЬ РАЗЛИЧНЫЕ
//		|	Номенклатура 
//		|ИЗ
//		|	Документ." + ИмяТаблицы +"
//		|ГДЕ  Ссылка = &ДокументСсылка
//		|	И НЕ Номенклатура.Комплект
//		|   И Не Номенклатура.Услуга
//		|";

//		ТекстЗапросаРеквизитыДокумента = "(
//		|ВЫБРАТЬ
//		|Док.Номенклатура, "+
//		?(ЕстьХарактеристика, "Док."+ТекстХарактеристикаНоменклатуры+", ","")+
//		?(ЕстьСерия, "Док."+ТекстСерияНоменклатуры+", ","")+
//		?(ЕстьСчетУчетаБУ, "Док."+ТекстСчетУчетаБУ+", ","")+
//		?(ЕстьНалоговоеНазначение, "Док."+ТекстНалоговоеНазначение+", ","")+
//		?(ЕстьКоэффициент, "Док.Коэффициент, ","")+
//		?(ЕстьКачество, "Док.Качество, ","")+
//		?(ЕстьДокументРезерва, "Док.ДокументРезерва, ","")+
//		?(ЕстьСкладВТабЧасти, "Док.Склад,","") + "
//		|Док.Количество
//		|ИЗ	Документ." + ИмяТаблицы + " КАК Док
//		|	ГДЕ
//		|		Док.Ссылка = &ДокументСсылка
//		|		И НЕ Док.Номенклатура.Комплект
//		|       И Не Док.Номенклатура.Услуга
//		|) КАК Док
//		|";
//	КонецЕсли;

//	Запрос = Новый Запрос;
//	
//	ИмяРеквизитаСклад = "Склад";
//	Если МетаданныеДокумента.Реквизиты.Найти("СкладОрдер") <> Неопределено Тогда
//		ИмяРеквизитаСклад = "СкладОрдер";
//	КонецЕсли;
//	
//	
//	
//	Если ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ПриходныйОрдерНаТовары") Тогда
//		ИмяРеквизитаСклад = "СкладОтправитель";
//	КонецЕсли;
//	
//	
//	Если КонтролироватьОстатокПоСкладу Тогда
//		Если ЕстьСкладВТабЧасти Тогда
//			ЗапросСклады = новый Запрос;
//			ЗапросСклады.Текст = "Выбрать различные Склад ИЗ Документ."+ИмяТаблицы+"
//			|ГДЕ Ссылка=&ДокументСсылка";
//			ЗапросСклады.УстановитьПараметр("ДокументСсылка",СтруктураШапкиДокумента.Ссылка);
//			СписокСкладов = ЗапросСклады.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад");
//		Иначе
//			СписокСкладов = новый СписокЗначений;
//			СписокСкладов.Добавить(СтруктураШапкиДокумента[ИмяРеквизитаСклад]);
//		КонецЕсли;
//	Иначе
//		СписокСкладов = новый СписокЗначений;
//	КонецЕсли;

//	// Установим параметры запроса
//	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
//	Запрос.УстановитьПараметр("Организация",    СтруктураШапкиДокумента.Организация);
//	Запрос.УстановитьПараметр("Склад", 			СтруктураШапкиДокумента[ИмяРеквизитаСклад]); 
//	Запрос.УстановитьПараметр("СписокСкладов", 	СписокСкладов); 
//	Запрос.УстановитьПараметр("ПустаяСерия",    Справочники.СерииНоменклатуры.ПустаяСсылка());
//	Запрос.УстановитьПараметр("ПустоеКачество", Справочники.Качество.ПустаяСсылка());
//	Запрос.УстановитьПараметр("ПустойКомиссионер", Справочники.Контрагенты.ПустаяСсылка()); 

//	Если СтруктураШапкиДокумента.Свойство("Комиссионер") Тогда
//		Запрос.УстановитьПараметр("Комиссионер",      СтруктураШапкиДокумента.Комиссионер);
//	Иначе
//		Запрос.УстановитьПараметр("Комиссионер",      Справочники.Контрагенты.ПустаяСсылка());
//	КонецЕсли;
//	Если ЕстьДокументПередачи Тогда
//		Запрос.УстановитьПараметр("ДокументПередачи", СтруктураШапкиДокумента.ДокументПередачи);
//	КонецЕсли;

//	Запрос.Текст = "
//	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
//	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
//	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
//	+?(ЕстьДокументРезерва, " 
//	|Док.ДокументРезерва 									  КАК ДокументРезерва, ","")
//	+?(ЕстьСкладВТабЧасти, "
//	|Док.Склад												КАК Склад,","")
//	+ ?(ЕстьСчетУчетаБУ, "
//	|	Док." + ТекстСчетУчетаБУ + "           КАК СчетУчетаБУ,"
//	,"")
//	+ ?(ЕстьНалоговоеНазначение, "
//	|	Док." + ТекстНалоговоеНазначение+ "           КАК НалоговоеНазначение,"
//	,"")
//	+ ?(ЕстьХарактеристика, "
//	|	Док." + ТекстХарактеристикаНоменклатуры + "           КАК ХарактеристикаНоменклатуры,"
//	,"")
//	+ ?(ЕстьСерия, "
//	|	Док." + ТекстСерияНоменклатуры + "                    КАК СерияНоменклатуры,"
//	,"") + "
//	|   &Комиссионер                                           КАК Комиссионер," 
//	+ ?(ЕстьКоэффициент, "
//	|	СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3))) КАК ДокументКоличество,", "
//	|	СУММА(Док.Количество)                                  КАК ДокументКоличество,") + "
//	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)          КАК ОстатокКоличество
//	|ИЗ 
//	|	"+ ТекстЗапросаРеквизитыДокумента + "
//	|
//	|ЛЕВОЕ СОЕДИНЕНИЕ
//	|	РегистрНакопления.ТоварыОрганизацийРегл.Остатки(,"+
//	?(КонтролироватьОстатокПоСкладу , "Склад в (&СписокСкладов) И ","")+"
//	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
//	|	И Организация = &Организация
//	|   И Комиссионер = &Комиссионер 
//	|	) КАК Остатки
//	|ПО 
//	|	Док.Номенклатура        = Остатки.Номенклатура "
//	+ ?(ЕстьСчетУчетаБУ, "
//	| И Док." + ТекстСчетУчетаБУ + "= Остатки.СчетУчетаБУ"
//	,"")
//	+ ?(ЕстьНалоговоеНазначение, "
//	| И Док." + ТекстНалоговоеНазначение + "= Остатки.НалоговоеНазначение"
//	,"")
//	+ ?(ЕстьХарактеристика, "
//	| И Док." + ТекстХарактеристикаНоменклатуры + "= Остатки.ХарактеристикаНоменклатуры"
//	,"")
//	+ ?(ЕстьСерия, "
//	| И Док." + ТекстСерияНоменклатуры + "           = Остатки.СерияНоменклатуры"
//	,"")
//	+ ?(КонтролироватьОстатокПоСкладу И ЕстьСкладВТабЧасти, "
//	| И Док.Склад = Остатки.Склад"
//	,"")
//	+ ?(ЕстьКачество, "
//	| И Док." + ТекстКачество + "                   = Остатки.Качество"
//	,"") + "
//	|
//	|СГРУППИРОВАТЬ ПО
//	|
//	|	Док.Номенклатура "
//	+ ?(ЕстьСчетУчетаБУ, "
//	|	, Док." + ТекстСчетУчетаБУ
//	,"")
//	+ ?(ЕстьНалоговоеНазначение, "
//	|	, Док." + ТекстНалоговоеНазначение
//	,"")
//	+ ?(ЕстьХарактеристика, "
//	|	, Док." + ТекстХарактеристикаНоменклатуры
//	,"")
//	+ ?(ЕстьСерия, "
//	|	, Док." + ТекстСерияНоменклатуры
//	,"")
//	+ ?(ЕстьКачество, "
//	|	, Док." + ТекстКачество
//	,"") + 
//	?(ЕстьДокументРезерва, ", Док.ДокументРезерва","")+
//	?(ЕстьСкладВТабЧасти, ", Док.Склад","")+"
//	|
//	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) < "	
//	+ ?(ЕстьКоэффициент, "СУММА(ВЫРАЗИТЬ(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЧИСЛО(15,3)))", "СУММА(Док.Количество)") + "
//	|
//	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыОрганизацийРегл.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
//	|";

//	Выборка = Запрос.Выполнить().Выбрать();
//	Пока Выборка.Следующий() Цикл

//		СтрокаСообщения = "Остатка по организации " + СтруктураШапкиДокумента.Организация +
//		?(КонтролироватьОстатокПоСкладу," по складу "+?(ЕстьСкладВТабЧасти,Выборка.Склад,СтруктураШапкиДокумента[ИмяРеквизитаСклад]),"")+
//		" товара " +  
//		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
//								  ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатуры, ""),
//								  ?(ЕстьСерия, Выборка.СерияНоменклатуры,"")) + 
//								  ?(ЕстьСчетУчетаБУ, " Счет учета (БУ) " + Выборка.СчетУчетаБУ, "") +
//								  ?(ЕстьНалоговоеНазначение, " Налоговое назначение " + Выборка.НалоговоеНазначение, "") +
//								  ?(НЕ ЗначениеЗаполнено(Выборка.Комиссионер), "", " у комиссионера " + Выборка.Комиссионер) +
//		" недостаточно.";
//		
//		СвободныйОстаток = Выборка.ОстатокКоличество;
//		
//		УправлениеЗапасами.ОшибкаНетОстатка(
//			СтрокаСообщения, 
//			СвободныйОстаток, 
//			Выборка.ДокументКоличество,
//			Выборка.ЕдиницаХраненияОстатковПредставление, 
//			Отказ, 
//			Заголовок);
//		
//	КонецЦикла;

//КонецПроцедуры // КонтрольОстатков()

//// Процедура контролирует остаток по данному регистру по переданному документу
//// и его табличной части. В случае недостатка товаров выставляется флаг отказа и 
//// выдается сообщегние.
////
//// Параметры:
////  ДокументОбъект    - объект проводимого документа, 
////  ИмяТабличнойЧасти - строка, имя табличной части, которая проводится по регистру, 
////  СтруктураШапкиДокумента - структура, содержащая значения "через точку" ссылочных реквизитов по шапке документа,
////  Отказ             - флаг отказа в проведении,
////  Заголовок         - строка, заголовок сообщения об ошибке проведения.
////
//Процедура КонтрольОстатковРазукомплектация(ДокументОбъект, СтруктураШапкиДокумента, Отказ, Заголовок) Экспорт

//	Если УправлениеДопПравамиПользователей.РазрешеноПревышениеОстаткаТоваровОрганизации(СтруктураШапкиДокумента.Организация) Тогда
//		Возврат;
//	КонецЕсли;
//	
//	МетаданныеДокумента = ДокументОбъект.Метаданные();
//	ИмяДокумента        = МетаданныеДокумента.Имя;
//	ИмяТаблицы          = ИмяДокумента;
//	
//	Если ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.КорректировкаСерийИХарактеристикТоваров") Тогда
//		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатурыСтарая";
//		ТекстСерияНоменклатуры = "СерияНоменклатурыСтарая";
//	Иначе
//		ТекстХарактеристикаНоменклатуры = "ХарактеристикаНоменклатуры";
//		ТекстСерияНоменклатуры = "СерияНоменклатуры";
//	КонецЕсли; 
//												
//	ЕстьСерия           = (МетаданныеДокумента.Реквизиты.Найти(ТекстСерияНоменклатуры) <> Неопределено);
//	ЕстьХарактеристика  = (МетаданныеДокумента.Реквизиты.Найти(ТекстХарактеристикаНоменклатуры) <> Неопределено);
//	ЕстьДокументРезерва = (МетаданныеДокумента.Реквизиты.Найти("ДокументРезерва") <> Неопределено);

//	// Текст вложенного запроса, ограничивающего номенклатуру при получении остатков
//	ТекстЗапросаСписокНоменклатуры = "
//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	Номенклатура 
//	|ИЗ
//	|	Документ." + ИмяТаблицы +"
//	|ГДЕ Ссылка = &ДокументСсылка
//	|И Не Номенклатура.Услуга";
//	
//	ТекстЗапросаРеквизитыДокумента = "(ВЫБРАТЬ
//	|Док.Номенклатура, "+
//	?(ЕстьХарактеристика, "Док.ХарактеристикаНоменклатуры, ","")+
//	?(ЕстьСерия, "Док.СерияНоменклатуры, ","")+"
//	|Док.Коэффициент, 
//	|Док.Количество
//	|ИЗ	Документ." + ИмяТаблицы + " КАК Док
//	|	ГДЕ
//	|		Док.Ссылка = &ДокументСсылка
//	|       И Не Док.Номенклатура.Услуга "+
//		?(ЕстьДокументРезерва, "
//	| // Если мы списываем горячий резерв, то контроль остатков по организации не нужен,
//	| //поскольку с организации этот товар уже списан
//	|   И НЕ (Док.ДокументРезерва ССЫЛКА Документ.РеализацияТоваровУслуг
//	|         ИЛИ Док.ДокументРезерва ССЫЛКА Документ.ПередачаТоваров)", "") + "
//	|) КАК Док
//	|";

//	Запрос = Новый Запрос;

//	// Установим параметры запроса
//	Запрос.УстановитьПараметр("ДокументСсылка", СтруктураШапкиДокумента.Ссылка);
//	Запрос.УстановитьПараметр("Организация", СтруктураШапкиДокумента.Организация); 
//	Запрос.УстановитьПараметр("Склад", СтруктураШапкиДокумента.Склад); 

//	Если СтруктураШапкиДокумента.Свойство("Комиссионер") Тогда
//		Запрос.УстановитьПараметр("Комиссионер", СтруктураШапкиДокумента.Комиссионер); 
//	Иначе
//		Запрос.УстановитьПараметр("Комиссионер", Справочники.Контрагенты.ПустаяСсылка()); 
//	КонецЕсли;
//	
//	СтруктураУП = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиУпр(СтруктураШапкиДокумента.Ссылка.Дата);
//	Если НЕ ЗначениеЗаполнено(СтруктураУП) Тогда
//		Отказ = Истина;
//	КонецЕсли; 
//	КонтролироватьОстатокПоСкладу = СтруктураУП.ВестиУчетТоваровОрганизацийВРазрезеСкладов;


//	Запрос.Текст = "
//	|ВЫБРАТЬ // Запрос, контролирующий остатки на складах
//	|	Док.Номенклатура.Представление                         КАК НоменклатураПредставление,
//	|	Док.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаХраненияОстатковПредставление,"
//	+ ?(ЕстьХарактеристика, "
//	|	Док." + ТекстХарактеристикаНоменклатуры + "           КАК ХарактеристикаНоменклатуры,"
//	,"")
//	+ ?(ЕстьСерия, "
//	|	Док." + ТекстСерияНоменклатуры + "                    КАК СерияНоменклатуры,"
//	,"") + "
//	|   &Комиссионер                                           КАК Комиссионер,
//	|	СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК ДокументКоличество, 
//	|	ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0)                    КАК ОстатокКоличество
//	|ИЗ "+ТекстЗапросаРеквизитыДокумента+"
//	|
//	|ЛЕВОЕ СОЕДИНЕНИЕ
//	|	РегистрНакопления.ТоварыОрганизаций.Остатки(,
//	|		Номенклатура В (" + ТекстЗапросаСписокНоменклатуры + ")
//	|	И Организация = &Организация
//	|   И Комиссионер = &Комиссионер "+
//	?(КонтролироватьОстатокПоСкладу,"И Склад = &Склад","")+"
//	|	) КАК Остатки
//	|ПО 
//	|	Док.Номенклатура        = Остатки.Номенклатура"
//	+ ?(ЕстьХарактеристика, "
//	| И Док." + ТекстХарактеристикаНоменклатуры + "   = Остатки.ХарактеристикаНоменклатуры"
//	,"")
//	+ ?(ЕстьСерия, "
//	| И Док." + ТекстСерияНоменклатуры + "           = Остатки.СерияНоменклатуры"
//	,"") + "
//	|
//	|СГРУППИРОВАТЬ ПО
//	|
//	|	Док.Номенклатура"
//	+ ?(ЕстьХарактеристика, "
//	|	, Док." + ТекстХарактеристикаНоменклатуры
//	,"")
//	+ ?(ЕстьСерия, "
//	|	, Док." + ТекстСерияНоменклатуры
//	,"") + "
//	|	
//	|ИМЕЮЩИЕ ЕСТЬNULL(МАКСИМУМ(Остатки.КоличествоОстаток), 0) < СУММА(Док.Количество * Док.Коэффициент /Док.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент)
//	|
//	|ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ТоварыОрганизаций.Остатки // Блокирующие чтение таблицы остатков регистра для разрешения коллизий многопользовательской работы
//	|";

//	Выборка = Запрос.Выполнить().Выбрать();
//	Пока Выборка.Следующий() Цикл

//		СтрокаСообщения = "Остатка по организации " + СтруктураШапкиДокумента.Организация 
//		+ ?(КонтролироватьОстатокПоСкладу, " по складу "+СтруктураШапкиДокумента.Склад,"")
//		+ " товара " +  
//		УправлениеЗапасами.ПредставлениеНоменклатуры(Выборка.НоменклатураПредставление, 
//								  ?(ЕстьХарактеристика, Выборка.ХарактеристикаНоменклатуры, ""),
//								  ?(ЕстьСерия, Выборка.СерияНоменклатуры,"")) + 
//								  ?(НЕ ЗначениеЗаполнено(Выборка.Комиссионер), "", " у комиссионера " + Выборка.Комиссионер) +
//		" недостаточно.";

//		УправлениеЗапасами.ОшибкаНетОстатка(
//			СтрокаСообщения, 
//			Выборка.ОстатокКоличество,
//			Выборка.ДокументКоличество,
//			Выборка.ЕдиницаХраненияОстатковПредставление, 
//			Отказ,
//			Заголовок);

//	КонецЦикла;

//КонецПроцедуры // КонтрольОстатков()

