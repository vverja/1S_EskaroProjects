Перем ВозможностьЗапускаПроверена;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 

//Процедура проверяет возможность запуска бизнес-процесса
//Вызывается либо из формы процесса по нажатию на кнопку запуска, либо из предопределенной процедуры ПередСтартом()
//Для исключения повторного запуска данной процедуры предназначена экспортная переменная ВозможностьЗапускаПроверена
//Возвращаемое значение - булево (Ложь - запуск запрещен, Истина - запуск разрешен)
Функция ПроверитьВозможностьЗапуска() Экспорт
	//Проверка заполнения настройки
	Если НЕ ЗначениеЗаполнено(НастройкаЗакрытияМесяца) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана настройка закрытия месяца.");
		Возврат Ложь;
	КонецЕсли;
	
	//Проверка заполнения организации
	Если ОтражатьВБухгалтерскомУчете И НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация.");
		Возврат Ложь;
	КонецЕсли;
	
	//Проверка - есть ли дублирующиеся бизнес-процессы
	ЗапросБизнесПроцессы = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1 
	|	БизнесПроцесс.Ссылка
	|ИЗ 
	|	БизнесПроцесс.ЗакрытиеМесяца КАК БизнесПроцесс
	|ГДЕ "+БизнесПроцессЗакрытиеМесяца.СформироватьУсловиеПериодРегистрации(Истина, "БизнесПроцесс", "&ПериодРегистрации")+"
	|"+БизнесПроцессЗакрытиеМесяца.СформироватьУсловиеОрганизация(Истина, "БизнесПроцесс", "&Организация", Ложь)+"
	|"+БизнесПроцессЗакрытиеМесяца.СформироватьУсловиеОтражениеВУчете(Новый Структура("УУ,БУ", Истина, Истина), 
											Новый Структура("ОтражатьВУправленческомУчете,ОтражатьВБухгалтерскомУчете", 
															ОтражатьВУправленческомУчете, ОтражатьВБухгалтерскомУчете), 
											"БизнесПроцесс", Неопределено, ПериодРегистрации)+"
	|И Стартован И Ссылка <> &текСсылка";
	ЗапросБизнесПроцессы.Текст = ТекстЗапроса;
	ЗапросБизнесПроцессы.УстановитьПараметр("Организация", Организация);
	ЗапросБизнесПроцессы.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	ЗапросБизнесПроцессы.УстановитьПараметр("текСсылка", Ссылка);
	Результат = ЗапросБизнесПроцессы.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		ТекстПредупреждение = "Для указанных периода, организации и признаков отражения в учете уже запущена процедура закрытия месяца.
		|Запрещено запускать новую процедуру закрытия месяца с такими же настройками";
		ОбщегоНазначения.СообщитьОбОшибке(ТекстПредупреждение);
		Возврат Ложь;
	КонецЕсли;
	//Проверка выполнения настроек - есть ли хотя бы один включенный этап
	СтрокиВключены = РегламентныеОперации.Найти(Истина, "Использовать");
	Если СтрокиВключены = Неопределено Тогда
		ТекстПредупреждение = "Отключены все регламентные операции.
		|Запрещено запускать процедуру закрытия месяца";
		ОбщегоНазначения.СообщитьОбОшибке(ТекстПредупреждение);
		Возврат Ложь;
	КонецЕсли;

	//Проверка выполнения настроек - есть ли ответственные для всех включенных этапов
	ЗапросБизнесПроцессы = Новый Запрос;
	ЗапросБизнесПроцессы.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегламентныеОперации.РегламентнаяОперация КАК РегламентнаяОперация,
	|	РегламентныеОперации.Ответственный,
	|	РегламентныеОперации.Использовать
	|ИЗ
	|	БизнесПроцесс.ЗакрытиеМесяца.РегламентныеОперации КАК РегламентныеОперации
	|ГДЕ РегламентныеОперации.Ссылка = &текСсылка И Использовать И
	|	(РегламентныеОперации.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
	|	ИЛИ РегламентныеОперации.Ответственный = ЗНАЧЕНИЕ(Справочник.ГруппыПользователей.ПустаяСсылка)
	|	ИЛИ РегламентныеОперации.Ответственный = Неопределено)";
	ЗапросБизнесПроцессы.УстановитьПараметр("текСсылка", Ссылка);
	Результат = ЗапросБизнесПроцессы.Выполнить();
	Если НЕ Результат.Пустой() Тогда
		ТекстПредупреждение = "Не для всех регламентных операций назначены ответственные.
		|Запрещено запускать процедуру закрытия месяца.
		|Ответственные за выполнение регламентных операций назначаются в справочнике ""Настройки закрытия месяца""";
		ОбщегоНазначения.СообщитьОбОшибке(ТекстПредупреждение);
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

//Функция предназначена для поиска задачи, соответствующей текущему процессу и текущей регламентной операции (точке маршрута)
//Возвращает ссылку на задачу либо Неопределено
Функция ПолучитьЗадачуПоРеглОперации(РеглОперация) Экспорт
	ТекстЗапроса = "ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЗадачаРегламентныеОперацииЗакрытияМесяца.Ссылка КАК ЗадачаСсылка
	|ИЗ
	|	Задача.РегламентныеОперацииЗакрытияМесяца КАК ЗадачаРегламентныеОперацииЗакрытияМесяца
	|ГДЕ
	|	(ЗадачаРегламентныеОперацииЗакрытияМесяца.БизнесПроцесс = &БизнесПроцесс
	|	)
	|	И ЗадачаРегламентныеОперацииЗакрытияМесяца.ТочкаМаршрута = &ТочкаМаршрута
	|";
	ЗапросЗадачи 		= Новый Запрос;
	ЗапросЗадачи.Текст 	= ТекстЗапроса;
	
	ЗапросЗадачи.УстановитьПараметр("БизнесПроцесс", Ссылка);
	ЗапросЗадачи.УстановитьПараметр("ТочкаМаршрута", РеглОперация);
	
	ВыборкаЗадач 		= ЗапросЗадачи.Выполнить().Выбрать();
	Если ВыборкаЗадач.Следующий() Тогда
		Возврат ВыборкаЗадач.ЗадачаСсылка;
	Иначе
		Возврат Неопределено;
	КонецЕсли;

КонецФункции

//Процедура вызывается при создании задач
//Выполняет 
//1. заполнение ответственных (пользователя и группу пользователей) при создании задач
//2. удаление задач, которые формируются для отключенных регламентных операций
Процедура ПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	БизнесПроцессЗакрытиеМесяца.ПриСозданииЗадачБизнесПроцессов(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
КонецПроцедуры

//Процедура вызывается перед стартом процесса
//Проверяет возможность запуска в случае, если это не было сделано из формы элемента бизнес-процесса
Процедура ПередСтартом(ТочкаМаршрута, Отказ)
	Если ВозможностьЗапускаПроверена Тогда
		Возврат;
	КонецЕсли;
	Отказ = НЕ ПроверитьВозможностьЗапуска();
КонецПроцедуры

//Процедура вызывается перед записью
Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ (ОтражатьВУправленческомУчете ИЛИ ОтражатьВБухгалтерскомУчете) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не установлены признаки отражения в учетах",Отказ);
	КонецЕсли;

КонецПроцедуры


//Процедура вызывается при записи
Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления И Стартован Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Процедура закрытия месяца запущена. Перед пометкой на удаление необходимо отменить запуск процедуры",Отказ);
	КонецЕсли;	
КонецПроцедуры

ВозможностьЗапускаПроверена = Ложь;