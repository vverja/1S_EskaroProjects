Перем пПостроительОтчета Экспорт, мСтруктураПредставлениеПолей Экспорт;
Перем ТабИсточников Экспорт;

Процедура УстановитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета) Экспорт


	СтруктураКоллекцийПостроителяОтчета = Новый Структура("ДоступныеПоля, ВыбранныеПоля, ИзмеренияКолонки, ИзмеренияСтроки, Отбор, Порядок");
	
	Для каждого ЭлементСтруктуры Из СтруктураКоллекцийПостроителяОтчета Цикл
		
		Для Индекс = 0 По ПостроительОтчета[ЭлементСтруктуры.Ключ].Количество() - 1 Цикл
			
			Представление = Неопределено;
			
			Если Найти(ПостроительОтчета[ЭлементСтруктуры.Ключ][Индекс].ПутьКДанным, ".") = 0 Тогда
				
				Попытка
					
					СтруктураПредставлениеПолей.Свойство(ПостроительОтчета[ЭлементСтруктуры.Ключ][Индекс].ПутьКДанным, Представление);
					
				Исключение
					
				КонецПопытки;
				
			КонецЕсли;
				
			Если Представление = Неопределено Тогда
					
				Продолжить;
				
			Иначе
				
				ПостроительОтчета[ЭлементСтруктуры.Ключ][Индекс].Представление = Представление;
					
			КонецЕсли;
				
		КонецЦикла;
		
	КонецЦикла; 
	
КонецПроцедуры // УстановитьПредставленияПолей()

Процедура УстановитьДоступныеПоляОтбора(СтруктураПредставлениеПолей, ПостроительОтчета) Экспорт

	//ДоступныеПоляОтбора = пПостроительОтчета.Отбор.ПолучитьДоступныеПоля();
	//
	//Пока Истина Цикл
	//	Нашли = Ложь;
	//	Для каждого ЭлементСтруктуры Из ДоступныеПоляОтбора Цикл
	//		Если НЕ СтруктураПредставлениеПолей.Свойство(ЭлементСтруктуры.Имя) Тогда
	//			ДоступныеПоляОтбора.Удалить(ЭлементСтруктуры);
	//			Нашли = Истина;
	//		КонецЕсли;
	//	КонецЦикла;
	//	Если Не Нашли Тогда
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла; 
	//
	//пПостроительОтчета.Отбор.УстановитьДоступныеПоля(ДоступныеПоляОтбора);
	
КонецПроцедуры // УстановитьДоступныеПоляОтбора()

Функция ПостфиксРесурса()

	Если ВидДанных  = 2 Тогда
		Постфикс = "Оборот";
	Иначе
		Постфикс = "Остаток";
	КонецЕсли;
	
	Если Не Дебет Тогда
		Постфикс = Постфикс + "Кт";
	ИначеЕсли Не Кредит Тогда
		Постфикс = Постфикс + "Дт";
	КонецЕсли;
	
	Возврат Постфикс;

КонецФункции // ПостфиксРесурса()

Функция ТолькоОбороты() Экспорт

	Возврат (ВидДанных=2)

КонецФункции // ТолькоОбороты()

Процедура Инициализация() Экспорт
	
	МетаданныеРегистра    = Метаданные.РегистрыБухгалтерии.Найти(ИмяРегистра);
	Если МетаданныеРегистра = Неопределено Тогда
		ИмяРегистра = "";
		Возврат;
	КонецЕсли;
	
	ОписаниеПолейВыборки = "";
	ОписаниеПолейВыборкиПостроитель = "";
	ОписаниеИсточниковЗапросаИзмерения = "";
	//ОписаниеИтогиЗапроса =  "";
	ОписаниеОтборовРезультатаЗапроса = "";
		
	мСтруктураПредставлениеПолей = Новый Структура;
	
	ТолькоОбороты = (ВидДанных=2);
	
	КвоСубконто = МетаданныеРегистра.ПланСчетов.МаксКоличествоСубконто;
	
	мСтруктураПредставлениеПолей.Вставить("Счет", "Счет");
	
	Если ТолькоОбороты Тогда
		
		мСтруктураПредставлениеПолей.Вставить("КорСчет", "Кор.счет");
			
		Для НомСубконто = 1 по КвоСубконто Цикл
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ?(ОписаниеИсточниковЗапросаИзмерения="","",",") + "
			|	Субконто" + НомСубконто + ".*";
			мСтруктураПредставлениеПолей.Вставить("Субконто"+НомСубконто, "Субконто"+НомСубконто);
		КонецЦикла;
		Для НомСубконто = 1 по КвоСубконто Цикл
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ",
			|	КорСубконто" + НомСубконто + ".*";
			мСтруктураПредставлениеПолей.Вставить("КорСубконто"+НомСубконто, "Кор. субконто"+НомСубконто);
		КонецЦикла;
		
	Иначе
		
		Для НомСубконто = 1 по КвоСубконто Цикл
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ?(ОписаниеИсточниковЗапросаИзмерения="","",",") + "
			|	Субконто" + НомСубконто + ".*";
			мСтруктураПредставлениеПолей.Вставить("Субконто"+НомСубконто, "Субконто"+НомСубконто);
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого Измерение из МетаданныеРегистра.Измерения Цикл
		
		ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ",
		|	" + Измерение.Имя + ".* КАК " + Измерение.Имя;
		
		мСтруктураПредставлениеПолей.Вставить(Измерение.Имя, Измерение.Представление());
		
		Если ТолькоОбороты И (НЕ Измерение.Балансовый) Тогда
		
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ",
			|	" + Измерение.Имя + "Кор.* КАК " + Измерение.Имя;
			
			мСтруктураПредставлениеПолей.Вставить(Измерение.Имя+"Кор", Измерение.Представление()+" кор.");
		
		КонецЕсли;
		
	КонецЦикла;
	
	Для каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
		
		Если ТолькоОбороты Тогда
			
			ОписаниеПолейВыборки = ОписаниеПолейВыборки + ?(ОписаниеПолейВыборки = "", "", ",") + "
			|	ИсточникДанных." + Ресурс.Имя + "Оборот КАК " + Ресурс.Имя + "Оборот,
			|	ИсточникДанных." + Ресурс.Имя + "ОборотДт КАК " + Ресурс.Имя + "ОборотДт,
			|	ИсточникДанных." + Ресурс.Имя + "ОборотКт КАК " + Ресурс.Имя + "ОборотКт";
			
			//ОписаниеИтогиЗапроса = ОписаниеИтогиЗапроса + ?(ОписаниеИтогиЗапроса = "", "", ",") + "
			//|	СУММА(" + Ресурс.Имя + "Оборот),
			//|	СУММА(" + Ресурс.Имя + "ОборотДт),
			//|	СУММА(" + Ресурс.Имя + "ОборотКт)";
			
		Иначе
			
			ОписаниеПолейВыборки = ОписаниеПолейВыборки + ?(ОписаниеПолейВыборки = "", "", ",") + "
			|	ИсточникДанных." + Ресурс.Имя + "Остаток КАК " + Ресурс.Имя + "Остаток,
			|	ИсточникДанных." + Ресурс.Имя + "ОстатокДт КАК " + Ресурс.Имя + "ОстатокДт,
			|	ИсточникДанных." + Ресурс.Имя + "ОстатокКт КАК " + Ресурс.Имя + "ОстатокКт";
			
			//ОписаниеИтогиЗапроса = ОписаниеИтогиЗапроса + ?(ОписаниеИтогиЗапроса = "", "", ",") + "
			//|	МАКСИМУМ(" + Ресурс.Имя + "Остаток),
			//|	МАКСИМУМ(" + Ресурс.Имя + "ОстатокДт),
			//|	МАКСИМУМ(" + Ресурс.Имя + "ОстатокКт)";
			
		КонецЕсли;
		
	КонецЦикла;

	ОписаниеПолейВыборки = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ" + 
			ОписаниеПолейВыборки;


	Если ТолькоОбороты Тогда
		ОписаниеИсточниковЗапроса =	"
		|ИЗ РегистрБухгалтерии." + ИмяРегистра + ".Обороты(&ДатаНач, &ДатаКон, ,{Счет},,{"  + ОписаниеИсточниковЗапросаИзмерения + "},{КорСчет},) КАК ИсточникДанных";
	Иначе
		ОписаниеИсточниковЗапроса =	"
		|ИЗ РегистрБухгалтерии." + ИмяРегистра + ".Остатки(&"+?(ВидДанных=1,"ДатаНач","ДатаКон")+",{Счет},,{"  + ОписаниеИсточниковЗапросаИзмерения + "}) КАК ИсточникДанных";
	КонецЕсли;
	
		
	//ОписаниеИтогиЗапроса = "
	//|ИТОГИ" + ОписаниеИтогиЗапроса + "
	//|ПО
	//|	ОБЩИЕ";
	
	ТекстЗапроса =
		ОписаниеПолейВыборки +
		ОписаниеИсточниковЗапроса;
		
	пПостроительОтчета.Текст = ТекстЗапроса;
	пПостроительОтчета.ЗаполнитьНастройки();
	
	УстановитьПредставленияПолей(мСтруктураПредставлениеПолей, пПостроительОтчета);
	УстановитьДоступныеПоляОтбора(мСтруктураПредставлениеПолей, пПостроительОтчета);

КонецПроцедуры

Функция ВыполнитьРасчет(ДатаНач, ДатаКон, ПоТекущимНастройкам=Ложь, Организация=Неопределено) Экспорт

	//Состояние("Выполняется расчет показателя "+ПодробноеНаименование+"...");
	
	Если Не ПоТекущимНастройкам Тогда
	
		Инициализация();
	
		Настройки = НастройкиПостроителя.Получить();
		Если Настройки <> Неопределено Тогда
			пПостроительОтчета.УстановитьНастройки(Настройки); 
		КонецЕсли;
	
		Если ЗначениеЗаполнено(Организация) Тогда
			Попытка
				ЭлементНовогоОтбора = пПостроительОтчета.Отбор.Найти("Организация");
				Если ЭлементНовогоОтбора = Неопределено Тогда
					ЭлементНовогоОтбора = пПостроительОтчета.Отбор.Добавить("Организация");
				КонецЕсли;
				ЭлементНовогоОтбора.Использование = Истина;
				ЭлементНовогоОтбора.ВидСравнения=ВидСравнения.Равно;
				ЭлементНовогоОтбора.Значение = Организация;
			Исключение
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	ТолькоОбороты = (ВидДанных=2);
	Если ТолькоОбороты Тогда
		КонДата = ?(ДатаКон = Дата('00010101000000'), ДатаКон, КонецДня(ДатаКон));
	Иначе
		КонДата = ?(ДатаКон = Дата('00010101000000'), ДатаКон, КонецДня(ДатаКон)+1);
	КонецЕсли;
	
	пПостроительОтчета.Параметры.Вставить("ДатаНач", ДатаНач);
	пПостроительОтчета.Параметры.Вставить("ДатаКон", КонДата);

	пПостроительОтчета.Выполнить();
	
	//Смартис Лиманчук начало 14.12.2012
	//Выборка = пПостроительОтчета.Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	//Результат = 0;
	//
	//Пока Выборка.Следующий() Цикл
	//	Результат = Выборка[ИмяРесурса+ПостфиксРесурса()];
	//КонецЦикла;
	ТабРезультат = пПостроительОтчета.Результат.Выгрузить();
	Результат = 0;
	Если ТабРезультат.Количество()>0 Тогда
		Результат = ТабРезультат[0][ИмяРесурса+ПостфиксРесурса()];
	КонецЕсли;
	//Смартис Лиманчук окончание 14.12.2012
	
	//Состояние();
	
	Возврат Окр(Результат,2);

КонецФункции // ВыполнитьРасчет()

Процедура ИнициализацияВнешняя(ПоПериодам = Ложь, ПоОрганизациям = Ложь) Экспорт
	
	МетаданныеРегистра    = Метаданные.РегистрыБухгалтерии.Найти(ИмяРегистра);
	Если МетаданныеРегистра = Неопределено Тогда
		ИмяРегистра = "";
		Возврат;
	КонецЕсли;
	
	ОписаниеПолейВыборки = "";
	ОписаниеПолейВыборкиПостроитель = "";
	ОписаниеИсточниковЗапросаИзмерения = "";
	ОписаниеИтогиЗапроса =  "";
	ОписаниеОтборовРезультатаЗапроса = "";
		
	мСтруктураПредставлениеПолей = Новый Структура;
	
	ТолькоОбороты = (ВидДанных=2);
	Если НЕ ТолькоОбороты Тогда
	    ПоПериодам = Ложь;
	КонецЕсли;
	
	КвоСубконто = МетаданныеРегистра.ПланСчетов.МаксКоличествоСубконто;
	
	мСтруктураПредставлениеПолей.Вставить("Счет", "Счет");
	
	Если ТолькоОбороты Тогда
		
		мСтруктураПредставлениеПолей.Вставить("КорСчет", "Кор.счет");
			
		Для НомСубконто = 1 по КвоСубконто Цикл
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ?(ОписаниеИсточниковЗапросаИзмерения="","",",") + "
			|	Субконто" + НомСубконто + ".*";
			мСтруктураПредставлениеПолей.Вставить("Субконто"+НомСубконто, "Субконто"+НомСубконто);
		КонецЦикла;
		Для НомСубконто = 1 по КвоСубконто Цикл
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ",
			|	КорСубконто" + НомСубконто + ".*";
			мСтруктураПредставлениеПолей.Вставить("КорСубконто"+НомСубконто, "Кор. субконто"+НомСубконто);
		КонецЦикла;
		
	Иначе
		
		Для НомСубконто = 1 по КвоСубконто Цикл
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ?(ОписаниеИсточниковЗапросаИзмерения="","",",") + "
			|	Субконто" + НомСубконто + ".*";
			мСтруктураПредставлениеПолей.Вставить("Субконто"+НомСубконто, "Субконто"+НомСубконто);
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого Измерение из МетаданныеРегистра.Измерения Цикл
		
		ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ",
		|	" + Измерение.Имя + ".* КАК " + Измерение.Имя;
		
		мСтруктураПредставлениеПолей.Вставить(Измерение.Имя, Измерение.Представление());
		
		Если ТолькоОбороты И (НЕ Измерение.Балансовый) Тогда
		
			ОписаниеИсточниковЗапросаИзмерения = ОписаниеИсточниковЗапросаИзмерения + ",
			|	" + Измерение.Имя + "Кор.* КАК " + Измерение.Имя;
			
			мСтруктураПредставлениеПолей.Вставить(Измерение.Имя+"Кор", Измерение.Представление()+" кор.");
		
		КонецЕсли;
		
	КонецЦикла;
	
	ОписаниеПолейВыборки = "ВЫБРАТЬ РАЗРЕШЕННЫЕ " + ИмяРесурса + ПостфиксРесурса();
			
	Если ПоПериодам Тогда
		ОписаниеПолейВыборки = ОписаниеПолейВыборки + ", Период";
	КонецЕсли;
			
	Если ПоОрганизациям Тогда
		ОписаниеПолейВыборки = ОписаниеПолейВыборки + ", Организация";
	КонецЕсли;
	
	ОписаниеПолейВыборки = ОписаниеПолейВыборки + ", ИСТИНА КАК МеткаЗаписи";
			
	//Если ТолькоОбороты Тогда
		ОписаниеИтогиЗапроса = "
		|	СУММА(" + ИмяРесурса + ПостфиксРесурса()+")";
	//Иначе
	//	ОписаниеИтогиЗапроса = "
	//	|	МАКСИМУМ(" + ИмяРесурса + ПостфиксРесурса()+")";
	//КонецЕсли;

	Если ТолькоОбороты Тогда
		ОписаниеИсточниковЗапроса =	"
		|ИЗ РегистрБухгалтерии." + ИмяРегистра + ".Обороты(&ДатаНач, &ДатаКон, "+?(ПоПериодам,"Месяц","")+" ,{Счет},,{"  + ОписаниеИсточниковЗапросаИзмерения + "},{КорСчет},)";
	Иначе
		ОписаниеИсточниковЗапроса =	"
		|ИЗ РегистрБухгалтерии." + ИмяРегистра + ".Остатки(&"+?(ВидДанных=1,"ДатаНач","ДатаКон")+",{Счет},,{"  + ОписаниеИсточниковЗапросаИзмерения + "})";
	КонецЕсли;
		
	ОписаниеИтогиЗапроса = "
	|ИТОГИ" + ОписаниеИтогиЗапроса + "
	|ПО
	|	ОБЩИЕ";
	
	Если ПоПериодам Тогда
		ОписаниеИтогиЗапроса = ОписаниеИтогиЗапроса + ", Период";
	КонецЕсли;
	Если ПоОрганизациям Тогда
		ОписаниеИтогиЗапроса = ОписаниеИтогиЗапроса + ", Организация";
	КонецЕсли;
	
	ТекстЗапроса =
		ОписаниеПолейВыборки +
		ОписаниеИсточниковЗапроса +
		ОписаниеИтогиЗапроса;
		
	пПостроительОтчета.Текст = ТекстЗапроса;
	пПостроительОтчета.ЗаполнитьНастройки();
	
КонецПроцедуры

Функция ВыполнитьДетализованныйРасчет(ДатаНач, ДатаКон, Организация=Неопределено, ПоПериодам = Ложь, ПоОрганизациям = Ложь) Экспорт

	ИнициализацияВнешняя(ПоПериодам, ПоОрганизациям);

	Настройки = НастройкиПостроителя.Получить();
	Если Настройки <> Неопределено Тогда
		пПостроительОтчета.УстановитьНастройки(Настройки,Истина,Ложь,Ложь,Ложь,Ложь); 
	КонецЕсли;

	Если ЗначениеЗаполнено(Организация) Тогда
		Попытка
			ЭлементНовогоОтбора = пПостроительОтчета.Отбор.Найти("Организация");
			Если ЭлементНовогоОтбора = Неопределено Тогда
				ЭлементНовогоОтбора = пПостроительОтчета.Отбор.Добавить("Организация");
			КонецЕсли;
			ЭлементНовогоОтбора.Использование = Истина;
			ЭлементНовогоОтбора.ВидСравнения=ВидСравнения.Равно;
			ЭлементНовогоОтбора.Значение = Организация;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	ТолькоОбороты = (ВидДанных=2);
	Если ТолькоОбороты Тогда
		КонДата = ?(ДатаКон = Дата('00010101000000'), ДатаКон, КонецДня(ДатаКон));
	Иначе
		КонДата = ?(ДатаКон = Дата('00010101000000'), ДатаКон, КонецДня(ДатаКон)+1);
	КонецЕсли;
	
	пПостроительОтчета.Параметры.Вставить("ДатаНач", ДатаНач);
	пПостроительОтчета.Параметры.Вставить("ДатаКон", КонДата);

	пПостроительОтчета.Выполнить();
	ТабОтвет = пПостроительОтчета.Результат.Выгрузить();
	ТабОтвет.Колонки[ИмяРесурса + ПостфиксРесурса()].Имя = "Сумма";
	Возврат ТабОтвет;

КонецФункции // ВыполнитьРасчет()

пПостроительОтчета 	= Новый ПостроительОтчета;
мСтруктураПредставлениеПолей = Новый Структура;