&НаКлиенте
Процедура УстановитьДоступность()
	ЭтоЮрЛицо = (Объект.ЮрФизЛицо = ЮрФизЛицо_ЮрЛицо);
	Элементы.ДокументУдостоверяющийЛичность.Доступность = НЕ ЭтоЮрЛицо;
	Элементы.НаименованиеПолное.Заголовок = ?(ЭтоЮрЛицо, "Полное наименование", "ФИО");
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЮрФизЛицо_ЮрЛицо = Перечисления.ЮрФизЛицо.ЮрЛицо;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоПриИзменении(Элемент)
	УстановитьДоступность();
КонецПроцедуры

&НаКлиенте
Процедура ЮрФизЛицоОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НаименованиеПриИзменении(Элемент)
	Если НЕ ЗначениеЗаполнено(Объект.НаименованиеПолное) Тогда
		Объект.НаименованиеПолное = Объект.Наименование;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПараметрыЗаписи.Вставить("ЭтоНовый", НЕ ЗначениеЗаполнено(Объект.Ссылка));
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если НЕ ПараметрыЗаписи.ЭтоНовый ИЛИ ТекущийОбъект.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если  НЕ ЗначениеЗаполнено(ТекущийОбъект.ОсновнойДоговорКонтрагента) Тогда
		ПроверитьОсновнойДоговорКонтрагента(ТекущийОбъект, Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ГоловнойКонтрагент) Тогда
		ТекущийОбъект.ГоловнойКонтрагент = ТекущийОбъект.Ссылка;
	КонецЕсли; 

КонецПроцедуры

&НаСервере
Процедура ПроверитьОсновнойДоговорКонтрагента(ТекущийОбъект, Отказ)
	ВыборкаДоговоров = Справочники.ДоговорыКонтрагентов.Выбрать(, ТекущийОбъект.Ссылка);
	Если ВыборкаДоговоров.Следующий() Тогда
		ТекущийОбъект.ОсновнойДоговорКонтрагента = ВыборкаДоговоров.Ссылка;
	Иначе
		НайденныйДоговорОбъект              = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
		НайденныйДоговорОбъект.Наименование = "Основной договор";

		НайденныйДоговорОбъект.ВалютаВзаиморасчетов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяВалютаВзаиморасчетов");
		Если НЕ ЗначениеЗаполнено(НайденныйДоговорОбъект.ВалютаВзаиморасчетов) Тогда
			НайденныйДоговорОбъект.ВалютаВзаиморасчетов = Константы.ВалютаУправленческогоУчета.Получить();
		КонецЕсли;

		НайденныйДоговорОбъект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		Если НЕ ЗначениеЗаполнено(НайденныйДоговорОбъект.Организация) Тогда
			Запрос = Новый Запрос();
			Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
			               |	Организации.Ссылка
			               |ИЗ
			               |	Справочник.Организации КАК Организации";
			Результат = Запрос.Выполнить();
			Если НЕ Результат.Пустой() Тогда
				Выборка = Результат.Выбрать();
				Выборка.Следующий();
				НайденныйДоговорОбъект.Организация = Выборка.Ссылка;
			Иначе
				СтрокаСообщения = Нстр("ru = 'Не удалось записать основной договор контрагента (не найдена организация)'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, ТекущийОбъект,,, Отказ);
				Возврат;
			КонецЕсли;
		КонецЕсли;

		НайденныйДоговорОбъект.Владелец           = ТекущийОбъект.Ссылка;
		НайденныйДоговорОбъект.ВидУсловийДоговора = Перечисления.ВидыУсловийДоговоровВзаиморасчетов.БезДополнительныхУсловий;

		Если ТекущийОбъект.Покупатель Тогда
			НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
			НайденныйДоговорОбъект.ТипЦен      = Справочники.ТипыЦенНоменклатуры.ПустаяСсылка();
		ИначеЕсли ТекущийОбъект.Поставщик Тогда
			НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком;
			НайденныйДоговорОбъект.ТипЦен      = Справочники.ТипыЦенНоменклатурыКонтрагентов.ПустаяСсылка();
		Иначе
			НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее;
		КонецЕсли;

		Если НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Прочее Тогда
			НайденныйДоговорОбъект.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
			НайденныйДоговорОбъект.ВедениеВзаиморасчетовРегл = НайденныйДоговорОбъект.ВедениеВзаиморасчетов;
		Иначе
			НайденныйДоговорОбъект.ВедениеВзаиморасчетов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновноеВедениеВзаиморасчетовПоДоговорам");
			НайденныйДоговорОбъект.ВедениеВзаиморасчетовРегл = НайденныйДоговорОбъект.ВедениеВзаиморасчетов;
			Если НЕ ЗначениеЗаполнено(НайденныйДоговорОбъект.ВедениеВзаиморасчетов) Тогда
				НайденныйДоговорОбъект.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
				НайденныйДоговорОбъект.ВедениеВзаиморасчетовРегл = НайденныйДоговорОбъект.ВедениеВзаиморасчетов;
			КонецЕсли;
			НайденныйДоговорОбъект.ВестиПоДокументамРасчетовСКонтрагентом = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновныеРасчетыПоДокументамСКонтрагентами");
		КонецЕсли;


		Если (НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком
		 ИЛИ  НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем)
		   И НайденныйДоговорОбъект.ВалютаВзаиморасчетов <> Константы.ВалютаРегламентированногоУчета.Получить() Тогда
			НайденныйДоговорОбъект.РасчетыВУсловныхЕдиницах = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновныеРасчетыПоДоговоруВУсловныхЕдиницах");
		КонецЕсли;

		Если НайденныйДоговорОбъект.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом
		 ИЛИ НайденныйДоговорОбъект.ВедениеВзаиморасчетов = Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоЗаказам Тогда
			НайденныйДоговорОбъект.ОбособленныйУчетТоваровПоЗаказамПокупателей = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОбособленныйУчетТоваровПоЗаказамПокупателей");
		КонецЕсли;

		Если НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда
			НайденныйДоговорОбъект.ПроцентПредоплаты = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойРазмерПредоплатыПоЗаказуПокупателя");
		КонецЕсли;
		
		Если НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			НайденныйДоговорОбъект.СхемаНалоговогоУчета = Справочники.СхемыНалоговогоУчетаПоДоговорамКонтрагентов.СКомиссионером;
		ИначеЕсли НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			НайденныйДоговорОбъект.СхемаНалоговогоУчета = Справочники.СхемыНалоговогоУчетаПоДоговорамКонтрагентов.СКомитентом;
		ИначеЕсли НайденныйДоговорОбъект.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.Бартерный Тогда
			НайденныйДоговорОбъект.СхемаНалоговогоУчета = Справочники.СхемыНалоговогоУчетаПоДоговорамКонтрагентов.Бартер;
		Иначе
			Если НЕ НайденныйДоговорОбъект.ВалютаВзаиморасчетов = глЗначениеПеременной("ВалютаРегламентированногоУчета") Тогда
				НайденныйДоговорОбъект.СхемаНалоговогоУчета = Справочники.СхемыНалоговогоУчетаПоДоговорамКонтрагентов.ВЭД;		
			Иначе	
				НайденныйДоговорОбъект.СхемаНалоговогоУчета = Справочники.СхемыНалоговогоУчетаПоДоговорамКонтрагентов.ПоПервомуСобытию;
			КонецЕсли;
		КонецЕсли;

		НайденныйДоговорОбъект.СхемаНалоговогоУчетаПоТаре = Справочники.СхемыНалоговогоУчетаПоДоговорамКонтрагентов.ПоПервомуСобытию;
		
		СтрокаСообщения = "";
		Попытка
			НайденныйДоговорОбъект.Записать();
		Исключение
			СтрокаСообщения = Нстр("ru = 'Не удалось записать основной договор контрагента: '") + ОписаниеОшибки();
		КонецПопытки;
		Если СтрокаСообщения <> "" Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, ТекущийОбъект,,, Отказ);
			Возврат;
		КонецЕсли;
		
		ТекущийОбъект.ОсновнойДоговорКонтрагента = НайденныйДоговорОбъект.Ссылка;
	КонецЕсли;
    
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)	
	Записать();
	
	ТекущийОбъект = Объект;	
	
	Если  НЕ ЗначениеЗаполнено(ТекущийОбъект.ОсновнойДоговорКонтрагента) Тогда
		ПроверитьОсновнойДоговорКонтрагента(ТекущийОбъект, Ложь);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.ГоловнойКонтрагент) Тогда
		ТекущийОбъект.ГоловнойКонтрагент = ТекущийОбъект.Ссылка;
	КонецЕсли; 

	Записать();
	Закрыть();	 
КонецПроцедуры

	
	

