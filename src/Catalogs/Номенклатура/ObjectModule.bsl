Перем мСписокВозможныхРеквизитов Экспорт;
Перем мРеквизитыКонтрольУникальности Экспорт;
Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

Перем мЭтоНеНовый;

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтоГруппа Тогда
		//Для элемента требуется проверять заполнение реквизита ВидНоменклатуры
		ПроверяемыеРеквизиты.Добавить("ВидНоменклатуры");
	КонецЕсли;
	
	Если (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга) Тогда
		
		// Базовая единица может быть не заполнена
		НомерУдаляемогоЭлемента = ПроверяемыеРеквизиты.Найти("БазоваяЕдиницаИзмерения");
		Если НомерУдаляемогоЭлемента <> Неопределено Тогда
			ПроверяемыеРеквизиты.Удалить(НомерУдаляемогоЭлемента);
		КонецЕсли;
		
	КонецЕсли;

	// Надо проверить владельца единицы хранения остатков.
	Если ЗначениеЗаполнено(ЕдиницаХраненияОстатков)
		И ЕдиницаХраненияОстатков.Владелец <> Ссылка Тогда
		ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы хранения остатков!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);
	КонецЕсли;
	
	// Надо проверить владельца единицы для отчетов.
	Если ЗначениеЗаполнено(ЕдиницаДляОтчетов)
		И ЕдиницаДляОтчетов.Владелец <> Ссылка Тогда
		ТекстСообщения = НСтр("ru = 'Неверно указан владелец единицы для отчетов!'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаДляОтчетов",, Отказ);
	КонецЕсли;

	Если Не ЭтоНовый() И НЕ ЭтоГруппа Тогда
		СуществуютСсылки = Неопределено;

		Если (ВидНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Услуга)
			И Ссылка.ЕдиницаХраненияОстатков <> ЕдиницаХраненияОстатков 
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
							 |Изменить единицу хранения остатков уже нельзя!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ЕдиницаХраненияОстатков",, Отказ);
		КонецЕсли;

		Если ВидНоменклатуры.ТипНоменклатуры <> Ссылка.ВидНоменклатуры.ТипНоменклатуры
			И ПолныеПрава.Номенклатура_СуществуютСсылки(Ссылка, СуществуютСсылки) Тогда
			
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
							 |Тип номенклатуры не может быть изменен'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВидНоменклатуры",, Отказ);
		КонецЕсли;
		
		Если Не ВестиУчетПоСериям И Ссылка.ВестиУчетПоСериям И ПолныеПрава.Номенклатура_СуществуютСсылкиНаСерииВРегистрахНакопления(Ссылка) Тогда
			ТекстСообщения = НСтр("ru = 'Номенклатура уже участвует в товародвижении. 
							 |Признак ""Вести учет по сериям"" не может быть изменен!'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВестиУчетПоСериям",, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	
КонецПроцедуры

// Обработчик события элемента ПриКопировании.
//
Процедура ПриКопировании(ОбъектКопирования)

	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
		ЕдиницаДляОтчетов       = Неопределено;
		ЕдиницаИзмеренияМест    = Неопределено;
		ОсновноеИзображение     = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // ПриКопировании()

Процедура ПередЗаписью(Отказ)

	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
		
	Иначе
		
		Если НЕ ЗначениеЗаполнено(ЕдиницаДляОтчетов) Тогда
			ЕдиницаДляОтчетов = ЕдиницаХраненияОстатков;
		КонецЕсли;
		
		Услуга   = (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Услуга);
		Набор    = (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Набор);
		Комплект = (ВидНоменклатуры.ТипНоменклатуры = Перечисления.ТипыНоменклатуры.Комплект);

		Если Услуга ИЛИ Набор Тогда
			ВестиУчетПоХарактеристикам = Ложь;
		КонецЕсли;

		Если ВидНоменклатуры.ТипНоменклатуры <> Перечисления.ТипыНоменклатуры.Товар Тогда
			
			ВестиУчетПоСериям 				 = Ложь;
			ВестиПартионныйУчетПоСериям 	 = Ложь;
			Весовой 						 = Ложь;
			ВестиОперативныйУчетОстатковНЗП  = Ложь;
			ВестиУчетПоСериямВНЗП 			 = Ложь;
			ВестиСерийныеНомера 			 = Ложь;

			НомерГТД                         = Неопределено;
			СтранаПроисхождения              = Неопределено;
			ПорядокПрисвоенияСерийногоНомера = Неопределено;
			НаправлениеВыпуска               = Неопределено;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	Если НЕ ОбменДанными.Загрузка Тогда
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
	КонецЕсли;	
КонецПроцедуры
