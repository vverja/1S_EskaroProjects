Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Обработчик события ПередЗаписью объекта.
//
Процедура ПередЗаписью(Отказ)

	Если Не ОбменДанными.Загрузка
	   И Не ЭтоГруппа
	   И Не ЭтоНовый()
	   И ВидСклада <> Ссылка.ВидСклада
	   И ПолныеПрава.Склад_СуществуютСсылки(Ссылка) Тогда

		ОбщегоНазначения.СообщитьОбОшибке("Существуют документы, в которых выбран склад """ + Наименование + """.
		                |Реквизит ""Вид склада"" не может быть изменен, элемент не записан.");

		Отказ = Истина;
	КонецЕсли;

	// Не дадим записать розничный склад или НТТ без указания типа цен.
	Если Не ОбменДанными.Загрузка
	   И Не ЭтоГруппа
	   И (ВидСклада = Перечисления.ВидыСкладов.Розничный Или ВидСклада = Перечисления.ВидыСкладов.НТТ)
	   И НЕ ЗначениеЗаполнено(ТипЦенРозничнойТорговли) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Для склада вида """+ВидСклада+""" необходимо указать тип цен розничной торговли,
		                 |элемент не записан.");

		Отказ = Истина;
	КонецЕсли;

	Если НЕ ОбменДанными.Загрузка Тогда
		
		ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
		
	КонецЕсли;

КонецПроцедуры // ПередЗаписью()

// Обработчик события ПриЗаписи.
//
Процедура ПриЗаписи(Отказ)

	Если НЕ ОбменДанными.Загрузка Тогда
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка, ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
	КонецЕсли;

КонецПроцедуры // ПриЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТИРУЕМЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

