&НаКлиенте 
Перем мПараметрыСвязиСтрокТЧ;


// Процедура копирует первую строку табличной части "Выходные изделия" в реквизиты шапки.
//
&НаСервере
Процедура ЗаполнитьВыходноеИзделиеВШапке(ВыходныеИзделия)

	Если ВыходныеИзделия.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаТаблицы = ВыходныеИзделия.Получить(0);
	Номенклатура 				= СтрокаТаблицы.Номенклатура;
	ХарактеристикаНоменклатуры 	= СтрокаТаблицы.ХарактеристикаНоменклатуры;
	Количество 					= СтрокаТаблицы.Количество;
	ЕдиницаИзмерения 			= СтрокаТаблицы.ЕдиницаИзмерения;
	НомерОперацииМаршрута 		= СтрокаТаблицы.НомерОперацииМаршрута;
	МинимальнаяПартия			= СтрокаТаблицы.МинимальнаяПартия;
	Кратность 					= СтрокаТаблицы.Кратность;
	ТочкаМаршрута		 		= СтрокаТаблицы.ТочкаМаршрута;
	
КонецПроцедуры //
 
&НаКлиенте
Процедура НаименованиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	Имя = СокрЛП(Номенклатура);
	Если ЗначениеЗаполнено(ХарактеристикаНоменклатуры) Тогда
		Имя = Имя + " (" + СокрЛП(ХарактеристикаНоменклатуры) + ")";
	КонецЕсли;
	
	Элемент.СписокВыбора.Очистить();
	Элемент.СписокВыбора.Добавить(Имя, Имя);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ИзменениеНоменклатурыСервер(СтруктураДанныхСтроки)

	СтруктураДанныхСтроки.Вставить("ЕдиницаИзмерения", СтруктураДанныхСтроки.Номенклатура.ЕдиницаХраненияОстатков);
	СтруктураДанныхСтроки.Вставить("Коэффициент",      СтруктураДанныхСтроки.ЕдиницаИзмерения.Коэффициент);
	
КонецПроцедуры //

&НаКлиенте
Функция ПолучитьДанныеСтрокиТЧ(СтрокаТабличнойЧасти)
	
	СтруктураДанныхСтроки = Новый Структура("Номенклатура,ЕдиницаИзмерения,Коэффициент");
	
	ЗаполнитьЗначенияСвойств(СтруктураДанныхСтроки, СтрокаТабличнойЧасти);
	
	Возврат СтруктураДанныхСтроки
	
КонецФункции // 

// Выполняет общие действия при изменении поля Номенклатура в строке табличной части
//
&НаКлиенте
Процедура ИзменениеНоменклатурыВТЧ(СтрокаТабличнойЧасти)

	СтруктураДанныхСтроки = ПолучитьДанныеСтрокиТЧ(СтрокаТабличнойЧасти);	
	ИзменениеНоменклатурыСервер(СтруктураДанныхСтроки);
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, СтруктураДанныхСтроки);
	
КонецПроцедуры //
 
////////////////////////////////////////////////////////////////////////////////
// ВЫХОДНОЕ ИЗДЕЛИЕ

// Процедура заполняет строку выходных изделий для сборочной спецификации.
//
&НаСервере
Процедура ЗаполнитьСтрокуВыходныхИзделий(ТекущийОбъект)
	
	Если ТекущийОбъект.ВидСпецификации <> Перечисления.ВидыСпецификаций.Сборочная Тогда
		Возврат;
	КонецЕсли;
		
	ТекущийОбъект.ВыходныеИзделия.Очистить();
	
	НоваяСтрока = ТекущийОбъект.ВыходныеИзделия.Добавить();
	НоваяСтрока.Номенклатура = Номенклатура;
	НоваяСтрока.ХарактеристикаНоменклатуры = ХарактеристикаНоменклатуры;
	НоваяСтрока.Количество = Количество;
	НоваяСтрока.ЕдиницаИзмерения = ЕдиницаИзмерения;
	НоваяСтрока.ДоляСтоимости = 1;
	
КонецПроцедуры // ПеренестиНоменклатуруВВыходныеИзделия()

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	СтруктураДанныхСтроки = Новый Структура("Номенклатура,ЕдиницаИзмерения", Номенклатура, ЕдиницаИзмерения);
	ИзменениеНоменклатурыСервер(СтруктураДанныхСтроки);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураДанныхСтроки);
	
	Если Количество = 0 Тогда
		Количество = 1;
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ИСХОДНЫЕ КОМПЛЕКТУЮЩИЕ

&НаКлиенте
Процедура ИсходныеКомплектующиеПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаТабличнойЧасти = Элемент.ТекущиеДанные;
	Если НоваяСтрока Тогда
		
		Если НЕ Копирование Тогда
			СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = ПустаяХарактеристика;
		КонецЕсли;
		
		Если СтрокаТабличнойЧасти.ПозицияПоСпецификации = 0 Тогда
			ИндексТекущейСтроки = Объект.ИсходныеКомплектующие.Индекс(СтрокаТабличнойЧасти);
			Если ИндексТекущейСтроки = 0 Тогда
				СтрокаТабличнойЧасти.ПозицияПоСпецификации = 1;
			Иначе				
				ПозицияПоСпецификации = Объект.ИсходныеКомплектующие.Получить(ИндексТекущейСтроки - 1).ПозицияПоСпецификации;
				СтрокаТабличнойЧасти.ПозицияПоСпецификации = ПозицияПоСпецификации + 1;
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТабличнойЧасти.ВидНорматива) Тогда
			СтрокаТабличнойЧасти.ВидНорматива = ВидНормативаНоменклатура;
			СтрокаТабличнойЧасти.Номенклатура = ПустаяНоменклатура;
			СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры = ПустаяХарактеристика;
			
			СтрокаТабличнойЧасти.УказаниеНорматива = ВидыУказанияНормативаНаКоличествоПродукции;
			СтрокаТабличнойЧасти.СписаниеКомплектующей = ВариантыСписанияКомплектующихВсегда;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	ИзменениеНоменклатурыВТЧ(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	СтрокаТабличнойЧасти.Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры, ТекущаяДата());
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеВидВоспроизводстваПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	
	Если СтрокаТабличнойЧасти.ВидВоспроизводства = ВидыВоспроизводстваНоменклатурыЗакупка
		ИЛИ СтрокаТабличнойЧасти.ВидВоспроизводства = ВидыВоспроизводстваНоменклатурыПринятыеВПереработку Тогда
		
		СтрокаТабличнойЧасти.Спецификация = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	РаботаСДиалогамиКлиент.НачалоВыбораЗначенияСпецификации(СтрокаТабличнойЧасти.Номенклатура, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СОБЫТИЯ ФОРМЫ

&НаКлиенте
Процедура СделатьОсновнойСпецификацией(Команда)
	
	Если Объект.Ссылка.Пустая() ИЛИ Модифицированность Тогда
		Предупреждение("Необходимо записать спецификацию");
		Возврат;
	КонецЕсли;
	
	Если Объект.ВыходныеИзделия.Количество() = 0 
		ИЛИ Объект.ВыходныеИзделия[0].Номенклатура = ПустаяНоменклатура Тогда
		
		Предупреждение("Необходимо указать выходное изделие");
		Возврат;
	КонецЕсли;
	
	ДатаЗаписи = ТекущаяДата();
	Если НЕ ВвестиДату(ДатаЗаписи, "Введите дату", ЧастиДаты.Дата) Тогда
		Возврат;
	КонецЕсли;
	
	УправлениеПроизводством.ЗаписатьОсновнуюСпецификацию(Объект.Ссылка, ДатаЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Объект.Ссылка.Пустая() Тогда
		Объект.ВидСпецификации = Перечисления.ВидыСпецификаций.Сборочная;
		Объект.Состояние = Перечисления.СостоянияОбъектов.Утвержден;
		Объект.ДатаУтверждения = ТекущаяДата();
	КонецЕсли; 
	
	Если Объект.ВидСпецификации = Перечисления.ВидыСпецификаций.Сборочная Тогда
		ЗаполнитьВыходноеИзделиеВШапке(Объект.ВыходныеИзделия);
	Иначе
		// В форме допускается редактировать только сборочные спецификации
		Элементы.ГруппаСборочнаяСпецификация.Видимость = Ложь;
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ИсходныеКомплектующиеНоменклатура.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	
	// Сделать основной спецификацией можно только активную
	Элементы.СделатьОсновнойСпецификацией.Доступность = (Объект.Активная И Объект.ВидСпецификации = Перечисления.ВидыСпецификаций.Сборочная);
	
	// Константы, используемые на клиенте
	ПустаяХарактеристика = Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка();
	ПустаяНоменклатура   = Справочники.Номенклатура.ПустаяСсылка();
	ВидНормативаНоменклатура                   = Перечисления.ВидыНормативовНоменклатуры.Номенклатура;
	ВидыУказанияНормативаНаКоличествоПродукции = Перечисления.ВидыУказанияНорматива.НаКоличествоПродукции;
	ВариантыСписанияКомплектующихВсегда        = Перечисления.ВариантыСписанияКомплектующих.Всегда;
	ВидыВоспроизводстваНоменклатурыПринятыеВПереработку = Перечисления.ВидыВоспроизводстваНоменклатуры.ПринятыеВПереработку;
	ВидыВоспроизводстваНоменклатурыЗакупка              = Перечисления.ВидыВоспроизводстваНоменклатуры.Закупка;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.ЭтоНовый() Тогда
		
		//Заполним значениями по умолчанию неиспользуемые реквизиты
		ТекущийОбъект.ВидСпецификации = Перечисления.ВидыСпецификаций.Сборочная;
		ТекущийОбъект.ИспользоватьВидВоспроизводства = Истина;
		Для каждого СтрокаТабличнойЧасти из ТекущийОбъект.ИсходныеКомплектующие Цикл
			СтрокаТабличнойЧасти.ВидНорматива = Перечисления.ВидыНормативовНоменклатуры.Номенклатура;
			СтрокаТабличнойЧасти.УказаниеНорматива = Перечисления.ВидыУказанияНорматива.НаКоличествоПродукции;
			СтрокаТабличнойЧасти.СписаниеКомплектующей = Перечисления.ВариантыСписанияКомплектующих.Всегда;
		КонецЦикла;
	
	КонецЕсли; 
	
	ЗаполнитьСтрокуВыходныхИзделий(ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивнаяПриИзменении(Элемент)
	
	Элементы.СделатьОсновнойСпецификацией.Доступность = Объект.Активная;
	
КонецПроцедуры



