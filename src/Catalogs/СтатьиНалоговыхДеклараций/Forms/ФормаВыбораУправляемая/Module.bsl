////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

// Обработчик события ПриСозданииНаСервере Формы.
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Параметры.Отбор.Свойство("ВидНалоговойДекларации") Тогда
		ВидНалоговойДекларации = Параметры.Отбор.ВидНалоговойДекларации;
	Иначе
		ВидНалоговойДекларации = Неопределено;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Родитель") Тогда
		// в свойстве Родитель передаем набор статей
		НаборСтатей            = Параметры.Отбор.Родитель;
	Иначе
		НаборСтатей 		   = Неопределено;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(НаборСтатей) Тогда
		ВсеСтатьи = 1;
	Иначе
		ВсеСтатьи = 0;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(ВидНалоговойДекларации) Тогда
		Элементы.ВидНалоговойДекларации.Доступность = Истина;
	Иначе
		Элементы.ВидНалоговойДекларации.Доступность = Ложь;
	КонецЕсли; 
	
	УстановитьОтбор();
	
	Элементы.Список.ТекущаяСтрока = Параметры.ТекущаяСтрока;
	
КонецПроцедуры // ПриСозданииНаСервере

&НаСервере
Процедура УстановитьОтбор()
	
	Отбор = Список.Отбор.Элементы;
	Отбор.Очистить();
	
	Если ВсеСтатьи = 0 И ЗначениеЗаполнено(НаборСтатей) Тогда
		
		ДопустимыеСтатьи = НалоговыйУчетПовтИсп.СформироватьСписокНабораСтатейПриростаУбыли(НаборСтатей);
		ДопустимыеСтатьиНабора = ДопустимыеСтатьи;
		
		СписокСтатей = НалоговыйУчетПовтИсп.СформироватьСписокНабораСтатейПриростаУбыли(НаборСтатей, Истина);
		
		УсловиеОтбора = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		УсловиеОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
		УсловиеОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
		УсловиеОтбора.ПравоеЗначение = СписокСтатей;
		
	ИначеЕсли ЗначениеЗаполнено(ВидНалоговойДекларации) Тогда
		
		Если ЗначениеЗаполнено(НаборСтатей) Тогда
			ДопустимыеСтатьиНабора = НалоговыйУчетПовтИсп.СформироватьСписокНабораСтатейПриростаУбыли(НаборСтатей);
		КонецЕсли;	
			
		СписокСтатей = НалоговыйУчетПовтИсп.СформироватьСписокНабораСтатейДекларации(ВидНалоговойДекларации, Истина);
		
		УсловиеОтбора = Отбор.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		УсловиеОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Ссылка");
		УсловиеОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		УсловиеОтбора.ПравоеЗначение = СписокСтатей;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДопустимыеСтатьиНабора) Тогда
		УО = Список.УсловноеОформление.Элементы;
		УО.Очистить();
	
		ЭлементУО = УО.Добавить();
	
		ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", 
			Новый Шрифт(ЭлементУО.Оформление.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Шрифт")).Значение,,,Истина));
	
		ЭлементУсловия = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ЭлементУсловия.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Ссылка");
		ЭлементУсловия.ВидСравнения   = ВидСравненияКомпоновкиДанных.ВСписке;
		ЭлементУсловия.ПравоеЗначение = ДопустимыеСтатьиНабора;
	КонецЕсли;
 КонецПроцедуры

&НаКлиенте
Процедура ВсеСтатьиПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	Если ВсеСтатьи = 0 Тогда
		Если ДопустимыеСтатьиНабора.НайтиПоЗначению(Значение) = Неопределено Тогда
			//откажемся от выбора
			СтандартнаяОбработка = Ложь;
		КонецЕсли;    
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ВидНалоговойДекларацииПриИзменении(Элемент)
	УстановитьОтбор();
КонецПроцедуры




