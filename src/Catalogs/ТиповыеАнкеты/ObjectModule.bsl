////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ЕстьФизическиеЛица;
Перем ЕстьКонтрагенты;
Перем ЕстьКонтактныеЛица;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ВыгрузитьАнкетуВXML(Анкета, ИмяФайла = "", ОпрашиваемоеЛицо, ДокРассылки, ДокОпрос = Неопределено) Экспорт

	Если Анкета = Неопределено Тогда
		Возврат ""; // Нечего выгружать!
	КонецЕсли;

	Если Анкета.Пустая() Тогда
		Возврат ""; // Нечего выгружать!
	КонецЕсли;

	Выборка    = ВыполнитьЗапросПоАнкете(Анкета);
	XML        = Новый ЗаписьXML();
	XML.Отступ = Истина;

	Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
		XML.УстановитьСтроку("UTF-8"); //16
	Иначе
		XML.ОткрытьФайл(ИмяФайла, "UTF-8");
	КонецЕсли;
	
	XML.ЗаписатьОбъявлениеXML();
	
	XML.ЗаписатьИнструкциюОбработки("xml-stylesheet","type=""text/xsl"" href=""style.xsl""");

	XML.ЗаписатьНачалоЭлемента("Заголовок");

	ДобавитьПоле(XML,"ДатаФормирования", XMLСтрока(ТекущаяДата()));
	ДобавитьПоле(XML,"ВерсияФормата",   "1.0");
	ДобавитьПоле(XML,"ИдОпрашиваемого", ЗначениеВСтрокуВнутр(ОпрашиваемоеЛицо));

	XML.ЗаписатьНачалоЭлемента("Анкета");
		ДобавитьПоле(XML,"Ид",              ЗначениеВСтрокуВнутр(Анкета));
		ДобавитьПоле(XML,"Наименование",    Анкета.НаименованиеАнкеты);
		ДобавитьПоле(XML,"Комментарий",     Анкета.Вступление);
		Если ДокРассылки <> Неопределено тогда
			ДобавитьПоле(XML,"ИдРассылки",      ДокРассылки.УникальныйИдентификатор());
		КонецЕсли;
		ОбработкаЗапроса(Выборка, XML);
	XML.ЗаписатьКонецЭлемента(); // Анкета

	XML.ЗаписатьНачалоЭлемента("РезультатОпроса");
	ДобавитьПоле(XML,"ДатаЗаполненияАнкеты", 	XMLСтрока(?(НЕ ЗначениеЗаполнено(ДокОпрос), "", ДокОпрос.Дата)));
	ДобавитьПоле(XML,"ИдАнкеты",             	ЗначениеВСтрокуВнутр(Анкета));
	ДобавитьПоле(XML,"Наименование",    		Анкета.НаименованиеАнкеты);
	Если ДокРассылки <> Неопределено тогда
		ДобавитьПоле(XML,"ИдРассылки",      ДокРассылки.УникальныйИдентификатор());
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокОпрос) тогда
		ВыборкаОтветовИзОпроса  = Неопределено;
	Иначе
		ВыборкаОтветовИзОпроса  = ВыполнитьЗапросПоОпросу(ДокОпрос).Выбрать(ОбходРезультатаЗапроса.Прямой);
	КонецЕсли;
	
	ВыборкаВопросовДляОтветов = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Вопрос");
	Пока ВыборкаВопросовДляОтветов.Следующий() Цикл
		
		Если ВыборкаВопросовДляОтветов.ТипВопроса <> Перечисления.ТипВопросаАнкеты.Табличный тогда
			ДобавитьОтвет(XML, ВыборкаВопросовДляОтветов.Вопрос, ВыборкаВопросовДляОтветов.ТипВопроса, ВыборкаОтветовИзОпроса);
		Иначе
			XML.ЗаписатьНачалоЭлемента("Вопрос");
			ДобавитьПоле(XML,"Ид", ВыборкаВопросовДляОтветов.Вопрос.Ссылка.УникальныйИдентификатор());
			Для НомерСтрокиТаблицы = 1 по ВыборкаВопросовДляОтветов.СтрокВТаблице Цикл
				XML.ЗаписатьНачалоЭлемента("СтрокаТаблицы");
				ДобавитьПоле(XML,"НомерСтроки", НомерСтрокиТаблицы);
				ВыборкаКолонокДляОтветов = ВыборкаВопросовДляОтветов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "КолонкаТаблицы");
				Пока ВыборкаКолонокДляОтветов.Следующий() Цикл
					ДобавитьОтвет(XML, ВыборкаКолонокДляОтветов.КолонкаТаблицы, ВыборкаКолонокДляОтветов.КолонкаТаблицыТипВопроса, ВыборкаОтветовИзОпроса, ВыборкаВопросовДляОтветов.Вопрос, НомерСтрокиТаблицы);
				КонецЦикла;
				XML.ЗаписатьКонецЭлемента(); // конец Строка таблицы
			КонецЦикла;
			XML.ЗаписатьКонецЭлемента(); // конец табличного вопроса
		КонецЕсли;
	КонецЦикла;
	XML.ЗаписатьКонецЭлемента(); // РезультатОпроса

	XML.ЗаписатьКонецЭлемента(); // Заголовок

	Если НЕ ЗначениеЗаполнено(ИмяФайла) Тогда
		Возврат (XML.Закрыть());
	Иначе
		XML.Закрыть();
	КонецЕсли;

КонецФункции // ВыгрузитьАнкетуВXML()

Функция ПолучитьИмяФайлаАнкеты() Экспорт
	
	Возврат "anketa" + Код + ".xml";
	
КонецФункции 

#Если Клиент Тогда
	
Функция СформироватьВложение(ОпрашиваемоеЛицо = Неопределено, ЭлектронныйАдресОтветов = "", ДокРассылки = Неопределено, ДокОпрос = Неопределено, ИмяФайла = "", ФормироватьXSL = Ложь, КаталогАнкеты = "", КаталогОпроса = "") Экспорт

	//Если	НЕ ЗначениеЗаполнено(Анкета)	тогда
	//	Сообщить("Не указана Анкета!");
	//	Возврат;
	//КонецЕсли;
	ЗапросПоДублямВопросов = Новый Запрос("ВЫБРАТЬ
	                                      |	КОЛИЧЕСТВО(*),
	                                      |	ТиповыеАнкетыВопросыАнкеты.Вопрос
	                                      |ИЗ
	                                      |	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	                                      |
	                                      |ГДЕ
	                                      |	ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета
	                                      |
	                                      |СГРУППИРОВАТЬ ПО
	                                      |	ТиповыеАнкетыВопросыАнкеты.Вопрос
	                                      |
	                                      |ИМЕЮЩИЕ
	                                      |	(КОЛИЧЕСТВО(*) > 1)");
										  
	ЗапросПоДублямВопросов.УстановитьПараметр("ТиповаяАнкета", Ссылка);
	РезультатЗапроса = ЗапросПоДублямВопросов.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Сообщить("Вопрос """+ВыборкаЗапроса.Вопрос + """ встречается в анкете более одного раза!");
	КонецЦикла;
	Если НЕ РезультатЗапроса.Пустой() тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ИмяФайла) тогда
		ИмяФайла             	= ПолучитьИмяФайлаАнкеты();
	КонецеСли;
	
	Если РаботаСФайлами.ЕстьЗапрещенныеСимволыИмени(Код) Тогда 
		Предупреждение("Код может содержать только буквы, цифры или символ ""_""");
		Возврат Ложь;
	КонецЕсли;
		
	ИмяФайлаПреобразования	= "style.xsl";
	
	ФайлАнкеты           = Новый Файл(ИмяФайла);
	СодержаниеАнкеты     = Новый ТекстовыйДокумент();
	ТекстXSL		     = Новый ТекстовыйДокумент();
	Преобразование       = Новый ПреобразованиеXSL;

	Если ФормироватьXSL тогда
		XSLМакет             = ПолучитьМакет("XSLМакет");
		Если КаталогАнкеты <> "" тогда
			ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("КнопкаОтправить2");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
			СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "//comment11;", "LoadPath = '"+СтрЗаменить(КаталогАнкеты+ИмяФайла, "\", "\\")+"';");
			СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "//comment22;", "FName	= '" + СтрЗаменить(КаталогОпроса, "\", "\\")+"opros.xml';");
		ИначеЕсли ЭлектронныйАдресОтветов = "e-mail ответов" И НЕ ЗначениеЗаполнено(ДокОпрос) тогда
		//Если ЭлектронныйАдресОтветов <> "e-mail ответов" тогда
		// когда открываем анкету просто для просмотра то она уже точно не адресная
		// в нее помещаем только кнопку "Сохранить в файл"
			ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("КнопкаСохранить");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ИначеЕсли ЭлектронныйАдресОтветов <> "e-mail ответов" И НЕ ЗначениеЗаполнено(ДокОпрос) тогда
		// когда открываем адресную анкету просто для просмотра 
		// в нее помещаем обе кнопки
			ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("Кнопки");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		ИначеЕсли ЗначениеЗаполнено(ДокОпрос) тогда
			ТекстXSL = XSLМакет.ПолучитьОбласть("ДоКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("КнопкаСохранить");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
			ТекстXSL = XSLМакет.ПолучитьОбласть("ПослеКнопок");
			ТекстXSL.УдалитьСтроку(1);
			ТекстXSL.УдалитьСтроку(ТекстXSL.КоличествоСтрок());
			СтрокаПреобразования = СтрокаПреобразования + ТекстXSL.ПолучитьТекст();
		КонецЕсли;
		СтрокаПреобразования = СтрЗаменить(СтрокаПреобразования, "###@###", ЭлектронныйАдресОтветов);
		ТекстXSL.УстановитьТекст(СтрокаПреобразования);
		ТекстXSL.Записать(КаталогВременныхФайлов()+ИмяФайлаПреобразования);
	КонецЕсли;
	
	СтрокаXML            = ВыгрузитьАнкетуВXML(Ссылка,,ОпрашиваемоеЛицо, ДокРассылки, ДокОпрос);
	ТекстДокумента       = СтрокаXML;

	СодержаниеАнкеты.УстановитьТекст(ТекстДокумента);
	СодержаниеАнкеты.Записать(КаталогВременныхФайлов()+ИмяФайла);
	
	Возврат Истина;
	
КонецФункции

Процедура ОткрытьВложение() Экспорт
	
	Если СформироватьВложение(, "e-mail ответов",,,,Истина) тогда
		ИмяФайла            = ПолучитьИмяФайлаАнкеты();
		ЗапуститьПриложение(КаталогВременныхФайлов() + ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

Функция СформироватьМакет(ДокументМакет) Экспорт
	

	Запрос = Новый Запрос;

	// Установим параметры запроса.
	Запрос.УстановитьПараметр("ТиповаяАнкета" , Ссылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ТиповыеАнкетыВопросыАнкеты.Ссылка,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	|	ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	|	ВариантыОтветовОпросов.Наименование,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ПолнаяФормулировка КАК ПолнаяФормулировка,
	|	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Представление,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.Код КАК КодВопроса,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипЗначения,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипВопроса,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипВидКонтакнойИнформации,
	|	ВариантыОтветовОпросов.Представление КАК ВариантОтветаПредставление,
	|	ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтрокиВАнкете,
	|	ВариантыОтветовОпросов.Код КАК КодВариантаОтвета,
	|	ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки КАК НомерКолонки,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы,
	|	ТиповыеАнкетыВопросыАнкеты.Вопрос.КоличествоСтрокТаблицы,
	|	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Представление
	|ИЗ
	|	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВариантыОтветовОпросов.Владелец
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
	|		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВопросыДляАнкетированияКолонкиТаблицы.Ссылка
	|
	|ГДЕ
	|	ТиповыеАнкетыВопросыАнкеты.Ссылка = &ТиповаяАнкета
	|
	|УПОРЯДОЧИТЬ ПО 
	|	ТиповыеАнкетыВопросыАнкеты.НомерСтроки
	|
	|ИТОГИ МАКСИМУМ(НомерСтрокиВАнкете) ПО
	|	Раздел,
	|	Вопрос";
	
	МакетАнкетыДляПечати 		= ПолучитьМакет("ТиповаяАнкета");
	ДокументМакет.Очистить();
	
	МакетАнкетыДляПечати.Области.ИмяАнкеты.Текст 	= ?(НаименованиеАнкеты = "", Наименование, НаименованиеАнкеты);
	МакетАнкетыДляПечати.Области.Вступление.Текст 	= Вступление;
	
	ДокументМакет.ВставитьОбласть(МакетАнкетыДляПечати.Области.Заголовок, 		ДокументМакет.Область("R1C1"), , Ложь);
	
	НомерСтрокиВМакете 	= 4;
	Результат   		= Запрос.Выполнить();
	//ВыборкаЗапросаПоНомерамСтрок 	= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "НомерСтрокиВАнкете");
	//Пока ВыборкаЗапросаПоНомерамСтрок.Следующий() Цикл
		//ВыборкаЗапросаПоРазделам = ВыборкаЗапросаПоНомерамСтрок.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Раздел");
		ВыборкаЗапросаПоРазделам = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Раздел");
		Пока ВыборкаЗапросаПоРазделам.Следующий() Цикл
			ОбластьРаздел		 	= МакетАнкетыДляПечати.Область("R8");//МакетАнкетыДляПечати.Области.ВариантОтвета;
			ДокументМакет.ВставитьОбласть(ОбластьРаздел, ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1"), , Истина);
			Если ВыборкаЗапросаПоРазделам.Раздел = Справочники.РазделыАнкеты.ПустаяСсылка() тогда
				НаименованиеРаздела = "";
			Иначе
				НаименованиеРаздела = Строка(Число(ВыборкаЗапросаПоРазделам.Раздел.Код)) + ". " + ВыборкаЗапросаПоРазделам.Раздел.Наименование;
			КонецЕсли;
			ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1").Текст 	= НаименованиеРаздела;
			НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
			ВыборкаЗапросаПоВопросам = ВыборкаЗапросаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "Вопрос");
			Пока ВыборкаЗапросаПоВопросам.Следующий() Цикл
				
				ОбластьВопрос 			= МакетАнкетыДляПечати.Область("R5");
				ОбластьТиповойОтвет 	= МакетАнкетыДляПечати.Область("R6");
				ОбластьВариантОтвета 	= МакетАнкетыДляПечати.Область("R7");
				
				ДокументМакет.ВставитьОбласть(ОбластьВопрос, ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1"), , Истина);
				ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1").Текст 	= "№" + ВыборкаЗапросаПоВопросам.НомерСтрокиВАнкете + ". " + ?(ВыборкаЗапросаПоВопросам.ПолнаяФормулировка = "", ВыборкаЗапросаПоВопросам.ВопросПредставление, ВыборкаЗапросаПоВопросам.ПолнаяФормулировка);
				//ДокументМакет.Области.ШаблонВопроса.Имя	= "Вопрос" + ВыборкаЗапросаПоВопросам.КодВопроса;
				
				Если ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.Дата или
					ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.Число или
					ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.Строка или
					ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.Булево тогда
					НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
					ДокументМакет.ВставитьОбласть(ОбластьТиповойОтвет, ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1"), , Ложь);
					ДокументМакет.Область("R"+НомерСтрокиВМакете+"C2").Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
					ДокументМакет.Область("R"+НомерСтрокиВМакете+"C2").Параметр	= "ТиповойОтвет" + ВыборкаЗапросаПоВопросам.КодВопроса;
					//ДокументМакет.Области.ШаблонТиповогоОтвета.Параметр	= "ТиповойОтвет" + ВыборкаЗапросаПоВопросам.КодВопроса;
					//ДокументМакет.Области.ШаблонТиповогоОтвета.Имя	= "ТиповойОтвет" + ВыборкаЗапросаПоВопросам.КодВопроса;
				ИначеЕсли ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов или 
					ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов_Несколько тогда
					ВыборкаЗапросаПоВариантамОтвета = ВыборкаЗапросаПоВопросам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "");
					Пока ВыборкаЗапросаПоВариантамОтвета.Следующий() Цикл
						НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
						ДокументМакет.ВставитьОбласть(ОбластьВариантОтвета, ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1"), , Ложь);
						ДокументМакет.Область("R"+НомерСтрокиВМакете+"C2").Имя = "Вопрос" + ВыборкаЗапросаПоВариантамОтвета.КодВопроса + "ВариантОтвета" + ВыборкаЗапросаПоВариантамОтвета.КодВариантаОтвета;
						ДокументМакет.Область("R"+НомерСтрокиВМакете+"C3").Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Текст;
						ДокументМакет.Область("R"+НомерСтрокиВМакете+"C3").Параметр	= ВыборкаЗапросаПоВариантамОтвета.ВариантОтветаПредставление;
						//ДокументМакет.Области.ШаблонВариантаОтвета.Текст 	= ВыборкаЗапросаПоВариантамОтвета.ВариантОтветаПредставление;
						//ДокументМакет.Области.ШаблонВариантаОтвета.Имя		= "Вопрос" + ВыборкаЗапросаПоВариантамОтвета.КодВопроса + "ВариантОтвета" + ВыборкаЗапросаПоВариантамОтвета.КодВариантаОтвета;
					КонецЦикла;
				ИначеЕсли ВыборкаЗапросаПоВопросам.ВопросТипВопроса = Перечисления.ТипВопросаАнкеты.Табличный тогда
					ВыборкаЗапросаПоКолонкамТаблицы = ВыборкаЗапросаПоВопросам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией, "");
					// формируем шапку таблицы
					НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
					НомерКолонки = 0;
					НомерКолонкиМакетаЛев = 0;
					НомерКолонкиМакетаПрав = 1;
					Пока ВыборкаЗапросаПоКолонкамТаблицы.Следующий() Цикл
						ОбластьШаблонКолонки = МакетАнкетыДляПечати.Область("R8C3");//МакетАнкетыДляПечати.Области.ШаблонКолонки;
						НомерКолонки = НомерКолонки + 1;
						НомерКолонкиМакетаЛев = НомерКолонкиМакетаЛев + 1;
						НомерКолонкиМакетаПрав = НомерКолонкиМакетаПрав + 1;
						Если НомерКолонкиМакетаЛев = 2 тогда
							НомерКолонкиМакетаЛев = НомерКолонкиМакетаЛев + 1;
						КонецЕсли;
						Если НомерКолонкиМакетаПрав = 1 тогда
							НомерКолонкиМакетаПрав = НомерКолонкиМакетаПрав + 1;
						КонецЕсли;
						ОбластьШаблонКолонкиДокумент 					= ДокументМакет.Область("R"+НомерСтрокиВМакете+"C"+НомерКолонкиМакетаЛев+":R"+НомерСтрокиВМакете+"C"+НомерКолонкиМакетаПрав);
						ОбластьШаблонКолонкиДокумент.Объединить();
						ОбластьШаблонКолонкиДокумент.Текст 				= ВыборкаЗапросаПоКолонкамТаблицы.КолонкаТаблицыПредставление;
						ОбластьШаблонКолонкиДокумент.Имя				= "Вопрос" + ВыборкаЗапросаПоКолонкамТаблицы.КодВопроса + "КолонкаТаблицы" + НомерКолонки;
						ОбластьШаблонКолонкиДокумент.Шрифт				= ОбластьШаблонКолонки.Шрифт;
						ОбластьШаблонКолонкиДокумент.РазмещениеТекста 	= ТипРазмещенияТекстаТабличногоДокумента.Переносить;
						ЛинияРамки = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
						ОбластьШаблонКолонкиДокумент.ГраницаСлева	= ЛинияРамки;
						ОбластьШаблонКолонкиДокумент.ГраницаСправа	= ЛинияРамки;
						ОбластьШаблонКолонкиДокумент.ГраницаСверху 	= ЛинияРамки;
						ОбластьШаблонКолонкиДокумент.ГраницаСнизу 	= ЛинияРамки;
					КонецЦикла;
					// формируем строки таблицы
					КоличествоСтрокТаблицы = ВыборкаЗапросаПоВопросам.ВопросКоличествоСтрокТаблицы;
					НомерШапкиВМакете = НомерСтрокиВМакете;
					Для индСтрокиТаблицы = 1 по КоличествоСтрокТаблицы Цикл
						ОбластьШаблонСтрокиТаблицыДокумент 	= ДокументМакет.ПолучитьОбласть("R"+НомерШапкиВМакете);
						ОбластиСтрокиТаблицы = ОбластьШаблонСтрокиТаблицыДокумент.Области;
						индОбласти = 0;
						МассивОбластей = Новый Массив();
						Для каждого ОбластьСтрокиТаблицы из ОбластиСтрокиТаблицы Цикл
							МассивОбластей.Добавить(ОбластьСтрокиТаблицы);
						КонецЦикла;
						Для каждого ОбластьСтрокиТаблицы из МассивОбластей Цикл
							ИмяОбласти = ОбластьСтрокиТаблицы.Имя;
							Если Найти(ИмяОбласти, "Строка") > 0 тогда
								Продолжить;
							КонецЕсли;
							ИмяОбласти = СтрЗаменить(ИмяОбласти, "КолонкаТаблицы", "ОтветТаблицы");
							ИмяОбласти = ИмяОбласти+"Строка"+индСтрокиТаблицы;
							ОбластьСтрокиТаблицы.Текст 		= "";
							ОбластьСтрокиТаблицы.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Параметр;
							ОбластьСтрокиТаблицы.Параметр	= ИмяОбласти;
							//ОбластьСтрокиТаблицы.Имя 		= ИмяОбласти;
						КонецЦикла;
						НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
						ОбластьСтрокаТаблицы = ОбластьШаблонСтрокиТаблицыДокумент.Область("R1");
						//ОбластьСтрокаТаблицы.Очистить(Истина, Ложь, Ложь);
						ДокументМакет.ВставитьОбласть(ОбластьСтрокаТаблицы, ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1"), , Ложь);
					КонецЦикла;
					НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
				Иначе
					НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
					ДокументМакет.ВставитьОбласть(ОбластьТиповойОтвет, ДокументМакет.Область("R"+НомерСтрокиВМакете+"C1"), , Ложь);
					ДокументМакет.Область("R"+НомерСтрокиВМакете+"C2").Параметр	= "ТиповойОтвет" + ВыборкаЗапросаПоВопросам.КодВопроса;
					//ДокументМакет.Области.ШаблонТиповогоОтвета.Имя	= "ТиповойОтвет" + ВыборкаЗапросаПоВопросам.КодВопроса;
				КонецЕсли;
				
				НомерСтрокиВМакете = НомерСтрокиВМакете + 1;
			КонецЦикла;
		КонецЦикла; // по разделам
	//КонецЦикла;  // по номерам строк
	ДокументМакет.Область("C2").ШиринаКолонки = 3;

	ПараметрыМакета = ДокументМакет.Параметры;
	
	Возврат ДокументМакет;
	
КонецФункции

// Восстанавливает сохраненный ранее макет анкеты
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ, содержащий последний сохраненный вариант анкеты .
//
Функция ВосстановитьМакет() Экспорт
	
	ТабличныйДокумент = МакетАнкеты.Получить();
	
	Если ТипЗнч(ТабличныйДокумент) = Тип("ТабличныйДокумент") Тогда
		Возврат ТабличныйДокумент;
	Иначе
		Возврат Новый ТабличныйДокумент;
	КонецЕсли; 
	
КонецФункции 

// Сохраняет макет анкеты
Процедура СохранитьМакет(ТабличныйДокумент) Экспорт
	
	НовыйТабДок = Новый ТабличныйДокумент();
	НовыйТабДок.ВставитьОбласть(ТабличныйДокумент.Область(), НовыйТабДок.Область(), , Ложь);
	
	МакетАнкеты = Новый ХранилищеЗначения(НовыйТабДок, Новый СжатиеДанных());
	
КонецПроцедуры

// Процедура выводит на экран печатную форму анкеты
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Нет.
//
Процедура Печать() Экспорт
	
	ПечатныйДокумент = Новый ТабличныйДокумент;
	ПечатныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТиповыеАнкеты";
	ПечатныйДокумент.Вывести(ВосстановитьМакет());
	// если макет еще был заполнен - сформируем его по умолчанию
	Если ПечатныйДокумент.ВысотаТаблицы = 0 Тогда
		ПечДок = Новый ТабличныйДокумент;
		СформироватьМакет(ПечДок);
		ПечатныйДокумент.Вывести(ПечДок);
	КонецЕсли;
	ПечатныйДокумент.Автомасштаб = Истина;
	УниверсальныеМеханизмы.НапечататьДокумент(ПечатныйДокумент,,,, Ссылка);
	
КонецПроцедуры // 

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Функция ВыполнитьЗапросПоАнкете(Анкета)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", 		Анкета);
	Запрос.УстановитьПараметр("ПустойВопрос", 	ПланыВидовХарактеристик.ВопросыДляАнкетирования.ПустаяСсылка());
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТиповыеАнкетыВопросыАнкеты.НомерСтроки КАК НомерСтроки,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос КАК Вопрос,
	               |	ТиповыеАнкетыВопросыАнкеты.Раздел КАК Раздел,
	               |	ТиповыеАнкетыВопросыАнкеты.Раздел.Код КАК КодРаздела,
	               |	"". "" + ТиповыеАнкетыВопросыАнкеты.Раздел.Наименование КАК РазделНаименование,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы КАК КолонкаТаблицы,
	               |	ВариантыОтветовОпросов.Наименование КАК ВариантыОтветовНаименование,
	               |	ВариантыОтветовОпросовТабличные.Наименование КАК КолонкаТаблицыВариантыОтветовНаименование,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.Наименование КАК Наименование,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипВопроса КАК ТипВопроса,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.Длина КАК Длина,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.Код КАК Код,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.Родитель КАК Родитель,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.ПолнаяФормулировка КАК ПолнаяФормулировка,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипЗначения КАК ТипЗначения,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.ОбязателенДляЗаполнения КАК ОбязателенДляЗаполнения,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.КоличествоСтрокТаблицы КАК СтрокВТаблице,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.Предопределенный КАК Предопределенный,
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос.ТипВидКонтакнойИнформации КАК ТипВидКонтакнойИнформации,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ТипЗначения,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ТипВопроса,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Длина,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ПолнаяФормулировка,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Код КАК КолонкаТаблицыКод,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Родитель,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Наименование,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ОбязателенДляЗаполнения,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.КоличествоСтрокТаблицы,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.Предопределенный,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы.ТипВидКонтакнойИнформации,
	               |	ВопросыДляАнкетированияКолонкиТаблицы.НомерСтроки КАК КолонкаТаблицыНомерСтроки,
	               |	ВариантыОтветовОпросовТабличные.Код КАК КолонкаТаблицыВариантыОтветовКод,
	               |	ВариантыОтветовОпросовТабличные.Ссылка КАК КолонкаТаблицыВариантыОтветовСсылка,
	               |	ВариантыОтветовОпросовТабличные.ТребуетРазвернутыйОтвет КАК КолонкаТаблицыВариантыОтветовТребуетРазвернутыйОтвет,
	               |	ВариантыОтветовОпросов.Код КАК ВариантыОтветовКод,
	               |	ВариантыОтветовОпросов.Ссылка КАК ВариантыОтветовСсылка,
	               |	ВариантыОтветовОпросов.ТребуетРазвернутыйОтвет КАК ВариантыОтветовТребуетРазвернутыйОтвет
	               |ИЗ
	               |	Справочник.ТиповыеАнкеты.ВопросыАнкеты КАК ТиповыеАнкетыВопросыАнкеты
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования.КолонкиТаблицы КАК ВопросыДляАнкетированияКолонкиТаблицы
	               |			ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросовТабличные
	               |			ПО ВопросыДляАнкетированияКолонкиТаблицы.КолонкаТаблицы = ВариантыОтветовОпросовТабличные.Владелец
	               |		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВопросыДляАнкетированияКолонкиТаблицы.Ссылка
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВариантыОтветовОпросов КАК ВариантыОтветовОпросов
	               |		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВариантыОтветовОпросов.Владелец
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.ВопросыДляАнкетирования КАК ВопросыДляАнкетирования
	               |		ПО ТиповыеАнкетыВопросыАнкеты.Вопрос = ВопросыДляАнкетирования.Ссылка
	               |
	               |ГДЕ
	               |	ТиповыеАнкетыВопросыАнкеты.Ссылка = &Ссылка И
	               |	ТиповыеАнкетыВопросыАнкеты.Вопрос <> &ПустойВопрос
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	КодРаздела,
	               |	НомерСтроки,
	               |	ВариантыОтветовКод,
	               |	КолонкаТаблицыНомерСтроки,
	               |	КолонкаТаблицыВариантыОтветовКод
	               |
	               |ИТОГИ МАКСИМУМ(НомерСтроки), МАКСИМУМ(КодРаздела), МАКСИМУМ(КолонкаТаблицыНомерСтроки), МАКСИМУМ(КолонкаТаблицыВариантыОтветовКод), МАКСИМУМ(ВариантыОтветовКод) ПО
	               |	Раздел,
	               |	Вопрос,
	               |	КолонкаТаблицы";

	Возврат Запрос.Выполнить();

КонецФункции // ВыполнитьЗапросПоАнкете()

Процедура ДобавитьПоле(ОбъектXML, Имя, Значение)

	ОбъектXML.ЗаписатьАтрибут(Имя, XMLСтрока(Значение));

КонецПроцедуры // ДобавитьПоле()

Функция ПолучитьОтветы(Выборка, Тип, ФлагКолонки = Ложь)

	Если НЕ ФлагКолонки тогда
		Вопрос 		= Выборка.Вопрос;
		Префикс		= "";
	Иначе
		Вопрос = Выборка.КолонкаТаблицы;
		Префикс		= "КолонкаТаблицы";
	КонецЕсли;
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Вопрос", Вопрос);

	ТипЗначения = Выборка[Префикс + "ТипЗначения"].Типы().Получить(0);

	Если (ТипЗначения = Тип("Булево")) Тогда

		ВыборкаЭлементов = Новый ТаблицаЗначений();
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка");
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("Комментарий");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");

		СтрокаТаблицы = ВыборкаЭлементов.Добавить();
		СтрокаТаблицы.Код                     = ЗначениеВСтрокуВнутр(Ложь);
		СтрокаТаблицы.Ссылка                  = Ложь;
		СтрокаТаблицы.Наименование            = Строка("Нет");
		СтрокаТаблицы.Комментарий             = "";
		СтрокаТаблицы.ТребуетРазвернутыйОтвет = Ложь;
		СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;

		СтрокаТаблицы = ВыборкаЭлементов.Добавить();
		СтрокаТаблицы.Код                     = ЗначениеВСтрокуВнутр(Истина);
		СтрокаТаблицы.Ссылка                  = Истина;
		СтрокаТаблицы.Наименование            = Строка("Да");
		СтрокаТаблицы.Комментарий             = "";
		СтрокаТаблицы.ТребуетРазвернутыйОтвет = Ложь;
		СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;

	ИначеЕсли (ТипЗначения = Тип("Строка")) ИЛИ
		 (ТипЗначения = Тип("Число")) ИЛИ
		 (ТипЗначения = Тип("Дата")) тогда
		 //(НЕ Вопрос.Предопределенный) Тогда

		ВыборкаЭлементов = Новый ТаблицаЗначений();
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка");
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("Комментарий");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");

	ИначеЕсли (ТипЗначения = Тип("СправочникСсылка.ВариантыОтветовОпросов")) Тогда

		ВыборкаЭлементов = Новый ТаблицаЗначений;
		ВыборкаЭлементов.Колонки.Добавить("Код");
		ВыборкаЭлементов.Колонки.Добавить("Ссылка", Новый ОписаниеТипов("СправочникСсылка.ВариантыОтветовОпросов"));
		ВыборкаЭлементов.Колонки.Добавить("Наименование");
		ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");
		
		ВариантыОтветов = Выборка.Выбрать(ОбходРезультатаЗапроса.Прямой);
		Пока ВариантыОтветов.Следующий() Цикл
			НоваяСтрока = ВыборкаЭлементов.Добавить();
			НоваяСтрока.Код = ВариантыОтветов[Префикс + "ВариантыОтветовКод"];
			НоваяСтрока.Ссылка = ВариантыОтветов[Префикс + "ВариантыОтветовСсылка"];
			НоваяСтрока.Наименование = ВариантыОтветов[Префикс + "ВариантыОтветовНаименование"];
			НоваяСтрока.ТребуетРазвернутыйОтвет = ВариантыОтветов[Префикс + "ВариантыОтветовТребуетРазвернутыйОтвет"];
		КонецЦикла;
		
		Если ВыборкаЭлементов.Количество() > 0 И НЕ ВыборкаЭлементов[0].Ссылка.Пустая() тогда
			ПустаяСтрокаТаблицы 		= ВыборкаЭлементов.Вставить(0);
			ПустаяСтрокаТаблицы.Ссылка 	= Справочники.ВариантыОтветовОпросов.ПустаяСсылка();
		КонецЕсли;
		
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		Для Каждого СтрокаТаблицы Из ВыборкаЭлементов Цикл
			СтрокаТаблицы.ГУИД = СтрокаТаблицы.Ссылка.УникальныйИдентификатор();
		КонецЦикла;

	Иначе

		Объект = Метаданные.НайтиПоТипу(ТипЗначения);

		Попытка  // Объект - перечисление
			Перечисление = Истина;
			Значения = Объект.ЗначенияПеречисления;
		Исключение // объект - справочник
			Перечисление = Ложь;
		КонецПопытки;

		Если Перечисление Тогда

			ВыборкаЭлементов = Новый ТаблицаЗначений();
			ВыборкаЭлементов.Колонки.Добавить("Код");
			ВыборкаЭлементов.Колонки.Добавить("Ссылка");
			ВыборкаЭлементов.Колонки.Добавить("Наименование");
			ВыборкаЭлементов.Колонки.Добавить("Комментарий");
			ВыборкаЭлементов.Колонки.Добавить("ТребуетРазвернутыйОтвет");

			Менеджер = Перечисления[Объект.Имя];
			Для Индекс = 0 По Менеджер.Количество() - 1 Цикл
				СтрокаТаблицы = ВыборкаЭлементов.Добавить();
				Значение = Менеджер.Получить(Индекс);
				СтрокаТаблицы.Код                     = ЗначениеВСтрокуВнутр(Значение);
				СтрокаТаблицы.Ссылка                  = Значение;
				СтрокаТаблицы.Наименование            = Строка(Значение);
				СтрокаТаблицы.Комментарий             = Значение.Метаданные().Комментарий;
				СтрокаТаблицы.ТребуетРазвернутыйОтвет = Ложь;
			КонецЦикла;
			ПустаяСтрокаТаблицы = ВыборкаЭлементов.Вставить(0);
			ПустаяСтрокаТаблицы.Ссылка = Менеджер.ПустаяСсылка();

		Иначе
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	"+Объект.Имя+".Ссылка       КАК Ссылка,
			|	"+Объект.Имя+".Наименование КАК Наименование,
			|	Ложь КАК ТребуетРазвернутыйОтвет
			|ИЗ
			|	Справочник."+Объект.Имя+" КАК "+Объект.Имя+"
			|";
			ВыборкаЭлементов =  Запрос.Выполнить().Выгрузить();
			ВыборкаЭлементов.Колонки.Добавить("Код");
			ВыборкаЭлементов.ЗаполнитьЗначения(NULL, "Код");
			Если ВыборкаЭлементов.Количество() > 0 тогда
				ПустойЭлемент = ВыборкаЭлементов.Вставить(0);
				ПустойЭлемент.Ссылка = Справочники[Объект.Имя].ПустаяСсылка();
			Иначе
				Сообщить("Справочник """+Объект.Синоним+""" не имеет ни одного элемента. Рекомендуется заполнить его и сформировать анкету еще раз.");
			КонецЕсли;

		КонецЕсли;
		
		ВыборкаЭлементов.Колонки.Добавить("ГУИД");
		Для Каждого СтрокаТаблицы Из ВыборкаЭлементов Цикл
			Если СтрокаТаблицы.Код = NULL Тогда
				СтрокаТаблицы.ГУИД = СтрокаТаблицы.Ссылка.УникальныйИдентификатор();
			Иначе
				СтрокаТаблицы.ГУИД = СтрокаТаблицы.Код;
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

	Возврат ВыборкаЭлементов;

КонецФункции // ПолучитьОтветы()

Функция ПолучитьТипЗначенияОтвета(Выборка, ФлагКолонки)
	
	Если НЕ ФлагКолонки тогда
		Вопрос = Выборка.Вопрос;
		Префикс		= "";
	Иначе
		Вопрос = Выборка.КолонкаТаблицы;
		Префикс		= "КолонкаТаблицы";
	КонецЕсли;
	
	Параметры = Новый Структура("Представление, Тип, Длина, СпособОтвета, СтрокВТаблице, Ответы");

	ТипЗначения = Выборка[Префикс + "ТипЗначения"];
	ДлинаТипа   = Выборка[Префикс + "Длина"];

	Если (ТипЗначения.СодержитТип(Тип("Булево"))) Тогда
		Параметры.Тип = Строка(ТипЗначения);
	ИначеЕсли Выборка[Префикс + "ТипВопроса"] = Перечисления.ТипВопросаАнкеты.Текст тогда
		Параметры.Тип 			= "Строка";
		Параметры.Длина = Строка(ДлинаТипа);
	ИначеЕсли (ТипЗначения.СодержитТип(Тип("Строка"))) ИЛИ
			  (ТипЗначения.СодержитТип(Тип("Число"))) ИЛИ
			  (ТипЗначения.СодержитТип(Тип("Дата"))) Тогда
		Параметры.Тип = Строка(ТипЗначения);
		Параметры.Длина = Строка(ДлинаТипа);
	Иначе
		Тип = "Строка";
	КонецЕсли;

	Ответы = ПолучитьОтветы(Выборка, Тип, ФлагКолонки);
		
	Если Ответы.Количество() > 0 Тогда
		ЕстьОтветы = Истина;
	Иначе
		ЕстьОтветы = Ложь;
	КонецЕсли;
	ВопросыКонтактнаяИнформация = Новый СписокЗначений();
	ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.Адрес);
	ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.АдресЭлектроннойПочты);
	ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.ВебСтраница);
	ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.Другое);
	//ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.МестныйТелефон);
	//ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.ПроизвольныйАдрес);
	ВопросыКонтактнаяИнформация.Добавить(Перечисления.ТипВопросаАнкеты.Телефон);

	Если ВопросыКонтактнаяИнформация.НайтиПоЗначению(Выборка[Префикс + "ТипВопроса"]) <> Неопределено Тогда
		Если Выборка[Префикс + "ТипВидКонтакнойИнформации"].Тип = Перечисления.ТипыКонтактнойИнформации.Адрес тогда
			СтрокаТипКИ = "Адрес";
		ИначеЕсли Выборка[Префикс + "ТипВидКонтакнойИнформации"].Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты тогда
			СтрокаТипКИ = "АдресЭлектроннойПочты";
		ИначеЕсли Выборка[Префикс + "ТипВидКонтакнойИнформации"].Тип = Перечисления.ТипыКонтактнойИнформации.ВебСтраница тогда
			СтрокаТипКИ = "ВебСтраница";
		ИначеЕсли Выборка[Префикс + "ТипВидКонтакнойИнформации"].Тип = Перечисления.ТипыКонтактнойИнформации.Другое тогда
			СтрокаТипКИ = "Другое";
		//ИначеЕсли Вопрос.ТипВидКонтакнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.МестныйТелефон тогда
		//	СтрокаТипКИ = "МестныйТелефон";
		//ИначеЕсли Вопрос.ТипВидКонтакнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.ПроизвольныйАдрес тогда
		//	СтрокаТипКИ = "ПроизвольныйАдрес";
		ИначеЕсли Выборка[Префикс + "ТипВидКонтакнойИнформации"].Тип = Перечисления.ТипыКонтактнойИнформации.Телефон тогда
			СтрокаТипКИ = "Телефон";
		КонецЕсли;

		Если ЕстьФизическиеЛица И Выборка[Префикс + "ТипВидКонтакнойИнформации"].ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.ФизическиеЛица тогда
			СтрокаВидКИ = "ФизическиеЛица";
		ИначеЕсли ЕстьКонтрагенты И Выборка[Префикс + "ТипВидКонтакнойИнформации"].ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.Контрагенты тогда
			СтрокаВидКИ = "Контрагенты";
		ИначеЕсли ЕстьКонтактныеЛица И Выборка[Префикс + "ТипВидКонтакнойИнформации"].ВидОбъектаКонтактнойИнформации = Перечисления.ВидыОбъектовКонтактнойИнформации.КонтактныеЛица тогда
			СтрокаВидКИ = "КонтактныеЛица";
		КонецЕсли;

		Параметры.Тип           = ""+СтрокаТипКИ+"¤"+СтрокаВидКИ;
		Параметры.СтрокВТаблице = 0; // вопрос не табличный, значит строк - 0!
		Параметры.Представление = "ПолеВвода";
		Параметры.СпособОтвета  = "ВСвободнойФорме";

	ИначеЕсли Выборка[Префикс + "ТипВопроса"] = Перечисления.ТипВопросаАнкеты.Табличный Тогда
		
		Параметры.Тип           = "Таблица";
		Параметры.СтрокВТаблице = Выборка.СтрокВТаблице; // вложенные табличные вопросы быть не могут, поэтому можно обойтись без префикса
		Параметры.Представление = "Таблица";
		Параметры.СпособОтвета  = "";
		
	Иначе

		Параметры.СтрокВТаблице = 0;

		Если ЕстьОтветы Тогда

			Если Выборка[Префикс + "ТипВопроса"] <> Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов_Несколько Тогда
				Если Ответы.Количество() > 5 Тогда
					Параметры.Тип           = Тип;
					Если Ответы.Найти(Истина, "ТребуетРазвернутыйОтвет") = Неопределено тогда
						Параметры.Представление = "СписокВыбора";
					Иначе
						// если есть хоть один предопределенный	ответ
						Параметры.Представление = "Переключатель";
					КонецЕсли;
					Параметры.СпособОтвета  = "ВыборОдногоВарианта";
				Иначе
					Параметры.Тип           = Тип;
					Если ФлагКолонки Тогда
						Параметры.Представление = "СписокВыбора";
					Иначе
						Параметры.Представление = "Переключатель";
					КонецЕсли;
					Параметры.СпособОтвета  = "ВыборОдногоВарианта";
				КонецЕсли;
			Иначе
				Параметры.Тип           = Тип;
				Параметры.Представление = "Флажок";
				Параметры.СпособОтвета  = "ВыборНесколькихВариантов";
			КонецЕсли;

		Иначе

			Если  (ТипЗначения.СодержитТип(Тип("Булево"))) Тогда
				Параметры.Тип           = Строка(Выборка[Префикс + "ТипЗначения"]);
				Параметры.Представление = "СписокВыбора";
				Параметры.СпособОтвета  = "ВыборОдногоВарианта";
			ИначеЕсли (ТипЗначения.СодержитТип(Тип("Строка"))) ИЛИ
					  (ТипЗначения.СодержитТип(Тип("Число"))) ИЛИ
					  (ТипЗначения.СодержитТип(Тип("Дата"))) Тогда
				Параметры.Тип           = Строка(Выборка[Префикс + "ТипЗначения"]);
				Если Выборка[Префикс + "ТипВопроса"] = Перечисления.ТипВопросаАнкеты.Текст тогда
					// не все строковые поля одинаковые. Бывает еще и текст
					Параметры.Представление = "Текст";
				Иначе
					Параметры.Представление = "ПолеВвода";
				КонецЕсли;
				Параметры.СпособОтвета  = "ВСвободнойФорме";
			Иначе
				Параметры.Тип           = "Строка";
				Параметры.Представление = "ПолеВвода";
				Параметры.СпособОтвета  = "ВСвободнойФорме";
			КонецЕсли;

		КонецЕсли;

	КонецЕсли;

	Параметры.Ответы = Ответы;

	Возврат Параметры;

КонецФункции // ПолучитьТипЗначенияОтвета()

Процедура ЗаписатьВопрос(ОбъектXML, Выборка, ФлагКолонки)

	Если НЕ ФлагКолонки тогда
		Вопрос 		= Выборка.Вопрос;
		Префикс		= "";
	Иначе
		Вопрос 		= Выборка.КолонкаТаблицы;
		Префикс		= "КолонкаТаблицы";
	КонецЕсли;
	Параметры 	= ПолучитьТипЗначенияОтвета(Выборка, ФлагКолонки);
		
	Если Выборка.ТипВопроса = Перечисления.ТипВопросаАнкеты.Табличный и НЕ ФлагКолонки тогда
			ТабличныйВопрос = Выборка.Вопрос;
			// значит имеем дело с табличным вопросом
			Параметры = ПолучитьТипЗначенияОтвета(Выборка, Ложь);
			ОбъектXML.ЗаписатьНачалоЭлемента("Вопрос");
			ДобавитьПоле(ОбъектXML,"Ид",                 	 ТабличныйВопрос.Ссылка.УникальныйИдентификатор());
			ДобавитьПоле(ОбъектXML,"Наименование",           ?(Выборка.ПолнаяФормулировка = "", Выборка.Наименование, Выборка.ПолнаяФормулировка));
			ДобавитьПоле(ОбъектXML,"Комментарий",            Выборка.Наименование);
			ДобавитьПоле(ОбъектXML,"Обязательный",           Выборка.ОбязателенДляЗаполнения);
			ДобавитьПоле(ОбъектXML,"СпособОтвета",           Параметры.СпособОтвета);
			ДобавитьПоле(ОбъектXML,"ТипЗначенийОтвета",      Параметры.Тип);
			ДобавитьПоле(ОбъектXML,"Представление",          Параметры.Представление);
			ДобавитьПоле(ОбъектXML,"КоличествоСтрокТаблицы", Параметры.СтрокВТаблице);
			КолонкиТаблицы = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока КолонкиТаблицы.Следующий() Цикл
				ЗаписатьВопрос(ОбъектXML, КолонкиТаблицы, Истина);
			КонецЦикла;
		ОбъектXML.ЗаписатьКонецЭлемента();
	Иначе
		Если НЕ ФлагКолонки тогда
			ОбъектXML.ЗаписатьНачалоЭлемента("Вопрос");
		Иначе
			ОбъектXML.ЗаписатьНачалоЭлемента("КолонкаТаблицы");
		КонецЕсли;
		ДобавитьПоле(ОбъектXML,"Ид",                 	 Вопрос.Ссылка.УникальныйИдентификатор());
		ДобавитьПоле(ОбъектXML,"Наименование",           ?(Выборка[Префикс + "ПолнаяФормулировка"] = "", Выборка[Префикс + "Наименование"], Выборка[Префикс + "ПолнаяФормулировка"]));
		ДобавитьПоле(ОбъектXML,"Комментарий",            Выборка[Префикс + "Наименование"]);
		ДобавитьПоле(ОбъектXML,"Обязательный",           Выборка[Префикс + "ОбязателенДляЗаполнения"]);
		ДобавитьПоле(ОбъектXML,"СпособОтвета",           Параметры.СпособОтвета);
		ДобавитьПоле(ОбъектXML,"ТипЗначенийОтвета",      Параметры.Тип);
		ДобавитьПоле(ОбъектXML,"Длина",      			 ?(Параметры.Длина = "0", "60", Параметры.Длина));
		ДобавитьПоле(ОбъектXML,"Представление",          Параметры.Представление);
		ДобавитьПоле(ОбъектXML,"КоличествоСтрокТаблицы", Параметры.СтрокВТаблице);
		Ответы = Параметры.Ответы;
		Для каждого СтрокаТаблицы Из Ответы Цикл
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Ссылка) и Параметры.Представление <> "СписокВыбора" тогда
				// пустые ссылки будем записывать только выпадающие списки
				Продолжить;
			КонецЕсли;
			ОбъектXML.ЗаписатьНачалоЭлемента("ВариантОтвета");
			ДобавитьПоле(ОбъектXML,"Ид",                      СтрокаТаблицы.ГУИД);
			ДобавитьПоле(ОбъектXML,"Наименование",            СтрокаТаблицы.Наименование);
			ДобавитьПоле(ОбъектXML,"Комментарий",             "");
			ДобавитьПоле(ОбъектXML,"ТребуетРазвернутыйОтвет", СтрокаТаблицы.ТребуетРазвернутыйОтвет);
			ОбъектXML.ЗаписатьКонецЭлемента();
		КонецЦикла;
		ОбъектXML.ЗаписатьКонецЭлемента();
	КонецЕсли;
	

	
КонецПроцедуры // ЗаписатьВопрос()

Процедура ЗаписатьРаздел(ОбъектXML, РазделДляЗаписи, РазделНаименование)

		ОбъектXML.ЗаписатьНачалоЭлемента("Группа");
		Если РазделДляЗаписи = NULL тогда
			ДобавитьПоле(ОбъектXML,"Ид", "");
		Иначе
			ДобавитьПоле(ОбъектXML,"Ид", РазделДляЗаписи.Ссылка.УникальныйИдентификатор());
		КонецЕсли;
		ДобавитьПоле(ОбъектXML,"Наименование", РазделНаименование);
		
КонецПроцедуры // ЗаписатьВопрос()

Процедура ДобавитьОтвет(ОбъектXML, Вопрос, ТипВопроса, ВыборкаОтветовИзОпроса, ТабличныйВопрос = Неопределено, НомерСтрокиВТаблице = Неопределено)
		Если ТабличныйВопрос = Неопределено тогда
			ВопросПоиска			= Новый Структура("Вопрос");
			ВопросПоиска.Вопрос 	= Вопрос;	// выберем ответы по указанному вопросу
		Иначе
			ВопросПоиска			= Новый Структура("Вопрос, КолонкаТаблицы, НомерСтрокиВТаблице");
			ВопросПоиска.Вопрос 			= ТабличныйВопрос;		// выберем ответы по указанному табличному вопросу
			ВопросПоиска.КолонкаТаблицы 	= Вопрос;				// выберем ответы по указанной колонке
			ВопросПоиска.НомерСтрокиВТаблице= НомерСтрокиВТаблице;	// НомерСтрокиВТаблице
		КонецЕсли;
		Если ВыборкаОтветовИзОпроса <> Неопределено тогда
			ВыборкаОтветовИзОпроса.Сбросить();
		КонецЕсли;
		
		ОбъектXML.ЗаписатьНачалоЭлемента("Вопрос");
		ДобавитьПоле(ОбъектXML,"Ид", Вопрос.Ссылка.УникальныйИдентификатор());
		Если (Вопрос.Предопределенный И 
			 (Вопрос.ТипЗначения.СодержитТип(Тип("Строка")) или
			  Вопрос.ТипЗначения.СодержитТип(Тип("Дата")) или 
			  Вопрос.ТипЗначения.СодержитТип(Тип("Число")) ) ) ИЛИ
			 (НЕ Вопрос.Предопределенный И
			 (ТипВопроса = Перечисления.ТипВопросаАнкеты.Строка ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.Число ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.Дата ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.Адрес ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.АдресЭлектроннойПочты ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.ВебСтраница ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.Телефон ИЛИ
			 ТипВопроса = Перечисления.ТипВопросаАнкеты.Текст)) тогда
			ОбъектXML.ЗаписатьНачалоЭлемента("Значение");
			
			Если ВыборкаОтветовИзОпроса <> Неопределено тогда
				Пока ВыборкаОтветовИзОпроса.НайтиСледующий(ВопросПоиска) Цикл
					Если ВыборкаОтветовИзОпроса.Уровень() = 0 тогда
						Продолжить;
					КонецЕсли;
					Если Вопрос.ТипЗначения.СодержитТип(Тип("Дата")) ИЛИ 
						Вопрос.ТипЗначения.СодержитТип(Тип("Число")) тогда	
						Если НЕ ЗначениеЗаполнено(ВыборкаОтветовИзОпроса.ТиповойОтвет) тогда
							ОбъектXML.ЗаписатьТекст(" ");
						Иначе
							ОбъектXML.ЗаписатьТекст(XMLСтрока(ВыборкаОтветовИзОпроса.ТиповойОтвет));
						КонецЕСли;
					Иначе
						ОбъектXML.ЗаписатьТекст(Строка(ВыборкаОтветовИзОпроса.ТиповойОтвет));
					КонецЕсли;
				КонецЦикла;
			Иначе
				ОбъектXML.ЗаписатьТекст(" ");
			КонецЕсли;
			
			ОбъектXML.ЗаписатьКонецЭлемента();
		ИначеЕсли ТипВопроса = Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов ИЛИ
				  ТипВопроса = Перечисления.ТипВопросаАнкеты.Булево ИЛИ
				  ТипВопроса = Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов_Несколько ИЛИ
				  Вопрос.Предопределенный тогда
			Если ВыборкаОтветовИзОпроса <> Неопределено тогда
				Пока ВыборкаОтветовИзОпроса.НайтиСледующий(ВопросПоиска) Цикл
					Если ВыборкаОтветовИзОпроса.Уровень() = 0 тогда
						Продолжить;
					КонецЕСли;
					ОбъектXML.ЗаписатьНачалоЭлемента("ВариантОтвета");
					ОбъектXML.ЗаписатьТекст("");
						Если ВыборкаОтветовИзОпроса.ТиповойОтвет = "" тогда
							ДобавитьПоле(ОбъектXML,"Ид", "00000000-0000-0000-0000-000000000000");
						Иначе
							Если ТипВопроса = Перечисления.ТипВопросаАнкеты.Булево тогда
								ДобавитьПоле(ОбъектXML,"Ид", ЗначениеВСтрокуВнутр(ВыборкаОтветовИзОпроса.ТиповойОтвет));
							Иначе
								Попытка
									ДобавитьПоле(ОбъектXML,"Ид", ВыборкаОтветовИзОпроса.ТиповойОтвет.УникальныйИдентификатор());
								Исключение
									ДобавитьПоле(ОбъектXML,"Ид", "00000000-0000-0000-0000-000000000000");
								КонецПопытки
							КонецЕсли;
						КонецЕсли;
						Если ВыборкаОтветовИзОпроса.Ответ = "" тогда
							ДобавитьПоле(ОбъектXML,"РазвернутыйОтвет", " ");
						Иначе
							ДобавитьПоле(ОбъектXML,"РазвернутыйОтвет", ВыборкаОтветовИзОпроса.Ответ);
						КонецЕсли;
					ОбъектXML.ЗаписатьКонецЭлемента(); // вариант ответа
				КонецЦикла;
			Иначе
				ОбъектXML.ЗаписатьНачалоЭлемента("ВариантОтвета");
					ОбъектXML.ЗаписатьТекст("");
					ДобавитьПоле(ОбъектXML,"Ид", "00000000-0000-0000-0000-000000000000");
					ДобавитьПоле(ОбъектXML,"РазвернутыйОтвет", " ");
				ОбъектXML.ЗаписатьКонецЭлемента(); // вариант ответа
			КонецЕсли;
			
		КонецЕсли;
		
		ОбъектXML.ЗаписатьКонецЭлемента();
		
	КонецПроцедуры // ДобавитьОтвет
	
Процедура ОбработкаЗапроса(Выборка, ОбъектXML);

	Разделы = Выборка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Разделы.Следующий() Цикл
		Вопросы = Разделы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если Разделы.КодРаздела = NULL тогда
			РазделНаименование = "";
		Иначе
			КодРаздела = Строка(Число(Разделы.КодРаздела));
			РазделНаименование = КодРаздела + Разделы.РазделНаименование;
		КонецЕсли;
		ЗаписатьРаздел(ОбъектXML, Разделы.Раздел, РазделНаименование);
		// теперь обходим вопросы
		Пока Вопросы.Следующий() Цикл
			ЗаписатьВопрос(ОбъектXML, Вопросы, Ложь);
		КонецЦикла;
		
		ОбъектXML.ЗаписатьКонецЭлемента();
	КонецЦикла;

КонецПроцедуры // ОбработкаЗапроса()

Функция ВыполнитьЗапросПоОпросу(ДокументОпрос)
	
	ТекстЗапроса = "ВЫБРАТЬ
	                |	ОпросВопросы.Вопрос КАК Вопрос,
	                |	ОпросВопросы.Ответ,
	                |	ОпросВопросы.ТиповойОтвет КАК ТиповойОтвет,
	                |	ОпросВопросы.Вопрос КАК КолонкаТаблицы,
	                |	NULL КАК НомерСтрокиВТаблице,
	                |	ОпросВопросы.Вопрос КАК ВопросКоличество
	                |ИЗ
	                |	Документ.Опрос.Вопросы КАК ОпросВопросы
	                |
	                |ГДЕ
	                |	ОпросВопросы.Ссылка.Ссылка = &Опрос И
	                |	ОпросВопросы.Вопрос.ТипВопроса <> &Табличный И
	                |	ОпросВопросы.Вопрос.ТипВопроса <> &ВВидеНесколькихОтветов
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ОпросСоставнойОтвет.ВопросВладелец,
	                |	ОпросСоставнойОтвет.Ответ,
	                |	ОпросСоставнойОтвет.ТиповойОтвет,
	                |	ОпросСоставнойОтвет.Вопрос,
	                |	ОпросСоставнойОтвет.НомерСтрокиВТаблице,
	                |	ОпросСоставнойОтвет.ВопросВладелец
	                |ИЗ
	                |	Документ.Опрос.СоставнойОтвет КАК ОпросСоставнойОтвет
	                |
	                |ГДЕ
	                |	ОпросСоставнойОтвет.Ссылка.Ссылка = &Опрос
	                |
	                |ИТОГИ КОЛИЧЕСТВО(ВопросКоличество) ПО
	                |	Вопрос";
					
	Запрос	= Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Опрос", 					ДокументОпрос.Ссылка);
	Запрос.УстановитьПараметр("Табличный", 				Перечисления.ТипВопросаАнкеты.Табличный);
	Запрос.УстановитьПараметр("ВВидеНесколькихОтветов",	Перечисления.ТипВопросаАнкеты.СправочникСсылка_ВариантыОтветов_Несколько);
	Возврат Запрос.Выполнить();
	
КонецФункции

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ


////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

Попытка
	ЕстьФизическиеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.ФизическиеЛица;
Исключение
	ЕстьФизическиеЛица = Ложь;
КонецПопытки;

Попытка
	ЕстьКонтрагенты = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.Контрагенты;
Исключение
	ЕстьКонтрагенты = Ложь;
КонецПопытки;

Попытка
	ЕстьКонтактныеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица = Перечисления.ВидыОбъектовЗагружаемыхИзОпроса.КонтактныеЛица;
Исключение
	ЕстьКонтактныеЛица = Ложь;
КонецПопытки;
