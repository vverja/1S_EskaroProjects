
Процедура APDEX_ВыгрузкаВМониторинг() Экспорт
	
	APDEX_Настройки = APDEX_ОценкаПроизводительностиСерверВызовСервера.ПолучитьНастройки();
	
	
	Если НЕ APDEX_Настройки.APDEX_ИспользуетсяОфлайнМониторинг  или НЕ ЗначениеЗаполнено(APDEX_Настройки.APDEX_НастройкаОфлайнМониторинга) Тогда
		Возврат;
	КонецЕсли;	
	
	ДатаПоследнейВыгрузки =  Справочники.APDEX_ДополнительныеНастройки.ДополнительнаяНастройкаОфлайнМониторинга.APDEX_ДатаПоследнейВыгрузкиЗамеровОфлайнМониторинга;
	
	
	Если НЕ ЗначениеЗаполнено(ДатаПоследнейВыгрузки) Тогда
		ДатаПоследнейВыгрузки = НачалоДня(ТекущаяДата());
	КонецЕсли;	

		

	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	APDEX_ЗамерыВремени.ДатаЗамера,
	|	APDEX_ЗамерыВремени.НомерСеанса КАК НомерСеанса,
	|	APDEX_ЗамерыВремени.ВремяВыполнения,
	|	APDEX_ЗамерыВремени.Пользователь КАК ИмяПользователя,
	|	APDEX_ЗамерыВремени.КлючеваяОперация.Наименование КАК КлючеваяОперация,
	|	APDEX_ЗамерыВремени.Информация
	|ИЗ
	|	РегистрСведений.APDEX_ЗамерыВремени КАК APDEX_ЗамерыВремени
	|ГДЕ
	|	APDEX_ЗамерыВремени.ДатаЗамера > &Дата";
	Запрос.УстановитьПараметр("Дата",ДатаПоследнейВыгрузки -1);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	Выборка = РезультатЗапроса.Выбрать();
	
	
	ТаблицаЗамеров = Запрос.Выполнить().Выгрузить();
	
	Если ТаблицаЗамеров.Количество() > 0 Тогда
		
		ДатаВыгрузки = ТекущаяДата();
		
		Флаг = ЗаписатьДанныеВБазуМониторинга(APDEX_Настройки,ТаблицаЗамеров);

		
		Если Флаг Тогда
			
			ОбъектДопНастройки = Справочники.APDEX_ДополнительныеНастройки.ДополнительнаяНастройкаОфлайнМониторинга.ПолучитьОбъект();
			ОбъектДопНастройки.APDEX_ДатаПоследнейВыгрузкиЗамеровОфлайнМониторинга = ДатаВыгрузки;
			ОбъектДопНастройки.Записать();
			
			
			НаборЗаписей = РегистрыСведений.APDEX_ЛогОтправкиДанных.СоздатьНаборЗаписей();
			
			СтрокаНабора = НаборЗаписей.Добавить();
			СтрокаНабора.Период = ТекущаяДата();
			СтрокаНабора.Мониторинг = Истина;
			СтрокаНабора.КоличествоЗаписейОтправлено  = ТаблицаЗамеров.Количество();
			
			НаборЗаписей.Записать(Ложь);
			
		КонецЕсли;	
		
	КонецЕсли; 
	


КонецПроцедуры


Функция СтрокаСоединения(SQLServer,Настройка) Экспорт
	
	SQLServer.CursorLocation=3;   
	SQLServer.ConnectionTimeout = 25;
	SQLServer.CommandTimeout = 1200;
	
	
	Если Настройка.АутентификацияWindows Тогда
		СтрокаСоединения = "Provider=SQLOLEDB.1;Integrated Security=SSPI;Persist Security Info=False;Initial Catalog=" + Настройка.БазаДанных + ";Data Source=" + Настройка.ИмяСервераSQL;
	Иначе	
		СтрокаСоединения = "Provider=SQLOLEDB.1;Password=" + Настройка.ПарольSQL + ";Persist Security Info=True;User ID=" + Настройка.ЛогинSQL + ";Initial Catalog=" + Настройка.БазаДанных + ";Data Source=" + Настройка.ИмяСервераSQL;
	КонецЕсли; 

	Возврат СтрокаСоединения;
КонецФункции


Функция СоздатьТаблицуХраненияЗначенийАпдексаСервер(Настройка) Экспорт
	
	
	Флаг =  Истина;
	Попытка
		SQLServer = Новый COMОбъект("ADODB.Connection");
		SQLServer.ConnectionString = СтрокаСоединения(SQLServer,Настройка);
		RecSet= Новый COMОбъект("ADODB.Recordset");
		SQLServer.Open();	
	Исключение
		ВызватьИсключение ОписаниеОшибки();
		Флаг =  Ложь;
	КонецПопытки; 
	
	Если Флаг тогда
		
		
		ТекстЗапроса =" 
		|USE [ИмяБазы]
		|IF  EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ApdexData]') AND type in (N'U'))
		|DROP TABLE [dbo].[ApdexData]
		|SET ANSI_NULLS ON
		|
		|SET QUOTED_IDENTIFIER ON
		|
		|SET ANSI_PADDING ON
		|
		|CREATE TABLE [dbo].[ApdexData](
		|   [id] [int] IDENTITY(1,1) NOT NULL,
		|	[BaseName] [nvarchar] (100) NOT NULL,
		|   [TableZamer] [ntext] NOT NULL
		//|	[DataZamer] [nvarchar] (19) NOT NULL,
		//|	[Operation] [nvarchar](150) NOT NULL,
		//|	[SessionNumber] [nvarchar](10) NOT NULL,
		//|	[Duration] [nvarchar](15) NOT NULL,
		//|	[Info] [nvarchar](200) NOT NULL,
		//|	[UserName] [nvarchar](150) NOT NULL
		|) ON [PRIMARY]
		|
		|SET ANSI_PADDING OFF";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ИмяБазы",Настройка.БазаДанных);
		
		RecSet.Open(ТекстЗапроса,SQLServer,3,1,1);
				
		
		Попытка   		
			SQLServer.Close(); 
		Исключение 		
		КонецПопытки;  
		
	КонецЕсли;
	
	Возврат Флаг;
КонецФункции


Функция ЗаписатьДанныеВБазуМониторинга(Настройка,ТаблицаЗамеров) 
	
	Флаг =  Истина;
	Попытка
		SQLServer = Новый COMОбъект("ADODB.Connection");
		SQLServer.ConnectionString = СтрокаСоединения(SQLServer,Настройка.APDEX_НастройкаОфлайнМониторинга);
		RecSet= Новый COMОбъект("ADODB.Recordset");
		SQLServer.Open();	
	Исключение
		ВызватьИсключение ОписаниеОшибки();
		Флаг =  Ложь;
	КонецПопытки; 
	
	Если Флаг тогда
		Попытка  
			Command = Новый COMОбъект("ADODB.Command");
			Command.ActiveConnection = SQLServer;
			Command.CommandType=1;   
			
			SQLServer.BeginTrans(); 
			
			
			ХранилищеТаблицы = Новый ХранилищеЗначения(ТаблицаЗамеров,Новый СжатиеДанных(9));

			
			Command.CommandText="INSERT INTO ApdexData (BaseName,TableZamer) VALUES (
			| '" + СокрЛП(Настройка.APDEX_ИмяИсследуемойБазы) + "', 
			| '" + СокрЛП(ЗначениеВСтрокуВнутр(ХранилищеТаблицы)) + "') ";             
			Command.Execute();
			
			//Для каждого СтрокаТЗ из ТаблицаЗамеров Цикл 
			//	Command.CommandText="INSERT INTO ApdexData (BaseName,DataZamer, Operation, SessionNumber, Duration,Info,UserName) VALUES (
			//	| '" + СокрЛП(Настройка.APDEX_ИмяИсследуемойБазы) + "', 
			//	| '" + СокрЛП(СтрокаТЗ.ДатаЗамера) + "', 
			//	| '" + СтрокаТЗ.КлючеваяОперация + "', 
			//	| '" + СтрокаТЗ.НомерСеанса + "', 
			//	| '" + СтрокаТЗ.ВремяВыполнения + "', 
			//	| '" + СтрокаТЗ.Информация + "', 
			//	| '" + СтрокаТЗ.ИмяПользователя + "') ";             
			//	Command.Execute();
			//КонецЦикла;  
			
 
			SQLServer.CommitTrans();
		Исключение
			Флаг = Ложь;
			SQLServer.RollbackTrans();
			ВызватьИсключение ОписаниеОшибки();
		КонецПопытки;  
		
		Попытка   		
			SQLServer.Close(); 
		Исключение 		
		КонецПопытки;  
		
	КонецЕсли;
	
	Возврат Флаг;
КонецФункции





 