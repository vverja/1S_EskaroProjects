//Функция проверяет необходимость вывода сообщений в панель комментариев, при необходимости выводит сообщение в панель комментариев
//
// Параметры:
//	ТекстСообщения - Строка - Текст сообщения
//	Статус - ПеречислениеСсылка.ВидыСообщений - Вид сообщения
//		   - СтатусСообщения - Статус сообщения (используется для совместимости со старыми вызовами процедуры Сообщить)
//	Заголовок - Строка - Текст заголовка
//	РасшифровкаСообщения - Массив - Массив с данными расшифровки
//						 - Ссылка - Ссылка на объект
//	СтрокаРодитель - Родительская строка дерева значений для вывода сообщения
//	РаскрытьСообщение - Булево - Признак раскрытия строки дерева сообщений
//
// Возвращаемое значение:
//	СтрокаДереваЗначенний - Строка дерева значений, в которую записано текущее сообщение
//Если вывод сообщений в панель комментариев не предусмотрен, возвращается Неопределено
Функция ВывестиСообщениеВПанельКомментариев(ТекстСообщения, Статус, Заголовок, РасшифровкаСообщения, СтрокаРодитель, РаскрытьСообщение) Экспорт
	#Если НЕ ТолстыйКлиентОбычноеПриложение Тогда
	Возврат Неопределено;
	#КонецЕсли
	ВыводитьСообщенияВПанельКомментариев = Ложь;
	//Сообщение выводится в панель комментариев, если
	//1. Установлена константа "РазрешитьВыводитьСообщенияВПанельКомментариев"
	//2. Для пользователя установлена настройка "ВыводитьСообщенияВПанельКомментариев"
	РазрешитьВыводитьСообщенияВПанельКомментариев = глЗначениеПеременной("РазрешитьВыводитьСообщенияВПанельКомментариев");
	Если РазрешитьВыводитьСообщенияВПанельКомментариев Тогда
		ВыводитьСообщенияВПанельКомментариев = (УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ВыводитьСообщенияВПанельКомментариев")=истина);
	КонецЕсли;
	Если НЕ ВыводитьСообщенияВПанельКомментариев Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	//Определим вид сообщения
	Если ТипЗнч(Статус) = Тип("ПеречислениеСсылка.ВидыСообщений") Тогда
		ВидСообщения = Статус;
	Иначе
		Если Статус = СтатусСообщения.Внимание Тогда
			ВидСообщения = Перечисления.ВидыСообщений.ВажнаяИнформация;
		ИначеЕсли Статус = СтатусСообщения.Важное Тогда
			ВидСообщения = Перечисления.ВидыСообщений.Ошибка;
		Иначе
			ВидСообщения = Перечисления.ВидыСообщений.Информация;
		КонецЕсли;
	КонецЕсли;
	
	//Найдем окно комментариев, при необходимости откроем его
	ФормаОбработкиКомментариев = Обработки.СообщенияВыполняемыхДействий.ПолучитьФорму();
	Если ФормаОбработкиКомментариев.Открыта() Тогда
		ОбработкаКомментариев = ФормаОбработкиКомментариев.ОбработкаОбъект;
	Иначе
		ОбработкаКомментариев = Обработки.СообщенияВыполняемыхДействий.Создать();
	КонецЕсли;
	
	//Выведем заголовок в раздел
	Если ЗначениеЗаполнено(Заголовок) Тогда
		ОбработкаКомментариев.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Раздел);
		Заголовок = "";
	КонецЕсли;
	
	//Заполним расшифровку сообщения
	Если ТипЗнч(РасшифровкаСообщения) = Тип("Массив") Тогда
		Расшифровка = РасшифровкаСообщения;
		
	ИначеЕсли РасшифровкаСообщения <> Неопределено Тогда
		МассивРасшифровки = Новый Массив;
		МассивРасшифровки.Добавить(РасшифровкаСообщения);
		
		СтруктураРасшифровки = Новый Структура;
		СтруктураРасшифровки.Вставить("Представление", " (открыть)");
		СтруктураРасшифровки.Вставить("Расшифровка", РасшифровкаСообщения);
		
		Расшифровка = Новый Массив;
		Расшифровка.Добавить(СтруктураРасшифровки);
		
	Иначе
		Расшифровка = Неопределено;
	КонецЕсли;
	
	СтрокаДереваЗначенний = ОбработкаКомментариев.ДобавитьСообщение(ТекстСообщения, ВидСообщения, Расшифровка, СтрокаРодитель, РаскрытьСообщение);
	ОбработкаКомментариев.ПоказатьСообщения();
	Возврат СтрокаДереваЗначенний;
КонецФункции

//Процедура выводит сообщение в окно сообщений
// Параметры:
//	ТекстСообщения - Строка - Текст сообщения
//	Статус - ПеречислениеСсылка.ВидыСообщений - Вид сообщения
//		   - СтатусСообщения - Статус сообщения (используется для совместимости со старыми вызовами процедуры Сообщить)
//	Заголовок - Строка - Текст заголовка (выводится пользователю в режиме обычного приложения; 
//           в заголовке должен быть описан контекст выполняемых действий, например "Проведение документа №... от ...")
//
Процедура ВывестиСообщениеВОкноСообщений(ТекстСообщения, Статус, Заголовок, РасшифровкаСообщения, ЭтоСообщениеОбОшибке) Экспорт
	#Если НЕ ВнешнееСоединение Тогда
	//В режиме Обычного приложения для вывода сообщений используем функцию Сообщение
	Если ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		//Выведем заголовок
		Если ЗначениеЗаполнено(Заголовок) Тогда
			Сообщить(Заголовок);
			Заголовок = "";
		КонецЕсли;
		//Определим статус сообщения
		Если ТипЗнч(Статус) = Тип("СтатусСообщения") Тогда
			текСтатусСообщения = Статус;
		Иначе
			Если Статус = Перечисления.ВидыСообщений.ВажнаяИнформация Тогда
				текСтатусСообщения = СтатусСообщения.Внимание;
			ИначеЕсли Статус = Перечисления.ВидыСообщений.Ошибка Тогда
				текСтатусСообщения = СтатусСообщения.Важное;
			ИначеЕсли Статус = Перечисления.ВидыСообщений.Информация Тогда
				текСтатусСообщения = СтатусСообщения.Информация;
			Иначе
				текСтатусСообщения = СтатусСообщения.БезСтатуса;
			КонецЕсли;
		КонецЕсли;
		
		Сообщить(ТекстСообщения, текСтатусСообщения);
	Иначе
		//В тонком клиенте выводим только сообщения об ошибках
		Если ЭтоСообщениеОбОшибке Тогда
			СообщениеПользователю = Новый СообщениеПользователю;
			СообщениеПользователю.Текст = ТекстСообщения;
			Если РасшифровкаСообщения <> Неопределено Тогда
				СообщениеПользователю.УстановитьДанные(РасшифровкаСообщения);
			КонецЕсли; 
			СообщениеПользователю.Сообщить();
		КонецЕсли;
	КонецЕсли;
	
	
	#КонецЕсли
КонецПроцедуры
