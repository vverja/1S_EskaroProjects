//Функция возвращает значение Подразделения, которое определяется из рабочего центра, указанного для выходного изделия
//	в спецификации.
//Вызывается из документов ЗаказНАПроизводство, КорректировкаЗаказаНаПроизводство
Функция ПолучитьПодразделениеИзСпецификации(Спецификация,Номенклатура,ХарактеристикаНоменклатуры) Экспорт
	Если не ЗначениеЗаполнено(Спецификация) Тогда
		Возврат неопределено;
	КонецЕсли;
	Запрос = новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|Подразделение
	|ИЗ (
	|	ВЫБРАТЬ 
	|		1 КАК Приоритет,
	|		ТочкаМаршрута.Подразделение КАК Подразделение
	|	ИЗ Справочник.СпецификацииНоменклатуры.ВыходныеИзделия
	|	ГДЕ Ссылка = &Спецификация
	|		И Номенклатура = &Номенклатура И ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		2 КАК Приоритет,
	|		ТочкаМаршрута.Подразделение КАК Подразделение
	|	ИЗ Справочник.СпецификацииНоменклатуры.ВыходныеИзделия
	|	ГДЕ Ссылка = &Спецификация
	|		И Номенклатура = &Номенклатура 
	|	) КАК ДанныеСпецификации
	|
    |УПОРЯДОЧИТЬ ПО Приоритет";
	Запрос.УстановитьПараметр("Спецификация",Спецификация);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры",ХарактеристикаНоменклатуры);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Подразделение;
	КонецЕсли;
	Возврат неопределено;
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ЗАПОЛНЕНИЯ ТАБЛИЧНЫХ ЧАСТЕЙ ДОКУМЕНТОВ
#Если Клиент Тогда
// Процедура заполнения документа ЗаказПоставщику по заказу на производство
//	Вызывается из формы документа ЗаказПоставщику
//Заполняет переданную табличную часть по остаткам
//
// Параметры:
//  ДокументОбъект - заполняемый документ
//  ТабличнаяЧасть  - табличная часть документа.
//	ЗаказНаПроизводство - заказ по которому производится заполнение
// 	Очистить		- очистить предварительно ТЧ или добавить в конец
//
Процедура ЗаполнитьЗаказПоставщикуПоЗаказуНаПроизводство(ДокументОбъект, ТабличнаяЧасть, Очистить = Истина) Экспорт

	ФормаЗаказы = Документы.ЗаказНаПроизводство.ПолучитьФормуВыбора();
	ФормаЗаказы.Заголовок = "Выберите заказ на производство для заполнения заказа поставщику";
	ФормаЗаказы.РежимВыбора = Истина;
	
	ЗаказНаПроизводство = ФормаЗаказы.ОткрытьМодально();

	Если НЕ ЗначениеЗаполнено(ЗаказНаПроизводство) Тогда
		Возврат;
	КонецЕсли;

	Если Очистить И ТабличнаяЧасть.Количество() > 0 Тогда
		
		ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да,);
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли; 
		
		ТабличнаяЧасть.Очистить();
	КонецЕсли;
	
	//Собственно заполнение табличной части
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	Если ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЗаказПоставщику.ПокупкаКомиссия Тогда
		Запрос.УстановитьПараметр("ВидВоспроизводства", Перечисления.ВидыВоспроизводстваНоменклатуры.Закупка);
	ИначеЕсли ДокументОбъект.ВидОперации = Перечисления.ВидыОперацийЗаказПоставщику.Переработка Тогда	
		Запрос.УстановитьПараметр("ВидВоспроизводства", Перечисления.ВидыВоспроизводстваНоменклатуры.Переработка);
	Иначе 
		Возврат;
	КонецЕсли;	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗаказНаПроизводствоМатериалы.Номенклатура,
	|	ЗаказНаПроизводствоМатериалы.ХарактеристикаНоменклатуры,
	|	ЗаказНаПроизводствоМатериалы.ЕдиницаИзмерения,
	|	ЗаказНаПроизводствоМатериалы.Количество * ЗаказНаПроизводствоМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / ЗаказНаПроизводствоМатериалы.ЕдиницаИзмерения.Коэффициент КАК Количество,
	|	ЗаказНаПроизводствоМатериалы.Номенклатура.СтавкаНДС КАК СтавкаНДС,
	|	ЗаказНаПроизводствоМатериалы.Коэффициент,
	|	ЗаказНаПроизводствоМатериалы.КоличествоМест,
	|	ЗаказНаПроизводствоМатериалы.ЕдиницаИзмеренияМест,
	|	&ЗаказНаПроизводство КАК Заказ
	|ИЗ
	|	Документ.ЗаказНаПроизводство.Материалы КАК ЗаказНаПроизводствоМатериалы
	|ГДЕ
	|	ЗаказНаПроизводствоМатериалы.Ссылка = &ЗаказНаПроизводство
	|	И ЗаказНаПроизводствоМатериалы.Размещение = НЕОПРЕДЕЛЕНО
	|	И ЗаказНаПроизводствоМатериалы.ВидВоспроизводства = &ВидВоспроизводства";
	
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		СтрокаТабличнойЧасти = ТабличнаяЧасть.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
	КонецЦикла;

	// Получить нужные цены запросом
	НовыйВалютаДокумента    = ДокументОбъект.ВалютаДокумента;
	СтруктураКурса          = МодульВалютногоУчета.ПолучитьКурсВалюты(НовыйВалютаДокумента, ДокументОбъект.Дата);
	НовыйКурсДокумента      = СтруктураКурса.Курс;
	НовыйКратностьДокумента = СтруктураКурса.Кратность;

	СтруктураЗначенийЦен = Новый Структура;
	СтруктураЗначенийЦен.Вставить("ПерезаполнитьПроцентСкидкиНаценки", Ложь);
	СтруктураЗначенийЦен.Вставить("НовыйТипЦен",                       ДокументОбъект.ТипЦен);
	СтруктураЗначенийЦен.Вставить("НовыйВалютаДокумента",              НовыйВалютаДокумента);
	СтруктураЗначенийЦен.Вставить("НовыйКурсДокумента",                НовыйКурсДокумента);
	СтруктураЗначенийЦен.Вставить("НовыйКратностьДокумента",           НовыйКратностьДокумента);
	СтруктураЗначенийЦен.Вставить("ТекущийВалютаДокумента",            ДокументОбъект.ВалютаДокумента);
	СтруктураЗначенийЦен.Вставить("НовыйУчитыватьНДС",                 ДокументОбъект.УчитыватьНДС);
	СтруктураЗначенийЦен.Вставить("НовыйСуммаВключаетНДС",             ДокументОбъект.СуммаВключаетНДС);
	СтруктураЗначенийЦен.Вставить("ЕстьСтавкаНДСВТабличнойЧасти",      Истина);

	РезультатЗапросаЦен = Ценообразование.СформироватьЗапросПоЦенам(СтруктураЗначенийЦен, 
	                                                Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатурыКонтрагентов, 
	                                                ТабличнаяЧасть.ВыгрузитьКолонку("Номенклатура"),
	                                                ДокументОбъект.Дата, ДокументОбъект.Контрагент, ДокументОбъект.ДоговорКонтрагента);

	ВыборкаРезультатЗапросаЦен = РезультатЗапросаЦен.Выбрать();

	Для каждого СтрокаТабличнойЧасти из ТабличнаяЧасть Цикл
		Если СтрокаТабличнойЧасти.Цена = 0 Тогда
			СтруктураПоиска = Новый Структура;
			СтруктураПоиска.Вставить("Номенклатура", СтрокаТабличнойЧасти.Номенклатура);
			Ценообразование.ЗаполнитьЦенуВСтрокеТабличнойЧасти(ДокументОбъект,
			                                   СтрокаТабличнойЧасти,
			                                   СтруктураПоиска,
			                                   ВыборкаРезультатЗапросаЦен,
			                                   СтруктураЗначенийЦен,
			                                   Перечисления.СпособыЗаполненияЦен.ПоЦенамНоменклатурыКонтрагентов,
			                                   СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры);
			ОбработкаТабличныхЧастей.ЗаполнитьСтавкуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект, "Приобретение");

			ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект);

			ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(СтрокаТабличнойЧасти, ДокументОбъект);

		КонецЕсли;
	КонецЦикла;

КонецПроцедуры // ЗаполнитьТабличнуюЧастьПоЗаказуНаПроизводство()

#КонецЕсли
// Процедура выполняет заполниение табличной части документа ТребованиеНакладная материалами, зарезервированными под заказ на производство.
//
Процедура ЗаполнитьТребованиеНакладнаяПоРезервамЗаказаНаПроизводство(ДокументОбъект, ЗаказНаПроизводство) Экспорт

	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Заказ", ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ДатаОстатков", ОбщегоНазначения.ПолучитьДатуОстатков(ДокументОбъект));

	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Остатки.Номенклатура										КАК Номенклатура,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков				КАК ЕдиницаИзмерения,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков				КАК ЕдиницаИзмеренияМест,
	|	Остатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент 	КАК Коэффициент,
	|	Остатки.ХарактеристикаНоменклатуры							КАК ХарактеристикаНоменклатуры,
	|	Остатки.СерияНоменклатуры									КАК СерияНоменклатуры,
	|	Остатки.Номенклатура.СтатьяЗатрат							КАК СтатьяЗатрат,
	|	Остатки.Номенклатура.НоменклатурнаяГруппаЗатрат				КАК НоменклатурнаяГруппа,
	|	Остатки.Склад												КАК Склад,
	|	Остатки.ДокументРезерва                                     КАК ЗаказРезерв,
	|	ЗаказНаПроизводство.Количество								КАК КоличествоДокумент,
	|	МАКСИМУМ(Остатки.КоличествоОстаток)							КАК КоличествоРезерв
	|ИЗ
	|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&ДатаОстатков,ДокументРезерва = &Заказ) КАК Остатки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ЗаказНаПроизводство.Номенклатура,
	|			ЗаказНаПроизводство.ХарактеристикаНоменклатуры,
	|			СУММА(Количество * Коэффициент / Номенклатура.ЕдиницаХраненияОстатков.Коэффициент) КАК Количество
	|		ИЗ
	|			Документ.ЗаказНаПроизводство.Материалы КАК ЗаказНаПроизводство
	|		ГДЕ
	|			ЗаказНаПроизводство.Ссылка = &Заказ
	|			И Не ЗаказНаПроизводство.Номенклатура.Услуга
	|		СГРУППИРОВАТЬ ПО
	|			ЗаказНаПроизводство.Номенклатура,
	|			ЗаказНаПроизводство.ХарактеристикаНоменклатуры
	|		) КАК ЗаказНаПроизводство
	|	ПО
	|		Остатки.Номенклатура 					= ЗаказНаПроизводство.Номенклатура
	|		И Остатки.ХарактеристикаНоменклатуры 	= ЗаказНаПроизводство.ХарактеристикаНоменклатуры
	|
	|ГДЕ 
	|   НЕ Остатки.Номенклатура.Услуга
	|
	|СГРУППИРОВАТЬ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.СерияНоменклатуры,
	|	Остатки.Склад,
	|	Остатки.ДокументРезерва,
	|	ЗаказНаПроизводство.Количество
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Остатки.Номенклатура
	|	
	|ИТОГИ ПО
	|	Остатки.Номенклатура,
	|	Остатки.ХарактеристикаНоменклатуры,
	|	Остатки.СерияНоменклатуры,
	|	Остатки.Склад
	|";

	РезультатЗапроса = Запрос.Выполнить();

	ОбходПоНоменклатуре = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбходПоНоменклатуре.Следующий() Цикл
		ОбходПоХарактеристике = ОбходПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ОбходПоХарактеристике.Следующий() Цикл
			ОбходПоСерии = ОбходПоХарактеристике.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ОбходПоСерии.Следующий() Цикл
				ОбходПоСкладу = ОбходПоСерии.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ОбходПоСкладу.Следующий() Цикл
					
					КоличествоРезерв = ОбходПоСкладу.КоличествоРезерв;
					
					Обход = ОбходПоСкладу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока Обход.Следующий() Цикл
						
						КоличествоДокумент = Обход.КоличествоДокумент;

						СтрокаТабличнойЧасти = ДокументОбъект.Материалы.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Обход);
						
						Если КоличествоРезерв > КоличествоДокумент Тогда
							СтрокаТабличнойЧасти.Количество = КоличествоДокумент;
							КоличествоРезерв = КоличествоРезерв - КоличествоДокумент;
						Иначе
							СтрокаТабличнойЧасти.Количество = КоличествоРезерв;
							КоличествоРезерв = 0;
						КонецЕсли;
						
						СтрокаТабличнойЧасти.Качество						= Справочники.Качество.Новый;
						Если КоличествоРезерв = 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;		
        	КонецЦикла;
		КонецЦикла;				
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Материалы", ДокументОбъект.Материалы, ДокументОбъект, ДокументОбъект.ОтражатьВБухгалтерскомУчете, истина, истина);

КонецПроцедуры // ЗаполнитьТребованиеНакладнаяПоОстаткамВРезерве()

//Процедура заполняет документ ТребованиеНакладная по заказу покупателя на переработку
Процедура ЗаполнитьТребованиеНакладнаяПоЗаказуПокупателяПереработка(ДокументОбъект, ЗаказПокупателя) Экспорт
	
	ДокументОбъект.Материалы.Очистить();
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегЗаказы.Номенклатура                 КАК Номенклатура,
	|	РегЗаказы.ХарактеристикаНоменклатуры   КАК ХарактеристикаНоменклатуры,
	|	РегЗаказы.Цена                         КАК Цена,
	|	РегЗаказы.СтавкаНДС       			   КАК СтавкаНДС,
	|	РегЗаказы.ЕдиницаИзмерения             КАК ЕдиницаИзмерения,
	|	РегЗаказы.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
	|	СУММА(РегЗаказы.КоличествоОстаток)     КАК КолОстаток,
	|	СУММА(ЕСТЬNULL(РегТоварыВРезерве.КоличествоОстаток, 0))   КАК КолРезерв
	|ИЗ
	|	РегистрНакопления.ЗаказыПоставщикам.Остатки(&КонДата, ДоговорКонтрагента = &Договор 
	|	                                                    И ЗаказПоставщику = &Заказ 
	|	                                                    И Не Номенклатура.Услуга
	|	                                                    И СтатусПартии = &Статус) КАК РегЗаказы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(&КонДата, ДокументРезерва = &Заказ и Склад=&Склад) КАК РегТоварыВРезерве
	|		ПО РегЗаказы.Номенклатура               = РегТоварыВРезерве.Номенклатура
	|		 И РегЗаказы.ХарактеристикаНоменклатуры = РегТоварыВРезерве.ХарактеристикаНоменклатуры
	|
	|СГРУППИРОВАТЬ ПО
	|	РегЗаказы.Номенклатура,
	|	РегЗаказы.ХарактеристикаНоменклатуры,
	|	РегЗаказы.Цена,
	|	РегЗаказы.СтавкаНДС,
	|	РегЗаказы.ЕдиницаИзмерения
	|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр( "КонДата",   ОбщегоНазначения.ПолучитьДатуОстатков(ДокументОбъект));
	Запрос.УстановитьПараметр( "Заказ",     ЗаказПокупателя);
	Запрос.УстановитьПараметр( "Договор",   ЗаказПокупателя.ДоговорКонтрагента);
	Запрос.УстановитьПараметр( "Статус",    Перечисления.СтатусыПартийТоваров.ВПереработку);
	Запрос.УстановитьПараметр( "ТоварТара", Перечисления.ТоварТара.Товар);
	Запрос.УстановитьПараметр( "Склад",    	ДокументОбъект.Склад);

	ТабОстатки = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОстатков Из ТабОстатки Цикл

		Если СтрокаОстатков.КолОстаток <= 0 Тогда
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ДокументОбъект.Материалы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОстатков);

		НоваяСтрока.Количество                 = СтрокаОстатков.КолОстаток * СтрокаОстатков.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
													/ СтрокаОстатков.Коэффициент;
		НоваяСтрока.Заказ         			   = ЗаказПокупателя;
		НоваяСтрока.Качество 				   = Справочники.Качество.Новый;
		НоваяСтрока.Склад    				   = ДокументОбъект.Склад;

		Если СтрокаОстатков.КолРезерв <= 0 Тогда
           Продолжить;
	    ИначеЕсли СтрокаОстатков.КолРезерв>=СтрокаОстатков.КолОстаток Тогда
		   НоваяСтрока.ЗаказРезерв = ЗаказПокупателя;
		   Продолжить;
	    Иначе
		   НеЗарезервировано = СтрокаОстатков.КолОстаток - СтрокаОстатков.КолРезерв;
		   НоваяСтрока.Количество = НеЗарезервировано * СтрокаОстатков.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
													/ СтрокаОстатков.Коэффициент;
           НоваяСтрока2 = ДокументОбъект.Материалы.Добавить();
		   ЗаполнитьЗначенияСвойств(НоваяСтрока2, НоваяСтрока);
		   НоваяСтрока2.ЗаказРезерв = ЗаказПокупателя;
           НоваяСтрока2.Количество = СтрокаОстатков.КолРезерв * СтрокаОстатков.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
													/ СтрокаОстатков.Коэффициент;
	   КонецЕсли;
	КонецЦикла;

	Для Каждого СтрокаТЧ Из ДокументОбъект.Материалы Цикл
		ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти( СтрокаТЧ, ДокументОбъект);
		УправлениеЗатратами.ЗаполнитьНоменклатурнуюГруппуИСтатьюЗатратВСтрокеТабличногоПоля( СтрокаТЧ, Истина, Истина);
	КонецЦикла;
	
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Материалы", ДокументОбъект.Материалы, ДокументОбъект, ДокументОбъект.ОтражатьВБухгалтерскомУчете, Истина, Истина);
	
КонецПроцедуры

//Процедура заполняет документ ТребованиеНакладная по потребностям заказа на производство
Процедура ЗаполнитьТребованиеНакладнаяПотребностямиЗаказаНаПроизводство(ДокументОбъект, ЗаказНаПроизводство) Экспорт
    ДопПараметры = Новый Структура;
    ДопПараметры.Вставить("ЗаказРезерв",          "ЗаказРезерв");
    ДопПараметры.Вставить("Склад",                ДокументОбъект.Склад);
    
	ЗаказыНаПроизводствоИПереработку.ЗаполнитьТабличнуюЧастьПоПотребностямЗаказаНаПроизводство(ДокументОбъект.Материалы, ЗаказНаПроизводство, ДопПараметры);
	ДокументОбъект.Материалы.Свернуть("Номенклатура, ХарактеристикаНоменклатуры,ЕдиницаИзмерения,Качество,Заказ,ЗаказРезерв,Коэффициент","Количество");
	Для Каждого СтрокаТЧ Из ДокументОбъект.Материалы Цикл
	    СтрокаТЧ.Склад = ДокументОбъект.Склад;
		// Выполнить общие действия для всех документов при изменении номенклатуры.
		ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(СтрокаТЧ, ДокументОбъект);

		УправлениеЗатратами.ЗаполнитьНоменклатурнуюГруппуИСтатьюЗатратВСтрокеТабличногоПоля(СтрокаТЧ);

		СтрокаТЧ.Качество = Справочники.Качество.Новый;
	
	КонецЦикла;
	СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Материалы", ДокументОбъект.Материалы, ДокументОбъект, ДокументОбъект.ОтражатьВБухгалтерскомУчете, Истина, Истина);
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С ПОТРЕБНОСТЯМИ ЗАКАЗОВ НА ПРОИЗВОДСТВО

// Функция создает строку с сообщением о нехватке остатка при проведении
//
Функция СоздатьСтрокуСообщения(Обход)
	Стр = " - По документу: "        + Обход.КолДокументЕдиницыДокумента + " Потребность: " + Обход.КолПотребностиЕдиницыДокумента + " Превышение: " + (Обход.КолДокументЕдиницыДокумента - Обход.КолПотребностиЕдиницыДокумента) +
		  "  (Материал: """          + СокрЛП(Обход.НоменклатураПред)         + ?( Обход.НоменклатураВестиУчетПоХарактеристикам, """ Хар-ка материала: """ + СокрЛП(Обход.ХарактеристикаНоменклатурыПред) + """", "") +
		     						 """ Ед. изм: """ + СокрЛП(Обход.ЕдиницаИзмеренияПред)  + 
		  """ Продукция: """         + СокрЛП(Обход.ПродукцияПред)            + ?( Обход.ПродукцияВестиУчетПоХарактеристикам, """ Хар-ка продукции: """ + СокрЛП(Обход.ХарактеристикаПродукцииПред) + """", "") +
		  """ Спецификация: """ + СокрЛП(Обход.СпецификацияПред) + """)";
		  
	Возврат Стр;
	
КонецФункции // СоздатьСтрокуСообщения()

// Закрывает потребности на производство по данным табличной части РаспределениеМатериалов
// Вызывается при автоматическом закрытии потребностей
Процедура ВыполнитьПогашениеПотребностиЗаказаНаПроизводствоПоРаспределению(ДокОбъект, ВидДокумента, ИмяРеквизитаЗаказ, СтруктураШапкиДокумента, ИмяТабличнойЧастиПродукция)

	НаборДвижений    = ДокОбъект.Движения.ПотребностиЗаказовНаПроизводство;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
    //Запрос по табличной части документа для формирования временной таблицы
	Если ВидДокумента = "КомплектацияНоменклатуры" Тогда
		МассивЗаказов = новый Массив;
		МассивЗаказов.Добавить(ДокОбъект[ИмяРеквизитаЗаказ]);
		Если ИмяТабличнойЧастиПродукция = "" Тогда  //сборка
			ТекстЗапросаТЧДокумента = "		
			 |ВЫБРАТЬ 
			 |	ДокПогашенияПотребностей.Ссылка.ЗаказВыпуска			КАК ЗаказНаПроизводство,
			 |	ДокПогашенияПотребностей.Номенклатура 					КАК Номенклатура,
			 |	ДокПогашенияПотребностей.ХарактеристикаНоменклатуры 	КАК ХарактеристикаНоменклатуры,
			 |	ДокПогашенияПотребностей.ЕдиницаИзмерения				КАК ЕдиницаИзмерения,
			 |	ДокПогашенияПотребностей.Ссылка.Номенклатура			КАК Продукция, 
			 |	ДокПогашенияПотребностей.Ссылка.ХарактеристикаНоменклатуры	КАК ХарактеристикаПродукции,
			 |	ДокПогашенияПотребностей.Ссылка.Спецификация 			КАК Спецификация,
			 |	ДокПогашенияПотребностей.Ссылка.Подразделение 			КАК Подразделение,
			 |	ДокПогашенияПотребностей.Количество 					КАК ДокКоличествоЕдиницыДокумента,
			 |	ВЫРАЗИТЬ(ДокПогашенияПотребностей.Количество * ДокПогашенияПотребностей.ЕдиницаИзмерения.Коэффициент
			 |			/ ДокПогашенияПотребностей.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)) КАК ДокКоличество,
			 |	0 														КАК ПотребностьКоличествоЕдиницыДокумента,
		 	 |	0 														КАК ПотребностьКоличество,
			 |	NULL 													КАК ВидВоспроизводства
			 |ПОМЕСТИТЬ ВременнаяТаблицаДокумента
			 |ИЗ 
			 |		Документ." + ВидДокумента + ".Комплектующие КАК ДокПогашенияПотребностей
			 |	ГДЕ
			 |		ДокПогашенияПотребностей.Ссылка = &ДокСсылка
			 |";
		 Иначе //разборка
			 ТекстЗапросаТЧДокумента = "		
			 |ВЫБРАТЬ 
			 |	ДокПогашенияПотребностей.Ссылка.ЗаказВыпуска						КАК ЗаказНаПроизводство,
			 |	ДокПогашенияПотребностей.Ссылка.Номенклатура 						КАК Номенклатура,
			 |	ДокПогашенияПотребностей.Ссылка.ХарактеристикаНоменклатуры 			КАК ХарактеристикаНоменклатуры,
			 |	ДокПогашенияПотребностей.Ссылка.ЕдиницаИзмерения					КАК ЕдиницаИзмерения,
			 |	ДокПогашенияПотребностей.Номенклатура								КАК Продукция, 
			 |	ДокПогашенияПотребностей.ХарактеристикаНоменклатуры					КАК ХарактеристикаПродукции,
			 |	ДокПогашенияПотребностей.Ссылка.Спецификация 						КАК Спецификация,
			 |	ДокПогашенияПотребностей.Ссылка.Подразделение 						КАК Подразделение,
			 |	ВЫРАЗИТЬ(ДокПогашенияПотребностей.Ссылка.Количество *
			 |		ДокПогашенияПотребностей.ДоляСтоимости /&СуммаДолейСтоимости КАК Число(15,3))	КАК ДокКоличествоЕдиницыДокумента,
			 |	ВЫРАЗИТЬ((ДокПогашенияПотребностей.Ссылка.Количество *
			 |		ДокПогашенияПотребностей.ДоляСтоимости /&СуммаДолейСтоимости)
			 |      * ДокПогашенияПотребностей.ЕдиницаИзмерения.Коэффициент
			 |		/ ДокПогашенияПотребностей.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
			 |			КАК Число(15,3))											КАК ДокКоличество,
			 |	0 																	КАК ПотребностьКоличествоЕдиницыДокумента,
			 |	0 																	КАК ПотребностьКоличество,
			 |	NULL 																КАК ВидВоспроизводства
			 |ПОМЕСТИТЬ ВременнаяТаблицаДокумента
			 |ИЗ 
			 |		Документ." + ВидДокумента + ".Комплектующие КАК ДокПогашенияПотребностей
			 |	ГДЕ
			 |		ДокПогашенияПотребностей.Ссылка = &ДокСсылка
			 |";

		 КонецЕсли;
		 
	Иначе	
		МассивЗаказов = ДокОбъект.РаспределениеМатериалов.ВыгрузитьКолонку(ИмяРеквизитаЗаказ);
		ТекстЗапросаТЧДокумента = "		
		 |ВЫБРАТЬ 
		 |	%ПолеЗаказ% 											КАК ЗаказНаПроизводство,
		 |	ДокПогашенияПотребностей.Номенклатура 					КАК Номенклатура,
		 |	ДокПогашенияПотребностей.ХарактеристикаНоменклатуры 	КАК ХарактеристикаНоменклатуры,
		 |	ДокПогашенияПотребностей.ЕдиницаИзмерения				КАК ЕдиницаИзмерения,
		 |	ДокПогашенияПотребностей.Продукция 						КАК Продукция, 
		 |	%ПолеХарактеристикаПродукции%							КАК ХарактеристикаПродукции,
		 |	ДокПогашенияПотребностей.Спецификация 					КАК Спецификация,
		 |	ДокПогашенияПотребностей.Ссылка.Подразделение 			КАК Подразделение,
		 |	ДокПогашенияПотребностей.Количество 					КАК ДокКоличествоЕдиницыДокумента,
		 |	ВЫРАЗИТЬ(ДокПогашенияПотребностей.Количество * ДокПогашенияПотребностей.ЕдиницаИзмерения.Коэффициент
		 |			/ ДокПогашенияПотребностей.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Число(15,3)) КАК ДокКоличество,
 		 |	0 														КАК ПотребностьКоличествоЕдиницыДокумента,
         |	0 														КАК ПотребностьКоличество,
		 |	NULL 													КАК ВидВоспроизводства
		 |ПОМЕСТИТЬ ВременнаяТаблицаДокумента
		 |ИЗ 
		 |		Документ." + ВидДокумента + ".РаспределениеМатериалов КАК ДокПогашенияПотребностей
		 |	ГДЕ
		 |		ДокПогашенияПотребностей.Ссылка = &ДокСсылка
		 |		И НЕ (%ПолеЗаказ% = &ПустЗаказ
		 |					ИЛИ %ПолеЗаказ% = НЕОПРЕДЕЛЕНО)
		 |		И %ПолеЗаказ% ССЫЛКА Документ.ЗаказНаПроизводство
		 |";
	 КонецЕсли;
	 
	 ГраницаОстатков = Новый Граница(ДокОбъект.Дата, ВидГраницы.Включая);
	 
	 ЗапросТЧДокумента = новый Запрос;
	 ЗапросТЧДокумента.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	 ТекстЗапросаТЧДокумента = СтрЗаменить(ТекстЗапросаТЧДокумента,"%ПолеЗаказ%","ДокПогашенияПотребностей."+ИмяРеквизитаЗаказ);
	 Если ВидДокумента = "АктОбОказанииПроизводственныхУслуг" Тогда
		 ТекстЗапросаТЧДокумента = СтрЗаменить(ТекстЗапросаТЧДокумента,"%ПолеХарактеристикаПродукции%","&ПустаяХарактеристикаПродукции");
		 ЗапросТЧДокумента.УстановитьПараметр("ПустаяХарактеристикаПродукции", Справочники.ХарактеристикиНоменклатуры.ПустаяСсылка());
	 ИначеЕсли ВидДокумента = "КомплектацияНоменклатуры" Тогда
		 ЗапросТЧДокумента.УстановитьПараметр("СуммаДолейСтоимости", СтруктураШапкиДокумента.СуммаДолейСтоимости);
	 Иначе
		 ТекстЗапросаТЧДокумента = СтрЗаменить(ТекстЗапросаТЧДокумента,"%ПолеХарактеристикаПродукции%","ДокПогашенияПотребностей.ХарактеристикаПродукции");
	 КонецЕсли; 

	 ЗапросТЧДокумента.Текст = ТекстЗапросаТЧДокумента; 
	 ЗапросТЧДокумента.УстановитьПараметр("ДокСсылка",          ДокОбъект.Ссылка);
	 ЗапросТЧДокумента.УстановитьПараметр("ПустЗаказ",          Документы.ЗаказНаПроизводство.ПустаяСсылка());
     ЗапросТЧДокумента.Выполнить();
     Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ДокОбъект);

	 Если глЗначениеПеременной("ИспользоватьБлокировкуДанных")  Тогда
		 СтруктураПараметров = Новый Структура(
		 "ТипТаблицы,ИмяТаблицы,ИсточникДанных,ИмяВременнойТаблицы"
		 ,"РегистрНакопления"
		 ,"ПотребностиЗаказовНаПроизводство"
		 ,МенеджерВременныхТаблиц
		 ,"ВременнаяТаблицаДокумента");
		 
		СтруктураЗначенийБлокировки = Новый Структура("Период", ДокОбъект.Дата);
		
		СтруктураИсточникаДанных = Новый Структура(
		 "ЗаказНаПроизводство,Номенклатура,ХарактеристикаНоменклатуры, Продукция, ХарактеристикаПродукции"
		 ,"ЗаказНаПроизводство"
		 ,"Номенклатура"
		 ,"ХарактеристикаНоменклатуры"
		 ,"Продукция"
		 ,"ХарактеристикаПродукции"
		 );
		 ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметров, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных, Ложь, Заголовок);
		 
	 КонецЕсли; 

	//запрос для формирования движений
	ТекстЗапроса = 
		"ВЫБРАТЬ 
		 |	ВложенныйЗапрос.ЗаказНаПроизводство 					КАК ЗаказНаПроизводство,
		 |	ВложенныйЗапрос.Номенклатура 							КАК Номенклатура,
		 |	ВложенныйЗапрос.ХарактеристикаНоменклатуры 				КАК ХарактеристикаНоменклатуры,
		 |	ВложенныйЗапрос.ЕдиницаИзмерения 						КАК ЕдиницаИзмерения,
		 |	ВложенныйЗапрос.Продукция 								КАК Продукция, 
		 |	ВложенныйЗапрос.ХарактеристикаПродукции 				КАК ХарактеристикаПродукции,
		 |	ВложенныйЗапрос.Спецификация 							КАК Спецификация,
		 |	ВложенныйЗапрос.Подразделение 							КАК Подразделение,
		 |	ВложенныйЗапрос.Номенклатура.ВестиУчетПоХарактеристикам КАК НоменклатураВестиУчетПоХарактеристикам,
		 |	ВложенныйЗапрос.Продукция.ВестиУчетПоХарактеристикам    КАК ПродукцияВестиУчетПоХарактеристикам,
         |	ВложенныйЗапрос.ВидВоспроизводства 						КАК ВидВоспроизводства,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ЗаказНаПроизводство)      КАК ЗаказНаПроизводствоПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Номенклатура)             КАК НоменклатураПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ЕдиницаИзмерения)         КАК ЕдиницаИзмеренияПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Продукция)                КАК ПродукцияПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ХарактеристикаПродукции)  КАК ХарактеристикаПродукцииПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Спецификация) 			КАК СпецификацияПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.Подразделение)            КАК ПодразделениеПред,
		 |	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ВидВоспроизводства) 		КАК ВидВоспроизводстваПред,
		 |	ЕстьNULL(ВложенныйЗапрос.КолДокументЕдиницыДокумента,0)	КАК КолДокументЕдиницыДокумента,
		 |	ЕстьNULL(ВложенныйЗапрос.КолДокумент,0)					КАК КолДокумент,
		 |	ЕстьNULL(ВложенныйЗапрос.КолПотребностиЕдиницыДокумента,0) КАК КолПотребностиЕдиницыДокумента,
		 |	ЕстьNULL(ВложенныйЗапрос.КолПотребности,0) 				КАК КолПотребности
         |ИЗ
		 |(ВЫБРАТЬ
		 //сгруппированное объединение запросов
		 |	ОбъединенныйЗапрос.ЗаказНаПроизводство 							КАК ЗаказНаПроизводство,
		 |	ОбъединенныйЗапрос.Номенклатура 								КАК Номенклатура,
		 |	ОбъединенныйЗапрос.ХарактеристикаНоменклатуры 					КАК ХарактеристикаНоменклатуры,
		 |	ОбъединенныйЗапрос.ЕдиницаИзмерения 							КАК ЕдиницаИзмерения,
		 |	ОбъединенныйЗапрос.Продукция 									КАК Продукция, 
		 |	ОбъединенныйЗапрос.ХарактеристикаПродукции 						КАК ХарактеристикаПродукции,
		 |	ОбъединенныйЗапрос.Спецификация 								КАК Спецификация,
		 |	ОбъединенныйЗапрос.Подразделение 								КАК Подразделение,
		 |	ОбъединенныйЗапрос.ВидВоспроизводства 							КАК ВидВоспроизводства,
		 |	СУММА(ОбъединенныйЗапрос.ДокКоличествоЕдиницыДокумента)			КАК КолДокументЕдиницыДокумента,
		 |	СУММА(ОбъединенныйЗапрос.ДокКоличество)							КАК КолДокумент,
		 |	СУММА(ОбъединенныйЗапрос.ПотребностьКоличествоЕдиницыДокумента) КАК КолПотребностиЕдиницыДокумента,
		 |	СУММА(ОбъединенныйЗапрос.ПотребностьКоличество) 				КАК КолПотребности
		 |ИЗ
		 |(
		 |//табличная часть документа
		 |ВЫБРАТЬ
		 |	ЗаказНаПроизводство,
		 |	Номенклатура,
		 |	ХарактеристикаНоменклатуры,
		 |	ЕдиницаИзмерения,
		 |	Продукция, 
		 |	ХарактеристикаПродукции,
		 |	Спецификация,
		 |	Подразделение,
		 |	ДокКоличествоЕдиницыДокумента,
		 |	ДокКоличество,
		 |	ПотребностьКоличествоЕдиницыДокумента,
		 |	ПотребностьКоличество,
		 |	ВидВоспроизводства
		 |ИЗ ВременнаяТаблицаДокумента 
         |ОБЪЕДИНИТЬ ВСЕ
		 |//регистр ПотребностиЗаказовНаПроизводство
		 |ВЫБРАТЬ
		 |	РегПотребности.ЗаказНаПроизводство					КАК ЗаказНаПроизводство,
		 |	РегПотребности.Номенклатура 						КАК Номенклатура,
		 |	РегПотребности.ХарактеристикаНоменклатуры 			КАК ХарактеристикаНоменклатуры,
		 |	РегПотребности.ЕдиницаИзмерения 					КАК ЕдиницаИзмерения,
		 |	РегПотребности.Продукция 							КАК Продукция, 
		 |	РегПотребности.ХарактеристикаПродукции 				КАК ХарактеристикаПродукции,
		 |	РегПотребности.Спецификация 						КАК Спецификация,
		 |	РегПотребности.Подразделение 						КАК Подразделение,
		 |	0 													КАК ДокКоличествоЕдиницыДокумента,
		 |	0 													КАК ДокКоличество,
		 |	ВЫРАЗИТЬ(РегПотребности.КоличествоОстаток * РегПотребности.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		 |		/ РегПотребности.ЕдиницаИзмерения.Коэффициент КАК Число(15,3))
		 |														КАК ПотребностьКоличествоЕдиницыДокумента,
		 |	РегПотребности.КоличествоОстаток 					КАК ПотребностьКоличество,
	 	 |	РегПотребности.ВидВоспроизводства 					КАК ВидВоспроизводства
         |ИЗ
		 |  РегистрНакопления.ПотребностиЗаказовНаПроизводство.Остатки(&КонГраница, ЗаказНаПроизводство В (&МассивЗаказов)) КАК РегПотребности
		 |ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ПотребностиЗаказовНаПроизводство.Остатки
		 |) КАК ОбъединенныйЗапрос
		 |СГРУППИРОВАТЬ ПО
		 |	ОбъединенныйЗапрос.ЗаказНаПроизводство,
		 |	ОбъединенныйЗапрос.Номенклатура,
		 |	ОбъединенныйЗапрос.ХарактеристикаНоменклатуры,
		 |	ОбъединенныйЗапрос.ЕдиницаИзмерения,
		 |	ОбъединенныйЗапрос.Продукция, 
		 |	ОбъединенныйЗапрос.ХарактеристикаПродукции,
		 |	ОбъединенныйЗапрос.Спецификация,
		 |	ОбъединенныйЗапрос.Подразделение,
		 |	ОбъединенныйЗапрос.ВидВоспроизводства
		 |) КАК ВложенныйЗапрос
		 |ИТОГИ
		 |	СУММА(КолДокументЕдиницыДокумента),
		 |	СУММА(КолДокумент),
		 |	СУММА(КолПотребностиЕдиницыДокумента),
		 |	СУММА(КолПотребности)
		 |ПО
		 |	ЗаказНаПроизводство,
		 |	Номенклатура,ХарактеристикаНоменклатуры, 
		 |	ЕдиницаИзмерения, Продукция, ХарактеристикаПродукции, Спецификация
		 |";
		
	Запрос = Новый Запрос;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;

	Запрос.УстановитьПараметр("КонДата",            ДокОбъект.Дата);
	Запрос.УстановитьПараметр("КонГраница",         ГраницаОстатков);
	Запрос.УстановитьПараметр("МассивЗаказов",      МассивЗаказов);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросОстаткиЗаказов = новый Запрос;
	ЗапросОстаткиЗаказов.Текст = "ВЫБРАТЬ 
	|РегЗаказы.ЗаказНаПроизводство 			КАК ЗаказНаПроизводство,
	|РегЗаказы.Номенклатура 				КАК Продукция,
	|РегЗаказы.ХарактеристикаНоменклатуры 	КАК ХарактеристикаПродукции,
	|РегЗаказы.КоличествоОстаток			КАК КолОстаток
    |ИЗ РегистрНакопления.ЗаказыНаПроизводство.Остатки(&КонГраница, ЗаказНаПроизводство В (&МассивЗаказов)) КАК РегЗаказы
	|ИТОГИ 
	|	СУММА(КолОстаток)
	|ПО
	|	ЗаказНаПроизводство";
	ЗапросОстаткиЗаказов.УстановитьПараметр("КонГраница",    ГраницаОстатков);
    ЗапросОстаткиЗаказов.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	РезультатЗапросаОстаткиЗаказов = ЗапросОстаткиЗаказов.Выполнить();
	ВыборкаОстаткиЗаказовНаПроизводство = РезультатЗапросаОстаткиЗаказов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	ТабДвижений = НаборДвижений.ВыгрузитьКолонки();
	
	
	ОбходПоЗаказам = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ЗаказНаПроизводство");
	Пока ОбходПоЗаказам.Следующий() Цикл
		флЗаказЗакрыт = Истина;
		ВыборкаОстаткиПродукцииПоЗаказу = Неопределено;
		Если ВыборкаОстаткиЗаказовНаПроизводство.НайтиСледующий(ОбходПоЗаказам.ЗаказНаПроизводство, "ЗаказНаПроизводство") Тогда
			флЗаказЗакрыт = ВыборкаОстаткиЗаказовНаПроизводство.КолОстаток <= 0;
			ВыборкаОстаткиПродукцииПоЗаказу = ВыборкаОстаткиЗаказовНаПроизводство.Выбрать();
		КонецЕсли;
					
		СтрОшибка = "Превышение потребности по заказу на производство: " + ОбходПоЗаказам.ЗаказНаПроизводствоПред;
		СообщитьОбОшибке = Ложь;
		
		ОбходНоменклатура = ОбходПоЗаказам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Номенклатура");
		Пока ОбходНоменклатура.Следующий() Цикл
			ОбходХарактеристика = ОбходНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ХарактеристикаНоменклатуры");
			Пока ОбходХарактеристика.Следующий() Цикл
				ОбходЕдиница = ОбходХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ЕдиницаИзмерения");
				Пока ОбходЕдиница.Следующий() Цикл
					ОбходПродукция = ОбходЕдиница.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Продукция");
					Пока ОбходПродукция.Следующий() Цикл
						ОбходХарактеристикаПродукции = ОбходПродукция.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"ХарактеристикаПродукции");
						Пока ОбходХарактеристикаПродукции.Следующий() Цикл
							//Проверка - выполнен ли заказ на производство для данной продукции и характеристики
							флВсяПродукцияПоЗаказуВыпущена = Ложь;
							Если НЕ флЗаказЗакрыт И ЗначениеЗаполнено(ОбходХарактеристикаПродукции.Продукция) Тогда
								флВсяПродукцияПоЗаказуВыпущена = Истина;
								СтруктураПоиска = Новый Структура	("Продукция, ХарактеристикаПродукции",
																	ОбходХарактеристикаПродукции.Продукция,
																	ОбходХарактеристикаПродукции.ХарактеристикаПродукции);
								Если ВыборкаОстаткиПродукцииПоЗаказу.НайтиСледующий(СтруктураПоиска) Тогда
									флВсяПродукцияПоЗаказуВыпущена = ВыборкаОстаткиПродукцииПоЗаказу.КолОстаток<=0;
								КонецЕсли;
								ВыборкаОстаткиПродукцииПоЗаказу.Сбросить();
							КонецЕсли;
							
							Обход = ОбходХарактеристикаПродукции.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Спецификация");
							Пока Обход.Следующий() Цикл
								Если Обход.КолДокумент <= 0 И НЕ (флЗаказЗакрыт ИЛИ флВсяПродукцияПоЗаказуВыпущена) Тогда
									Продолжить;
								КонецЕсли;
								
								//проверяем достаточность потребностей которые указаны в документе
								Если Обход.КолДокумент > 0 Тогда
									НехваткаПотребностей = Обход.КолДокумент - Обход.КолПотребности; 
									Если НехваткаПотребностей>0 Тогда
										СтрОшибка = СтрОшибка + Символы.ПС + СоздатьСтрокуСообщения(Обход);
										СообщитьОбОшибке = Истина;
									КонецЕсли;
								КонецЕсли;
								
								//погашаем потребность
								Если флЗаказЗакрыт ИЛИ флВсяПродукцияПоЗаказуВыпущена Тогда
									//если заказ в части продукции и характеристики продукции выполнен - закрываем всю потребность
									ВыборкаДетали = Обход.Выбрать(ОбходРезультатаЗапроса.Прямой);
									Пока ВыборкаДетали.Следующий() Цикл
										Если ВыборкаДетали.КолПотребности <> 0 Тогда
											НоваяСтрока = ТабДвижений.Добавить();
											НоваяСтрока.ЗаказНаПроизводство        = ВыборкаДетали.ЗаказНаПроизводство;
											НоваяСтрока.Номенклатура               = ВыборкаДетали.Номенклатура;
											НоваяСтрока.ХарактеристикаНоменклатуры = ВыборкаДетали.ХарактеристикаНоменклатуры;
											НоваяСтрока.ЕдиницаИзмерения           = ВыборкаДетали.ЕдиницаИзмерения;
											НоваяСтрока.Продукция                  = ВыборкаДетали.Продукция;
											НоваяСтрока.ХарактеристикаПродукции    = ВыборкаДетали.ХарактеристикаПродукции;
											НоваяСтрока.Подразделение              = ВыборкаДетали.Подразделение;
											НоваяСтрока.ВидВоспроизводства         = ВыборкаДетали.ВидВоспроизводства;
											НоваяСтрока.Спецификация               = ВыборкаДетали.Спецификация;
											НоваяСтрока.Количество                 = ВыборкаДетали.КолПотребности;
										КонецЕсли;
									КонецЦикла	
								Иначе	
									МожноПогасить = Макс(Мин(Обход.КолДокумент, Обход.КолПотребности),0);
									Если МожноПогасить = 0 Тогда
										Продолжить;
									КонецЕсли;
									// находим записи результата запроса, соответствующие текущей строке таблицы - чтобы определить Подразделение и Вид воспроизводства
									ВыборкаДетали = Обход.Выбрать(ОбходРезультатаЗапроса.Прямой);
									текВидВоспроизводства = "";
									текПодразделение = "";
									Пока ВыборкаДетали.Следующий() цикл
										Если ВыборкаДетали.КолПотребности > 0 Тогда
											текВидВоспроизводства = ВыборкаДетали.ВидВоспроизводства;
										КонецЕсли;
										Если ВыборкаДетали.КолДокумент > 0 Тогда
											текПодразделение = ВыборкаДетали.Подразделение;
										КонецЕсли;
										Если ЗначениеЗаполнено(текПодразделение) и ЗначениеЗаполнено(текВидВоспроизводства) Тогда
											Прервать;
										КонецЕсли;
									КонецЦикла;
									
									НоваяСтрока = ТабДвижений.Добавить();
									НоваяСтрока.ЗаказНаПроизводство        = Обход.ЗаказНаПроизводство;
									НоваяСтрока.Номенклатура               = Обход.Номенклатура;
									НоваяСтрока.ХарактеристикаНоменклатуры = Обход.ХарактеристикаНоменклатуры;
									НоваяСтрока.ЕдиницаИзмерения           = Обход.ЕдиницаИзмерения;
									НоваяСтрока.Продукция                  = Обход.Продукция;
									НоваяСтрока.ХарактеристикаПродукции    = Обход.ХарактеристикаПродукции;
									НоваяСтрока.Спецификация               = Обход.Спецификация;
									НоваяСтрока.Количество                 = МожноПогасить;
									НоваяСтрока.Подразделение              = текПодразделение;
									НоваяСтрока.ВидВоспроизводства         = текВидВоспроизводства;
								КонецЕсли; //Если флЗаказЗакрыт Тогда
							КонецЦикла; //Пока Обход.Следующий() Цикл
						КонецЦикла;  //Пока ОбходХарактеристикаПродукции.Следующий() Цикл
					КонецЦикла;  //Пока ОбходПродукция.Следующий() Цикл
				КонецЦикла;  //Пока ОбходЕдиница.Следующий() Цикл
			КонецЦикла;   //Пока ОбходХарактеристика.Следующий() Цикл
		КонецЦикла;   //Пока ОбходНоменклатура.Следующий() Цикл
		
		Если СообщитьОбОшибке Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрОшибка, Ложь, Заголовок);
		КонецЕсли; 
		ВыборкаОстаткиЗаказовНаПроизводство.Сбросить();
	КонецЦикла;//Пока ОбходПоЗаказам.Следующий() Цикл
	
	ТаблицыДанныхДокумента = Новый Структура;
	ТаблицыДанныхДокумента.Вставить("Материалы", ТабДвижений);
	
	ОбщегоНазначения.ЗаписатьТаблицыДокументаВРегистр(НаборДвижений, ВидДвиженияНакопления.Расход, ТаблицыДанныхДокумента, ДокОбъект.Дата);

КонецПроцедуры // ВыполнитьПогашениеПотребностиЗаказаНаПроизводствоПоРаспределению()

// Закрывает потребности на производство по исполненным заказам и выпущенной продукции/услуги
// Вызывается при явном закрытии потребностей
//
Процедура ВыполнитьПогашениеПотребностиИсполненныхЗаказовНаПроизводство(ДокОбъект, ВидДокумента, ИмяТабличнойЧастиПродукция, ИмяРеквизитаЗаказ)
	
	НаборДвижений = ДокОбъект.Движения.ПотребностиЗаказовНаПроизводство;
	Если ИмяТабличнойЧастиПродукция="" Тогда
		МассивЗаказов = новый Массив;
		МассивЗаказов.Добавить(ДокОбъект[ИмяРеквизитаЗаказ]);
	Иначе	
		МассивЗаказов = ДокОбъект[ИмяТабличнойЧастиПродукция].ВыгрузитьКолонку(ИмяРеквизитаЗаказ);
	КонецЕсли;	
	
	ГраницаОстатков = Новый Граница(ДокОбъект.Дата, ВидГраницы.Включая);
	
	//Заполним временную таблицу для установки управляемых блокировок			   
	Если глЗначениеПеременной("ИспользоватьБлокировкуДанных")  Тогда
		Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(ДокОбъект);
		
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
        Запрос = новый Запрос("ВЫБРАТЬ Ссылка КАК ЗаказНаПроизводство 
		|ПОМЕСТИТЬ ВременнаяТаблицаДокумента
		|ИЗ
		|	Документ.ЗаказНаПроизводство
		|ГДЕ Ссылка В (&МассивЗаказов)
		|");
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);

		Запрос.Выполнить();

		СтруктураПараметров = Новый Структура(
			"ТипТаблицы,ИмяТаблицы,ИсточникДанных,ИмяВременнойТаблицы"
			,"РегистрНакопления"
			,"ПотребностиЗаказовНаПроизводство"
			,МенеджерВременныхТаблиц
			,"ВременнаяТаблицаДокумента");
			
		СтруктураЗначенийБлокировки = Новый Структура("Период", ДокОбъект.Дата);
		
		СтруктураИсточникаДанных = Новый Структура(
			"ЗаказНаПроизводство"
			,"ЗаказНаПроизводство"
			);
		ОбщегоНазначения.УстановитьУправляемуюБлокировку(СтруктураПараметров,СтруктураЗначенийБлокировки,СтруктураИсточникаДанных, Ложь, Заголовок);
	КонецЕсли; 
			   
	
	ТабДвижений = НаборДвижений.ВыгрузитьКолонки();
	
	Запрос = Новый Запрос;
	ТекстЗапроса = "ВЫБРАТЬ 
	               |	ПотребностиЗаказовНаПроизводствоОстатки.ЗаказНаПроизводство,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.Номенклатура,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.ХарактеристикаНоменклатуры,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.Продукция,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.ХарактеристикаПродукции,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.ЕдиницаИзмерения,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.ВидВоспроизводства,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.Спецификация,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.Подразделение,
	               |	ПотребностиЗаказовНаПроизводствоОстатки.КоличествоОстаток 						КАК Количество,
				   |	ЕСТЬNULL(ЗаказыНаПроизводствоОстатки.КоличествоОстаток, 0) 						КАК КоличествоПродукцииПоЗаказу
	               |ИЗ
	               |	РегистрНакопления.ПотребностиЗаказовНаПроизводство.Остатки(
	               |			&КонГраница,
	               |			ЗаказНаПроизводство В (&МассивЗаказов)) 								КАК ПотребностиЗаказовНаПроизводствоОстатки
				   |ЛЕВОЕ СОЕДИНЕНИЕ
	               |	РегистрНакопления.ЗаказыНаПроизводство.Остатки(
				   |			&КонГраница, 
				   |			ЗаказНаПроизводство В (&МассивЗаказов)) 								КАК ЗаказыНаПроизводствоОстатки
				   |	ПО 
				   |		ЗаказыНаПроизводствоОстатки.ЗаказНаПроизводство = ПотребностиЗаказовНаПроизводствоОстатки.ЗаказНаПроизводство И
				   |			(
				   |			ПотребностиЗаказовНаПроизводствоОстатки.Продукция = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ИЛИ
				   |				(ЗаказыНаПроизводствоОстатки.Номенклатура = ПотребностиЗаказовНаПроизводствоОстатки.Продукция И
				   |				ЗаказыНаПроизводствоОстатки.ХарактеристикаНоменклатуры = ПотребностиЗаказовНаПроизводствоОстатки.ХарактеристикаПродукции)
				   |			)
				   |ГДЕ ЕСТЬNULL(ЗаказыНаПроизводствоОстатки.КоличествоОстаток,0) = 0
	               |ДЛЯ ИЗМЕНЕНИЯ РегистрНакопления.ПотребностиЗаказовНаПроизводство.Остатки";

	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("ДатаОстатков",  ГраницаОстатков);
	Запрос.УстановитьПараметр("КонГраница",    ГраницаОстатков);
    Запрос.УстановитьПараметр("МассивЗаказов", МассивЗаказов);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДвижения = ТабДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДвижения, Выборка);
	КонецЦикла; 
	
	ТаблицыДанныхДокумента = Новый Структура;
	ТаблицыДанныхДокумента.Вставить("Материалы", ТабДвижений);
	
	ОбщегоНазначения.ЗаписатьТаблицыДокументаВРегистр(НаборДвижений, ВидДвиженияНакопления.Расход, ТаблицыДанныхДокумента, ДокОбъект.Дата);
	
КонецПроцедуры // ВыполнитьПогашениеПотребностиИсполненныхЗаказовНаПроизводство()

// Процедура выполняет движение по регистру ПотребностиЗаказовНаПроизводство
// 	Если способ закрытия потребностей автоматический, то используется распределениее материалов
// 	Если способ закрытия потребностей "Явно", то погашаются потребности только по исполненным заказам
//
// Параметры:
//
//  ДокОбъект 										- <ДокументОбъект>
//  ВидДокумента									- <строка> - ВидДокумента документа
//  ДопПараметры									- <Структура>
//
Процедура ВыполнитьПогашениеПотребностиЗаказаНаПроизводство(ДокОбъект, ВидДокумента, ДопПараметры = Неопределено) Экспорт
	
	// Значения по умолчанию
	ИмяРеквизитаЗаказ = "ЗаказВыпуска";
	ИмяТабличнойЧастиПродукция = "Продукция";
	СпособЗакрытияПотребностейЗаказовНаПроизводство = Перечисления.СпособыЗакрытияПотребностейЗаказовНаПроизводство.АвтоматическиПриРаспределении;
	СтруктураШапкиДокумента = новый Структура;
	// Если переданы параметры, то получим их
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство("ИмяРеквизитаЗаказ") Тогда
			ИмяРеквизитаЗаказ = ДопПараметры.ИмяРеквизитаЗаказ;
		КонецЕсли; 
		Если ДопПараметры.Свойство("ИмяТабличнойЧастиПродукция") Тогда
			ИмяТабличнойЧастиПродукция = ДопПараметры.ИмяТабличнойЧастиПродукция;
		КонецЕсли;
		Если ДопПараметры.Свойство("СтруктураШапкиДокумента") Тогда
			СтруктураШапкиДокумента = ДопПараметры.СтруктураШапкиДокумента;
		КонецЕсли; 
		Если ДопПараметры.Свойство("СпособЗакрытияПотребностейЗаказовНаПроизводство") Тогда
			СпособЗакрытияПотребностейЗаказовНаПроизводство = ДопПараметры.СпособЗакрытияПотребностейЗаказовНаПроизводство;
		КонецЕсли;
	КонецЕсли; 
	
	// Закроем потребности в зависимости от способа закрытия
	Если СпособЗакрытияПотребностейЗаказовНаПроизводство = Перечисления.СпособыЗакрытияПотребностейЗаказовНаПроизводство.АвтоматическиПриРаспределении Тогда
		ВыполнитьПогашениеПотребностиЗаказаНаПроизводствоПоРаспределению(ДокОбъект, ВидДокумента, ИмяРеквизитаЗаказ, СтруктураШапкиДокумента, ИмяТабличнойЧастиПродукция);
		
	ИначеЕсли СпособЗакрытияПотребностейЗаказовНаПроизводство = Перечисления.СпособыЗакрытияПотребностейЗаказовНаПроизводство.Явно Тогда
		ВыполнитьПогашениеПотребностиИсполненныхЗаказовНаПроизводство(ДокОбъект, ВидДокумента, ИмяТабличнойЧастиПродукция, ИмяРеквизитаЗаказ);
		
	КонецЕсли; 
	
КонецПроцедуры // ВыполнитьПогашениеПотребностиЗаказаНаПроизводство()

// Заполняет переданную табличную часть по остаткам
//
// Параметры:
//  ТабЧасть - табличная часть.
//  ЗаказНаПроизводство - заказ на производство.
//
Процедура ЗаполнитьТабличнуюЧастьПродукцияПоОстаткамЗаказовНаПроизводство(ТабЧасть, ЗаказНаПроизводство, ДатаОстатков, ДопПараметры = Неопределено) Экспорт

	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегЗаказыНаПроизводство.Номенклатура КАК Номенклатура,
		|	РегЗаказыНаПроизводство.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ПРЕДСТАВЛЕНИЕ(РегЗаказыНаПроизводство.Номенклатура) КАК НоменклатураПред,
		|	ПРЕДСТАВЛЕНИЕ(РегЗаказыНаПроизводство.ХарактеристикаНоменклатуры) КАК ХарактеристикаПред,
		|	РегЗаказыНаПроизводство.Номенклатура.ВестиУчетПоХарактеристикам КАК ВестиУчетПоХарактеристикам,
		|	РегЗаказыНаПроизводство.КоличествоОстаток КАК Заказано,
		|	0 КАК Размещено,
		|	NULL КАК ЗаказПокупателя,
		|	РегЗаказыНаПроизводство.ВидВоспроизводства КАК ВидВоспроизводства,
		|	РегЗаказыНаПроизводство.Спецификация КАК Спецификация,
		|	РегЗаказыНаПроизводство.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	РегЗаказыНаПроизводство.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
		|	РегЗаказыНаПроизводство.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЕдиницаХраненияОстатковКоэффициент

		|ИЗ
		|	РегистрНакопления.ЗаказыНаПроизводство.Остатки(&ДатаОстатков, ЗаказНаПроизводство = &ПроизвЗаказ) КАК РегЗаказыНаПроизводство
		|			
		|ОБЪЕДИНИТЬ ВСЕ
		|			
		|ВЫБРАТЬ
		|	РегРазмещение.Номенклатура,
		|	РегРазмещение.ХарактеристикаНоменклатуры,
		|	ПРЕДСТАВЛЕНИЕ(РегРазмещение.Номенклатура) КАК НоменклатураПред,
		|	ПРЕДСТАВЛЕНИЕ(РегРазмещение.ХарактеристикаНоменклатуры) КАК ХарактеристикаПред,
		|	РегРазмещение.Номенклатура.ВестиУчетПоХарактеристикам КАК ВестиУчетПоХарактеристикам,
		|	0,
		|	РегРазмещение.КоличествоОстаток,
		|	РегРазмещение.ЗаказПокупателя,
		|	NULL,
		|	NULL,
		|	NULL,
		|	NULL,
		|	РегРазмещение.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК ЕдиницаХраненияОстатковКоэффициент

		|ИЗ
		|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(&ДатаОстатков
		|		,
		|		ТоварТара = &ТоварТара
		|			И ЗаказПоставщику = &ПроизвЗаказ) КАК РегРазмещение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Заказано УБЫВ,
		|	Размещено УБЫВ
		|ИТОГИ
		|	СУММА(Заказано),
		|	СУММА(Размещено)
		|ПО
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры
		|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ПроизвЗаказ", ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ТоварТара",   Перечисления.ТоварТара.Товар);
	Запрос.УстановитьПараметр("ДатаОстатков",   ДатаОстатков);

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ОтрицательноеКоличество = Ложь;
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство("ОтрицательноеКоличество") Тогда
			ОтрицательноеКоличество = ДопПараметры.ОтрицательноеКоличество;
		КонецЕсли;
	КонецЕсли;
	
	МассивОстатков    = Новый Массив;
	СоответствиеСтрок = Новый Соответствие;
	ТекстЗаказ = "Размещение под заказ: " + ОбщегоНазначения.СформироватьЗаголовокДокумента(ЗаказНаПроизводство) + " превышает остаток по данному заказу.";
	ФлагЕстьОшибкаРазмещения = Ложь;
	
	ОбходНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбходНоменклатура.Следующий() Цикл
		ОбходХарактеристика = ОбходНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ОбходХарактеристика.Следующий() Цикл
			ТекстСтр = "";
			ФлагЕстьОшибка = Ложь;
			Если ОбходХарактеристика.Размещено - ОбходХарактеристика.Заказано > 0 Тогда
				ТекстЗаказ = ТекстЗаказ + Символы.ПС + "Продукция: """ + ОбходНоменклатура.НоменклатураПред + """ " +
						?(ОбходНоменклатура.ВестиУчетПоХарактеристикам,
							?(ПустаяСтрока(ОбходХарактеристика.ХарактеристикаПред),
								"<Характеристика не задана>",
								"Характеристика: """ + ОбходХарактеристика.ХарактеристикаПред), "") + """" +
						Символы.ПС + "Всего заказано: " + ОбходХарактеристика.Заказано + " размещено: " + ОбходХарактеристика.Размещено +
							" Превышение размещения над заказом: " + (ОбходХарактеристика.Размещено - ОбходХарактеристика.Заказано);
				ФлагЕстьОшибка = Истина;
			КонецЕсли;
			
			МассивОстатков.Очистить();
			
			Обход = ОбходХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Обход.Следующий() Цикл
			
				// Детальные записи. В связи с упорядочиванием первыми должны располагаться записи
				// из регистра ЗаказыНаПроизводство         (признак поле ЗаказПокупателя == NULL), далее
				// из регистра РазмещениеЗаказовПокупателей (признак поле ЗаказПокупателя <> NULL)
				// Алгоритм обхода следующий:
				//		Вначале переносим в документ строки (по сути остатки) из регистра ЗаказыНаПроизводство и запоминаем
				//		их (строки) в массиве. Далее при наличии строк с указанным заказом (размещением)
				//		пытаемся использовать строки из массива строк с пустым заказом (размещением). Если нет таких строк
				//		выдаем сообщение о превышении размещения по данному заказу на производство остаткам по этому заказу.
				
				Если Обход.ЗаказПокупателя = NULL Тогда // Это строка с остатком. Добавляем в документ
					
					НоваяСтрока = ТабЧасть.Добавить();
					НоваяСтрока.Номенклатура               = Обход.Номенклатура;
					НоваяСтрока.ХарактеристикаНоменклатуры = Обход.ХарактеристикаНоменклатуры;
					
					НоваяСтрока.Спецификация       = Обход.Спецификация;
					НоваяСтрока.ВидВоспроизводства = Обход.ВидВоспроизводства;
					Если Обход.ЕдиницаИзмерения = null Тогда
						НоваяСтрока.ЕдиницаИзмерения   = Обход.Номенклатура.ЕдиницаХраненияОстатков;
					Иначе	
						НоваяСтрока.ЕдиницаИзмерения   = Обход.ЕдиницаИзмерения;
					КонецЕсли;	
					НоваяСтрока.Коэффициент        = Обход.Коэффициент;
					Если Обход.ЕдиницаХраненияОстатковКоэффициент = null или Обход.Коэффициент = null Тогда
						НоваяСтрока.Количество         = Обход.Заказано;
					Иначе	
						НоваяСтрока.Количество         = Обход.Заказано * Обход.ЕдиницаХраненияОстатковКоэффициент / Обход.Коэффициент;
                    КонецЕсли;
					МассивОстатков.Добавить(НоваяСтрока);
					СоответствиеСтрок.Вставить(НоваяСтрока);
				
				Иначе
				
					Если Обход.Размещено <= 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Текст = "";
					КолРазмещение = Обход.Размещено;
					
					Пока КолРазмещение > 0 И МассивОстатков.Количество() > 0 Цикл
						Если Обход.ЕдиницаХраненияОстатковКоэффициент = null Тогда
							КолРазмещениеЕдиницыДокумента = КолРазмещение;
							МожноРазместитьЕдиницыДокумента = Мин(МассивОстатков[0].Количество, КолРазмещение);
							МожноРазместить = Мин(МассивОстатков[0].Количество, КолРазмещение);
                        Иначе
					    	КолРазмещениеЕдиницыДокумента = КолРазмещение * Обход.ЕдиницаХраненияОстатковКоэффициент / МассивОстатков[0].Коэффициент; 
							МожноРазместитьЕдиницыДокумента = Мин(МассивОстатков[0].Количество, КолРазмещениеЕдиницыДокумента);
                            МожноРазместить = Мин(МассивОстатков[0].Количество * МассивОстатков[0].Коэффициент / Обход.ЕдиницаХраненияОстатковКоэффициент, КолРазмещение);
						КонецЕсли;
						
					    // Делаем дубль строки
						НоваяСтрока = ТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, МассивОстатков[0]);
						СоответствиеСтрок.Вставить(НоваяСтрока);
						
						НоваяСтрока.Количество = МожноРазместитьЕдиницыДокумента;
						
						НоваяСтрока.Заказ      = Обход.ЗаказПокупателя;
						
						КолРазмещение          = КолРазмещение - МожноРазместить;
						
						Если МассивОстатков[0].Количество - МожноРазместитьЕдиницыДокумента = 0 Тогда // Весь свободный остаток в данной строке закончился. Строку можно удалить
							СоответствиеСтрок.Удалить(МассивОстатков[0]); // Удаляем строку из списка строк
							ТабЧасть.Удалить(МассивОстатков[0]);          // Удаляем строку из документа
							МассивОстатков.Удалить(0);                    // И сразу элемент массива, т.к. он ссылается на уже несуществующую строку.
						Иначе
							МассивОстатков[0].Количество = МассивОстатков[0].Количество - МожноРазместитьЕдиницыДокумента;
						КонецЕсли;
						
					КонецЦикла;
					Если ФлагЕстьОшибка Тогда
						ТекстСтр = ТекстСтр + Символы.ПС + " - По заказу: """ + ОбщегоНазначения.СформироватьЗаголовокДокумента(Обход.ЗаказПокупателя) + """ размещено: " + Обход.Размещено;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ФлагЕстьОшибка Тогда
				ТекстЗаказ = ТекстЗаказ + ТекстСтр + Символы.ПС;
				ФлагЕстьОшибкаРазмещения = ФлагЕстьОшибкаРазмещения ИЛИ ФлагЕстьОшибка;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	// Если требовалось отрицательное количество изменим знак результата
	Если ОтрицательноеКоличество Тогда
		Для Каждого СтрокаТабЧасти Из СоответствиеСтрок Цикл
			СтрокаТабЧасти.Ключ.Количество = - СтрокаТабЧасти.Ключ.Количество;
		КонецЦикла;
	КонецЕсли;
	
	Если ФлагЕстьОшибкаРазмещения Тогда
		Сообщить(ТекстЗаказ, СтатусСообщения.Внимание);
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьПоОстаткамВнутреннийЗаказ()

// Процедура заполняет таб. часть по потребностям.
//
Процедура ЗаполнитьТабличнуюЧастьПоПотребностямЗаказаНаПроизводство(ТабЧасть, ЗаказНаПроизводство, ДопПараметры = Неопределено) Экспорт

	ВидВоспроизводства = Неопределено;
	ВернутьРезультатЗапроса = Ложь;
	ИмяРеквЗаказТабЧасть = "ЗаказВыпуска";
	ИмяЗаказРезерв = Неопределено;
	Склад = Неопределено;
	ИмяСпособСписанияОстатка = неопределено;
	ОтборПродукция = неопределено;
	ОтборХарактеристикаПродукции = неопределено;
	ОтборПродукцияУслуга = неопределено;
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство("ВидВоспроизводства") Тогда
			ВидВоспроизводства = ДопПараметры.ВидВоспроизводства;
		КонецЕсли;
		Если ДопПараметры.Свойство("ВернутьРезультатЗапроса") Тогда
			ВернутьРезультатЗапроса = ДопПараметры.ВернутьРезультатЗапроса;
		КонецЕсли;
		Если ДопПараметры.Свойство("ИмяРеквЗаказТабЧасть") Тогда
			ИмяРеквЗаказТабЧасть = ДопПараметры.ИмяРеквЗаказТабЧасть;
		КонецЕсли;
		
		Если ДопПараметры.Свойство("ЗаказРезерв") Тогда
			// Если есть заказ резерв, то должен быть склад
			Если ДопПараметры.Свойство("Склад") Тогда
				Если ЗначениеЗаполнено(ДопПараметры.Склад) Тогда
					Склад = ДопПараметры.Склад;
					ИмяЗаказРезерв = ДопПараметры.ЗаказРезерв;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ДопПараметры.Свойство("СпособСписанияОстатка") Тогда
			// Если есть заказ резерв, то должен быть склад
			Если ДопПараметры.Свойство("Склад") Тогда
				Если ЗначениеЗаполнено(ДопПараметры.Склад) Тогда
					Склад = ДопПараметры.Склад;
					ИмяСпособСписанияОстатка = ДопПараметры.СпособСписанияОстатка;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Если ДопПараметры.Свойство("ОтборНоменклатураХарактеристика") Тогда
			ОтборПродукция = ДопПараметры.ОтборНоменклатураХарактеристика.Продукция;
			ОтборХарактеристикаПродукции = ДопПараметры.ОтборНоменклатураХарактеристика.ХарактеристикаПродукции;
		КонецЕсли;
		Если ДопПараметры.Свойство("ОтборПродукцияУслуга") Тогда
			ОтборПродукцияУслуга = ДопПараметры.ОтборПродукцияУслуга;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПроизвЗаказ", ЗаказНаПроизводство);
	
	ТекстОтбор = "";
	Если ВидВоспроизводства <> Неопределено Тогда
		ТекстОтбор = ТекстОтбор + " И ВидВоспроизводства В(&ВидВоспроизводства) ";
		Запрос.УстановитьПараметр("ВидВоспроизводства", ВидВоспроизводства);
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПродукция) Тогда
		ТекстОтбор = ТекстОтбор + " И Продукция = &Продукция ";
		Запрос.УстановитьПараметр("Продукция", ОтборПродукция);
		Если ОтборХарактеристикаПродукции<>Неопределено Тогда
			ТекстОтбор = ТекстОтбор + " И ХарактеристикаПродукции = &ХарактеристикаПродукции ";
			Запрос.УстановитьПараметр("ХарактеристикаПродукции", ОтборХарактеристикаПродукции);
		КонецЕсли;
	КонецЕсли;
	Если ЗначениеЗаполнено(ОтборПродукцияУслуга) Тогда
		ТекстОтбор = ТекстОтбор + " И "+?(ОтборПродукцияУслуга,"","НЕ ")+"Продукция.Услуга";
	КонецЕсли;
	
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегПотребности.ЗаказНаПроизводство КАК " + ИмяРеквЗаказТабЧасть + ",
		|	РегПотребности.Номенклатура,
		|	РегПотребности.ХарактеристикаНоменклатуры,
		|	РегПотребности.Продукция,
		|	РегПотребности.ХарактеристикаПродукции,
		|	РегПотребности.ЕдиницаИзмерения,
		|	РегПотребности.ЕдиницаИзмерения.Коэффициент КАК Коэффициент,
		|	РегПотребности.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаХраненияОстатков,
		|	РегПотребности.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК КоэффициентХраненияОстатков,
		|	РегПотребности.Номенклатура.СтатьяЗатрат КАК СтатьяЗатрат,
		|	РегПотребности.Спецификация,
		|	РегПотребности.Подразделение,
		|	РегПотребности.ВидВоспроизводства,
		|	РегПотребности.КоличествоОстаток КАК Количество
		|	//ДОПОЛНЕНИЕ_Резервы , ЕСТЬNULL(РегРезервы.КоличествоОстаток, 0) КАК КоличествоРезерв
		|	//ДОПОЛНЕНИЕ_ЗаказРезерв , РегРезервы.ДокументРезерва КАК " + ИмяЗаказРезерв + "
		|	//ДОПОЛНЕНИЕ_СпособСписания , ВЫБОР КОГДА ЕСТЬNULL(РегРезервы.КоличествоОстаток, 0)>0 Тогда &ИзРезерва ИНАЧЕ &СоСклада КОНЕЦ КАК " + ИмяСпособСписанияОстатка + "
		|ИЗ
		|	РегистрНакопления.ПотребностиЗаказовНаПроизводство.Остатки(, ЗаказНаПроизводство В (&ПроизвЗаказ) " + ТекстОтбор + ") КАК РегПотребности
		|   //ДОПОЛНЕНИЕ_Резервы ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(,ДокументРезерва В (&ПроизвЗаказ) И Склад = &Склад) КАК РегРезервы
		|   //ДОПОЛНЕНИЕ_Резервы ПО РегРезервы.Номенклатура = РегПотребности.Номенклатура
		|	//ДОПОЛНЕНИЕ_Резервы И РегРезервы.ХарактеристикаНоменклатуры = РегПотребности.ХарактеристикаНоменклатуры
		|	//ДОПОЛНЕНИЕ_Резервы И РегРезервы.КоличествоОстаток > 0
		|ГДЕ РегПотребности.КоличествоОстаток>0";
		
	Если ИмяЗаказРезерв <> Неопределено ИЛИ ИмяСпособСписанияОстатка<>неопределено Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ДОПОЛНЕНИЕ_Резервы", "");
		Запрос.УстановитьПараметр("Склад", Склад);
		Если ИмяЗаказРезерв <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ДОПОЛНЕНИЕ_ЗаказРезерв", "");
		КонецЕсли;
		Если ИмяСпособСписанияОстатка <> Неопределено Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"//ДОПОЛНЕНИЕ_СпособСписания", "");
			Запрос.УстановитьПараметр("СоСклада", Перечисления.СпособыСписанияОстаткаТоваров.СоСклада);
			Запрос.УстановитьПараметр("ИзРезерва", Перечисления.СпособыСписанияОстаткаТоваров.ИзРезерва);
		КонецЕсли;
	КонецЕсли; 	
		
	Запрос.Текст = ТекстЗапроса;
	
	Если ВернутьРезультатЗапроса Тогда
		ТабЧасть = Запрос.Выполнить();
	Иначе
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			СтрокаТЧ = ТабЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка);
			СтрокаТЧ.Количество = Выборка.Количество * Выборка.КоэффициентХраненияОстатков / Выборка.Коэффициент;
			Если ИмяЗаказРезерв <> Неопределено ИЛИ ИмяСпособСписанияОстатка <> Неопределено Тогда
				Если Выборка.КоличествоРезерв <> 0
				И Выборка.КоличествоРезерв < Выборка.Количество Тогда
					СтрокаТЧКопия = ТабЧасть.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТЧКопия, СтрокаТЧ);
					СтрокаТЧКопия.Количество = (Выборка.Количество - Выборка.КоличествоРезерв) * Выборка.КоэффициентХраненияОстатков / Выборка.Коэффициент;
					Если ИмяЗаказРезерв <> Неопределено Тогда
						СтрокаТЧКопия[ИмяЗаказРезерв] = Документы.ЗаказНаПроизводство.ПустаяСсылка();
					КонецЕсли;
					Если ИмяСпособСписанияОстатка <> Неопределено Тогда
						СтрокаТЧКопия[ИмяСпособСписанияОстатка] = Перечисления.СпособыСписанияОстаткаТоваров.СоСклада;
					КонецЕсли;
					
					СтрокаТЧ.Количество = Выборка.КоличествоРезерв * Выборка.КоэффициентХраненияОстатков / Выборка.Коэффициент;
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьПоПотребностямЗаказаНаПроизводство()

// Заполняет переданную табличную часть по остаткам
//
// Параметры:
//  ТабЧасть - табличная часть.
//
Процедура ЗаполнитьТабличнуюЧастьМатериалыПоОстаткам(ТабЧасть, ЗаказНаПроизводство, ДопПараметры = Неопределено) Экспорт

	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	1                                         КАК Источник,
		|	РегПотребности.Номенклатура               КАК Номенклатура,
		|	РегПотребности.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	РегПотребности.Продукция                  КАК Продукция,
		|	РегПотребности.ХарактеристикаПродукции    КАК ХарактеристикаПродукции,
		|	РегПотребности.ЕдиницаИзмерения           КАК ЕдиницаИзмерения,
		|	РегПотребности.ВидВоспроизводства         КАК ВидВоспроизводства,
		|	РегПотребности.Спецификация               КАК Спецификация,
		|	РегПотребности.Подразделение              КАК Подразделение,
		|	NULL                                      КАК Размещение,
		|	""""                                      КАК РазмещениеПред,
		|	РегПотребности.Номенклатура.ВестиУчетПоХарактеристикам   КАК НоменклатураВестиУчетПоХарактеристикам,
		|	РегПотребности.Продукция.ВестиУчетПоХарактеристикам      КАК ПродукцияВестиУчетПоХарактеристикам,
		|	ПРЕДСТАВЛЕНИЕ(РегПотребности.Номенклатура)               КАК НоменклатураПред,
		|	ПРЕДСТАВЛЕНИЕ(РегПотребности.Продукция)                  КАК ПродукцияПред,
		|	ПРЕДСТАВЛЕНИЕ(РегПотребности.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПред,
		|	ПРЕДСТАВЛЕНИЕ(РегПотребности.ХарактеристикаПродукции)    КАК ХарактеристикаПродукцииПред,
		|	ПРЕДСТАВЛЕНИЕ(РегПотребности.Подразделение)              КАК ПодразделениеПред,
		|	РегПотребности.ЕдиницаИзмерения.Коэффициент              КАК Коэффициент,
		|	РегПотребности.КоличествоОстаток          КАК КолПотребность,
		|	0                                         КАК КолРезерв
		|ИЗ
		|	РегистрНакопления.ПотребностиЗаказовНаПроизводство.Остатки(, ЗаказНаПроизводство = &ПроизвЗаказ) КАК РегПотребности
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ПорядокРезерва                       КАК Источник,
		|	РегРезервы.Номенклатура               КАК Номенклатура,
		|	РегРезервы.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	NULL                                  КАК Продукция,
		|	NULL                                  КАК ХарактеристикаПродукции,
		|	NULL                                  КАК ЕдиницаИзмерения,
		|	NULL                                  КАК ВидВоспроизводства,
		|	NULL                                  КАК Спецификация,
		|	NULL                                  КАК Подразделение,
		|	РегРезервы.Склад                      КАК Размещение,
		|	ПРЕДСТАВЛЕНИЕ(РегРезервы.Склад)       КАК РазмещениеПред,
		|	РегРезервы.Номенклатура.ВестиУчетПоХарактеристикам   КАК НоменклатураВестиУчетПоХарактеристикам,
		|	Ложь                                                 КАК ПродукцияВестиУчетПоХарактеристикам,
		|	ПРЕДСТАВЛЕНИЕ(РегРезервы.Номенклатура)               КАК НоменклатураПред,
		|	""""                                                 КАК ПродукцияПред,
		|	ПРЕДСТАВЛЕНИЕ(РегРезервы.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПред,
		|	""""                                                 КАК ХарактеристикаПродукцииПред,
		|	""""                                                 КАК ПодразделениеПред,
		|	РегРезервы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
		|	0                                     КАК КолПотребность,
		|	РегРезервы.КоличествоОстаток          КАК КолРезерв
		|ИЗ
		|	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, ДокументРезерва = &ПроизвЗаказ) КАК РегРезервы
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ПорядокРазмещения                       КАК Источник,
		|	РегРазмещение.Номенклатура               КАК Номенклатура,
		|	РегРазмещение.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	NULL                                     КАК Продукция,
		|	NULL                                     КАК ХарактеристикаПродукции,
		|	NULL                                     КАК ЕдиницаИзмерения,
		|	NULL                                     КАК ВидВоспроизводства,
		|	NULL                                     КАК Спецификация,
		|	NULL                                     КАК Подразделение,
		|	РегРазмещение.ЗаказПоставщику            КАК Размещение,
		|	ПРЕДСТАВЛЕНИЕ(РегРазмещение.ЗаказПоставщику) КАК РазмещениеПред,
		|	РегРазмещение.Номенклатура.ВестиУчетПоХарактеристикам   КАК НоменклатураВестиУчетПоХарактеристикам,
		|	Ложь                                                    КАК ПродукцияВестиУчетПоХарактеристикам,
		|	ПРЕДСТАВЛЕНИЕ(РегРазмещение.Номенклатура)               КАК НоменклатураПред,
		|	""""                                                    КАК ПродукцияПред,
		|	ПРЕДСТАВЛЕНИЕ(РегРазмещение.ХарактеристикаНоменклатуры) КАК ХарактеристикаНоменклатурыПред,
		|	""""                                                    КАК ХарактеристикаПродукцииПред,
		|	""""                                                    КАК ПодразделениеПред,
		|	РегРазмещение.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
		|	0                                        КАК КолПотребность,
		|	РегРазмещение.КоличествоОстаток          КАК КолРезерв
		|ИЗ
		|	РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(
		|		,
		|		ЗаказПокупателя = &ПроизвЗаказ
		|			И ТоварТара = &ТоварТара) КАК РегРазмещение
		|
		|УПОРЯДОЧИТЬ ПО
		|	Источник
		|ИТОГИ
		|	СУММА(КолПотребность),
		|	СУММА(КолРезерв)
		|ПО
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры
		|";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ПроизвЗаказ", ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ТоварТара",   Перечисления.ТоварТара.Товар);
	
	СтратегияРезервирования = Константы.СтратегияАвторезервированияНоменклатурыПоЗаказам.Получить();
	
	ПорядокРезерва = 2;
	Если СтратегияРезервирования = Перечисления.СтратегииАвторезервированияНоменклатуры.СначалаВЗаказахПоставщикамПотомНаСкладах Тогда
		Запрос.УстановитьПараметр("ПорядокРезерва",    3);
		Запрос.УстановитьПараметр("ПорядокРазмещения", 2);
		ПорядокРезерва = 3;
	Иначе
		Запрос.УстановитьПараметр("ПорядокРезерва",    2);
		Запрос.УстановитьПараметр("ПорядокРазмещения", 3);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	МетаРеквизиты = Метаданные.НайтиПоТипу(Тип(ТабЧасть)).Реквизиты;
	ЕстьПолеВидВоспроизводства = МетаРеквизиты.Найти("ВидВоспроизводства") <> Неопределено;
	ЕстьПолеПродукция          = МетаРеквизиты.Найти("Продукция")          <> Неопределено;
	ЕстьПолеПодразделение      = МетаРеквизиты.Найти("Подразделение")      <> Неопределено;
	ЕстьПолеСпецификация       = МетаРеквизиты.Найти("Спецификация")       <> Неопределено;
	
	ОтрицательноеКоличество    = Ложь;
	НеПоказыватьЗарезервированные = ложь;
	ИмяРеквРазмещение = "Размещение";
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство("ИмяРеквРазмещение") Тогда
			ИмяРеквРазмещение = ДопПараметры.ИмяРеквРазмещение;
		КонецЕсли;
		Если ДопПараметры.Свойство("ОтрицательноеКоличество") Тогда
			ОтрицательноеКоличество = ДопПараметры.ОтрицательноеКоличество;
		КонецЕсли;
		Если ДопПараметры.Свойство("НеПоказыватьЗарезервированные") Тогда
			НеПоказыватьЗарезервированные = ДопПараметры.НеПоказыватьЗарезервированные;
		КонецЕсли;

	КонецЕсли;
	
	МассивОстатков    = Новый Массив;
	СоответствиеСтрок = Новый Соответствие;
	ТекстЗаказ = "Резерв (размещение) под заказ: " + ОбщегоНазначения.СформироватьЗаголовокДокумента(ЗаказНаПроизводство) + " превышает потребность по данному заказу.";
	ФлагЕстьОшибкаРазмещения = Ложь;
	
	ОбходНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбходНоменклатура.Следующий() Цикл
		ОбходХарактеристика = ОбходНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ОбходХарактеристика.Следующий() Цикл
		
			ТекстСтр = "";
			ФлагЕстьОшибка = Ложь;
			Если ОбходХарактеристика.КолРезерв - ОбходХарактеристика.КолПотребность > 0 Тогда
				ТекстЗаказ = ТекстЗаказ + Символы.ПС + "Потребность: """ + ОбходНоменклатура.НоменклатураПред + """ " +
						?(ОбходНоменклатура.НоменклатураВестиУчетПоХарактеристикам,
							?(ПустаяСтрока(ОбходХарактеристика.ХарактеристикаНоменклатурыПред),
								"<Характеристика не задана>",
								"Характеристика: """ + ОбходХарактеристика.ХарактеристикаНоменклатурыПред) + """", "") +
						Символы.ПС + "Требуется: " + ОбходХарактеристика.КолПотребность + " Резерв (размещение): " + ОбходХарактеристика.КолРезерв +
							" Превышение резерва (размещения) над потребностью: " + (ОбходХарактеристика.КолРезерв - ОбходХарактеристика.КолПотребность);
				ФлагЕстьОшибка = Истина;
			КонецЕсли;
			
			МассивОстатков.Очистить();
			
			Обход = ОбходХарактеристика.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока Обход.Следующий() Цикл
			
				// Детальные записи. В связи с упорядочиванием первыми должны располагаться записи
				// из регистра ЗаказыНаПроизводство         (признак поле Источник == 1), далее
				// из регистра ТоварыВРезервеНаСкладах      (признак поле Источник == 2), далее
				// из регистра РазмещениеЗаказовПокупателей (признак поле Источник == 3), далее
				// Алгоритм обхода следующий:
				//		Вначале переносим в документ строки (по сути остатки) из регистра ЗаказыНаПроизводство и запоминаем
				//		их (строки) в массиве. Далее при наличии строк с указанным размещением (резервом)
				//		пытаемся использовать строки из массива строк с размещением (резервом). Если нет таких строк
				//		выдаем сообщение о превышении размещения (резерва) по данному заказу на производство потребностям по этому заказу.
				//
				Если Обход.Источник = 1 Тогда // Это строка с остатком. Добавляем в документ
					
					НоваяСтрока = ТабЧасть.Добавить();
					НоваяСтрока.Номенклатура               = Обход.Номенклатура;
					НоваяСтрока.ХарактеристикаНоменклатуры = Обход.ХарактеристикаНоменклатуры;
					НоваяСтрока.ЕдиницаИзмерения   = Обход.ЕдиницаИзмерения;
					НоваяСтрока.Коэффициент        = Обход.Коэффициент;
					НоваяСтрока.Количество         = Окр(Обход.КолПотребность * Обход.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / Обход.Коэффициент,3); //количество пересчитаем в единицы документа
					
					Если ЕстьПолеПродукция Тогда
						НоваяСтрока.Продукция               = Обход.Продукция;
						НоваяСтрока.ХарактеристикаПродукции = Обход.ХарактеристикаПродукции;
					КонецЕсли;
					Если ЕстьПолеСпецификация Тогда
						НоваяСтрока.Спецификация       = Обход.Спецификация;
					КонецЕсли;
					Если ЕстьПолеПодразделение Тогда
						НоваяСтрока.Подразделение      = Обход.Подразделение;
					КонецЕсли;
					Если ЕстьПолеВидВоспроизводства Тогда
						НоваяСтрока.ВидВоспроизводства = Обход.ВидВоспроизводства;
					КонецЕсли;

					МассивОстатков.Добавить(НоваяСтрока);
					СоответствиеСтрок.Вставить(НоваяСтрока);
				
				Иначе
				
					Если Обход.КолРезерв <= 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Текст = "";
					КолРезерв = Обход.КолРезерв;
					Пока КолРезерв > 0 И МассивОстатков.Количество() > 0 Цикл
						МожноРазместить = Мин(МассивОстатков[0].Количество, КолРезерв);

						Если НЕ (НеПоказыватьЗарезервированные и ТипЗнч(Обход.Размещение) = Тип("СправочникССылка.Склады")) Тогда
							// Делаем дубль строки
							НоваяСтрока = ТабЧасть.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, МассивОстатков[0]);
							СоответствиеСтрок.Вставить(НоваяСтрока);
							
							НоваяСтрока.Количество = Окр(МожноРазместить * НоваяСтрока.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент / НоваяСтрока.Коэффициент,3);      //количество пересчитаем в единицы документа
							НоваяСтрока[ИмяРеквРазмещение] = Обход.Размещение;
						КонецЕсли;
						КолРезерв = КолРезерв - МожноРазместить;
						
						Если МассивОстатков[0].Количество - МожноРазместить = 0 Тогда // Весь свободный остаток в данной строке закончился. Строку можно удалить
							СоответствиеСтрок.Удалить(МассивОстатков[0]); // Удаляем строку из списка строк
							ТабЧасть.Удалить(МассивОстатков[0]);          // Удаляем строку документа
							МассивОстатков.Удалить(0);                    // И сразу элемент массива, т.к. он ссылается на уже несуществующую строку.
						Иначе
							МассивОстатков[0].Количество = МассивОстатков[0].Количество - МожноРазместить;
						КонецЕсли;
						
					КонецЦикла;
					Если ФлагЕстьОшибка Тогда
						Если Обход.Источник = ПорядокРезерва Тогда
							ТекстСтр = ТекстСтр + Символы.ПС + " - Склад: """ + Обход.РазмещениеПред + """ зарезервировано: " + Обход.КолРезерв;
						Иначе
							ТекстСтр = ТекстСтр + Символы.ПС + " - Заказ: """ + ОбщегоНазначения.СформироватьЗаголовокДокумента(Обход.Размещение) + """ размещено: " + Обход.КолРезерв;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если ФлагЕстьОшибка Тогда
				ТекстЗаказ = ТекстЗаказ + ТекстСтр + Символы.ПС;
				ФлагЕстьОшибкаРазмещения = ФлагЕстьОшибкаРазмещения ИЛИ ФлагЕстьОшибка;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Если ОтрицательноеКоличество Тогда
		Для Каждого СтрокаТабЧасти Из СоответствиеСтрок Цикл
			СтрокаТабЧасти.Ключ.Количество = - СтрокаТабЧасти.Ключ.Количество;
		КонецЦикла;
	КонецЕсли;
	
	Если ФлагЕстьОшибкаРазмещения Тогда
		флСообщать = истина;
		Если ДопПараметры.Свойство("НеВыводитьСообщения") Тогда
			флСообщать = не ДопПараметры.НеВыводитьСообщения; 
		КонецЕсли;
        Если флСообщать Тогда
			ОбщегоНазначения.Сообщение(ТекстЗаказ, СтатусСообщения.Внимание);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТабличнуюЧастьМатериалыПоОстаткам()

// Процедура заполняет таб.часть материалы возможными резервами и размещением
//
Процедура ЗаполнитьТабЧастьМатериалыВозможнымРазмещением(ДокОбъект, ТабЧасть, СтруктПараметров, МассивКУдалению) Экспорт
	ИмяДокумента = ДокОбъект.Метаданные().Имя;
	
	ПустоеРазмещение = ОбщегоНазначения.МассивПустыхЗначений(ДокОбъект.Метаданные().ТабличныеЧасти.Материалы.Реквизиты.Размещение.Тип);

    ТекстЗапроса_УжеРазмещено = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокКорректировка.Номенклатура КАК Номенклатура,
		|	ДокКорректировка.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	ДокКорректировка.НомерСтроки - 1 КАК НомерСтрокиДокумента,
		|	ДокКорректировка.Размещение КАК Размещение,
		|	ДокКорректировка.Количество КАК ДокКоличество
		|ИЗ
		|	Документ.%ИмяДокумента%.Материалы КАК ДокКорректировка
		|ГДЕ
		|	ДокКорректировка.Ссылка = &ДокСсылка
		|	И ДокКорректировка.Количество > 0
		|	И ДокКорректировка.Размещение НЕ В(&ПустоеРазмещение)
		|";
    Запрос = Новый Запрос;
	ТекстЗапроса_УжеРазмещено = СтрЗаменить(ТекстЗапроса_УжеРазмещено, "%ИмяДокумента%", ИмяДокумента);

	Запрос.Текст = ТекстЗапроса_УжеРазмещено;
	Запрос.УстановитьПараметр("ДокЗаказ",             СтруктПараметров.ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ДокСсылка",            ДокОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустоеРазмещение",     ПустоеРазмещение);
	ТабУжеРазмещено = Запрос.Выполнить().Выгрузить();
	
	// В случае наличия ограничения по группам доступности складов, добавим в текст запроса соответствующее условие
	ГруппаДоступностиСкладов = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ГруппаДоступностиСкладов");
	Если НЕ ЗначениеЗаполнено(ГруппаДоступностиСкладов) Тогда
		ОтборПоСкладам = "";
		ТекстФильтраПоСкладам = "";
	Иначе
		ТекстФильтраПоСкладам = "
		|		(ВЫБРАТЬ
		|			ГруппыДоступности.Склад
		|		ИЗ
		|			РегистрСведений.СоставГруппДоступностиСкладов КАК ГруппыДоступности
		|			ГДЕ ГруппыДоступности.ГруппаДоступности = &ГруппаДоступностиСкладов
		|		)";

		ОтборПоСкладам = " И Склад В "+ ТекстФильтраПоСкладам;
	КонецЕсли;


	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДокКорректировка.Номенклатура КАК Номенклатура,
		|	ДокКорректировка.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|	1 КАК Источник,
		|	1 КАК Порядок,
		|	ДокКорректировка.НомерСтроки - 1 КАК НомерСтрокиДокумента,
		|	NULL КАК Размещение,
		|	ДокКорректировка.Количество КАК ДокКоличество,
		|	0 КАК КолОстатки,
		|	0 КАК  ОстатокОрганизации
		|ИЗ
		|	Документ.%ИмяДокумента%.Материалы КАК ДокКорректировка
		|ГДЕ
		|	ДокКорректировка.Ссылка = &ДокСсылка
		|	И ДокКорректировка.Количество > 0
		|	И ДокКорректировка.Размещение В(&ПустоеРазмещение)
		|";
		
	Если СтруктПараметров.Авторезервирование Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегСвободныеОстатки.Номенклатура,
		|	РегСвободныеОстатки.ХарактеристикаНоменклатуры,
		|	2,
		|	&ПорядокРезерва,
		|	0,
		|	РегСвободныеОстатки.Склад,
		|	0,
		|	РегСвободныеОстатки.Количество,
		|	РегСвободныеОстатки.ОстатокОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегТовары.Склад КАК Склад,
		|		РегТовары.Номенклатура КАК Номенклатура,
		|		РегТовары.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		РегТовары.КоличествоОстаток - ЕСТЬNULL(РегРезервы.КоличествоОстаток, 0) - ЕСТЬNULL(РегТоварыКПередаче.КоличествоОстаток, 0) КАК Количество,
		|		ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток,0) КАК ОстатокОрганизации
		|	ИЗ
		|		РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			,  Качество = &Новый И
		|			Номенклатура В
		|			    (ВЫБРАТЬ
		|			        Док.Номенклатура
		|			    ИЗ
		|			        Документ.%ИмяДокумента%.Материалы КАК Док
		|			    ГДЕ
		|			        Док.Ссылка = &ДокСсылка)
		|			%ГруппаДоступностиСкладов%) КАК РегТовары
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(
		|			,
		|			Номенклатура В
		|			    (ВЫБРАТЬ
		|			        Док.Номенклатура
		|			    ИЗ
		|			        Документ.%ИмяДокумента%.Материалы КАК Док
		|			    ГДЕ
		|			        Док.Ссылка = &ДокСсылка)
		|			%ГруппаДоступностиСкладов%) КАК РегРезервы
		|			ПО РегТовары.Склад = РегРезервы.Склад
		|				И РегТовары.Номенклатура = РегРезервы.Номенклатура
		|				И РегТовары.ХарактеристикаНоменклатуры = РегРезервы.ХарактеристикаНоменклатуры
		|
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыКПередачеСоСкладов.Остатки(
		|			,  Качество = &Новый  И
		|			Номенклатура В
		|			    (ВЫБРАТЬ
		|			        Док.Номенклатура
		|			    ИЗ
		|			        Документ.%ИмяДокумента%.Материалы КАК Док
		|			    ГДЕ
		|			        Док.Ссылка = &ДокСсылка)
		|			%ГруппаДоступностиСкладов%) КАК РегТоварыКПередаче
		|			ПО РегТовары.Склад = РегТоварыКПередаче.Склад
		|				И РегТовары.Номенклатура = РегТоварыКПередаче.Номенклатура
		|				И РегТовары.ХарактеристикаНоменклатуры = РегТоварыКПередаче.ХарактеристикаНоменклатуры
		|ЛЕВОЕ СОЕДИНЕНИЕ
		|	РегистрНакопления.ТоварыОрганизаций.Остатки(, Организация = &Организация И Качество = &Новый) КАК ТоварыОрганизацийОстатки
		|ПО   РегТовары.Номенклатура               = ТоварыОрганизацийОстатки.Номенклатура
		|   И РегТовары.ХарактеристикаНоменклатуры = ТоварыОрганизацийОстатки.ХарактеристикаНоменклатуры
		|	ГДЕ
		|		РегТовары.КоличествоОстаток>0 И РегТовары.КоличествоОстаток - ЕСТЬNULL(РегРезервы.КоличествоОстаток, 0) - ЕСТЬNULL(РегТоварыКПередаче.КоличествоОстаток, 0) > 0) КАК РегСвободныеОстатки
		|";
	КонецЕсли;
	
	Если СтруктПараметров.Авторазмещение Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегЗаказы.Номенклатура,
		|	РегЗаказы.ХарактеристикаНоменклатуры,
		|	3,
		|	&ПорядокРазмещения,
		|	0,
		|	РегЗаказы.Размещение,
		|	0,
		|	РегЗаказы.Количество,
		|	0
		|ИЗ
		|	(ВЫБРАТЬ
		|		РегЗаказыОстатки.Номенклатура КАК Номенклатура,
		|		РегЗаказыОстатки.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		РегЗаказыОстатки.Размещение КАК Размещение,
		|		РегЗаказыОстатки.Количество - ЕСТЬNULL(РегРазмещение.КоличествоОстаток, 0) КАК Количество
		|	ИЗ
		|		(ВЫБРАТЬ
		|			РегЗаказыПоставщикам.Номенклатура КАК Номенклатура,
		|			РегЗаказыПоставщикам.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|			РегЗаказыПоставщикам.ЗаказПоставщику КАК Размещение,
		|			РегЗаказыПоставщикам.КоличествоОстаток КАК Количество
		|		ИЗ
		|			РегистрНакопления.ЗаказыПоставщикам.Остатки(
		|				, ЗаказПоставщику.ДатаПоступления <= &ДатаОтгрузки
		|				И СтатусПартии В (&СтатусыПартииЗаказов)
		|				И ЗаказПоставщику.Организация = &Организация
		|				И Номенклатура В
		|				    (ВЫБРАТЬ
		|				        Док.Номенклатура
		|				    ИЗ
		|				        Документ.%ИмяДокумента%.Материалы КАК Док
		|				    ГДЕ
		|				        Док.Ссылка = &ДокСсылка)
		|	"+?(ЗначениеЗаполнено(ГруппаДоступностиСкладов)," И ЗаказПоставщику.Склад В " + ТекстФильтраПоСкладам,"")+"	) КАК РегЗаказыПоставщикам
		|		
		|		) КАК РегЗаказыОстатки
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РазмещениеЗаказовПокупателей.Остатки(
		|			,
		|			Номенклатура В
		|			    (ВЫБРАТЬ
		|			        Док.Номенклатура
		|			    ИЗ
		|			        Документ.%ИмяДокумента%.Материалы КАК Док
		|			    ГДЕ
		|			        Док.Ссылка = &ДокСсылка)) КАК РегРазмещение
		|			ПО РегРазмещение.Номенклатура = РегЗаказыОстатки.Номенклатура
		|				И РегЗаказыОстатки.ХарактеристикаНоменклатуры = РегРазмещение.ХарактеристикаНоменклатуры
		|				И РегЗаказыОстатки.Размещение = РегРазмещение.ЗаказПоставщику
		|	ГДЕ
		|		РегЗаказыОстатки.Количество>0 И РегЗаказыОстатки.Количество - ЕСТЬNULL(РегРазмещение.КоличествоОстаток, 0) > 0) КАК РегЗаказы
		|";
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	Порядок
		|
		|ИТОГИ
		|	СУММА(ДокКоличество),
		|	СУММА(КолОстатки)
		|
		|ПО
		|	Номенклатура,
		|	ХарактеристикаНоменклатуры
		|
		|";
		
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ГруппаДоступностиСкладов%", ОтборПоСкладам);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%ИмяДокумента%", ДокОбъект.Метаданные().Имя);
	
	
	СтатусыПартииЗаказов = Новый Массив;
	СтатусыПартииЗаказов.Добавить(Перечисления.СтатусыПартийТоваров.Купленный);
	СтатусыПартииЗаказов.Добавить(Перечисления.СтатусыПартийТоваров.Продукция);
	
	// Инициализация запроса
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Организация = ДокОбъект.Организация;
	ТипДокумента = ТипЗнч(ДокОбъект.Ссылка);
	Если ТипДокумента = Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		ДатаИсполнения = ДокОбъект.ДатаИсполнения;
	ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаЗаказаНаПроизводство") Тогда
		ДатаИсполнения = ДокОбъект.ЗаказНаПроизводство.ДатаИсполнения;

	Иначе
		ДатаИсполнения = ДокОбъект.Дата;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ДатаИсполнения) Тогда
		ДатаИсполнения = ДокОбъект.Дата;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ДокЗаказ",             СтруктПараметров.ЗаказНаПроизводство);
	Запрос.УстановитьПараметр("ДокСсылка",            ДокОбъект.Ссылка);
	Запрос.УстановитьПараметр("ПустоеРазмещение",     ПустоеРазмещение);
	Запрос.УстановитьПараметр("Организация",     	  Организация);
	Запрос.УстановитьПараметр("Новый",                Справочники.Качество.Новый);
	Запрос.УстановитьПараметр("СтатусыПартииЗаказов", СтатусыПартииЗаказов);
    Запрос.УстановитьПараметр("ГруппаДоступностиСкладов", ГруппаДоступностиСкладов);
	Запрос.УстановитьПараметр("ДатаОтгрузки",                ДатаИсполнения);

	Если СтруктПараметров.СтратегияАвторезервированияПоЗаказам = Перечисления.СтратегииАвторезервированияНоменклатуры.СначалаВЗаказахПоставщикамПотомНаСкладах Тогда
		Запрос.УстановитьПараметр("ПорядокРезерва",    3);
		Запрос.УстановитьПараметр("ПорядокРазмещения", 2);
	Иначе
		Запрос.УстановитьПараметр("ПорядокРезерва",    2);
		Запрос.УстановитьПараметр("ПорядокРазмещения", 3);
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	// Получим права пользователя на превышение остатков по организации.
	ПраваНаПревышениеОстатковПоОрганизации = УправлениеДопПравамиПользователей.РазрешеноПревышениеОстаткаТоваровОрганизации(Организация);

	МассивСтрок = Новый Массив;
	
	ОбходНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ОбходНоменклатура.Следующий() Цикл
		ОбходХарактеристика = ОбходНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ОбходХарактеристика.Следующий() Цикл
		
			Если ОбходХарактеристика.ДокКоличество = 0 Тогда
				Продолжить; // Нет такой номенклатуры/характеристики в документе
			КонецЕсли;
			
			МассивСтрок.Очистить();
			
			Обход = ОбходХарактеристика.Выбрать();
			Пока Обход.Следующий() Цикл
				Если Обход.Источник = 1 Тогда // Это исходная строка документа
					МассивСтрок.Добавить(ТабЧасть[Обход.НомерСтрокиДокумента]);
				Иначе
					// Нашли резерв/размещение
					КолОстатки = Макс(Обход.КолОстатки,0);
					Если  НЕ ПраваНаПревышениеОстатковПоОрганизации И Обход.Источник=2 Тогда  //резервирование - в случае отсутствия права превышения учтем остатки по организации
						КолОстатки = мин(КолОстатки, Макс(Обход.ОстатокОрганизации,0));
					КонецЕсли;
					
					Пока МассивСтрок.Количество() > 0 И КолОстатки > 0 Цикл
					    СтруктураОтбор = новый Структура("Номенклатура,ХарактеристикаНоменклатуры,Размещение", Обход.Номенклатура,Обход.ХарактеристикаНоменклатуры, Обход.Размещение);
						СтрокиУжеРазмещено = ТабУжеРазмещено.НайтиСтроки(СтруктураОтбор);
						КоличествоУжеРазмещено = 0;
						Для каждого Строка из СтрокиУжеРазмещено цикл
							КоличествоУжеРазмещено = КоличествоУжеРазмещено+Макс(Строка.ДокКоличество,0);
						КонецЦикла;
						КолОстатки = КолОстатки - КоличествоУжеРазмещено;
						Если КолОстатки<=0 Тогда Продолжить; КонецЕсли;

						НоваяСтрока = ТабЧасть.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, МассивСтрок[0]);
						
						МожноРазместить = Мин(КолОстатки, МассивСтрок[0].Количество);
						
						НоваяСтрока.Количество = МожноРазместить;
						НоваяСтрока.Размещение = Обход.Размещение;
						
						МассивСтрок[0].Количество = МассивСтрок[0].Количество - МожноРазместить;
						КолОстатки = КолОстатки - МожноРазместить;
						
						Если МассивСтрок[0].Количество = 0 Тогда
							МассивКУдалению.Добавить(МассивСтрок[0]);
							МассивСтрок.Удалить(0);
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла; // Обход по Характеристикам номенклатуры
	КонецЦикла; // Обход по Номенклатуре
	
КонецПроцедуры // ЗаполнитьТабЧастьМатериалыВозможнымРазмещением()

#Если Клиент Тогда
Процедура СформироватьОтчетАнализЗаказаНаПроизводство(ЗаказСсылка,флПроверятьЗаписьЗаказа=ложь, флСообщатьОбОшибках) Экспорт
	Если флПроверятьЗаписьЗаказа И не УправлениеЗаказами.ДокументЗаписан(ЗаказСсылка,флСообщатьОбОшибках) Тогда
		Возврат;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ЗаказСсылка) 
		ИЛИ ТипЗнч(ЗаказСсылка) <> Тип("ДокументСсылка.ЗаказНаПроизводство") Тогда
		Предупреждение("Не выбран заказ!");
		Возврат;
	КонецЕсли;
    Если не УправлениеЗаказами.ПравоДоступаКОтчету("АнализЗаказаНаПроизводство", флСообщатьОбОшибках) Тогда
		Возврат;
	КонецЕсли;

	АнализЗаказа = Отчеты.АнализЗаказаНаПроизводство.Создать();
	АнализЗаказа.ЗапретВыбораЗаказа = Истина;
	АнализЗаказа.Заказ = ЗаказСсылка;
	АнализЗаказаФорма = АнализЗаказа.ПолучитьФорму();
	АнализЗаказаФорма.Открыть();
  	АнализЗаказа.ОбновитьОтчет(АнализЗаказаФорма.ЭлементыФормы.ТабДокумент);

КонецПроцедуры

#КонецЕсли