////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С НАЛОГОВЫМИ НАЗНАЧЕНИЯМИ 

// Определяет, равно ли НалоговоеНазначение предопределенному Распределяемое
Функция НалоговоеНазначениеРаспределямое(НалоговоеНазначение) Экспорт
	Возврат НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.Распределяемое;
КонецФункции // НалоговоеНазначениеРаспределямое

// <Описание функции>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция ПолучитьМассивРазрешенныхНалоговыхНазначений(ГруппаНалоговогоНазначения, ДатаДокумента = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ДатаДокумента) И ДатаДокумента < глЗначениеПеременной("ДатаНачалаУчетаНКУ") Тогда
		ГруппаНалоговыхНазначений = Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоНКУ;
	Иначе
		ГруппаНалоговыхНазначений = ГруппаНалоговогоНазначения;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НалоговыеНазначенияАктивовИЗатрат.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.НалоговыеНазначенияАктивовИЗатрат КАК НалоговыеНазначенияАктивовИЗатрат
	|ГДЕ
	|	НалоговыеНазначенияАктивовИЗатрат.ГруппаНалоговогоНазначения = &ГруппаНалоговыхНазначений
	|	И НалоговыеНазначенияАктивовИЗатрат.Используется
	|";
					
	Запрос.УстановитьПараметр("ГруппаНалоговыхНазначений", ГруппаНалоговыхНазначений);
	
	Результат = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	Возврат Результат;

КонецФункции // ПолучитьМассивРазрешенныхНалоговыхНазначений()

Функция НайтиНалоговыеНазначенияПоТексту(Текст, ГруппаНалоговогоНазначения, ДатаДокумента = Неопределено) Экспорт

	
	МассивНалоговыхНазначений = НалоговыйУчетПовтИсп.ПолучитьМассивРазрешенныхНалоговыхНазначений(ГруппаНалоговогоНазначения, ДатаДокумента);
	СписокНалоговыхНазначений = Новый СписокЗначений;
	Для Каждого НалоговоеНазначение Из МассивНалоговыхНазначений Цикл
		СписокНалоговыхНазначений.Добавить(НалоговоеНазначение, НалоговоеНазначение);
	КонецЦикла;
	
	СписокНайденных = Новый СписокЗначений;
		
	ДлинаТекста = СтрДлина(СокрЛП(Текст));
	
	Для каждого ЭлементСписка Из СписокНалоговыхНазначений Цикл
		Если ВРег(Сред(ЭлементСписка.Значение, 1, ДлинаТекста)) = ВРег(СокрЛП(Текст)) Тогда
			СписокНайденных.Добавить(ЭлементСписка.Значение,ЭлементСписка.Представление);
		КонецЕсли;
	КонецЦикла;
	
	Возврат СписокНайденных;

КонецФункции

Функция ОпределитьГруппуНалоговогоНазначенияЗатрат(СчетЗатрат, Субконто1 = Неопределено, Субконто2 = Неопределено, Субконто3 = Неопределено) Экспорт
	
	Если НЕ ЗначениеЗаполнено(СчетЗатрат) Тогда
		Возврат Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС;
	ИначеЕсли СчетЗатрат.Забалансовый Тогда 
		// для забалансовых счетов не даем выбирать налоговые назначения затрат
		Возврат Перечисления.ГруппыНалоговыхНазначений.ПустаяСсылка();
	КонецЕсли;	
	
	ХарактерЗатратБУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(СчетЗатрат, Неопределено);
	
	Если ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы 
		ИЛИ ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.БракВПроизводстве 
		ИЛИ ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы 
		ИЛИ ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ТранспортноЗаготовительныеРасходы 
		
		Тогда
		
		Возврат Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС;
		
	ИначеЕсли СчетЗатрат = ПланыСчетов.Хозрасчетный.ЗатратыБудущихПериодов
		  ИЛИ СчетЗатрат.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ЗатратыБудущихПериодов) Тогда
		  
		ТипРБП = Тип("СправочникСсылка.РасходыБудущихПериодов");
		  
		Если ЗначениеЗаполнено(Субконто1) И ТипЗнч(Субконто1) = ТипРБП Тогда
			Возврат ОпределитьГруппуНалоговогоНазначенияЗатрат(Субконто1.СчетБУ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Субконто2) И ТипЗнч(Субконто2) = ТипРБП Тогда
			Возврат ОпределитьГруппуНалоговогоНазначенияЗатрат(Субконто2.СчетБУ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Субконто3) И ТипЗнч(Субконто3) = ТипРБП Тогда
			Возврат ОпределитьГруппуНалоговогоНазначенияЗатрат(Субконто3.СчетБУ);
		КонецЕсли;
		
		Возврат Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат;
		  
	Иначе
		Возврат Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат;	  
	КонецЕсли;
	

КонецФункции // ОпределитьГруппуНалоговогоНазначенияЗатрат

Функция ЭтоНеиспользуемоеНалоговоеНазначение(НалоговоеНазначение) Экспорт
	Возврат НалоговоеНазначение.ГруппаНалоговогоНазначения = Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоНКУ; 
КонецФункции // ЭтоНеиспользуемоеНалоговоеНазначение()

Функция ОпределитьНалоговоеНазначениеУслугПоВидуДеятельностиНДС(ВидДеятельностиНДС) Экспорт
	
	Если ВидДеятельностиНДС = Перечисления.ВидыДеятельностиНДС.Облагаемая Тогда
		Возврат Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_Облагаемая;
	Иначе
		Возврат Справочники.НалоговыеНазначенияАктивовИЗатрат.НДС_НеоблагаемаяХозДеятельность;
	КонецЕсли; 

КонецФункции // ОпределитьНалоговоеНазначениеУслугПоВидуДеятельностиНДС()

//Возвращает вид деятельности по НДС по ставке НДС и доп. параметрам
// Параметры
//  СтавкаНДС		– Перечисление.СтавкиНДС - ставка НДС по операции реализации.
//						Амортизируемость присутствует только в ТЧ с 
//	ДопПараметры	- Структура. Содаржит доп. параметры для определения вида деятельности НДС.
//
// Возвращаемое значение:
//   Перечисление.ВидыДеятельностиНДС   – вид деятельности НДС
//
Функция ПолучитьВидДеятельностиНДС(СтавкаНДС, ДопПараметры = Неопределено) Экспорт
	
	Возврат НалоговыйУчет.ПолучитьВидДеятельностиНДС(СтавкаНДС, ДопПараметры);

 
КонецФункции // ПолучитьВидДеятельностиНДС()

Функция ПолучитьГруппуНалоговогоНазначения(НалоговоеНазначение) Экспорт
	Возврат НалоговоеНазначение.ГруппаНалоговогоНазначения;
КонецФункции // ПолучитьГруппуНалоговогоНазначения()

// Определяет, есть ли право на налоговый кредит
Функция ЕстьПравоНаНалоговыйКредит(НалоговоеНазначение) Экспорт
	       
	// Право на налоговый кредит дается только, если
	//		приобретаемые ценности будут использоваться в хозяйственной деятельности
	//			в облагаемых НДС операциях
	
	Если Не ЗначениеЗаполнено(НалоговоеНазначение) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НалоговоеНазначение = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_НеХозДеятельность Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	НалоговыеНазначенияАктивовИЗатрат.ВидДеятельностиНДС КАК ВидДеятельностиНДС
	|ИЗ
	|	Справочник.НалоговыеНазначенияАктивовИЗатрат КАК НалоговыеНазначенияАктивовИЗатрат
	|ГДЕ
	|	НалоговыеНазначенияАктивовИЗатрат.Ссылка = &НалоговоеНазначение
	|
	|");
	
	Запрос.УстановитьПараметр("НалоговоеНазначение", НалоговоеНазначение); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
	Если Выборка.ВидДеятельностиНДС = Перечисления.ВидыДеятельностиНДС.Необлагаемая Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции // ЕстьПравоНаНалоговыйКредит()

// Функция получает налоговое назначение по его составляющим
//
// Параметры:
//
//  ВидНалоговойДеятельности – Тип: СправочникСсылка.ВидыНалоговойДеятельности – вид налоговой деятельности,
//                                                                               искомого назначения.
//                 
//  ВидДеятельностиНДС       – Тип: ПеречислениеСсылка.ВидыДеятельностиНДС     - вид деятельности НДС, 
//                                                                               искомого назначения.
//                 
//
// Возвращаемое значение:
//   Тип:   СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат  
//
Функция ПолучитьНалоговоеНазначениеПоСоставляющим(ВидНалоговойДеятельности, ВидДеятельностиНДС) Экспорт

	Запрос       = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНалоговойДеятельности", ВидНалоговойДеятельности);
	Запрос.УстановитьПараметр("ВидДеятельностиНДС"      , ВидДеятельностиНДС);
	Запрос.УстановитьПараметр("НалоговыеНазначенияДоНКУ", Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоНКУ);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НалоговыеНазначенияАктивовИЗатрат.Ссылка КАК НалоговоеНазначение
	|ИЗ
	|	Справочник.НалоговыеНазначенияАктивовИЗатрат КАК НалоговыеНазначенияАктивовИЗатрат
	|ГДЕ
	|	НалоговыеНазначенияАктивовИЗатрат.ГруппаНалоговогоНазначения <> &НалоговыеНазначенияДоНКУ
	|	И НалоговыеНазначенияАктивовИЗатрат.ВидНалоговойДеятельности = &ВидНалоговойДеятельности
	|	И НалоговыеНазначенияАктивовИЗатрат.ВидДеятельностиНДС = &ВидДеятельностиНДС";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.НалоговоеНазначение;
	Иначе
		Возврат Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка();
	КонецЕсли;		

КонецФункции // ПолучитьНалоговоеНазначениеПоСоставляющим()

Функция НоваяСхемаНДС(ДатаДок) Экспорт
	
	Если ДатаДок < '20050729' Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;	
	
КонецФункции

// По налоговому назначению ищет или создает налоговое назначение 
// с таким же ВидНалоговойДеятельности, 
// но с ВидДеятельностиНДС = Перечисления.ВидыДеятельностиНДС.ПропорциональноОблагаемая
//
// Параметры:
//
//  НалоговоеНазначение  - СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат
//
// Возвращаемое значение:
//   СправочникСсылка.НалоговыеНазначенияАктивовИЗатрат   - ссылка на найденное или созданное налоговое назначение
//
Функция ПолучитьПропорциональноеНалоговоеНазначение(НалоговоеНазначение) Экспорт
	
	Если НЕ ЗначениеЗаполнено(НалоговоеНазначение) Тогда
		Возврат Справочники.НалоговыеНазначенияАктивовИЗатрат.ПустаяСсылка(); 
	КонецЕсли;	
	
	ВидНалоговойДеятельности = НалоговоеНазначение.ВидНалоговойДеятельности;
	ВидДеятельностиНДС       = Перечисления.ВидыДеятельностиНДС.ПропорциональноОблагаемая;
	
	Результат = НалоговыйУчетПовтИсп.ПолучитьНалоговоеНазначениеПоСоставляющим(ВидНалоговойДеятельности, ВидДеятельностиНДС);
	
	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		
		// создаем новый элемент
		НовыйЭлемент = Справочники.НалоговыеНазначенияАктивовИЗатрат.СоздатьЭлемент();
		
		НовыйЭлемент.ВидНалоговойДеятельности = ВидНалоговойДеятельности;
		НовыйЭлемент.ВидДеятельностиНДС       = ВидДеятельностиНДС;
		
		Наименование = СокрЛП(НалоговоеНазначение.Наименование) + " (пропорц.)";
		
		НовыйЭлемент.Наименование = Наименование;
		
		НовыйЭлемент.УстановитьНовыйКод();
	
		НовыйЭлемент.ОбменДанными.Загрузка = Истина;
		НовыйЭлемент.Записать();
		
		
		Результат = НовыйЭлемент.Ссылка;
		
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ПолучитьПропорциональноеНалоговоеНазначение()

Функция ПолучитьВидДеятельностиНДСНалоговогоНазначения(НалоговоеНазначение) Экспорт
	Возврат НалоговоеНазначение.ВидДеятельностиНДС;
КонецФункции // ПолучитьВидДеятельностиНДСНалоговогоНазначения()

Функция ПолучитьВидНалоговойДеятельностиНалоговогоНазначения(НалоговоеНазначение) Экспорт
	Возврат НалоговоеНазначение.ВидНалоговойДеятельности;
КонецФункции // ПолучитьВидНалоговойДеятельностиНалоговогоНазначения()

Функция ОпределитьГруппуНалоговогоНазначенияПоСчету(СчетЗатрат) Экспорт 
	
	ХарактерЗатратБУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(СчетЗатрат, Неопределено);
	
	Если ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы 
		ИЛИ ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.БракВПроизводстве
		ИЛИ ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы 
	    ИЛИ ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ТранспортноЗаготовительныеРасходы 
		
		Тогда
		
		Возврат Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияАктивовИВзаиморасчетовПоНДС;
		
	Иначе
		
		Возврат Перечисления.ГруппыНалоговыхНазначений.НалоговыеНазначенияДоходовИЗатрат;
		
	КонецЕсли;	
	
КонецФункции // ОпределитьГруппуНалоговогоНазначенияПоСчету()

Функция ПолучитьНалоговоеНазначениеПоКлючуАналитики(АналитикаВидаУчета) Экспорт
	
	РезультатЗапроса = РасширеннаяАналитикаУчета.СформироватьЗапросПоЗначениямАналитики(АналитикаВидаУчета);
	
	Если РезультатЗапроса = Неопределено ИЛИ РезультатЗапроса.Пустой() ИЛИ РезультатЗапроса.Колонки.Найти("НалоговоеНазначение") = Неопределено Тогда
		Возврат Неопределено;
	Иначе
		Выборка = РезультатЗапроса.Выбрать();
		Выборка.Следующий();
		Возврат Выборка.НалоговоеНазначение;
	КонецЕсли; 

КонецФункции // ПолучитьНалоговоеНазначениеПоКлючуАналитики()
 


//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ СО СТАТЬЯМИ НАЛОГОВЫХ ДЕКЛАРАЦИЙ В УПРАВЛЯЕМЫХ ФОРМАХ

// По переданному списку элементов справочника СтатьиНалоговыхДеклараций формирует новый список, содержащий
// все плюс иерархию элементов - родителей
// Параметры:
//  Список  – список, содержащий элементы справочника СтатьиНалоговыхДеклараций
//
// Возвращаемое значение:
//   СписокЗначений - дополненный иерархией владельцев входящий список
//
Функция ДополнитьСписокСтатейПриростаУбылиРодителями(Список)

	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтатьиНалоговыхДеклараций.Родитель КАК Родитель
	|ИЗ
	|	Справочник.СтатьиНалоговыхДеклараций КАК СтатьиНалоговыхДеклараций
	|ГДЕ
	|	СтатьиНалоговыхДеклараций.Ссылка В(&Список)
	|	И НЕ (СтатьиНалоговыхДеклараций.Родитель В(&Список))
	|";
					
	Запрос.УстановитьПараметр("Список", Список);
	Родители = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Родитель");
	
	СписокСРодителями = Список.Скопировать();
	
	Если  НЕ Родители.Количество() = 0 
	    И НЕ (Родители.Количество() = 1 
		    И Родители[0] = Справочники.СтатьиНалоговыхДеклараций.ПустаяСсылка()) Тогда
			
		// получим родителей для родителей
		СписокРодителей = Новый СписокЗначений;
 		СписокРодителей.ЗагрузитьЗначения(Родители);
		
		СписокРодителейСРодителями = ДополнитьСписокСтатейПриростаУбылиРодителями(СписокРодителей);
		
		Для Каждого Родитель Из СписокРодителейСРодителями Цикл
			
			Если ЗначениеЗаполнено(Родитель.Значение) Тогда
			
				СписокСРодителями.Добавить(Родитель.Значение,Родитель.Представление)		
			
			КонецЕсли; 
			
		КонецЦикла; 
		
	КонецЕсли; 

	Возврат СписокСРодителями;
	
КонецФункции // ДополнитьСписокСтатейПриростаУбылиРодителями

Функция СформироватьСписокНабораСтатейПриростаУбыли(НаборСтатей, ДополнятьРодителями = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Набор", НаборСтатей);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
    |	НаборыСтатейНалоговыхДеклараций.Набор,
    |	НаборыСтатейНалоговыхДеклараций.Статья,
    |	ПРЕДСТАВЛЕНИЕ(НаборыСтатейНалоговыхДеклараций.Статья) КАК СтатьяПредставление
    |ИЗ
    |	РегистрСведений.НаборыСтатейНалоговыхДеклараций КАК НаборыСтатейНалоговыхДеклараций
    |ГДЕ
    |	НаборыСтатейНалоговыхДеклараций.Набор = &Набор
	|";
				   
	
	Результат = Запрос.Выполнить().Выбрать();
	
	СписокСтатей = Новый СписокЗначений;
	
	Пока Результат.Следующий() Цикл
		СписокСтатей.Добавить(Результат.Статья, Результат.СтатьяПредставление);
	КонецЦикла;
	
	Если ДополнятьРодителями Тогда
		СписокСтатей = ДополнитьСписокСтатейПриростаУбылиРодителями(СписокСтатей);
	КонецЕсли; 

	Возврат СписокСтатей;
	
КонецФункции // СформироватьСписокНабораСтатейПриростаУбыли

Функция СформироватьСписокНабораСтатейДекларации(ВидДекларации, ДополнятьРодителями = Ложь) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидНалоговойДекларации", ВидДекларации);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
   	|	СтатьиНалоговыхДеклараций.Ссылка КАК Статья,
   	|	ПРЕДСТАВЛЕНИЕ(СтатьиНалоговыхДеклараций.Ссылка) КАК СтатьяПредставление
   	|ИЗ
   	|	Справочник.СтатьиНалоговыхДеклараций КАК СтатьиНалоговыхДеклараций
   	|ГДЕ
   	|	СтатьиНалоговыхДеклараций.ВидНалоговойДекларации = &ВидНалоговойДекларации
	|";
	
	Результат = Запрос.Выполнить().Выбрать();
	
	СписокСтатей = Новый СписокЗначений;
	
	Пока Результат.Следующий() Цикл
		СписокСтатей.Добавить(Результат.Статья, Результат.СтатьяПредставление);
	КонецЦикла;
	
	Если ДополнятьРодителями Тогда
		СписокСтатей = ДополнитьСписокСтатейПриростаУбылиРодителями(СписокСтатей);
	КонецЕсли; 
	
	Возврат СписокСтатей;
	
КонецФункции	

Функция НайтиСтатьиНалоговойДекларацииПоТексту(Текст, ВидДекларации, НаборСтатей = Неопределено) Экспорт

	СписокНайденных = Новый СписокЗначений;
		
	Если НаборСтатей = Неопределено Тогда
		//подбирать надо среди всей декларации
		СписокСтатей = СформироватьСписокНабораСтатейДекларации(ВидДекларации);
	Иначе 
		//подбирать надо по набору
		СписокСтатей = СформироватьСписокНабораСтатейПриростаУбыли(НаборСтатей);
	КонецЕсли;
	
	ДлинаТекста = СтрДлина(СокрЛП(Текст));
	
	Для каждого ЭлементСписка Из СписокСтатей Цикл
		
		Если ВРег(Сред(ЭлементСписка.Представление, 1, ДлинаТекста)) = ВРег(СокрЛП(Текст)) Тогда
			СписокНайденных.Добавить(ЭлементСписка.Значение, ЭлементСписка.Представление);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СписокНайденных;

КонецФункции

//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

Функция ПолучитьКоэффициентПропорциональногоНДС(Организация, Период) Экспорт
	
	СтруктураОтбора = Новый Структура("Организация", Организация);
	
	ТаблицаКоэффициентов = РегистрыСведений.КоэффициентыПропорциональногоОтнесенияНДСНаКредит.СрезПоследних(Период, СтруктураОтбора);
	
	Если ТаблицаКоэффициентов.Количество() = 0 Тогда
		
		Возврат 0;		
		
	Иначе
		
		Возврат ТаблицаКоэффициентов[0].Коэффициент;		
		
	КонецЕсли;
	
КонецФункции	

