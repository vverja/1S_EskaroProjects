
Процедура ПриЗаписиДляОбмена(Источник) Экспорт
 //Если Источник.Проведен и Источник.Выгружен Тогда
 Если Источник.Проведен ИЛИ 
      ТипЗнч(Источник) = Тип("ДокументОбъект.СчетНаОплатуПокупателю") Тогда
        Узел = ПланыОбмена.Колор.НайтиПоКоду("КЛ");
        ПланыОбмена.ЗарегистрироватьИзменения(Узел, Источник);
        
        НастройкаОбмена = Справочники.НастройкиОбменаДанными.НайтиПоКоду("007");
        СтруктураНастроекОбмена = ПроцедурыОбменаДанными.ПолучитьБазовуюСтруктуруПараметровОбмена(Истина, Неопределено, 
		Ложь, Неопределено);
		ПроцедурыОбменаДанными.ДополнитьСтруктуруОбменаПоПростойНастройкеОбмена(СтруктураНастроекОбмена, НастройкаОбмена.ПолучитьОбъект());	
        ПроцедурыОбменаДанными.ВыполнитьОбменДаннымиЧерезComСоединениеВнешняя(СтруктураНастроекОбмена);
        //ПроцедурыОбменаДанными.ВыполнитьОбменПоНастройке(НастройкаОбмена);
    КонецЕсли;

КонецПроцедуры

Процедура ВыгрузитьЦены(Источник, Отказ, РежимЗаписи) Экспорт
    //Сообщение = Новый СообщениеПользователю;
    //Сообщение.Текст = "Выгрузка произведена!!!";
    //Сообщение.Сообщить(); 
КонецПроцедуры


Процедура ПриЗаписиУстановкиЦенПриЗаписи(Источник, Отказ) Экспорт
    Если НЕ Источник.ДополнительныеСвойства.ЭтоНовый Тогда
    	Возврат;
    КонецЕсли; 
    ОптовыеЦены = Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000011");
    Если Источник.ТипыЦен.Найти(ОптовыеЦены, "ТипЦен") = Неопределено Тогда
    	Возврат;
    КонецЕсли; 
    Хранилище = Справочники.ХранилищеДополнительнойИнформации.НайтиПоНаименованию("Выгрузка оптовых цен").Хранилище.Получить();
    ПутьКПравилам = КаталогВременныхФайлов()+"temporary.xml";
    ПутьКДанным = КаталогВременныхФайлов() + "temp_data.xml";
    Хранилище.Записать(ПутьКПравилам);
    
    УО = Обработки.УниверсальныйОбменДаннымиXML.Создать();
    УО.РежимОбмена="Выгрузка";
    УО.ИмяФайлаПравилОбмена = ПутьКПравилам;
    УО.ЗагрузитьПравилаОбмена();
    
    УО.ИмяФайлаОбмена = ПутьКДанным;
    УО.Параметры.СписокВыгрузки = Источник.Товары.ВыгрузитьКолонку("Номенклатура");
    УО.ВыполнитьВыгрузку();
    //Параметры = "File=""D:\1c\EnterpriseUkr"";Usr=""ДляОбмена"";Pwd=""22121981"";"; 
    Параметры = "Srvr=""dataserv"";Ref=""color"";Usr=""ДляОбмена"";Pwd=""22121981"";";
    Соединение= Новый COMОбъект("V83.COMConnector");
    Попытка
        Колор = Соединение.Connect(Параметры);
    Исключение
        //Предупреждение ("Ошибка подключения!");
        Возврат;
    КонецПопытки;
    УО = Колор.Обработки.УниверсальныйОбменДаннымиXML.Создать();
    УО.РежимОбмена="Загрузка";
    УО.ИмяФайлаОбмена = ПутьКДанным;
    УО.ОткрытьФайлЗагрузки(Истина);
    УО.ВыполнитьЗагрузку();
    УО = Неопределено;
    УдалитьФайлы(КаталогВременныхФайлов(),"temp*.xml");
КонецПроцедуры


Процедура ПередЗаписьюУстановкиЦенПередЗаписью(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
    Источник.ДополнительныеСвойства.Вставить("ЭтоНовый", Источник.ЭтоНовый()); 
КонецПроцедуры


Процедура ПроизводствоПриЗаписи(Источник, Отказ) Экспорт
    Если (Источник.Проведен или Источник.ПометкаУдаления) Тогда
        Если ТипЗнч(Источник) = Тип("ДокументОбъект.ЗаказНаПроизводство") Тогда
            Узел = ПланыОбмена.Индастри.НайтиПоКоду("ИН");
            ПланыОбмена.ЗарегистрироватьИзменения(Узел, Источник);
        Иначе
            Узел = ПланыОбмена.Колор.НайтиПоКоду("ПО");
            ПланыОбмена.ЗарегистрироватьИзменения(Узел, Источник);    
        КонецЕсли;      
    КонецЕсли; 
КонецПроцедуры


Процедура ПриЗаписиКонтрагентаПриЗаписи(Источник, Отказ) Экспорт
	  Если Не Источник.ЭтоНовый() И (Источник.Родитель <> Источник.Ссылка.Родитель) Тогда
        НельзяМенятьРодителя = НЕ РольДоступна("ПолныеПрава"); //условие, определяющее, кому нельзя менять родителя
        Если НельзяМенятьРодителя Тогда
            Отказ = Истина;
            Сообщить("Нет прав на изменение группы номенклатуры!");
            Возврат;
        КонецЕсли;
    КонецЕсли;
КонецПроцедуры

