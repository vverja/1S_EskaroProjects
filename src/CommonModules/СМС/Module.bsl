
//Перем HTTP;

//Перем СтруктураПараметров;

Функция НаименованиеТранслитом(Строка)
	
	Массив = Новый Массив;
	
	Массив.Вставить(32, "_");
	Массив.Вставить(1025, "Yo");
	Массив.Вставить(1040, "A");
	Массив.Вставить(1041, "A");
	Массив.Вставить(1042, "B");
	Массив.Вставить(1043, "V");
	Массив.Вставить(1044, "G");
	Массив.Вставить(1045, "D");
	Массив.Вставить(1046, "Zh");
	Массив.Вставить(1047, "Z");
	Массив.Вставить(1048, "I");
	Массив.Вставить(1049, "Y");
	Массив.Вставить(1050, "K");
	Массив.Вставить(1051, "L");
	Массив.Вставить(1052, "M");
	Массив.Вставить(1053, "N");
	Массив.Вставить(1054, "O");
	Массив.Вставить(1055, "P");
	Массив.Вставить(1056, "R");
	Массив.Вставить(1057, "S");
	Массив.Вставить(1058, "T");
	Массив.Вставить(1059, "U");
	Массив.Вставить(1060, "F");
	Массив.Вставить(1061, "H");
	Массив.Вставить(1062, "Ts");
	Массив.Вставить(1063, "Ch");
	Массив.Вставить(1064, "Sh");
	Массив.Вставить(1065, "Sch");
	Массив.Вставить(1066, "");
	Массив.Вставить(1067, "Y");
	Массив.Вставить(1068, "'");
	Массив.Вставить(1069, "E");
	Массив.Вставить(1070, "Yu");
	Массив.Вставить(1071, "Ya");
	Массив.Вставить(1072, "a");
	Массив.Вставить(1073, "b");
	Массив.Вставить(1074, "v");
	Массив.Вставить(1075, "g");
	Массив.Вставить(1076, "d");
	Массив.Вставить(1077, "e");
	Массив.Вставить(1078, "zh");
	Массив.Вставить(1079, "z");
	Массив.Вставить(1080, "i");
	Массив.Вставить(1081, "i");
	Массив.Вставить(1082, "k");
	Массив.Вставить(1083, "l");
	Массив.Вставить(1084, "m");
	Массив.Вставить(1085, "n");
	Массив.Вставить(1086, "o");
	Массив.Вставить(1087, "p");
	Массив.Вставить(1088, "r");
	Массив.Вставить(1089, "s");
	Массив.Вставить(1090, "t");
	Массив.Вставить(1091, "u");
	Массив.Вставить(1092, "f");
	Массив.Вставить(1093, "h");
	Массив.Вставить(1094, "c");
	Массив.Вставить(1095, "ch");
	Массив.Вставить(1096, "sh");
	Массив.Вставить(1097, "sch");
	Массив.Вставить(1098, "");
	Массив.Вставить(1099, "y");
	Массив.Вставить(1100, "'");
	Массив.Вставить(1101, "e");
	Массив.Вставить(1102, "yu");
	Массив.Вставить(1103, "ya");
		
	ВыходнаяСтрока = "";

	для Индекс = 1 по СтрДлина(Строка) цикл
		Код = КодСимвола( Сред (Строка,Индекс,1));
		Код = Число(Код);
		Попытка 
			ТекущийСимвол = Массив[Код];
			Если ТекущийСимвол = Неопределено Тогда
				ТекущийСимвол = Сред (Строка,Индекс,1);
			КонецЕсли;	
		Исключение
			ТекущийСимвол = Сред (Строка,Индекс,1);
		КонецПопытки;	
		
		ВыходнаяСтрока = ВыходнаяСТрока + ТекущийСимвол;
	КонецЦикла;
	
	Возврат ВыходнаяСтрока;
	
КонецФункции	

Функция СформироватьМассивАдресов(СписокПолучателей)
	
	//МассивАдресов = Новый Массив;
	
	Запрос = Новый Запрос;
	
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	КонтактнаяИнформация.Представление КАК Телефон,
	|	КонтактнаяИнформация.Объект.Ссылка КАК Ссылка
	|ИЗ
	|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
	|ГДЕ
	|	КонтактнаяИнформация.Тип = &Телефон
	|	И КонтактнаяИнформация.Объект.Ссылка В ИЕРАРХИИ (&СписокПолучателей)";
	
		
	Запрос.Текст = ТекстЗапроса;
	//Запрос.УстановитьПараметр("ГруппаКонтрагентов", ГруппаКонтрагентов);
	Запрос.УстановитьПараметр("Телефон", Перечисления.ТипыКонтактнойИнформации.Телефон);
	Запрос.УстановитьПараметр("СписокПолучателей", СписокПолучателей);
		
	Результат = Запрос.Выполнить().Выгрузить();
		
	//МассивАдресов = Результат.ВыгрузитьКолонку("Мыло");
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьСистемнуюПапку(Имя)
	
	Попытка
		
		Ctrl = Новый COMОбъект("MSScriptControl.ScriptControl");
		Ctrl.Language = "vbscript";
		Ctrl.AddCode("
		|Function SpecialFolders(Name)
		|Set Shell = CreateObject(""Wscript.Shell"")
		|SpecialFolders = Shell.SpecialFolders(Name)
		|End Function");
		
		ИмяПапки = Ctrl.Run("SpecialFolders", Имя);
		
	Исключение
		ИмяПапки = Неопределено;
		
	КонецПопытки;
	
	Возврат ИмяПапки;
	
	
КонецФункции

Функция ОбработатьРезультат(СтрокаОтвета, Операция)
	
	Если Операция = "BALANCE" или Операция = "GETPRICE" Тогда
		Попытка
			ДлиннаОтвета = Число(Найти(СтрокаОтвета, "</status>") - Найти(СтрокаОтвета, "<status>")-8);
			СтатусОтвета = Число(Сред(СтрокаОтвета, Найти(СтрокаОтвета, "<status>")+8, ДлиннаОтвета));
			Если СтатусОтвета = -1 Тогда
				Предупреждение("Неправильный логин или пароль!");
			ИначеЕсли СтатусОтвета = 0 Тогда
				НачалоБаланса = Найти(СтрокаОтвета, "<credits>")+9;
				КонецБаланса  = Найти(СтрокаОтвета, "</credits>");
				Ответ = Сред(СтрокаОтвета, НачалоБаланса, КонецБаланса-НачалоБаланса);
				
				Возврат Ответ;
				
			ИначеЕсли СтатусОтвета = -2 Тогда
				Предупреждение("Файл ХМЛ сформирован неправильно!");
			КонецЕсли;	
		Исключение
			Предупреждение("Операция завершилась с ошибкой!");
		КонецПопытки;
		
	ИначеЕсли Операция = "SEND" Тогда
		Попытка
			СтатусОтвета = Число(Сред(СтрокаОтвета, Найти(СтрокаОтвета, "<status>")+8, 1));
			Если СтатусОтвета = -1 Тогда
				Предупреждение("Неправильный логин или пароль!");
			ИначеЕсли СтатусОтвета > 0 Тогда
				Начало = Найти(СтрокаОтвета, "<status>")+8;
				Конец  = Найти(СтрокаОтвета, "</status>");
				Ответ = Сред(СтрокаОтвета, Начало, Конец-Начало);
				
				Предупреждение("Успешно отправлено: " + Ответ);
				
				Возврат Истина;
				
			ИначеЕсли СтатусОтвета = -2 Тогда
				Предупреждение("Файл ХМЛ сформирован неправильно!");
			ИначеЕсли СтатусОтвета = -3 Тогда
				Предупреждение("Недостаточно кредитов!");
			ИначеЕсли СтатусОтвета = -4 Тогда
				Предупреждение("Нет верных номеров получателей!");	
			КонецЕсли;
			
		Исключение
			Предупреждение("Операция завершилась с ошибкой!");
		КонецПопытки;	
			
	КонецЕсли;		
	
	Возврат Неопределено;
	
КонецФункции

Функция ОправитьСМС(ТекстСообщения,СписокПолучателей) экспорт
	Если СокрЛП(ТекстСообщения) = "" Тогда
		Предупреждение("Необходимо заполнить текст отправляемого сообщения");
		Возврат Ложь;
	КонецЕсли;
		
	Если НЕ ЗначениеЗаполнено(СписокПолучателей) Тогда
			Сообщить("Ни один получатель не выбран – сообщения будут отправлены по всему справочнику.");
			Возврат Ложь;
	КонецЕсли;
		
	МассивАдресов = СформироватьМассивАдресов(СписокПолучателей);
	
	ФайлХМЛ = СоздатьФайлХМЛ("GETPRICE", МассивАдресов, ТекстСообщения);
	
	Если ФайлХМЛ = "ОШИБКА: [Нет доступных номеров для рассылки]" Тогда
		Предупреждение("Нет доступных номеров для рассылки");
		Возврат Ложь;
	Иначе
		
	
		СтрокаРезультат = ОтправитьФайлДляОбработки(ФайлХМЛ);
		
		СтоимостьОтправки = ОбработатьРезультат(СтрокаРезультат, "GETPRICE");
		
		Если Не СтоимостьОтправки = Неопределено Тогда
			Сообщить("Стоимость отправки: " + Строка(Окр(Число(СтоимостьОтправки)*0.41,2)));
			ПодтверждениеОтправки = Вопрос("Вы действительно хотите отправить?", РежимДиалогаВопрос.ДаНет); 											
			Если ПодтверждениеОтправки = КодВозвратаДиалога.Да Тогда								
				
				ФайлХМЛ = СоздатьФайлХМЛ("SEND", МассивАдресов, ТекстСообщения);
				
				СтрокаРезультат = ОтправитьФайлДляОбработки(ФайлХМЛ);
					
				УспешноОтправлено = ОбработатьРезультат(СтрокаРезультат, "SEND");
				
				Сообщить("Ваш баланс: " + ОпределитьБаланс ());
			Иначе 
				Возврат Ложь;
			КонецЕсли;	
			
		КонецЕсли;	
		
	КонецЕсли;	
	Возврат Истина;	
КонецФункции



Функция СоздатьФайлХМЛ(СтрокаОперации, ТелефоныКонтрагентов, ТекстСообщения)
	Логин="verja@yandex.ru";
	Пароль="22121981";
	Отправитель="Eskaro";
	
	ЗаписьХМЛ = Новый ЗаписьXML;
	
	ИмяФайла = ПолучитьСистемнуюПапку("MyDocuments") + "\тест.xml";
	//ИмяФайла = "F:\Клиенты\Юнисендер\тест.xml";
	
	ЗаписьХМЛ.ОткрытьФайл(ИмяФайла, "UTF-8");
	
	ЗаписьХМЛ.ЗаписатьБезОбработки("<?xml version=" + """1.0""" + " encoding=" + """UTF-8""" + "?>");
	ЗаписьХМЛ.ЗаписатьНачалоЭлемента("SMS");
	
	Операция = ДобавитьУзел(ЗаписьХМЛ, "operations");
	//Операция = ДобавитьУзел(Операции, "operation");
	УстановитьАтрибут(Операция, "operation", СтрокаОперации);
	ДобавитьПодчиненный(ЗаписьХМЛ, Операция);
	
	Идентификация = ДобавитьУзел(ЗаписьХМЛ, "authentification");
	//Операция = ДобавитьУзел(Операции, "operation");
	УстановитьАтрибут(Идентификация, "username", Логин);
	УстановитьАтрибут(Идентификация, "password", Пароль);
	ДобавитьПодчиненный(ЗаписьХМЛ, Идентификация);
	
	Если НЕ СтрокаОперации = "BALANCE" Тогда
		
		Сообщение = ДобавитьУзел(ЗаписьХМЛ, "message");
		//Операция = ДобавитьУзел(Операции, "operation");
		УстановитьАтрибут(Сообщение, "sender", Отправитель);
		//УстановитьАтрибут(Сообщение, "text", СформироватьТекстСообщения());
		Сообщение.ЗаписатьБезОбработки("<text>" + ТекстСообщения + "</text>");
		ДобавитьПодчиненный(ЗаписьХМЛ, Сообщение);
		
		//отложенные смс
		//Если ОтложитьДо и ЗначениеЗаполнено(ДатаВремяОтправки) Тогда
		//	//SENTDATE = ДобавитьУзел(ЗаписьХМЛ, "SENTDATE");
		//	//СтрокаДаты = Строка(Формат(ДатаВремяОтправки, "ДФ='гггг/ММ/дд ЧЧ:мм:сс'"));
		//	//УстановитьАтрибут(Сообщение, "DATE", СтрокаДаты);
		//	//ДобавитьПодчиненный(ЗаписьХМЛ, SENTDATE);
		//	ВремяСУчетомЧасовогоПояса = ДатаВремяОтправки - СуммаЧасовогоПояса();
		//	СтрокаДаты = Строка(Формат(ВремяСУчетомЧасовогоПояса, "ДФ='гггг/ММ/дд ЧЧ:мм:сс'"));
		//				
		//	//СтрокаДаты = Строка(Формат(ДатаВремяОтправки, "ДФ='гггг/ММ/дд ЧЧ:мм:сс'"));
		//	УстановитьАтрибут(Сообщение, "sentdate", СтрокаДаты);
		//	//ДобавитьПодчиненный(ЗаписьХМЛ, SENTDATE);
		//КонецЕсли;	
		//конец - отложенные смс
		
		Номера = ДобавитьУзел(ЗаписьХМЛ, "numbers");
		
		//Сформируем список доп номеров.
			Если ТелефоныКонтрагентов <> Неопределено Тогда
				
				Для Каждого СтрокаСписка Из ТелефоныКонтрагентов Цикл
					
					КонтактныйТелефон =  ПривестиТелефонКВиду(СтрокаСписка.Телефон);
					
					//если неопределено, то номер не валидный. следовательно отправлять смс не надо и пытаться
					Если КонтактныйТелефон = Неопределено Тогда
						Продолжить;
					КонецЕсли;
					
					СтрокаУзел = "";
					//если в структуре параметров есть данные, то в строку нужно добавлять параметры
					//Для Каждого ТекущийПараметр Из СтруктураПараметров Цикл
					//	
					//	Если ТипСправочника = "Контактные лица" Тогда
					//		Если ТекущийПараметр.Значение = "Ф" Тогда
					//			Параметр = СтрокаСписка.Ссылка.Фамилия;
					//		ИначеЕсли ТекущийПараметр.Значение = "И" Тогда
					//			Параметр = СтрокаСписка.Ссылка.Имя;
					//		ИначеЕсли ТекущийПараметр.Значение = "О" Тогда
					//			Параметр = СтрокаСписка.Ссылка.Отчество;	
					//		КонецЕсли;
					//	Иначе
					//		Параметр = СтрокаСписка.Ссылка.Наименование;
					//	КонецЕсли;	
					//	СтрокаУзел = СтрокаУзел + Параметр + "; "; 
					//КонецЦикла;	
					
					//Если СтруктураПараметров.Количество() = 0 Тогда
						СтрокаУзел = "number";
						УстановитьАтрибут(Номера, СтрокаУзел, КонтактныйТелефон);
					//Иначе
					//	СтрокаУзел = "number variables=""" + СтрокаУзел + """";
					//	Номера.ЗаписатьБезОбработки("<" + СтрокаУзел + ">" + КонтактныйТелефон + "</number>");
					//КонецЕсли;
					
					//УстановитьАтрибут(Номера, СтрокаУзел, КонтактныйТелефон);
					
				КонецЦикла;	
			КонецЕсли;	
		
		ДобавитьПодчиненный(ЗаписьХМЛ, Номера);
		
	КонецЕсли;			
	
	ЗаписьХМЛ.ЗаписатьКонецЭлемента();
	ЗаписьХМЛ.Закрыть();
	
	Возврат ЗаписьХМЛ;	
	
КонецФункции

Функция ПривестиТелефонКВиду(ИсходныйНомер)
	
	ДлинаНомера = СтрДлина(ИсходныйНомер);
	
	Буфер = ИсходныйНомер;
	
	ПриведенныйНомер = "";
	
	Для Символ=1 По Число(ДлинаНомера) Цикл
		
		ТекущийСимвол = Сред(Буфер, 1, 1);
		Если 	ТекущийСимвол = "0"
			ИЛИ ТекущийСимвол = "1"
			ИЛИ ТекущийСимвол = "2"
			ИЛИ ТекущийСимвол = "3"
			ИЛИ ТекущийСимвол = "4"
			ИЛИ ТекущийСимвол = "5"
			ИЛИ ТекущийСимвол = "6"
			ИЛИ ТекущийСимвол = "7"
			ИЛИ ТекущийСимвол = "8"
			ИЛИ ТекущийСимвол = "9"
			Тогда
			ПриведенныйНомер = ПриведенныйНомер + ТекущийСимвол;
		КонецЕсли;
		
		Если Число(СтрДлина(Буфер)) > 1 Тогда
			Буфер = Сред(Буфер, 2);
		КонецЕсли;
	КонецЦикла;	
	
	//если получившийся номер < 9, то это не мобила
	Если Число(СтрДлина(ПриведенныйНомер)) < 9 Тогда
		Возврат Неопределено;
	Иначе	
	    Возврат ПриведенныйНомер;
	КонецЕсли;
	
КонецФункции	


 Функция ДобавитьУзел(УзелРодитель, Имя);
	
	УзелРодитель.ЗаписатьНачалоЭлемента(Имя);
	
	Возврат УзелРодитель;	
	
КонецФункции	

Процедура ДобавитьПодчиненный(УзелРодитель, Узел)
	
	Узел.ЗаписатьКонецЭлемента();
		
КонецПроцедуры

Процедура УстановитьАтрибут(Узел, Имя, Значение)
	
	СтрокаЗаписи = XMLСтрока(Значение);
	
	Узел.ЗаписатьНачалоЭлемента(Имя);
	Узел.ЗаписатьТекст(СтрокаЗаписи);
	Узел.ЗаписатьКонецЭлемента();
	
КонецПроцедуры

Функция ОпределитьБаланс()
	
	ФайлХМЛ = СоздатьФайлХМЛ("BALANCE", Неопределено,"");
	
	СтрокаРезультат = ОтправитьФайлДляОбработки(ФайлХМЛ);
		
	Баланс = ОбработатьРезультат(СтрокаРезультат, "BALANCE");	
	Возврат Баланс;	
КонецФункции

Функция ОтправитьФайлДляОбработки(ФайлХМЛ)
	
	Сервер = "atompark.com/members/sms";
	
	////ИспользоватьПрокси
	//Если ИспользоватьПрокси Тогда 
	//	Прокси = Новый ИнтернетПрокси; 
	//	Прокси.НеИспользоватьПроксиДляЛокальныхАдресов = Истина; 
	//	Прокси.Пароль = ПроксиПароль; // укажите своё значение 
	//	Прокси.Пользователь = ПроксиПользователь; // укажите своё значение 
	//	Прокси.Установить("http", ПроксиСервер, ПроксиПорт);	
	//	
	//	НТТР = Новый HTTPСоединение(Сервер, , , , Прокси); 
	//Иначе 
		HTTP = Новый HTTPСоединение(Сервер); 
	//КонецЕсли;
		
		
	
	ИмяВходящегоФайла = ПолучитьСистемнуюПапку("MyDocuments") + "\TEMP.txt";
	//ИмяВходящегоФайла = "F:\Клиенты\Юнисендер\TEMP.txt";
	ИмяФайла = ПолучитьСистемнуюПапку("MyDocuments") + "\тест.xml";
		
	Попытка
		//HTTP.Получить(СтрокаЗапроса, ИмяВходящегоФайла);
		HTTP.ОтправитьДляОбработки(ИмяФайла, "xml.php", ИмяВходящегоФайла);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	РезультатОбработки = Новый Файл(ИмяВходящегоФайла);
	
	РезультатОбработки = Новый ТекстовыйДокумент;
	РезультатОбработки.Прочитать(ИмяВходящегоФайла, КодировкаТекста.Системная );
	
	СтрокаРезультат = "";
	Для С = 1 По РезультатОбработки.КоличествоСтрок()-1 Цикл
		
		СтрокаРезультат = СтрокаРезультат + РезультатОбработки.ПолучитьСтроку(С);
		
	КонецЦикла;
		
	Возврат СтрокаРезультат;
	
КонецФункции


