////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ РАСПРЕДЕЛЕНИЯ ЗАТРАТ ПО ПРОЕКТАМ

// Функция создания таблицы распределения по проектам.
//
// Возвращаемое значение:
//	ТаблицаЗначений - Таблица коэффициентов распределения по проектам
//
Функция СоздатьТаблицуРаспределенияПоПроектам()
	
	Таблица = Новый ТаблицаЗначений;
	Таблица.Колонки.Добавить("ВидРаспределения", Новый ОписаниеТипов("СправочникСсылка.ВидыРаспределенияПоПроектам"));
	Таблица.Колонки.Добавить("Проект");
	Таблица.Колонки.Добавить("ДоляРаспределения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	
	Таблица.Индексы.Добавить("ВидРаспределения");
	
	Возврат Таблица;
	
КонецФункции // СоздатьТаблицуРаспределенияПоПроектам()

// Процедура заполняет таблицу распределения по проектам данными для вида распределения.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	ВидРаспределения - СправочникСсылка.ВидыРаспределенияПоПроектам - Вид распределения
//	ТаблицаРаспределенияПоПроектам - ТаблицаЗначений - Таблица распределения по проектам
//
Процедура ЗаполнитьТаблицуРаспределенияПоПроектам(
	СтруктураШапкиДокумента,
	ВидРаспределения,
	ТаблицаРаспределенияПоПроектам
	)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РаспределениеПоПроектам.ВидРаспределения,
	|	РаспределениеПоПроектам.Проект,
	|	РаспределениеПоПроектам.ДоляРаспределения
	|ИЗ
	|	РегистрСведений.РаспределениеПоПроектам.СрезПоследних(&КонМесяца, 
	|		ВидРаспределения  = &ВидРаспределения
	|	) КАК РаспределениеПоПроектам
	|ГДЕ
	|	РаспределениеПоПроектам.ВидРаспределения.МетодРаспределения = ЗНАЧЕНИЕ(Перечисление.МетодыРаспределенияПоПроектам.ПриПроведенииДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РаспределениеПоПроектам.Проект
	|";
	
	Запрос.УстановитьПараметр("КонМесяца", КонецМесяца(СтруктураШапкиДокумента.Дата));
	Запрос.УстановитьПараметр("ВидРаспределения", ВидРаспределения);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = ТаблицаРаспределенияПоПроектам.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
		КонецЦикла;
		
	Иначе
		
		НоваяСтрока = ТаблицаРаспределенияПоПроектам.Добавить();
		НоваяСтрока.ВидРаспределения = ВидРаспределения;
		НоваяСтрока.Проект = ВидРаспределения;
		НоваяСтрока.ДоляРаспределения = 1;
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьТаблицуРаспределенияПоПроектам()

// Функция получает массив строк распредедения по проектам.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	ВидРаспределения - СправочникСсылка.ВидыРаспределенияПоПроектам - Вид распределения
//
// Возвращаемое значение:
//	Массив - Массив строк коэффициентов для переданного вида распределения
//
Функция ПолучитьМассивРаспределенияПоПроектам(
	СтруктураШапкиДокумента,
	ВидРаспределения
	) Экспорт
	
	Если Не СтруктураШапкиДокумента.Свойство("ТаблицаРаспределенияПоПроектам") Тогда
		ТаблицаРаспределенияПоПроектам = СоздатьТаблицуРаспределенияПоПроектам();
		СтруктураШапкиДокумента.Вставить("ТаблицаРаспределенияПоПроектам", ТаблицаРаспределенияПоПроектам);
	Иначе
		ТаблицаРаспределенияПоПроектам = СтруктураШапкиДокумента.ТаблицаРаспределенияПоПроектам;
	КонецЕсли;
	
	// Если в таблице еще нет коэффициентов для вида распределения, то добавим коэффициенты в таблицу.
	Если ТаблицаРаспределенияПоПроектам.Найти(ВидРаспределения, "ВидРаспределения") = Неопределено Тогда
		ЗаполнитьТаблицуРаспределенияПоПроектам(
			СтруктураШапкиДокумента,
			ВидРаспределения,
			ТаблицаРаспределенияПоПроектам
		);
	КонецЕсли;
	
	СтруктураПоиска = Новый Структура("ВидРаспределения", ВидРаспределения);
	
	Массив = ТаблицаРаспределенияПоПроектам.НайтиСтроки(СтруктураПоиска);
	
	Возврат Массив;
		
КонецФункции // ПолучитьМассивРаспределенияПоПроектам()

// Процедура выполняет распределение затрат по проектам.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура РаспределитьСуммуЗатратПоПроектамРасширеннаяАналитика(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	)
	
	Если ХарактерЗатратУУ = Неопределено
	 ИЛИ (СтрокаВыборки.КоличествоУпр = 0
		И СтрокаВыборки.СуммаУпр = 0)
	Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтруктураШапкиДокумента.ВедениеУчетаЗатратПоПроектам
	 ИЛИ Не РасширеннаяАналитикаУчета.УчитыватьЗатратыПоПроектам(ХарактерЗатратУУ)
	Тогда
		Проект = Справочники.Проекты.ПустаяСсылка();
	ИначеЕсли СтруктураШапкиДокумента.Свойство("Проект")
		И ЗначениеЗаполнено(СтруктураШапкиДокумента.Проект)
	Тогда
		Проект = СтруктураШапкиДокумента.Проект;
	Иначе
		Проект = СтрокаВыборки.Проект;
	КонецЕсли;
	
	ВсегоБазаРаспределения = 0;
	Если ЗначениеЗаполнено(Проект)
	   И ТипЗнч(Проект) = Тип("СправочникСсылка.ВидыРаспределенияПоПроектам")
	Тогда
		
		МассивСтрок = ПолучитьМассивРаспределенияПоПроектам(
			СтруктураШапкиДокумента,
			Проект
		);
		
		МассивКоэф = Новый Массив;
		
		Для Каждого Строка Из МассивСтрок Цикл
			МассивКоэф.Добавить(Строка.ДоляРаспределения);
			ВсегоБазаРаспределения = ВсегоБазаРаспределения + Строка.ДоляРаспределения;
		КонецЦикла;
		
		Если ВсегоБазаРаспределения = 0 Тогда
			ОбщегоНазначения.Сообщение("Не удалось выполнить распределение затрат по виду распределения """ + Проект + """", СтатусСообщения.Внимание);
			Проект = Справочники.Проекты.ПустаяСсылка();
		КонецЕсли;
		
	КонецЕсли;
			
	Если ВсегоБазаРаспределения <> 0 Тогда
			
		МассивКоличество = ОбщегоНазначения.РаспределитьПропорционально(СтрокаВыборки.КоличествоУпр, МассивКоэф, 3);
		МассивСтоимость = ОбщегоНазначения.РаспределитьПропорционально(СтрокаВыборки.СуммаУпр, МассивКоэф, 2);
		
		Индекс = 0;
		Для Каждого Строка Из МассивСтрок Цикл
			
			Количество = ?(МассивКоличество = Неопределено, 0, МассивКоличество[Индекс]);
			Стоимость = ?(МассивСтоимость = Неопределено, 0, МассивСтоимость[Индекс]);
			
			РасширеннаяАналитикаУчета.ДвижениеПоРегиструУчетЗатратПоВидуУчета(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				ХарактерЗатратУУ,
				Неопределено, // ХарактерЗатратНУ,
				Строка.Проект,
				Количество,
				Стоимость,
				Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);
			
			Индекс = Индекс + 1;
			
		КонецЦикла;
		
	Иначе
		
		РасширеннаяАналитикаУчета.ДвижениеПоРегиструУчетЗатратПоВидуУчета(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратУУ,
			Неопределено, // ХарактерЗатратНУ,
			Проект,
			СтрокаВыборки.КоличествоУпр,
			СтрокаВыборки.СуммаУпр,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);
		
	КонецЕсли;
	
КонецПроцедуры // РаспределитьСуммуЗатратПоПроектамРасширеннаяАналитика()

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРАМ

// Процедура получает набор записей регистра.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	ИмяРегистра - Строка - Имя регистра накопления
//  СтруктураНаборыЗаписей – Структура - Структура наборов записей регистров.
//
// Возвращаемое значение:
//	Булево - Истина - Признак успешного выполнения операции
//			 Ложь - При получении набора записей возникла ошибка
//
Функция ПолучитьНаборЗаписейРегистра(
	СтруктураШапкиДокумента, 
	ИмяРегистра, 
	СтруктураНаборыЗаписей
	) Экспорт
	
	Если Не СтруктураНаборыЗаписей.Свойство(ИмяРегистра) Тогда
		
		Если ИмяРегистра = "Хозрасчетный" Тогда
			НаборЗаписей = РегистрыБухгалтерии[ИмяРегистра].СоздатьНаборЗаписей();
		ИначеЕсли Найти(ИмяРегистра, "База") > 0 Тогда
			НаборЗаписей = РегистрыСведений[ИмяРегистра].СоздатьНаборЗаписей();
		Иначе
			НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		КонецЕсли;
			
		НаборЗаписей.Отбор.Регистратор.Установить(СтруктураШапкиДокумента.Ссылка);
		
		Если НаборЗаписей.Отбор.Регистратор.Значение = Неопределено Тогда
			Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(СтруктураШапкиДокумента.Ссылка);
			ОбщегоНазначения.СообщитьОбОшибке("
			|Не удалось получить набор записей регистра: " + ИмяРегистра, ,
			Заголовок
			);
			СтруктураНаборыЗаписей.Вставить(ИмяРегистра);
		Иначе
			СтруктураНаборыЗаписей.Вставить(ИмяРегистра, НаборЗаписей);
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат (СтруктураНаборыЗаписей[ИмяРегистра] <> Неопределено);

КонецФункции // ПолучитьНаборыЗаписейРегистров()

// Процедура заполняет и записывает наборы записей регистров.
//
// Параметры
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//
Процедура ЗаписатьНаборыЗаписейРегистров(
	СтруктураНаборыЗаписей,
	СтруктураШапкиДокумента = Неопределено
	) Экспорт
	
	МассивЗаписьСЗамещением = Новый Массив;
	МассивЗаписьСЗамещением.Добавить("ВыпускПродукции");
	МассивЗаписьСЗамещением.Добавить("ВыпускПродукцииБухгалтерскийУчет");
	
	МассивЗаписьСЗамещением.Добавить("ЗатратыНаВыпускПродукции");
	МассивЗаписьСЗамещением.Добавить("ЗатратыНаВыпускПродукцииБухгалтерскийУчет");
	
	МассивЗаписьСЗамещением.Добавить("ВыпускПродукцииНаработка");
	МассивЗаписьСЗамещением.Добавить("ВыпускПродукцииНаработкаБухгалтерскийУчет");
	
	МассивЗаписьСЗамещением.Добавить("ЗатратыНаВыпускПродукцииНаработка");
	МассивЗаписьСЗамещением.Добавить("ЗатратыНаВыпускПродукцииНаработкаБухгалтерскийУчет");
	
	МассивЗаписьСЗамещением.Добавить("ПродажиСебестоимость");
	МассивЗаписьСЗамещением.Добавить("ТоварыОрганизаций");
	МассивЗаписьСЗамещением.Добавить("ТоварыОрганизацийРегл");
	
	Если СтруктураШапкиДокумента <> Неопределено Тогда
		ЭтоПоступлениеТоваровУслуг = (ТипЗнч(СтруктураШапкиДокумента.Ссылка) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	Иначе
		ЭтоПоступлениеТоваровУслуг = Ложь;
	КонецЕсли;
	
	Если Не ЭтоПоступлениеТоваровУслуг Тогда
		МассивЗаписьСЗамещением.Добавить("СтроительствоОбъектовОсновныхСредств");
		МассивЗаписьСЗамещением.Добавить("ЗатратыНаСтроительствоОбъектовОсновныхСредств");
	КонецЕсли;
	
	МассивЗаписьСЗамещением.Добавить("ЗаказыНаОбслуживаниеОС");
	
	Для Каждого СтрокаСтруктуры Из СтруктураНаборыЗаписей Цикл
		
		НаборЗаписей = СтрокаСтруктуры.Значение;
		Если НаборЗаписей = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Если МассивЗаписьСЗамещением.Найти(СтрокаСтруктуры.Ключ) <> Неопределено Тогда
			НаборЗаписей.Записать();
		Иначе
			НаборЗаписей.Записать(Ложь);
		КонецЕсли;
		
	КонецЦикла; 
	
КонецПроцедуры // ЗаписатьНаборыЗаписейРегистров()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ВРЕМЕННОЙ ТАБЛИЦЫ ПО ЗАТРАТАМ

// Формирует текст запроса по табличной части документа "Сдельный наряд".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоЗатратамСдельныйНаряд()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты) КАК КодОперации,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийНезавершенноеПроизводство.СписаниеПрочихЗатратВПроизводство) КАК КодОперацииНЗП,
	|
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.СпособРаспределенияЗатратНаВыпуск,
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры,
	|
	|	ТабличнаяЧасть.Ссылка.Заказ КАК Заказ,
	|	ТабличнаяЧасть.Проект,
 	|
	|	ТабличнаяЧасть.Продукция,
	|	ТабличнаяЧасть.ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияПродукции,
	|		
	|	ТабличнаяЧасть.СчетЗатрат,
	|	Ложь КАК НеКорректироватьНУ,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначение,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|
	|	Неопределено КАК КорАналитикаВидаУчета,
	|	Неопределено КАК КорАналитикаУчетаЗатрат,
	|	Неопределено КАК КорАналитикаРаспределенияЗатрат,
	|	Неопределено КАК КорАналитикаУчетаПартий,
	|
	|	0 КАК Количество,
	|	0 КАК КоличествоУпр,
	|	0 КАК КоличествоБух,
	|	0 КАК КоличествоНал,
	|
	|	0 КАК Сумма,
	|	0 КАК НДСУпр,
	|	0 КАК СуммаБезНДС,
	|	ТабличнаяЧасть.Сумма КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаБух,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаНал,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьНУ,
	|
	|   ЛОЖЬ КАК НДСВключенВСтоимость,
	|	ТабличнаяЧасть.СуммаРегл КАК ПроводкиСуммаБезНДСРегл,
	|   0  КАК СуммаНДСРегл,
	|   0  КАК ПроводкиСуммаНДСРегл
	|
	|ПОМЕСТИТЬ ТаблицаЗатрат 
	|ИЗ	
	|	Документ.СдельныйНаряд.Выработка КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоЗатратамСдельныйНаряд()

// Формирует текст запроса по табличной части документа "Отчет производства за смену".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоЗатратамОтчетПроизводстваЗаСмену()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты) КАК КодОперации,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийНезавершенноеПроизводство.СписаниеПрочихЗатратВПроизводство) КАК КодОперацииНЗП,
	|
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	Неопределено КАК СпособРаспределенияЗатратНаВыпуск,
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры,
	|
	|	ТабличнаяЧасть.Заказ,
	|	ТабличнаяЧасть.Проект,
 	|
	|	ТабличнаяЧасть.Продукция,
	|	ТабличнаяЧасть.ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияПродукции,
	|		
	|	ТабличнаяЧасть.СчетЗатрат,
	|	Ложь КАК НеКорректироватьНУ,
	|	ТабличнаяЧасть.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТабличнаяЧасть.НалоговоеНазначение КАК НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|
	|	Неопределено КАК КорАналитикаВидаУчета,
	|	Неопределено КАК КорАналитикаУчетаЗатрат,
	|	Неопределено КАК КорАналитикаРаспределенияЗатрат,
	|	Неопределено КАК КорАналитикаУчетаПартий,
	|
	|	0 КАК Количество,
	|	0 КАК КоличествоУпр,
	|	0 КАК КоличествоБух,
	|	0 КАК КоличествоНал,
	|
	|	0 КАК Сумма,
	|	0 КАК НДСУпр,
	|	0 КАК СуммаБезНДС,
	|	ТабличнаяЧасть.Сумма КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаБух,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаНал,
	|	ТабличнаяЧасть.СуммаРегл КАК СтоимостьНУ,
	|   ЛОЖЬ КАК НДСВключенВСтоимость,
	|	ТабличнаяЧасть.СуммаРегл КАК ПроводкиСуммаБезНДСРегл,
	|   0  КАК СуммаНДСРегл,
	|   0  КАК ПроводкиСуммаНДСРегл
	|
	|ПОМЕСТИТЬ ТаблицаЗатрат 
	|ИЗ	
	|	Документ.ОтчетПроизводстваЗаСмену.ТехнологическиеОперации КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|	И ТабличнаяЧасть.Ссылка.ИспользоватьТехнологическиеОперации
	|		
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоЗатратамОтчетПроизводстваЗаСмену()

// Формирует текст запроса по табличной части документа "Прочие затраты".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоЗатратамПрочиеЗатраты()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВЫБОР КОГДА ТабличнаяЧасть.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПрочиеЗатраты.Списание) ТОГДА
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) 
	|	КОНЕЦ КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты) КАК КодОперации,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийНезавершенноеПроизводство.СписаниеПрочихЗатратВПроизводство) КАК КодОперацииНЗП,
	|
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.СпособРаспределенияЗатратНаВыпуск,
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры,
	|
	|	ТабличнаяЧасть.Заказ,
	|	ТабличнаяЧасть.Проект,
 	|
	|	ТабличнаяЧасть.Продукция,
	|	ТабличнаяЧасть.ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияПродукции,
	|		
	|	ТабличнаяЧасть.СчетЗатрат,
	|	Ложь КАК НеКорректироватьНУ,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначение,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|
	|	Неопределено КАК КорАналитикаВидаУчета,
	|	Неопределено КАК КорАналитикаУчетаЗатрат,
	|	Неопределено КАК КорАналитикаРаспределенияЗатрат,
	|	Неопределено КАК КорАналитикаУчетаПартий,
	|
	|	0 КАК Количество,
	|	0 КАК КоличествоУпр,
	|	0 КАК КоличествоБух,
	|	0 КАК КоличествоНал,
	|
	|	0 КАК Сумма,
	|	0 КАК НДСУпр,
	|	0 КАК СуммаБезНДС,
	|	ТабличнаяЧасть.Сумма КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаБух,
	|	ТабличнаяЧасть.СуммаНал  КАК СуммаНал,
	|	ТабличнаяЧасть.СуммаНал  КАК СтоимостьНУ,
	|   ЛОЖЬ КАК НДСВключенВСтоимость,
	|	ТабличнаяЧасть.СуммаРегл КАК ПроводкиСуммаБезНДСРегл,
	|   ТабличнаяЧасть.СуммаНДС  КАК СуммаНДСРегл,
	|   ТабличнаяЧасть.СуммаНДСКредит КАК ПроводкиСуммаНДСРегл
	|
	|ПОМЕСТИТЬ ТаблицаЗатрат 
	|ИЗ	
	|	Документ.ПрочиеЗатраты.Затраты КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоЗатратамПрочиеЗатраты()

// Формирует текст запроса по табличной части документа "Корректировка прочих затрат".
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоЗатратамКорректировкаПрочихЗатрат()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты) КАК КодОперации,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс) КАК КодОперацииНЗП,
	|
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.Ссылка.Подразделение КАК Подразделение,
	|	ТабличнаяЧасть.Ссылка.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппа,
	|	ТабличнаяЧасть.СпособРаспределенияЗатратНаВыпуск,
	|	ТабличнаяЧасть.СтатьяЗатрат,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры,
	|
	|	ТабличнаяЧасть.Заказ,
	|	ТабличнаяЧасть.Проект,
 	|
	|	ТабличнаяЧасть.Продукция,
	|	ТабличнаяЧасть.ХарактеристикаПродукции,
	|	ТабличнаяЧасть.СерияПродукции,
	|		
	|	ТабличнаяЧасть.СчетЗатрат,
	|	Ложь КАК НеКорректироватьНУ,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначение,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ТабличнаяЧасть.ОбъектСтроительства,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|
	|	Неопределено КАК КорАналитикаВидаУчета,
	|	Неопределено КАК КорАналитикаУчетаЗатрат,
	|	Неопределено КАК КорАналитикаРаспределенияЗатрат,
	|	Неопределено КАК КорАналитикаУчетаПартий,
	|
	|	0 КАК Количество,
	|	0 КАК КоличествоУпр,
	|	0 КАК КоличествоБух,
	|	0 КАК КоличествоНал,
	|
	|	0 КАК Сумма,
	|	0 КАК НДСУпр,
	|	0 КАК СуммаБезНДС,
	|	ТабличнаяЧасть.Сумма КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаБух,
	|	ТабличнаяЧасть.СуммаНал  КАК СуммаНал,
	|	ТабличнаяЧасть.СуммаНал  КАК СтоимостьНУ,
	|   ЛОЖЬ КАК НДСВключенВСтоимость,
	|	ТабличнаяЧасть.СуммаРегл КАК ПроводкиСуммаБезНДСРегл,
	|   ТабличнаяЧасть.СуммаНДС КАК СуммаНДСРегл,
	|   ТабличнаяЧасть.СуммаНДСКредит КАК ПроводкиСуммаНДСРегл
	|
	|ПОМЕСТИТЬ ТаблицаЗатрат 
	|ИЗ	
	|	Документ.КорректировкаПрочихЗатрат.Затраты КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийЗатраты.ПрочиеПостоянныеЗатраты) КАК КодОперации,
	|	ЗНАЧЕНИЕ(Перечисление.КодыОперацийНезавершенноеПроизводство.КорректировкаНЗПФикс) КАК КодОперацииНЗП,
	|
	|	ТабличнаяЧасть.Ссылка.Организация КАК Организация,
	|	ТабличнаяЧасть.ПодразделениеПолучатель,
	|	ТабличнаяЧасть.ПодразделениеОрганизацииПолучатель,
	|
	|	ТабличнаяЧасть.НоменклатурнаяГруппаПолучатель,
	|	ТабличнаяЧасть.СпособРаспределенияЗатратНаВыпускПолучатель,
	|	ТабличнаяЧасть.СтатьяЗатратПолучатель,
	|
	|	ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Номенклатура,
	|	ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаНоменклатуры,
	|	ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияНоменклатуры,
	|
	|	ТабличнаяЧасть.ЗаказПолучатель,
	|	ТабличнаяЧасть.ПроектПолучатель КАК Проект,
 	|
	|	ТабличнаяЧасть.ПродукцияПолучатель,
	|	ТабличнаяЧасть.ХарактеристикаПродукцииПолучатель,
	|	ТабличнаяЧасть.СерияПродукцииПолучатель,
	|		
	|	ТабличнаяЧасть.СчетЗатратПолучатель,
	|	ТабличнаяЧасть.НеКорректироватьНУ КАК НеКорректироватьНУ,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначение,
	|	ТабличнаяЧасть.НалоговоеНазначениеДоходовИЗатратПолучатель КАК НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ТабличнаяЧасть.ОбъектСтроительстваПолучатель,
	|
	|	Неопределено КАК Субконто1,
	|	Неопределено КАК Субконто2,
	|	Неопределено КАК Субконто3,
	|
	|	Неопределено КАК КорАналитикаВидаУчета,
	|	Неопределено КАК КорАналитикаУчетаЗатрат,
	|	Неопределено КАК КорАналитикаРаспределенияЗатрат,
	|	Неопределено КАК КорАналитикаУчетаПартий,
	|
	|	0 КАК Количество,
	|	0 КАК КоличествоУпр,
	|	0 КАК КоличествоБух,
	|	0 КАК КоличествоНал,
	|
	|	0 КАК Сумма,
	|	0 КАК НДСУпр,
	|	0 КАК СуммаБезНДС,
	|	ТабличнаяЧасть.Сумма КАК СуммаУпр,
	|	0 КАК СуммаРегл,
	|	ТабличнаяЧасть.СуммаРегл КАК СуммаБух,
	|	ТабличнаяЧасть.СуммаНал  КАК СуммаНал,
	|	ТабличнаяЧасть.СуммаНал  КАК СтоимостьНУ,
	|   ЛОЖЬ КАК НДСВключенВСтоимость,
	|	ТабличнаяЧасть.СуммаРегл КАК ПроводкиСуммаБезНДСРегл,
	|   ТабличнаяЧасть.СуммаНДС  КАК СуммаНДСРегл,
	|   ТабличнаяЧасть.СуммаНДСКредит КАК ПроводкиСуммаНДСРегл
	|
	|ИЗ	
	|	Документ.КорректировкаПрочихЗатрат.Затраты КАК ТабличнаяЧасть
	|	
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|		
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоЗатратамКорректировкаПрочихЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРАМ УЧЕТА ЗАТРАТ

// Процедура формирует движения по регистрам учета затрат по документу.
//
// Параметры:
//	ИсходнаяСтруктураШапкиДокумента - Структура - Реквизиты документа
//	ТаблицаЗатрат - ТаблицаЗначений - Таблица затрат
//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура СформироватьДвиженияПоОтражениюЗатрат(
	ИсходнаяСтруктураШапкиДокумента,
	ТаблицаЗатрат,
	ВидОтраженияВУчете,
	СтруктураНаборыЗаписей = Неопределено
	) Экспорт
	
	СтруктураШапкиДокумента = ДополнитьСтруктуруШапкиДокументаНастройкиУчетаЗатрат(
		ВидОтраженияВУчете,
		ИсходнаяСтруктураШапкиДокумента
	);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТаблицаСформирована = СформироватьВременнуюТаблицуЗатрат(
		СтруктураШапкиДокумента,
		ТаблицаЗатрат,
		МенеджерВременныхТаблиц
	);
	Если Не ТаблицаСформирована Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = СформироватьЗапросПоТаблицеЗатрат(
		СтруктураШапкиДокумента,
		МенеджерВременныхТаблиц,
		ВидОтраженияВУчете
	);
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураКлючиАналитики = Новый Структура;
	
	Если СтруктураНаборыЗаписей = Неопределено Тогда
		СтруктураНаборыЗаписей = Новый Структура;
		ЗаписыватьНаборыЗаписей = Истина;
	Иначе
		ЗаписыватьНаборыЗаписей = Ложь;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ДвиженияПоРегистрамОтражениеЗатрат(
			СтруктураШапкиДокумента,
			Выборка,
			ВидОтраженияВУчете,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);
	КонецЦикла;
	
	Если ЗаписыватьНаборыЗаписей Тогда
		ЗаписатьНаборыЗаписейРегистров(
			СтруктураНаборыЗаписей,
			СтруктураШапкиДокумента
		);
		СтруктураНаборыЗаписей = Неопределено;
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияПоОтражениюЗатрат()

// Процедура формирует временную таблицу "ТаблицаЗатрат".
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	ТаблицаЗатрат - ТаблицаЗначений - Таблица затрат
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//
// Возвращаемое значение:
//	Булево - Признак успешного создания временной таблицы
//
Функция СформироватьВременнуюТаблицуЗатрат(
	СтруктураШапкиДокумента,
	ТаблицаЗатрат,
	МенеджерВременныхТаблиц
	)
	
	ТекстЗапросаПоЗатратам = "";
	Если ТаблицаЗатрат <> Неопределено Тогда 
		
		ТекстЗапросаПоЗатратам = СформироватьТекстЗапросаПоЗатратамТаблицаЗначений();
		
	Иначе
		
		// Подготовим текст запроса по затратам по данным производственных документов
		ТипДокумента = ТипЗнч(СтруктураШапкиДокумента.Ссылка);
		
		Если ТипДокумента = Тип("ДокументСсылка.СдельныйНаряд") Тогда
			ТекстЗапросаПоЗатратам = СформироватьТекстЗапросаПоЗатратамСдельныйНаряд();
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену") Тогда
			ТекстЗапросаПоЗатратам = СформироватьТекстЗапросаПоЗатратамОтчетПроизводстваЗаСмену();
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.ПрочиеЗатраты") Тогда
			ТекстЗапросаПоЗатратам = СформироватьТекстЗапросаПоЗатратамПрочиеЗатраты();
		ИначеЕсли ТипДокумента = Тип("ДокументСсылка.КорректировкаПрочихЗатрат") Тогда
			ТекстЗапросаПоЗатратам = СформироватьТекстЗапросаПоЗатратамКорректировкаПрочихЗатрат();	
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстЗапросаПоЗатратам) Тогда
		ОбщегоНазначения.Сообщение("Не определено формирование движений по отражению затрат для документа: " + Строка(СтруктураШапкиДокумента.Ссылка));
		Возврат Ложь;
	КонецЕсли;
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаПоЗатратам;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаЗатрат", ТаблицаЗатрат);
	Запрос.УстановитьПараметр("Ссылка", СтруктураШапкиДокумента.Ссылка);
	
	ТаблицСформирована = Ложь;
	
	РезультатаЗапроса = Запрос.Выполнить();
	Если Не РезультатаЗапроса.Пустой() Тогда
		Выборка = РезультатаЗапроса.Выбрать();
		Если Выборка.Следующий() Тогда
			ТаблицСформирована = (Выборка.Количество > 0);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицСформирована;
	
КонецФункции // СформироватьВременнуюТаблицуЗатрат()

// Функция формирует текст запроса по таблице значений.
//
// Возвращаемое значение:
//   Строка – Текст запроса.
//
Функция СформироватьТекстЗапросаПоЗатратамТаблицаЗначений()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	| *
	|ПОМЕСТИТЬ ТаблицаЗатрат
	|ИЗ
	|	&ТаблицаЗатрат КАК ТаблицаЗатрат
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапросаПоЗатратамТаблицаЗначений()

// Процедура формирует движения по регистрам учета затрат на строительство ОС.
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	ХарактерЗатрат - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат по управленческому учету
//	Сумма - Число - Учетная стоимость по управленческому учету
//	ВидДвижения - ВидДвиженияНакопления - Вид движения
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура СформироватьДвиженияПоРегистрамУчетаЗатратНаСтроительствоОС(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатрат,
	Сумма,
	ХарактерЗатратБУ,
	СуммаБУ, 
	СуммаНУ,
	НДСВходящий,
	НДСКредит,
	ВидДвижения,
	СтруктураНаборыЗаписей
	) Экспорт
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И ХарактерЗатрат = Перечисления.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы Тогда
	   
		СформироватьСтрокуДвиженияПоРегиструСтроительствоОбъектовОсновныхСредств(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Сумма,
			ВидДвижения,
			СтруктураНаборыЗаписей
			);
			
		СформироватьСтрокуДвиженияПоРегиструЗатратыНаСтроительствоОбъектовОсновныхСредств(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			Сумма,
			СтруктураНаборыЗаписей
			);
				
	КонецЕсли;
	
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	     И ХарактерЗатратБУ = Перечисления.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы Тогда
	     
	  	СформироватьСтрокуДвиженияПоРегиструСтроительствоОбъектовОсновныхСредствБУ(
	  		СтруктураШапкиДокумента,
	  		СтрокаВыборки,
			СуммаБУ,
	  		СуммаНУ,
	  		НДСВходящий,
	  		НДСКредит,
	  		ВидДвижения,
	  		СтруктураНаборыЗаписей
			);
	  		
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияПоРегистрамУчетаЗатратНаСтроительствоОС()

// Процедура формирует движения по регистрам "Учет затрат" (отражение затрат).
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	ХарактерЗатратУУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей управленческого учета
//	ХарактерЗатратБУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей бухгалтерского учета
//	ХарактерЗатратНУ - ПеречислениеСсылка.ХарактерЗатрат - Характер затрат для целей налогового учета
//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура СформироватьДвиженияПоРегистрамУчетЗатрат(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	ХарактерЗатратУУ,
	ХарактерЗатратБУ,
	ХарактерЗатратНУ,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	)
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И СтруктураШапкиДокумента.ОтражатьЗатратыВУпрУчете
	Тогда
		РаспределитьСуммуЗатратПоПроектамРасширеннаяАналитика(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратУУ,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);

	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете 
	Тогда
	
		РасширеннаяАналитикаУчета.ДвижениеПоРегиструУчетЗатратПоВидуУчета(
			СтруктураШапкиДокумента,
			СтрокаВыборки,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			Неопределено, // Проект,
			0, // КоличествоУпр,
			0, // СуммаУпр,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);
		
		// Корректировки использования в НУ
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда 

			УправлениеПроизводствомДвиженияПоРегистрам.СформироватьДвиженияПоКорректировкамИспользованияЗатратНУРасширеннаяАналитика(
				СтруктураШапкиДокумента,
				СтрокаВыборки,
				ХарактерЗатратБУ,
				ХарактерЗатратНУ,
				СтрокаВыборки.СуммаБух,
				СтрокаВыборки.СуммаНДСРегл,
				СтрокаВыборки.ПроводкиСуммаНДСРегл,
				СтрокаВыборки.ВидДвижения,
				СтруктураКлючиАналитики,
				СтруктураНаборыЗаписей
			);
				
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // СформироватьДвиженияПоРегистрамУчетЗатрат()

// Функция формирует текст запроса по таблице затрат.
//
// Возвращаемое значение:
//	Строка - текст запроса по таблице затрат
//
Функция СформироватьТекстЗапросаПоТаблицеЗатрат()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаЗатрат.ВидДвижения,
	|	ТаблицаЗатрат.КодОперации,
	|	ТаблицаЗатрат.КодОперацииНЗП,
	|
	|	ТаблицаЗатрат.Организация,
	|	ВЫБОР КОГДА ТаблицаЗатрат.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) ТОГДА
	|		&Подразделение
	|	ИНАЧЕ
	|		ТаблицаЗатрат.Подразделение 
	|	КОНЕЦ КАК ПодразделениеПолучатель,
	|	ВЫБОР КОГДА ТаблицаЗатрат.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) ТОГДА
	|		&ПодразделениеОрганизации
	|	ИНАЧЕ
	|		ТаблицаЗатрат.ПодразделениеОрганизации 
	|	КОНЕЦ КАК ПодразделениеОрганизацииПолучатель,
	|
	|	ТаблицаЗатрат.НоменклатурнаяГруппа КАК НоменклатурнаяГруппаПолучатель,
	|	ТаблицаЗатрат.СпособРаспределенияЗатратНаВыпуск КАК СпособРаспределенияЗатрат,
	|
	|	ТаблицаЗатрат.СтатьяЗатрат КАК СтатьяЗатратПолучатель,
	|	ТаблицаЗатрат.СтатьяЗатрат.ВидЗатрат КАК ВидЗатрат,
	|	ТаблицаЗатрат.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатрат,
	|	ТаблицаЗатрат.СтатьяЗатрат.ХарактерЗатрат КАК ХарактерЗатратПолучатель,
	|	ТаблицаЗатрат.СтатьяЗатрат.СтатусМатериальныхЗатрат КАК СтатусМатериальныхЗатрат,
	|
	|	ТаблицаЗатрат.Номенклатура,
	|	ТаблицаЗатрат.ХарактеристикаНоменклатуры,
	|	ТаблицаЗатрат.СерияНоменклатуры,
	|
	|	ТаблицаЗатрат.Номенклатура КАК Затрата,
	|	ТаблицаЗатрат.ХарактеристикаНоменклатуры КАК ХарактеристикаЗатраты,
	|	ТаблицаЗатрат.СерияНоменклатуры КАК СерияЗатраты,
	|
	|	ЕСТЬNULL(ТаблицаЗатрат.Номенклатура.Услуга, Ложь) КАК Услуга,
	|	ЕСТЬNULL(ТаблицаЗатрат.Номенклатура.ВестиУчетПоСериямВНЗП, Ложь) КАК ВестиУчетПоСериямВНЗП,
	|	ЕСТЬNULL(ТаблицаЗатрат.Номенклатура.ВестиОперативныйУчетОстатковНЗП, Ложь) КАК ВестиОперативныйУчетОстатковНЗП,
	|
	|	ВЫБОР КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказПолучатель,
	|
	|	ВЫБОР КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК ЗаказПолучательРегл,
	|
	|	ВЫБОР КОГДА &ВедениеУчетаЗатратПоПроектам ТОГДА
	|		ТаблицаЗатрат.Проект
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ КАК Проект,
 	|
	|	ТаблицаЗатрат.Продукция КАК ПродукцияПолучатель,
	|	ТаблицаЗатрат.ХарактеристикаПродукции КАК ХарактеристикаПродукцииПолучатель,
	|	ТаблицаЗатрат.СерияПродукции КАК СерияПродукцииПолучатель,
	|		
	|	ТаблицаЗатрат.СчетЗатрат,
	|	ТаблицаЗатрат.СчетЗатрат КАК СчетДт,
	|	ТаблицаЗатрат.НеКорректироватьНУ КАК НеКорректироватьНУ,
	|	ТаблицаЗатрат.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ТаблицаЗатрат.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначениеПолучатель,
	|
	|	ТаблицаЗатрат.ОбъектСтроительства,
	|
	|	ТаблицаЗатрат.Субконто1,
	|	ТаблицаЗатрат.Субконто2,
	|	ТаблицаЗатрат.Субконто3,
	|
	|	ТаблицаЗатрат.КорАналитикаВидаУчета,
	|	ТаблицаЗатрат.КорАналитикаУчетаЗатрат,
	|	ТаблицаЗатрат.КорАналитикаРаспределенияЗатрат,
	|	ТаблицаЗатрат.КорАналитикаУчетаПартий,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаЗатрат.СуммаУпр <> 0 ТОГДА
	|			ТаблицаЗатрат.СуммаУпр - 
	|			ВЫБОР КОГДА &НеВключатьНДСВЗатраты
	|			ТОГДА
	|				ТаблицаЗатрат.НДСУпр
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ТаблицаЗатрат.Сумма
	|		КОНЕЦ
	|	) КАК СуммаУпр,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаЗатрат.ПроводкиСуммаБезНДСРегл <> 0
	|		ТОГДА
	|			ТаблицаЗатрат.ПроводкиСуммаБезНДСРегл
	|		КОГДА ТаблицаЗатрат.СуммаБух <> 0 ТОГДА
	|			ТаблицаЗатрат.СуммаБух
	|		ИНАЧЕ
	|			ТаблицаЗатрат.СуммаРегл
	|		КОНЕЦ
	|	) КАК СуммаБух,
	|
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаЗатрат.НалоговоеНазначениеДоходовИЗатрат = &НалоговоеНазначениеРаспределяемоеАмортизация ТОГДА
	|			0 
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ТаблицаЗатрат.СтоимостьНУ <> 0
	|			ТОГДА
	|				ТаблицаЗатрат.СтоимостьНУ
	|			ИНАЧЕ
	|				ТаблицаЗатрат.СуммаНал
	|			КОНЕЦ
	|		КОНЕЦ
	|	) КАК СуммаНал,
	|
	//  Полная сумма НДС (в НДСВходящий). Либо подготовленная документом, либо = 0 
	|   СУММА(ТаблицаЗатрат.СуммаНДСРегл) КАК СуммаНДСРегл,
	//  Сумма НДС в кредит (в НДСКредит). Либо подготовленная документом, либо = 0 
	|   СУММА(ТаблицаЗатрат.ПроводкиСуммаНДСРегл) КАК ПроводкиСуммаНДСРегл,
	|
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаЗатрат.Количество <> 0 ТОГДА
	|			ТаблицаЗатрат.Количество
	|		ИНАЧЕ
	|			ТаблицаЗатрат.КоличествоУпр
	|		КОНЕЦ
	|	) КАК КоличествоУпр,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаЗатрат.Количество <> 0 ТОГДА
	|			ТаблицаЗатрат.Количество
	|		ИНАЧЕ
	|			ТаблицаЗатрат.КоличествоБух
	|		КОНЕЦ
	|	) КАК КоличествоБух,
	|	СУММА(
	|		ВЫБОР КОГДА ТаблицаЗатрат.Количество <> 0 ТОГДА
	|			ТаблицаЗатрат.Количество
	|		ИНАЧЕ
	|			ТаблицаЗатрат.КоличествоНал
	|		КОНЕЦ
	|	) КАК КоличествоНал,
	|	СУММА(ТаблицаЗатрат.Количество) КАК Количество
	|
	|ИЗ	
	|	ТаблицаЗатрат КАК ТаблицаЗатрат
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаЗатрат.ВидДвижения,
	|	ТаблицаЗатрат.КодОперации,
	|	ТаблицаЗатрат.КодОперацииНЗП,
	|
	|	ТаблицаЗатрат.Организация,
	|	ТаблицаЗатрат.Подразделение,
	|	ТаблицаЗатрат.ПодразделениеОрганизации,
	|	ВЫБОР КОГДА ТаблицаЗатрат.Подразделение = ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) ТОГДА
	|		&Подразделение
	|	ИНАЧЕ
	|		ТаблицаЗатрат.Подразделение 
	|	КОНЕЦ,
	|	ВЫБОР КОГДА ТаблицаЗатрат.ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) ТОГДА
	|		&ПодразделениеОрганизации
	|	ИНАЧЕ
	|		ТаблицаЗатрат.ПодразделениеОрганизации 
	|	КОНЕЦ,
	|
	|	ТаблицаЗатрат.НоменклатурнаяГруппа,
	|	ТаблицаЗатрат.СпособРаспределенияЗатратНаВыпуск,
	|
	|	ТаблицаЗатрат.СтатьяЗатрат,
	|
	|	ТаблицаЗатрат.Номенклатура,
	|	ТаблицаЗатрат.ХарактеристикаНоменклатуры,
	|	ТаблицаЗатрат.СерияНоменклатуры,
	|
	|	ЕСТЬNULL(ТаблицаЗатрат.Номенклатура.Услуга, Ложь),
	|	ЕСТЬNULL(ТаблицаЗатрат.Номенклатура.ВестиУчетПоСериямВНЗП, Ложь),
	|	ЕСТЬNULL(ТаблицаЗатрат.Номенклатура.ВестиОперативныйУчетОстатковНЗП, Ложь),
	|
	|	ВЫБОР КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводство ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказПокупателя 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказПокупателя.ПустаяСсылка) ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	КОГДА ТаблицаЗатрат.Заказ ССЫЛКА Документ.ЗаказНаПроизводство 
	|			И ТаблицаЗатрат.Заказ <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство.ПустаяСсылка)
	|			И &УчетЗатратПоЗаказамНаПроизводствоРегл ТОГДА
	|		ТаблицаЗатрат.Заказ
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|
	|	ВЫБОР КОГДА &ВедениеУчетаЗатратПоПроектам ТОГДА
	|		ТаблицаЗатрат.Проект
	|	ИНАЧЕ
	|		Неопределено
	|	КОНЕЦ,
	|
	|	ТаблицаЗатрат.Продукция,
	|	ТаблицаЗатрат.ХарактеристикаПродукции,
	|	ТаблицаЗатрат.СерияПродукции,
	|		
	|	ТаблицаЗатрат.СчетЗатрат,
	|	ТаблицаЗатрат.НалоговоеНазначение,
	|	ТаблицаЗатрат.НеКорректироватьНУ,
	|	ТаблицаЗатрат.НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ТаблицаЗатрат.ОбъектСтроительства,
	|
	|	ТаблицаЗатрат.Субконто1,
	|	ТаблицаЗатрат.Субконто2,
	|	ТаблицаЗатрат.Субконто3,
	|
	|	ТаблицаЗатрат.КорАналитикаВидаУчета,
	|	ТаблицаЗатрат.КорАналитикаУчетаЗатрат,
	|	ТаблицаЗатрат.КорАналитикаРаспределенияЗатрат,
	|	ТаблицаЗатрат.КорАналитикаУчетаПартий
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаЗатрат.СчетЗатрат,
	|	ТаблицаЗатрат.НалоговоеНазначение,
	|	ТаблицаЗатрат.НалоговоеНазначениеДоходовИЗатрат,
	|	ТаблицаЗатрат.Подразделение,
	|	ТаблицаЗатрат.ПодразделениеОрганизации,
	|	ТаблицаЗатрат.НоменклатурнаяГруппа,
	|	ТаблицаЗатрат.СтатьяЗатрат,
	|	ТаблицаЗатрат.СпособРаспределенияЗатратНаВыпуск,
	|
	|	ТаблицаЗатрат.Номенклатура,
	|	ТаблицаЗатрат.ХарактеристикаНоменклатуры,
	|	ТаблицаЗатрат.СерияНоменклатуры,
	|
	|	ТаблицаЗатрат.Субконто1,
	|	ТаблицаЗатрат.Субконто2,
	|	ТаблицаЗатрат.Субконто3,
	|
	|	ТаблицаЗатрат.КорАналитикаВидаУчета,
	|	ТаблицаЗатрат.КорАналитикаУчетаЗатрат,
	|	ТаблицаЗатрат.КорАналитикаРаспределенияЗатрат,
	|	ТаблицаЗатрат.КорАналитикаУчетаПартий
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьЗапросПоТаблицеЗатрат()

// Функция формирует запрос по таблице затрат.
//
// Параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц
//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
//
// Возвращаемое значение:
//	Запрос - запрос по таблице затрат
//
Функция СформироватьЗапросПоТаблицеЗатрат(
	СтруктураШапкиДокумента,
	МенеджерВременныхТаблиц,
	ВидОтраженияВУчете
	)
	
	ТекстЗапроса = СформироватьТекстЗапросаПоТаблицеЗатрат();
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Если ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	 ИЛИ ВидОтраженияВУчете = Неопределено
	Тогда
		УчетЗатратПоЗаказамНаПроизводство = СтруктураШапкиДокумента.УчетЗатратПоЗаказамНаПроизводство;
		НеВключатьНДСВЗатраты = СтруктураШапкиДокумента.НеВключатьНДСВЗатраты;
		ВедениеУчетаЗатратПоПроектам = СтруктураШапкиДокумента.ВедениеУчетаЗатратПоПроектам;
	Иначе
		УчетЗатратПоЗаказамНаПроизводство = Истина;
		НеВключатьНДСВЗатраты = Истина;
		ВедениеУчетаЗатратПоПроектам = Ложь;
	КонецЕсли;
	Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводство", УчетЗатратПоЗаказамНаПроизводство);
	Запрос.УстановитьПараметр("НеВключатьНДСВЗатраты", НеВключатьНДСВЗатраты);
	Запрос.УстановитьПараметр("ВедениеУчетаЗатратПоПроектам", ВедениеУчетаЗатратПоПроектам);
	
	Если ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВБухгалтерскомУчете
	 ИЛИ ВидОтраженияВУчете = Неопределено
	Тогда
		УчетЗатратПоЗаказамНаПроизводствоРегл = СтруктураШапкиДокумента.УчетЗатратПоЗаказамНаПроизводствоРегл;
	Иначе
		УчетЗатратПоЗаказамНаПроизводствоРегл = Истина;
	КонецЕсли;
	Запрос.УстановитьПараметр("УчетЗатратПоЗаказамНаПроизводствоРегл", УчетЗатратПоЗаказамНаПроизводствоРегл);
	
	Если СтруктураШапкиДокумента.Свойство("Подразделение") Тогда
		Запрос.УстановитьПараметр("Подразделение", СтруктураШапкиДокумента.Подразделение);
	Иначе
		Запрос.УстановитьПараметр("Подразделение", Справочники.Подразделения.ПустаяСсылка());	
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.Свойство("ПодразделениеОрганизации") Тогда
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", СтруктураШапкиДокумента.ПодразделениеОрганизации);
	Иначе
		Запрос.УстановитьПараметр("ПодразделениеОрганизации", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());	
	КонецЕсли;
	
	
	Запрос.УстановитьПараметр("НалоговоеНазначениеРаспределяемоеАмортизация", Справочники.НалоговыеНазначенияАктивовИЗатрат.РаспределяемоеАмортизация);
	
	Возврат Запрос;
	
КонецФункции // СформироватьЗапросПоТаблицеЗатрат()

// Процедура формирует движения по регистрам учета затрат.
//
// Параметры:
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	Выборка - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	СтруктураКлючиАналитики - Структура - Структура с таблицами ключей аналитики для кэширования данных
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура ДвиженияПоРегистрамОтражениеЗатрат(
	СтруктураШапкиДокумента,
	Выборка,
	ВидОтраженияВУчете,
	СтруктураКлючиАналитики,
	СтруктураНаборыЗаписей
	)
	
	ХарактерЗатратУУ = Неопределено;
	ХарактерЗатратБУ = Неопределено;
	ХарактерЗатратНУ = Неопределено;
		
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете
	   И (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	 ИЛИ ВидОтраженияВУчете = Неопределено)
	Тогда
		ХарактерЗатратУУ = Выборка.ХарактерЗатрат;
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете
	   И (ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
	 ИЛИ ВидОтраженияВУчете = Неопределено)
	Тогда
		ХарактерЗатратБУ = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(Выборка.СчетДт, Выборка.СтатьяЗатратПолучатель);
		ХарактерЗатратНУ = ХарактерЗатратБУ;
	КонецЕсли;
	
	
	Если СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику Тогда
		СформироватьДвиженияПоРегистрамУчетЗатрат(
			СтруктураШапкиДокумента,
			Выборка,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			СтруктураКлючиАналитики,
			СтруктураНаборыЗаписей
		);
	Иначе
		
		Количество = Выборка.Количество;
		
		СтоимостьУУ = 0;
		СтоимостьБУ = 0;
		СтоимостьНУ = 0;
		НДСВходящий = 0;
		НДСКредит = 0;
		
		Если ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
		 ИЛИ ВидОтраженияВУчете = Неопределено
		Тогда
			СтоимостьУУ = Выборка.СуммаУпр;
		КонецЕсли;
			
		Если ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
		 ИЛИ ВидОтраженияВУчете = Неопределено
		Тогда
			СтоимостьБУ = Выборка.СуммаБух;
			СтоимостьНУ = Выборка.СуммаНал;
			
			
			НДСВходящий = Выборка.СуммаНДСРегл;
			НДСКредит = Выборка.ПроводкиСуммаНДСРегл;
			
		КонецЕсли;
		
		// Выполним движения по регистрам косвенных затрат
		УправлениеПроизводствомДвиженияПоРегистрам.СформироватьДвиженияПоРегистрамЗатраты(
			СтруктураШапкиДокумента,
			Выборка,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			НДСВходящий,
			НДСКредит,
			Выборка.ВидДвижения,
			СтруктураНаборыЗаписей
		);
		
		// Выполним движения по регистрам прямых затрат и брака
		Если ЗначениеЗаполнено(Выборка.КодОперацииНЗП) Тогда
			КодОперацииНезавершенноеПроизводство = Выборка.КодОперацииНЗП;
		Иначе
			КодОперацииНезавершенноеПроизводство = УправлениеПроизводствомДвиженияПоРегистрам.ПолучитьКодОперацииНезавершенноеПроизводство(СтруктураШапкиДокумента);
		КонецЕсли;
	
		УправлениеПроизводствомДвиженияПоРегистрам.СформироватьДвиженияПоРегистрамНезавершенноеПроизводство(
			СтруктураШапкиДокумента,
			Выборка,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			КодОперацииНезавершенноеПроизводство,
			Количество,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			НДСВходящий,
			НДСКредит,
			Выборка.ВидДвижения,
			СтруктураНаборыЗаписей
		);
		
		УправлениеПроизводствомДвиженияПоРегистрам.СформироватьДвиженияПоРегистрамБракВПроизводстве(
			СтруктураШапкиДокумента,
			Выборка,
			ХарактерЗатратУУ,
			ХарактерЗатратБУ,
			ХарактерЗатратНУ,
			СтоимостьУУ,
			СтоимостьБУ,
			СтоимостьНУ,
			НДСВходящий,
			НДСКредит,
			Выборка.ВидДвижения,
			СтруктураНаборыЗаписей
		);
		
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете ИЛИ СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		
		СформироватьДвиженияПоРегистрамУчетаЗатратНаСтроительствоОС(
			СтруктураШапкиДокумента,
			Выборка,
			ХарактерЗатратУУ,
			Выборка.СуммаУпр,
			ХарактерЗатратБУ,
			Выборка.СуммаБух,
			Выборка.СуммаНал,
			Выборка.СуммаНДСРегл, // НДСВходящий
			Выборка.ПроводкиСуммаНДСРегл, // НДСКредит
			Выборка.ВидДвижения,
			СтруктураНаборыЗаписей
		);
		
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрамОтражениеЗатрат()

// Процедура дополняет структуру шапки документа.
//
// Параметры:
//	ДокументОбъект - ДокументОбъект - Документ отражения затрат
//	ВидОтраженияВУчете - ПеречислениеСсылка.ВидыОтраженияВУчете - Вид отражения в учете
//	ИсходнаяСтруктураШапкиДокумента - Структура - Реквизиты документа
//
// Выходные параметры:
//	СтруктураШапкиДокумента - Структура - Реквизиты документа
//	
Функция ДополнитьСтруктуруШапкиДокументаНастройкиУчетаЗатрат(
	ВидОтраженияВУчете,
	ИсходнаяСтруктураШапкиДокумента
	)
	
	СтруктураШапкиДокумента = Новый Структура;
	Для Каждого ЭлементСтруктуры Из ИсходнаяСтруктураШапкиДокумента Цикл
		СтруктураШапкиДокумента.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("ДокументСсылка.ОтчетПроизводстваЗаСмену"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслуг"));
	МассивТипов.Добавить(Тип("ДокументСсылка.ПоступлениеТоваровУслугВНТТ"));
	МассивТипов.Добавить(Тип("ДокументСсылка.АвансовыйОтчет"));
	
	Если МассивТипов.Найти(ТипЗнч(СтруктураШапкиДокумента.Ссылка)) <> Неопределено Тогда
		СтруктураШапкиДокумента.Вставить("СписаниеПартий", Ложь);
	КонецЕсли;
	
	Если ИсходнаяСтруктураШапкиДокумента.Свойство("ПериодРегистрации") 
		И ИсходнаяСтруктураШапкиДокумента.ВидДокумента <> "ПередачаМатериаловВЭксплуатацию" Тогда
		Дата = КонецМесяца(ИсходнаяСтруктураШапкиДокумента.ПериодРегистрации);
		СтруктураШапкиДокумента.Вставить("Дата", Дата);
	КонецЕсли;
	
	Если Не СтруктураШапкиДокумента.Свойство("ИспользоватьРасширеннуюАналитику") Тогда
		ИспользоватьРасширеннуюАналитику = глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") 
			И (глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат") <= СтруктураШапкиДокумента.Дата);
		СтруктураШапкиДокумента.Вставить("ИспользоватьРасширеннуюАналитику", ИспользоватьРасширеннуюАналитику);
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ИспользоватьРасширеннуюАналитику
	   И Не СтруктураШапкиДокумента.Свойство("ОтражатьЗатратыВУпрУчете")
	Тогда
		РежимИспользованияРасширеннойАналитики = глЗначениеПеременной("РежимИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат");
		СтруктураШапкиДокумента.Вставить("ОтражатьЗатратыВУпрУчете", УправлениеЗапасами.ИспользуетсяУправленческийУчетЗатрат());
	КонецЕсли;
	
	Если ВидОтраженияВУчете = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	 ИЛИ ВидОтраженияВУчете = Неопределено
	Тогда
		
		УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиУпр(СтруктураШапкиДокумента.Дата, Ложь);
		
		Если Не СтруктураШапкиДокумента.Свойство("НеВключатьНДСВЗатраты") Тогда
			Если ЗначениеЗаполнено(УчетнаяПолитика) Тогда
				СтруктураШапкиДокумента.Вставить("НеВключатьНДСВЗатраты", УчетнаяПолитика.НеВключатьНДСВЗатраты);
			Иначе
				СтруктураШапкиДокумента.Вставить("НеВключатьНДСВЗатраты", Истина);
			КонецЕсли;
		КонецЕсли;
		
		Если Не СтруктураШапкиДокумента.Свойство("ВедениеУчетаЗатратПоПроектам") Тогда
			СтруктураШапкиДокумента.Вставить("ВедениеУчетаЗатратПоПроектам", УправлениеПроектами.ВедениеУчетаЗатратПоПроектам());
		КонецЕсли;
		
		Если Не СтруктураШапкиДокумента.Свойство("УчетЗатратПоЗаказамНаПроизводство") Тогда
			Если ЗначениеЗаполнено(УчетнаяПолитика) Тогда
				СтруктураШапкиДокумента.Вставить("УчетЗатратПоЗаказамНаПроизводство", УчетнаяПолитика.УчетЗатратПоЗаказамНаПроизводство);
			Иначе
				СтруктураШапкиДокумента.Вставить("УчетЗатратПоЗаказамНаПроизводство", Истина);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ВидОтраженияВУчете <> Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете
	 ИЛИ ВидОтраженияВУчете = Неопределено
	Тогда	
	
		УчетнаяПолитикаРегл = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента.Дата,  СтруктураШапкиДокумента.Организация, Ложь);
		
		
		Если Не СтруктураШапкиДокумента.Свойство("ЕстьНалогНаПрибыль") Тогда
			Если ЗначениеЗаполнено(УчетнаяПолитикаРегл) Тогда
				СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыль", УчетнаяПолитикаРегл.ЕстьНалогНаПрибыль);
			Иначе
				СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыль", Истина);
			КонецЕсли;
		КонецЕсли;
		
		Если Не СтруктураШапкиДокумента.Свойство("ЕстьНДС") Тогда
			Если ЗначениеЗаполнено(УчетнаяПолитикаРегл) Тогда
				СтруктураШапкиДокумента.Вставить("ЕстьНДС", УчетнаяПолитикаРегл.ЕстьНДС);
			Иначе
				СтруктураШапкиДокумента.Вставить("ЕстьНДС", Истина);
			КонецЕсли;
		КонецЕсли;
		
		
		Если Не СтруктураШапкиДокумента.Свойство("УчетЗатратПоЗаказамНаПроизводствоРегл") Тогда
			Если ЗначениеЗаполнено(УчетнаяПолитикаРегл) Тогда
				СтруктураШапкиДокумента.Вставить("УчетЗатратПоЗаказамНаПроизводствоРегл", УчетнаяПолитикаРегл.УчетЗатратПоЗаказамНаПроизводство);
			Иначе
				СтруктураШапкиДокумента.Вставить("УчетЗатратПоЗаказамНаПроизводствоРегл", Истина);
			КонецЕсли;
		КонецЕсли;
		
		Если Не СтруктураШапкиДокумента.Свойство("ВедениеУчетаЗатратПоПроектам") Тогда
			СтруктураШапкиДокумента.Вставить("ВедениеУчетаЗатратПоПроектам", Ложь);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураШапкиДокумента;
	
КонецФункции // ДополнитьСтруктуруШапкиДокументаНастройкиУчетаЗатрат()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ПО РЕГИСТРАМ УЧЕТА ЗАТРАТ НА СТРОИТЕЛЬСТВО ОСНОВНЫХ СРЕДСТВ

// Процедура формирует движение по регистру "Строительство объектов основных средств".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	Сумма - Число - Учетная стоимость продукции
//	ВидДвижения - ВидДвиженияНакопления - Вид движения
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура СформироватьСтрокуДвиженияПоРегиструСтроительствоОбъектовОсновныхСредств(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Сумма,
	ВидДвижения,
	СтруктураНаборыЗаписей
	)
	
	Если Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		Возврат;
	КонецЕсли;
		
	ИмяРегистра = "СтроительствоОбъектовОсновныхСредств";
		
	ПолученНаборЗаписей = ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		ИмяРегистра,
		СтруктураНаборыЗаписей
	);
	Если Не ПолученНаборЗаписей Тогда
		Возврат;
	КонецЕсли;
		
	НоваяСтрока = СтруктураНаборыЗаписей.СтроительствоОбъектовОсновныхСредств.Добавить();
	НоваяСтрока.Активность = Истина;
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;
	
	НоваяСтрока.ОбъектСтроительства = СтрокаВыборки.ОбъектСтроительства;
	НоваяСтрока.Сумма = Сумма;

КонецПроцедуры // СформироватьСтрокуДвиженияПоРегиструСтроительствоОбъектовОсновныхСредств()

// Процедура формирует движение по регистру "Затраты на строительство объектов основных средств".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	Сумма - Число - Учетная стоимость продукции
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура СформироватьСтрокуДвиженияПоРегиструЗатратыНаСтроительствоОбъектовОсновныхСредств(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	Сумма,
	СтруктураНаборыЗаписей
	)
	
	Если Сумма = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРегистра = "ЗатратыНаСтроительствоОбъектовОсновныхСредств";
		
	ПолученНаборЗаписей = ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		ИмяРегистра,
		СтруктураНаборыЗаписей
	);
	Если Не ПолученНаборЗаписей Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = СтруктураНаборыЗаписей.ЗатратыНаСтроительствоОбъектовОсновныхСредств.Добавить();
	НоваяСтрока.Активность = Истина;
	НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;
	
	НоваяСтрока.ОбъектСтроительства = СтрокаВыборки.ОбъектСтроительства;
	НоваяСтрока.СтатьяЗатрат = СтрокаВыборки.СтатьяЗатратПолучатель;
		
	НоваяСтрока.Сумма = Сумма;
	
КонецПроцедуры // СформироватьСтрокуДвиженияПоРегиструЗатратыНаСтроительствоОбъектовОсновныхСредств()

// Процедура формирует движение по регистру "Строительство объектов основных средств (БУ)".
//
// Параметры
//  СтруктураШапкиДокумента – Структура - Реквизиты документа
//	СтрокаВыборки - ВыборкаИзРезультатаЗапроса - Текущая строка выборки
//	СуммаБУ - Число - Учетная стоимость по БУ
//	СуммаНУ - Число - Учетная стоимость по НУ
//	НДСВходящий - Число - НДС входящий
//	НДСКредит - Число - НДС кредит
//	ВидДвижения - ВидДвиженияНакопления - Вид движения
//	СтруктураНаборыЗаписей - Структура - Структура наборов записей регистров
//
Процедура СформироватьСтрокуДвиженияПоРегиструСтроительствоОбъектовОсновныхСредствБУ(
	СтруктураШапкиДокумента,
	СтрокаВыборки,
	СуммаБУ,
	СуммаНУ,
	НДСВходящий,
	НДСКредит,
	ВидДвижения,
	СтруктураНаборыЗаписей
	)
	
	Если СуммаБУ = 0 И СуммаНУ = 0 И НДСВходящий = 0 И НДСКредит = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Не СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		Возврат;
	КонецЕсли;
		
	ИмяРегистра = "СтроительствоОбъектовОсновныхСредствБухгалтерскийУчет";
		
	ПолученНаборЗаписей = ПолучитьНаборЗаписейРегистра(
		СтруктураШапкиДокумента, 
		ИмяРегистра,
		СтруктураНаборыЗаписей
	);
	
	Если Не ПолученНаборЗаписей Тогда
		Возврат;
	КонецЕсли;
		
	НоваяСтрока = СтруктураНаборыЗаписей.СтроительствоОбъектовОсновныхСредствБухгалтерскийУчет.Добавить();
	НоваяСтрока.Активность = Истина;
	НоваяСтрока.ВидДвижения = ВидДвижения;
	НоваяСтрока.Период = СтруктураШапкиДокумента.Дата;
	
	НоваяСтрока.Организация         = СтруктураШапкиДокумента.Организация;
	НоваяСтрока.ОбъектСтроительства = СтрокаВыборки.ОбъектСтроительства;
	НоваяСтрока.СчетУчета           = СтрокаВыборки.СчетДт;
	НоваяСтрока.НалоговоеНазначение = СтрокаВыборки.НалоговоеНазначениеПолучатель;
	
	НоваяСтрока.Стоимость    = СуммаБУ;
	НоваяСтрока.СтоимостьНУ  = НалоговыйУчет.ОпределитьСтоимостьНУ(НоваяСтрока.НалоговоеНазначение, СуммаНУ);
	НоваяСтрока.НДСВходящий  = НДСВходящий;
	НоваяСтрока.НДСКредит    = НДСКредит;

КонецПроцедуры // СформироватьСтрокуДвиженияПоРегиструСтроительствоОбъектовОсновныхСредствБУ()

