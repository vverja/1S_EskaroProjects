Функция ПолучитьИдентификатор(СтрНаименование)
	
	Разделители	=  " .,+,-,/,*,?,=,<,>,(,)%!@#$%&*""№:;{}[]?()\|/`~'^_";
	
	Идентификатор = "";
	БылСпецСимвол = Ложь;
	Для НомСимвола = 1 По СтрДлина(СтрНаименование) Цикл
		Символ = Сред(СтрНаименование,НомСимвола,1);
		Если Найти(Разделители, Символ) <> 0 Тогда
			БылСпецСимвол = Истина;
		ИначеЕсли БылСпецСимвол Тогда
			БылСпецСимвол = Ложь;
			Идентификатор = Идентификатор + ВРег(Символ);
		Иначе
			Идентификатор = Идентификатор + Символ;		
		КонецЕсли;
	КонецЦикла;
	
	Возврат Идентификатор;
		
КонецФункции //ПолучитьИдентификатор

// Функция возвращает показатель схемы мотивации, если есть существующий, иначе создает новый.
//
// Параметры:
//  Наименование - наименование показателя.
//  ДопНаименование - окончания наименования, может быть либо "", либо "(В целом по предприятию)".
//	ВидПоказателя - вид показателя, в данной функции может быть только индивидуальным и общим
//
// Возвращаемое значение:
//  Показатель - ссылка на показатель схем мотивации. 
//
Функция НайтиПоказатель(Наименование, ДопНаименование, ВидПоказателя, ИмяПоказателя)
	
	Показатель = Справочники.ПоказателиСхемМотивации.НайтиПоНаименованию(Наименование);
	Если Показатель <> Справочники.ПоказателиСхемМотивации.ПустаяСсылка() Тогда
		Возврат Показатель;
	Иначе
		
		Показатель = Справочники.ПоказателиСхемМотивации.СоздатьЭлемент();
		Показатель.ВидПоказателя		= ВидПоказателя;
		Показатель.ВозможностьИзменения	= Перечисления.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете;
		
		ВалютаУправленческогоУчета = Строка(глЗначениеПеременной("ВалютаУправленческогоУчета"));
		Наименование = СокрЛП(Наименование);
		
		
		Если ИмяПоказателя = "ЧислоСделок" 
			Или ИмяПоказателя = "ЧислоПервыхСделок" 
			Или ИмяПоказателя = "СреднееЧислоСделок"  	
			Или ИмяПоказателя = "ПроцентКИКонтрагентов" 
			Или ИмяПоказателя = "ПроцентКИКонтЛицКонтр" 	 
			Или ИмяПоказателя = "ПроцентКИКонтактныхЛиц" 	 
			Или ИмяПоказателя = "ЧислоЗаказов" 	 
			Или ИмяПоказателя = "ЧислоОплаченныхЗаказов" 	 
			Или ИмяПоказателя = "ЧислоНеоплаченныхЗаказов" 	 
			Или ИмяПоказателя = "ЧислоЧастичноОплаченных" 	 
			Или ИмяПоказателя = "ЧислоДолжников" 	 	 
			Или ИмяПоказателя = "СрокЗадолженности" 	 	 
			Или ИмяПоказателя = "ЧислоПросрочившихДолжников" 	 	 
			Или ИмяПоказателя = "ЧислоДнейПросрочки" 	 	 
			Или ИмяПоказателя = "ЧислоСобытий" 	 	 
			Или ИмяПоказателя = "ДлительностьСобытий" 	 	 
			Тогда
			Показатель.ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Числовой;
		Иначе
			Показатель.ТипПоказателя = Перечисления.ТипыПоказателейСхемМотивации.Денежный;
		КонецЕсли;
		
		Показатель.Наименование				= Наименование + ДопНаименование;
		Показатель.Идентификатор			= ПолучитьИдентификатор(Показатель.Наименование);
		Показатель.ПоказательЭффективности	= Истина;
		
		Показатель.Записать();
		
		Возврат Показатель;
		
	КонецЕсли;
	
КонецФункции //НайтиПоказатель

// Функция возвращает ссылку на сотрудника, если есть существующий, иначе создает нового.
//
// Параметры:
//  Менеджер - Справочник пользователи.
//
// Возвращаемое значение:
//  Сотрудник - ссылка на элемент справочника "Сотрудники". 
//
Функция НайтиСотрудника(Менеджер)
		
	Возврат Справочники.СотрудникиОрганизаций.НайтиПоРеквизиту("ФизЛицо", Менеджер.ФизЛицо);
	
КонецФункции //НайтиСотрудника

// Функция создает значения показателей по данным отчёта "ПоказателиРаботыМенеджеров" в регистр сведений "ЗначенияПоказателейСхемМотивации"
// и возвращает Ложь в случае отказе в доступе.
//
// Параметры:
//  ТекстЗапроса - текст запроса, собранного в отчёте "ПоказателиРаботыМенеджеров
//  Показатели - показатели, значения которых будет получать процедура
//  ПериодДействия - период, в котором формируются записи регистра.
//  Менеджер - справочник пользователи.
//
Функция ФормированиеПоказателей(ТекстЗапроса, Показатели, ПериодДействия, Менеджер) Экспорт 
	
	Если Не ПравоДоступа("Использование", Метаданные.Обработки.ФормированиеПоказателейСхемМотивации) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
		
	//т.к. в форме выбирается месяц, установим период формирования отчёта "Показатели работы менеджера" тоже месяц
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(ПериодДействия));
	Запрос.УстановитьПараметр("ДатаКонца", КонецМесяца(ПериодДействия));	
	
	Запрос.УстановитьПараметр("ЗначениеОтбораМенеджер", Менеджер);
	Запрос.УстановитьПараметр("Менеджер", Менеджер);
	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	// как и отчёт, обработка формирует показатели в упр. валюте
	ВалютаУправленческогоУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Пока Выборка.Следующий() Цикл
		Для Каждого Строки Из Показатели Цикл
			
			Если Не Строки.ИспользованиеПоказателя Тогда
				Продолжить;
			КонецЕсли;
			
			Значение = Выборка[Строки.ИмяПоказателя];
			Если ЗначениеЗаполнено(Значение) Тогда
				
				Если Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ОбщийИтог Тогда
										
					//создаем записи по 
					Показатель = НайтиПоказатель(Строки.ПредставлениеПоказателя, " (В целом по предприятию)", Перечисления.ВидыПоказателейСхемМотивации.Общий, Строки.ИмяПоказателя);					
					
					// установим отбор
					ЗаписьРС = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьНаборЗаписей();	
					Отбор = ЗаписьРС.Отбор;
					Отбор.Показатель.Использование = Истина;
					Отбор.ПериодДействия.Значение = НачалоМесяца(ПериодДействия); 
					Отбор.Организация.Значение = Справочники.Организации.ПустаяСсылка(); 
	
					Отбор.Показатель.Значение	= Показатель.Ссылка;										
					Отбор.Сотрудник.Значение	= Справочники.СотрудникиОрганизаций.ПустаяСсылка();
										
					НоваяЗапись = ЗаписьРС.Добавить();
					НоваяЗапись.ПериодДействия			= НачалоМесяца(ПериодДействия); 
					НоваяЗапись.Показатель				= Показатель.Ссылка;
					НоваяЗапись.Значение				= Значение;
					НоваяЗапись.Валюта					= ВалютаУправленческогоУчета;						
					
					ЗаписьРС.Записать();

				Иначе
					Показатель = НайтиПоказатель(Строки.ПредставлениеПоказателя, "", Перечисления.ВидыПоказателейСхемМотивации.Индивидуальный, Строки.ИмяПоказателя);					
					
					Сотрудник = НайтиСотрудника(Выборка.Менеджер);
					Если ЗначениеЗаполнено(Сотрудник) Тогда
						
						
						// установим отбор
						ЗаписьРС = РегистрыСведений.ЗначенияПоказателейСхемМотивации.СоздатьНаборЗаписей();	
						Отбор = ЗаписьРС.Отбор;
						Отбор.Показатель.Использование = Истина;
						Отбор.ПериодДействия.Значение = НачалоМесяца(ПериодДействия); 
						Отбор.Организация.Значение = Справочники.Организации.ПустаяСсылка();
						
						Отбор.Сотрудник.Значение = Сотрудник;						
						Отбор.Показатель.Значение	= Показатель.Ссылка;

						
						НоваяЗапись = ЗаписьРС.Добавить();
						НоваяЗапись.ПериодДействия			= НачалоМесяца(ПериодДействия); 
						НоваяЗапись.Показатель				= Показатель.Ссылка;
						НоваяЗапись.Сотрудник			 	= Сотрудник;
						НоваяЗапись.Значение				= Значение;
						НоваяЗапись.Валюта					= ВалютаУправленческогоУчета;
						ЗаписьРС.Записать();				
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
		КонецЦикла;	
	КонецЦикла;	
	
	Возврат Истина;
	
КонецФункции //ФормированиеПоказателей

