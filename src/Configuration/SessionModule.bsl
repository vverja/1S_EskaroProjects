
Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
    Если ТребуемыеПараметры = Неопределено Тогда
        // раздел "безусловной" инициализации параметров сеанса
        
        ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();
        
    Иначе		
        
        УстановленныеПараметры = Новый Структура;
        
        Для Каждого ИмяПараметра ИЗ ТребуемыеПараметры Цикл
            УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры);
        КонецЦикла;
        
    КонецЕсли;
	// АПДЕКС
	
	Если ТребуемыеПараметры = Неопределено ИЛИ ТребуемыеПараметры.Найти("APDEX_НастройкиЗамеров")<>Неопределено Тогда
		ХранилищеЗначения = Новый ХранилищеЗначения(Новый Соответствие);
		ПараметрыСеанса.APDEX_ТекущийЗамерВремени = ХранилищеЗначения;
		
		
		APDEX_Настройки = APDEX_ОценкаПроизводительностиСерверВызовСервера.ПолучитьНастройки();
		APDEX_НастройкиЗамеров = Новый Структура;
		APDEX_НастройкиЗамеров.Вставить("APDEX_ОтключитьЗамер",APDEX_Настройки.APDEX_ОтключитьЗамер);
		APDEX_НастройкиЗамеров.Вставить("APDEX_МинимальноеВремяЗамера",APDEX_Настройки.APDEX_МинимальноеВремяЗамера);
		APDEX_НастройкиЗамеров.Вставить("APDEX_ИдентификаторБазыAPDEX",APDEX_Настройки.APDEX_ИдентификаторБазыAPDEX);
		APDEX_НастройкиЗамеров.Вставить("APDEX_СпособЗаписиЗамеров",APDEX_Настройки.APDEX_СпособЗаписиЗамеров);
		
		ПараметрыСеанса.APDEX_НастройкиЗамеров = Новый ФиксированнаяСтруктура(APDEX_НастройкиЗамеров);
	КонецЕсли; 

КонецПроцедуры

Процедура УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры)
	
	Если УстановленныеПараметры.Свойство(ИмяПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРИБ = Новый Структура;
	ПараметрыРИБ.Вставить("НаличиеОбменаУПП");
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУПП");
	
	ПараметрыРИБ.Вставить("ИспользованиеРИБ");
	ПараметрыРИБ.Вставить("ПрефиксУзлаРаспределеннойИнформационнойБазы");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомТоварами");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомЗаказами");
	ПараметрыРИБ.Вставить("НаличиеОбменаССайтом");
	
	ПараметрыРИБ.Вставить("СохранятьИнформациюОМестеСозданияОбъектов");
	
	Если ИмяПараметра = "ОбщиеЗначения" Тогда
		ПараметрыСеанса.ОбщиеЗначения = Новый ХранилищеЗначения(Новый Структура);
		УстановленныеПараметры.Вставить("ОбщиеЗначения");
		
	ИначеЕсли ПараметрыРИБ.Свойство(ИмяПараметра) Тогда	
		ПолныеПрава.ОпределитьФактИспользованияРИБ();
		ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРИБ);
		
	ИначеЕсли ИмяПараметра = "ТекущийПользователь" Тогда
		ПользователиПолныеПрава.ОпределитьТекущегоПользователя("ТекущийПользователь", УстановленныеПараметры);
		
	ИначеЕсли ИмяПараметра = "ГраницыЗапретаИзмененияДанных" Тогда		
		ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
		УстановленныеПараметры.Вставить("ГраницыЗапретаИзмененияДанных");
	ИначеЕсли ИмяПараметра = "КонтрольнаяДатаОграничения" Тогда		
		ДатаОграничения = Константы.ДатаОграниченияПросмотра.Получить();
		Если ЗначениеЗаполнено(ДатаОграничения) Тогда
			ПараметрыСеанса.КонтрольнаяДатаОграничения = ДатаОграничения;
		Иначе
			ПараметрыСеанса.КонтрольнаяДатаОграничения = '00010101';	
		КонецЕсли;   	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРаздела)
	
	Для Каждого КлючИЗначение ИЗ ПараметрыРаздела Цикл
		УстановленныеПараметры.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
		
КонецПроцедуры