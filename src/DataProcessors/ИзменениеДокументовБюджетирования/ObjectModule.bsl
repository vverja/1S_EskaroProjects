
#Если Клиент Тогда
// Настройка периода
Перем НП Экспорт;

// Таблица документов для обработки
Перем ТабДокументов Экспорт;

Процедура ЗаполнитьНачальныеНастройки() Экспорт
					 		
	Если ВидДокумента="БюджетнаяОперация" Тогда
		
		ТекстЗапроса="ВЫБРАТЬ
		|	БюджетнаяОперация.Сценарий,
		|	БюджетнаяОперация.ПериодПланирования,
		|	БюджетнаяОперация.ВалютаДокумента,
		|	БюджетнаяОперация.Сумма,
		|	БюджетнаяОперация.Ответственный,
		|	БюджетнаяОперация.Состояние,
		|	БюджетнаяОперация.СтатьяОборотов,
		|	БюджетнаяОперация.ЦФО,
		|	БюджетнаяОперация.Проект,
		|	БюджетнаяОперация.Контрагент,
		|	БюджетнаяОперация.Номенклатура,
		|	БюджетнаяОперация.Количество,
		|	БюджетнаяОперация.Цена,
		|	БюджетнаяОперация.Ссылка
		|ИЗ
		|	Документ.БюджетнаяОперация КАК БюджетнаяОперация
		|
		|ГДЕ
		|	(БюджетнаяОперация.ПериодПланирования МЕЖДУ &ДатаНач И &ДатаКон) И
		|	БюджетнаяОперация.Сценарий=&Сценарий
		|{ГДЕ
		|	БюджетнаяОперация.Проведен,
		|	БюджетнаяОперация.СтатьяОборотов.*,
		|	БюджетнаяОперация.ЦФО.*,
		|	БюджетнаяОперация.Проект.*,
		|	БюджетнаяОперация.Контрагент.*,
		|	БюджетнаяОперация.Номенклатура.*,
		|	БюджетнаяОперация.ВалютаДокумента,
		|	БюджетнаяОперация.Ответственный.*,
		|	БюджетнаяОперация.Состояние}";
					
	ИначеЕсли ВидДокумента="ВнутреннееПеремещениеСредствПриБюджетировании" Тогда
		
		ТекстЗапроса="ВЫБРАТЬ
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Сценарий,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ПериодПланирования,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ВалютаИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Сумма,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Ответственный,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Состояние,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.СтатьяОборотов,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ЦФОИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ЦФОПриемник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ПроектИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ПроектПриемник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.КонтрагентИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.КонтрагентПриемник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.НоменклатураИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.НоменклатураПриемник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.КоличествоИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.КоличествоПриемник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Ссылка
		|ИЗ
		|	Документ.ВнутреннееПеремещениеСредствПриБюджетировании КАК ВнутреннееПеремещениеСредствПриБюджетировании
		|
		|ГДЕ
		|	(ВнутреннееПеремещениеСредствПриБюджетировании.ПериодПланирования МЕЖДУ &ДатаНач И &ДатаКон) И
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Сценарий = &Сценарий
		|{ГДЕ
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Проведен,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.СтатьяОборотов.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ЦФОИсточник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ЦФОПриемник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ПроектИсточник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ПроектПриемник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.КонтрагентИсточник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.НоменклатураИсточник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ВалютаИсточник,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Состояние,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.Ответственный.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.КонтрагентПриемник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.НоменклатураПриемник.*,
		|	ВнутреннееПеремещениеСредствПриБюджетировании.ВалютаПриемник}";
								
	ИначеЕсли ВидДокумента="ЗаявкаНаРасходованиеСредств" Тогда
		
		ТекстЗапроса="ВЫБРАТЬ
		|	ЗаявкаНаРасходованиеСредств.Сценарий,
		|	ЗаявкаНаРасходованиеСредств.ДатаРасхода,
		|	ЗаявкаНаРасходованиеСредств.ВалютаДокумента,
		|	ЗаявкаНаРасходованиеСредств.ФормаОплаты,
		|	ЗаявкаНаРасходованиеСредств.БанковскийСчетКасса,
		|	ЗаявкаНаРасходованиеСредств.СуммаДокумента,
		|	ЗаявкаНаРасходованиеСредств.Ответственный,
		|	ЗаявкаНаРасходованиеСредств.Состояние,
		|	ЗаявкаНаРасходованиеСредств.СтатьяОборотов,
		|	ЗаявкаНаРасходованиеСредств.ЦФО,
		|	ЗаявкаНаРасходованиеСредств.Контрагент,
		|	ЗаявкаНаРасходованиеСредств.Номенклатура,
		|	ЗаявкаНаРасходованиеСредств.Организация,
		|	ЗаявкаНаРасходованиеСредств.Ссылка
		|ИЗ
		|	Документ.ЗаявкаНаРасходованиеСредств КАК ЗаявкаНаРасходованиеСредств
		|ГДЕ
		|	(ЗаявкаНаРасходованиеСредств.ДатаРасхода МЕЖДУ &ДатаНач И &ДатаКон) И
		|	ЗаявкаНаРасходованиеСредств.Сценарий = &Сценарий
		|{ГДЕ
		|	ЗаявкаНаРасходованиеСредств.Проведен,
		|	ЗаявкаНаРасходованиеСредств.ВидОперации,
		|	ЗаявкаНаРасходованиеСредств.Получатель.*,
		|	ЗаявкаНаРасходованиеСредств.БанковскийСчетКасса.*,
		|	ЗаявкаНаРасходованиеСредств.ВалютаДокумента,
		|	ЗаявкаНаРасходованиеСредств.ВалютаВзаиморасчетовПодотчетника,
		|	ЗаявкаНаРасходованиеСредств.СтатьяОборотов.*,
		|	ЗаявкаНаРасходованиеСредств.ЦФО.*,
		|	ЗаявкаНаРасходованиеСредств.Контрагент.*,
		|	ЗаявкаНаРасходованиеСредств.Номенклатура.*,
		|	ЗаявкаНаРасходованиеСредств.Состояние,
		|	ЗаявкаНаРасходованиеСредств.Ответственный.*,
		|	ЗаявкаНаРасходованиеСредств.Организация.*,
		|	ЗаявкаНаРасходованиеСредств.ФормаОплаты}";
				
	ИначеЕсли ВидДокумента="РасчетПоМоделиБюджетирования" Тогда
		
		ТекстЗапроса="ВЫБРАТЬ
		|	РасчетПоМоделиБюджетирования.Сценарий,
		|	РасчетПоМоделиБюджетирования.ДатаРасчета,
		|	РасчетПоМоделиБюджетирования.Ответственный,
		|	РасчетПоМоделиБюджетирования.Состояние,
		|	РасчетПоМоделиБюджетирования.ОсновнойИсточникДанных,
		|	РасчетПоМоделиБюджетирования.Ссылка
		|ИЗ
		|	Документ.РасчетПоМоделиБюджетирования КАК РасчетПоМоделиБюджетирования
		|
		|ГДЕ
		|	РасчетПоМоделиБюджетирования.Сценарий = &Сценарий И
		|	(РасчетПоМоделиБюджетирования.ДатаРасчета) МЕЖДУ &ДатаНач И &ДатаКон
		|{ГДЕ
		|	РасчетПоМоделиБюджетирования.Проведен,
		|	РасчетПоМоделиБюджетирования.ПересчитыватьРегламентно,
		|	РасчетПоМоделиБюджетирования.ОсновнойИсточникДанных.*,
		|	РасчетПоМоделиБюджетирования.Ответственный,
		|	РасчетПоМоделиБюджетирования.Состояние}";
			
	КонецЕсли;
		
	ПостроительОтчета.Текст=ТекстЗапроса;
	ПостроительОтчета.ЗаполнитьНастройки();
		
	ПолеСсылка=ПостроительОтчета.ДоступныеПоля.Найти("Ссылка");
	ПолеСсылка.Отбор=Ложь;
	ПолеСсылка.Измерение=Ложь;
	ПолеСсылка.Поле=Ложь;	
    			
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

Процедура ЗаполнитьТаблицуДокументов() Экспорт
	
	Если ПостроительОтчета.Текст="" Тогда
		Возврат;
	КонецЕсли;
	
	ПостроительОтчета.Параметры.Вставить("Сценарий",Сценарий);
	ПостроительОтчета.Параметры.Вставить("ДатаНач",ДатаНач);
	ПостроительОтчета.Параметры.Вставить("ДатаКон",ДатаКон);
	
	ПостроительОтчета.Выполнить();
	ТабДокументов=ПостроительОтчета.Результат.Выгрузить();
	
КонецПроцедуры // ЗаполнитьТаблицуДокументов()

Функция ПроверкаСтрокиДействия(СтрокаДействия)
	
	НастройкаКорректна=Истина;
	Если СтрокаДействия.Действие="" Тогда
		ТекстСообщения="Не указан вид действия. Действие отменено.";
		НастройкаКорректна=Ложь;
	КонецЕсли;
	
	Если СтрокаДействия.УточнениеДействия="" Тогда
		ТекстСообщения="Не уточнено действие. Действие отменено.";
		НастройкаКорректна=Ложь;
	КонецЕсли;
	
	Если СтрокаДействия.ПараметрДействия=Неопределено И (НЕ СтрокаДействия.Действие="ИзменитьСостояние") Тогда
		ТекстСообщения="Не определен параметр действия. Действие отменено.";
		НастройкаКорректна=Ложь;
	КонецЕсли;
	
	Возврат НастройкаКорректна;
	
КонецФункции // ПроверкаСтрокиДействия 

Процедура ОбработатьДокументы() Экспорт
	
	НачатьТранзакцию();
	
	Если ВидДокумента="БюджетнаяОперация" Тогда
	
		Для Каждого Действие Из Действия Цикл
			
			Если Не ПроверкаСтрокиДействия(Действие) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого Документ Из ТабДокументов Цикл
				ДокументОбработки=Документ.Ссылка.ПолучитьОбъект();
				
				Если Действие.Действие="ИзменитьСумму" И ДокументОбработки.СтатьяОборотов.УчетПоСумме Тогда
					
					СуммаКОбработке=ДокументОбработки.Сумма;
							
					Если Действие.УточнениеДействия="Относительное" Тогда 
						СуммаНовая=СуммаКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						СуммаНовая=СуммаКОбработке+Действие.ПараметрДействия;
					Иначе
						СуммаНовая=Действие.ПараметрДействия;
					КонецЕсли;
					
					Если ДокументОбработки.СтатьяОборотов.УчетПоКоличеству 
						И ДокументОбработки.СтатьяОборотов.УчетПоСумме 
						И (НЕ ДокументОбработки.Количество=0) Тогда
						ДокументОбработки.Цена=Окр(СуммаНовая/ДокументОбработки.Количество,2);
					КонецЕсли;
					
					ДокументОбработки.Сумма=СуммаНовая;
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
					
				ИначеЕсли Действие.Действие="ИзменитьКоличество" И ДокументОбработки.СтатьяОборотов.УчетПоКоличеству Тогда
					
					КоличествоКОбработке=ДокументОбработки.Количество;
					
					Если Действие.УточнениеДействия="Относительное" Тогда 
						КоличествоНовая=КоличествоКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						КоличествоНовая=КоличествоКОбработке+Действие.ПараметрДействия;
					Иначе
						КоличествоНовая=Действие.ПараметрДействия;
					КонецЕсли;
					
					ДокументОбработки.Сумма=КоличествоНовая*ДокументОбработки.Цена;
					ДокументОбработки.Количество=КоличествоНовая;
															
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки			
					
				ИначеЕсли Действие.Действие="ИзменитьЦену" 
					И ДокументОбработки.СтатьяОборотов.УчетПоКоличеству 
					И ДокументОбработки.СтатьяОборотов.УчетПоСумме Тогда
					
					ЦенаКОбработке=ДокументОбработки.Цена;
					
					Если Действие.УточнениеДействия="Относительное" Тогда 
						ЦенаНовая=ЦенаКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						ЦенаНовая=ЦенаКОбработке+Действие.ПараметрДействия;
					Иначе
						ЦенаНовая=Действие.ПараметрДействия;
					КонецЕсли;
			
					ДокументОбработки.Сумма=ДокументОбработки.Количество*ЦенаНовая;
					ДокументОбработки.Цена=ЦенаНовая;
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьРеквизит" Тогда
					
					СтарыйРеквизит=ДокументОбработки[Действие.УточнениеДействия];
					
					Если СтарыйРеквизит=Действие.ПараметрДействия Тогда // Ничего не меняем
						Продолжить;
					КонецЕсли;
					
					ДокументОбработки[Действие.УточнениеДействия]=Действие.ПараметрДействия;
					
					Если Действие.УточнениеДействия="Сценарий" Тогда
						
						ДокументОбработки.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ДокументОбработки.ПериодПланирования,ДокументОбработки.Сценарий.Периодичность);
						ДокументОбработки.ОбновитьКурсДокумента();
						
						Если НЕ СтарыйРеквизит.ДетализацияПланирования=ДокументОбработки.Сценарий.ДетализацияПланирования Тогда
							
							Если ДокументОбработки.Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
								ДокументОбработки.Номенклатура=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
							Иначе
								ДокументОбработки.Номенклатура=Новый(Тип("СправочникСсылка.Номенклатура"));
							КонецЕсли;
							
						КонецЕсли;
						
					ИначеЕсли Действие.УточнениеДействия="ПериодПланирования" Тогда	
						
						ДокументОбработки.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(Действие.ПараметрДействия,ДокументОбработки.Сценарий.Периодичность);
						ДокументОбработки.ОбновитьКурсДокумента();
						
					ИначеЕсли Действие.УточнениеДействия="ВалютаДокумента" Тогда
						
						ДокументОбработки.ОбновитьКурсИСуммуДокумента(СтарыйРеквизит);
						
					КонецЕсли;
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьСостояние" Тогда 
					
					Если Действие.УточнениеДействия="Проведение" Тогда
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					ИначеЕсли Действие.УточнениеДействия="ОтменаПроведения" Тогда
						ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					ИначеЕсли Действие.УточнениеДействия="ПометкаУдаления" Тогда
						ДокументОбработки.ПометкаУдаления=Истина;
						ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
					ИначеЕсли Действие.УточнениеДействия="СнятьПометкуУдаления" Тогда
						ДокументОбработки.ПометкаУдаления=Ложь;
						ДокументОбработки.Записать(РежимЗаписиДокумента.Запись);		
					КонецЕсли;
							
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ВидДокумента="ВнутреннееПеремещениеСредствПриБюджетировании" Тогда
	
		Для Каждого Действие Из Действия Цикл
			
			Если Не ПроверкаСтрокиДействия(Действие) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого Документ Из ТабДокументов Цикл
				ДокументОбработки=Документ.Ссылка.ПолучитьОбъект();
				
				Если Действие.Действие="ИзменитьСумму" И ДокументОбработки.СтатьяОборотов.УчетПоСумме Тогда
					
					СуммаКОбработке=ДокументОбработки.Сумма;
					
					Если Действие.УточнениеДействия="Относительное" Тогда 
						СуммаНовая=СуммаКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						СуммаНовая=СуммаКОбработке+Действие.ПараметрДействия;
					Иначе
						СуммаНовая=Действие.ПараметрДействия;
					КонецЕсли;
					
					ДокументОбработки.Сумма=СуммаНовая;
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки			
					
				ИначеЕсли Действие.Действие="ИзменитьКоличествоИсточник" И ДокументОбработки.СтатьяОборотов.УчетПоКоличеству Тогда
					
					КоличествоКОбработке=ДокументОбработки.КоличествоИсточник;
					
					Если Действие.УточнениеДействия="Относительное" Тогда 
						КоличествоНовая=КоличествоКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						КоличествоНовая=КоличествоКОбработке+Действие.ПараметрДействия;
					Иначе
						КоличествоНовая=Действие.ПараметрДействия;
					КонецЕсли;
		
					ДокументОбработки.КоличествоИсточник=КоличествоНовая;
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьКоличествоПриемник" И ДокументОбработки.СтатьяОборотов.УчетПоКоличеству Тогда
					
					КоличествоКОбработке=ДокументОбработки.КоличествоПриемник;
					
					Если Действие.УточнениеДействия="Относительное" Тогда 
						КоличествоНовая=КоличествоКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						КоличествоНовая=КоличествоКОбработке+Действие.ПараметрДействия;
					Иначе
						КоличествоНовая=Действие.ПараметрДействия;
					КонецЕсли;
					
					ДокументОбработки.КоличествоПриемник=КоличествоНовая;
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
										
				ИначеЕсли Действие.Действие="ИзменитьРеквизит" Тогда
					
					СтарыйРеквизит=ДокументОбработки[Действие.УточнениеДействия];
					
					Если СтарыйРеквизит=Действие.ПараметрДействия Тогда // Ничего не меняем
						Продолжить;
					КонецЕсли;
					
					ДокументОбработки[Действие.УточнениеДействия]=Действие.ПараметрДействия;
					
					Если Действие.УточнениеДействия="Сценарий" Тогда
						
						ДокументОбработки.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ДокументОбработки.ПериодПланирования,ДокументОбработки.Сценарий.Периодичность);
						
						ДокументОбработки.ОбновитьКурсыДокумента();
						
						Если НЕ СтарыйРеквизит.ДетализацияПланирования=ДокументОбработки.Сценарий.ДетализацияПланирования Тогда
							
							Если ДокументОбработки.Сценарий.ДетализацияПланирования=Перечисления.ДетализацияПланирования.НоменклатурныеГруппы Тогда
								ДокументОбработки.НоменклатураИсточник=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
								ДокументОбработки.НоменклатураПриемник=Новый(Тип("СправочникСсылка.НоменклатурныеГруппы"));
							Иначе
								ДокументОбработки.НоменклатураИсточник=Новый(Тип("СправочникСсылка.Номенклатура"));
								ДокументОбработки.НоменклатураПриемник=Новый(Тип("СправочникСсылка.Номенклатура"));
							КонецЕсли;
							
						КонецЕсли;
									
					ИначеЕсли Действие.УточнениеДействия="ПериодПланирования" Тогда	
						
						ДокументОбработки.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(Действие.ПараметрДействия,ДокументОбработки.Сценарий.Периодичность);
						ДокументОбработки.ОбновитьКурсыДокумента();
						
					ИначеЕсли Действие.УточнениеДействия="ВалютаИсточник" Тогда
						
						ДокументОбработки.ОбновитьКурсыИСуммуДокумента(СтарыйРеквизит);
						
					ИначеЕсли Действие.УточнениеДействия="ВалютаПриемник" Тогда
						
						ДокументОбработки.ОбновитьКурсыДокумента();
						
					КонецЕсли;
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьСостояние" Тогда 
					
					Попытка
						
						Если Действие.УточнениеДействия="Проведение" Тогда
							ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
						ИначеЕсли Действие.УточнениеДействия="ОтменаПроведения" Тогда
							ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						ИначеЕсли Действие.УточнениеДействия="ПометкаУдаления" Тогда
							ДокументОбработки.ПометкаУдаления=Истина;
							ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						ИначеЕсли Действие.УточнениеДействия="СнятьПометкуУдаления" Тогда
							ДокументОбработки.ПометкаУдаления=Ложь;
							ДокументОбработки.Записать(РежимЗаписиДокумента.Запись);		
						КонецЕсли;
						
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ВидДокумента="ЗаявкаНаРасходованиеСредств" Тогда
	
		Для Каждого Действие Из Действия Цикл
			
			Если Не ПроверкаСтрокиДействия(Действие) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого Документ Из ТабДокументов Цикл
				ДокументОбработки=Документ.Ссылка.ПолучитьОбъект();
				
				Если Действие.Действие="ИзменитьСумму" Тогда
					
					СуммаКОбработке=ДокументОбработки.СуммаДокумента;
					
					Если Действие.УточнениеДействия="Относительное" Тогда 
						СуммаНовая=СуммаКОбработке*Действие.ПараметрДействия
					ИначеЕсли Действие.УточнениеДействия="Абсолютное" Тогда
						СуммаНовая=СуммаКОбработке+Действие.ПараметрДействия;
					Иначе
						СуммаНовая=Действие.ПараметрДействия;
					КонецЕсли;					
					
					КоэффициентПересчета=?(СуммаКОбработке=0,0,СуммаНовая/СуммаКОбработке);
					СуммаДокумента=0;
										
					Для Каждого Платеж Из ДокументОбработки.РасшифровкаПлатежа Цикл
					
						Платеж.СуммаПлатежа=Платеж.СуммаПлатежа*КоэффициентПересчета;
						СуммаДокумента=СуммаДокумента+Платеж.СуммаПлатежа;
						
						Платеж.СуммаВзаиморасчетов=Платеж.СуммаВзаиморасчетов*КоэффициентПересчета;
						
					КонецЦикла;	
					
					ДокументОбработки.СуммаДокумента=СуммаДокумента;					
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьРеквизит" Тогда
					
					СтарыйРеквизит=ДокументОбработки[Действие.УточнениеДействия];					
					
					Если СтарыйРеквизит=Действие.ПараметрДействия Тогда // Ничего не меняем
						Продолжить;
					КонецЕсли;
					
					Если Действие.УточнениеДействия="БанковскийСчетКасса" Тогда
										
						СтараяВалюта=ДокументОбработки.ВалютаДокумента;
						СтарыйКурс=ДокументОбработки.КурсДокумента;
						СтараяКратность=ДокументОбработки.КратностьДокумента;

						Если ТипЗнч(Действие.ПараметрДействия)=Тип("СправочникСсылка.БанковскиеСчета") Тогда
							ДокументОбработки.Организация=Действие.ПараметрДействия.Владелец;
							ВалютаДокумента=Действие.ПараметрДействия.ВалютаДенежныхСредств;
							ДокументОбработки.ФормаОплаты=Перечисления.ВидыДенежныхСредств.Безналичные;
						ИначеЕсли ТипЗнч(Действие.ПараметрДействия)=Тип("СправочникСсылка.Кассы") Тогда
							ВалютаДокумента=Действие.ПараметрДействия.ВалютаДенежныхСредств;
							ДокументОбработки.ФормаОплаты=Перечисления.ВидыДенежныхСредств.Наличные;
						КонецЕсли;
						
						СтруктураКурсаВалютаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, ДокументОбработки.Дата);
						КурсДокумента        = СтруктураКурсаВалютаДокумента.Курс;
						КратностьДокумента   = СтруктураКурсаВалютаДокумента.Кратность;
						
						СуммаКОбработке=ДокументОбработки.СуммаДокумента;
						СуммаНовая=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СуммаКОбработке,		СтараяВалюта,ВалютаДокумента,
																					СтарыйКурс, КурсДокумента,
																					СтараяКратность,КратностьДокумента);
																					
						КоэффициентПересчета=?(СуммаКОбработке=0,0,СуммаНовая/СуммаКОбработке);
						СуммаДокумента=0;
																					
						Для Каждого Платеж Из ДокументОбработки.РасшифровкаПлатежа Цикл
							
							Платеж.СуммаПлатежа=Платеж.СуммаПлатежа*КоэффициентПересчета;
							СуммаДокумента=СуммаДокумента+Платеж.СуммаПлатежа;
													
						КонецЦикла;
						
						ДокументОбработки.СуммаДокумента=СуммаДокумента;
																					
						ДокументОбработки[Действие.УточнениеДействия]=Действие.ПараметрДействия;
						ДокументОбработки.ВалютаДокумента=ВалютаДокумента;
						ДокументОбработки.КурсДокумента=КурсДокумента;
						ДокументОбработки.КратностьДокумента=КратностьДокумента;
						
					ИначеЕсли Действие.УточнениеДействия="ВалютаДокумента" Тогда
						Если (ДокументОбработки.БанковскийСчетКасса=Неопределено ИЛИ ДокументОбработки.БанковскийСчетКасса.Пустая()) Тогда
							
							СтараяВалюта=ДокументОбработки.ВалютаДокумента;
							СтарыйКурс=ДокументОбработки.КурсДокумента;
							СтараяКратность=ДокументОбработки.КратностьДокумента;
							
							ВалютаДокумента=Действие.ПараметрДействия;
							
							СтруктураКурсаВалютаДокумента = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаДокумента, ДокументОбработки.Дата);
							КурсДокумента        = СтруктураКурсаВалютаДокумента.Курс;
							КратностьДокумента   = СтруктураКурсаВалютаДокумента.Кратность;
							
							СуммаКОбработке=ДокументОбработки.СуммаДокумента;
							СуммаНовая=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СуммаКОбработке,		СтараяВалюта,ВалютаДокумента,
							СтарыйКурс, КурсДокумента,
							СтараяКратность,КратностьДокумента);
							
							КоэффициентПересчета=?(СуммаКОбработке=0,0,СуммаНовая/СуммаКОбработке);
							СуммаДокумента=0;
							
							Для Каждого Платеж Из ДокументОбработки.РасшифровкаПлатежа Цикл
								
								Платеж.СуммаПлатежа=Платеж.СуммаПлатежа*КоэффициентПересчета;
								СуммаДокумента=СуммаДокумента+Платеж.СуммаПлатежа;
								
							КонецЦикла;
							
							ДокументОбработки.СуммаДокумента=СуммаДокумента;
							
							ДокументОбработки[Действие.УточнениеДействия]=ВалютаДокумента;
							
						Иначе
							
							Сообщить("Валюта заявки "+ДокументОбработки+"
							|определяется местом хранения "+ДокументОбработки.БанковскийСчетКасса+". Операция отменена.");
							
						КонецЕсли;
						
					Иначе
						
						ДокументОбработки[Действие.УточнениеДействия]=Действие.ПараметрДействия;
						
					КонецЕсли;
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьСостояние" Тогда 
					
					Попытка
						
						Если Действие.УточнениеДействия="Проведение" Тогда
							ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
						ИначеЕсли Действие.УточнениеДействия="ОтменаПроведения" Тогда
							ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						ИначеЕсли Действие.УточнениеДействия="ПометкаУдаления" Тогда
							ДокументОбработки.ПометкаУдаления=Истина;
							ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						ИначеЕсли Действие.УточнениеДействия="СнятьПометкуУдаления" Тогда
							ДокументОбработки.ПометкаУдаления=Ложь;
							ДокументОбработки.Записать(РежимЗаписиДокумента.Запись);		
						КонецЕсли;
						
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ВидДокумента="РасчетПоМоделиБюджетирования" Тогда
		
		Для Каждого Действие Из Действия Цикл
			
			Если Не ПроверкаСтрокиДействия(Действие) Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого Документ Из ТабДокументов Цикл
				
				ДокументОбработки=Документ.Ссылка.ПолучитьОбъект();
				
				Если Действие.Действие="ИзменитьРеквизит" Тогда
					
					СтарыйРеквизит=ДокументОбработки[Действие.УточнениеДействия];					
					
					Если СтарыйРеквизит=Действие.ПараметрДействия Тогда // Ничего не меняем
						Продолжить;
					КонецЕсли;
					
					ДокументОбработки[Действие.УточнениеДействия]=Действие.ПараметрДействия;
					
					Если Действие.УточнениеДействия="Сценарий" Тогда
						
						ДокументОбработки.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ДокументОбработки.ПериодПланирования,Действие.ПараметрДействия.Периодичность);
						
					КонецЕсли;
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="Пересчитать" Тогда
					
					ДокументОбработки.ВыполнитьРасчет();
					
					Попытка
						ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				ИначеЕсли Действие.Действие="ИзменитьСостояние" Тогда 
					
					Попытка
						
						Если Действие.УточнениеДействия="Проведение" Тогда
							ДокументОбработки.Записать(РежимЗаписиДокумента.Проведение);
						ИначеЕсли Действие.УточнениеДействия="ОтменаПроведения" Тогда
							ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						ИначеЕсли Действие.УточнениеДействия="ПометкаУдаления" Тогда
							ДокументОбработки.ПометкаУдаления=Истина;
							ДокументОбработки.Записать(РежимЗаписиДокумента.ОтменаПроведения);
						ИначеЕсли Действие.УточнениеДействия="СнятьПометкуУдаления" Тогда
							ДокументОбработки.ПометкаУдаления=Ложь;
							ДокументОбработки.Записать(РежимЗаписиДокумента.Запись);		
						КонецЕсли;
						
					Исключение
						Сообщить(ОписаниеОшибки());
						ОтменитьТранзакцию();
						Возврат;
					КонецПопытки
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();	
	
КонецПроцедуры // ОбработатьДокументы()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли

