#Если Клиент Тогда
	
// Функция для проверки возможности изменения настроек учета - открытия соответствующих форм для редактирования
//
Функция ПолучитьРазрешениеНаИзменениеНастроекУчета() Экспорт
	
	Если РольДоступна("ПолныеПрава") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Предупреждение("Изменение настроек может выполнять только пользователь с ролью ""Полные права""");
	
	Возврат Ложь;
	
КонецФункции

Функция ПолучитьПодтверждениеПользователя(ЗаголовокВопроса="") Экспорт
	ТекстВопроса = 
	"Выполнение данной операции может занять продолжительное время. 
	|Настоятельно рекомендуется предварительно ознакомиться cо справочной информацией. Продолжить?";
	Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,ЗаголовокВопроса) = КодВозвратаДиалога.Нет Тогда
		Возврат ложь;
	КонецЕсли;
    Возврат истина;
КонецФункции

Процедура ДобавитьРаздел(СписокРазделов, ИмяРаздела, Представление, УровеньРаздела) Экспорт

	Отступ = "";
	Для Сч2 = 1 По УровеньРаздела - 1 Цикл
		Отступ = Отступ + "    ";
	КонецЦикла; 
	
	СтрокаРаздела = СписокРазделов.Добавить();
	СтрокаРаздела.ИмяРаздела = ИмяРаздела;
	СтрокаРаздела.Представление = " " + Отступ + Представление;
	
КонецПроцедуры // ДобавитьРаздел

Функция ПолучитьСтруктуруЗначенийПараметров()

	ТекстЗапроса = "";
	Для каждого ЭлКонстанта Из Метаданные.Константы Цикл
		
		ПолучитьПредставлениеЗначения = Ложь;
		Для каждого ЭлКоллекции Из ЭлКонстанта.Тип.Типы() Цикл
			// Если не примитивный тип, то необходимо получить представление
			Если ЭлКоллекции <> Тип("Строка")
				И ЭлКоллекции <> Тип("Число")
				И ЭлКоллекции <> Тип("Дата")
				И ЭлКоллекции <> Тип("Булево")
				И ЭлКоллекции <> Тип("ХранилищеЗначения") Тогда
				
				ПолучитьПредставлениеЗначения = Истина;	
			КонецЕсли;				
		КонецЦикла;
		
		Если ПравоДоступа("Чтение", ЭлКонстанта) Тогда
			
			ТекстЗапроса = ТекстЗапроса + ", Константы." + ЭлКонстанта.Имя + " КАК " + ЭлКонстанта.Имя + Символы.ПС;
			Если ПолучитьПредставлениеЗначения Тогда
				ТекстЗапроса = ТекстЗапроса + ", ПРЕДСТАВЛЕНИЕ(Константы." + ЭлКонстанта.Имя + ") КАК " + ЭлКонстанта.Имя + "Представление" + Символы.ПС;
			КонецЕсли;
			
			
			
		Иначе
			
			ТекстЗапроса = ТекстЗапроса + ", ""<Недостаточно прав>"" КАК " + ЭлКонстанта.Имя + Символы.ПС;
			Если ПолучитьПредставлениеЗначения Тогда
				ТекстЗапроса = ТекстЗапроса + ", ""<Недостаточно прав>"" КАК " + ЭлКонстанта.Имя + "Представление" + Символы.ПС;
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	ТекстЗапроса = Сред(ТекстЗапроса, 3);
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|" + ТекстЗапроса + "
		|ИЗ Константы КАК Константы";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	
    Возврат Выборка;
	
КонецФункции //

Процедура Печать(СписокРазделов, Заголовок) Экспорт
	
	Макет = ПолучитьМакет("ПараметрыПечать");
	ОбластьРазделитель = Макет.ПолучитьОбласть("Разделитель");
	ТабДокумент = Новый ТабличныйДокумент;
	
	СтруктураЗначенийПараметров = ПолучитьСтруктуруЗначенийПараметров();
	
	Для каждого РазделПараметров Из СписокРазделов Цикл
		Если Макет.Области.Найти(РазделПараметров.ИмяРаздела) = Неопределено Тогда
			Продолжить;
		КонецЕсли; 
		
		ОбластьРаздела = Макет.ПолучитьОбласть(РазделПараметров.ИмяРаздела);
		ОбластьРаздела.Параметры.Заполнить(СтруктураЗначенийПараметров);
		
		Если РазделПараметров.ИмяРаздела = "Взаиморасчеты" Тогда
			БУ = ПланыСчетов.Хозрасчетный.КассаВНациональнойВалюте;
			КассыОбособленныхПодразделений = ?(БУ.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделенияБезОбразованияЮрЛица, "ВидСубконто") = Неопределено, Ложь, Истина);
			ОбластьРаздела.Параметры.КассыОбособленныхПодразделений = КассыОбособленныхПодразделений;
		КонецЕсли; 
		
		ТабДокумент.Вывести(ОбластьРаздела);
		ТабДокумент.Вывести(ОбластьРазделитель);
	КонецЦикла;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, , Ложь, Заголовок);	
	
КонецПроцедуры // Печать

#КонецЕсли
