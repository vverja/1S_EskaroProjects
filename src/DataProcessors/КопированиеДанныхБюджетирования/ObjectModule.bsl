// Настройка периода источника
Перем НПИсточник Экспорт;

// Настройка периода источника
Перем НППриемник Экспорт;

// Используется при копировании "из интервала в интервал". Определяется исходя из 
// правила, что исходный и принимающий интервалы должны быть равны по продолжительности.
// Таким образом, определяется как максимальная из периодичностей исходного и принимающего сценариев.
// Также, используется при заполнении нормированными оборотами. Определяется исходя из правила,
// что интервал исходных данных должен быть кратен периодичности принимающего сценария,
// то есть быть не меньше, чем его периодичность.
Перем ШагИнтервалаКопирования Экспорт;

#Если Клиент Тогда

// Формирует предварительный текст запроса построителя
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ТекстЗапроса="ВЫБРАТЬ
	|СтатьяОборотов
	|{ВЫБРАТЬ
	|СтатьяОборотов.*,
	|ЦФО.*,
	|Проект.*,
	|Контрагент.*,
	|Номенклатура.*}
	|ИЗ
	|РегистрНакопления.ОборотыБюджетов КАК ОборотыБюджетов
	|{ГДЕ 
	|ОборотыБюджетов.СтатьяОборотов.*,
	|ОборотыБюджетов.ЦФО.*,
	|ОборотыБюджетов.Проект.*,
	|ОборотыБюджетов.Контрагент.*,
	|ОборотыБюджетов.Номенклатура.*}";
	
	ПостроительОтчета.Текст=ТекстЗапроса;
	

КонецПроцедуры // ЗаполнитьНачальныеНастройки()


// Проверяет заполнение полей обработки, обязательных для заполнения
//
//
// Возвращаемое значение:
//   СтруктураОбязательныхПолей - структура с именами реквизитов формы
//
Процедура КонтрольЗаполненияРеквизитов(Отказ)
	
	СтруктураОбязательныхПолей=Новый Структура;
	СтруктураОбязательныхПолей.Вставить("СценарийПриемник","Не указан сценарий, на который копируются данные!");
	СтруктураОбязательныхПолей.Вставить("ДатаНачалаИсточник","Не указана дата начала отбора данных!");
	СтруктураОбязательныхПолей.Вставить("ДатаКонцаИсточник","Не указана дата конца отбора данных!");
	СтруктураОбязательныхПолей.Вставить("ДатаНачалаПриемник","Не указана дата начала вставки данных!");
	СтруктураОбязательныхПолей.Вставить("ДатаКонцаПриемник","Не указана дата конца вставки данных!");
	СтруктураОбязательныхПолей.Вставить("Ответственный","Не указан ответственный за формируемые документы!");
	СтруктураОбязательныхПолей.Вставить("Состояние","Не указан статус формируемых документов!");
		
	Для каждого КлючЗначение Из СтруктураОбязательныхПолей Цикл

		Значение = ЭтотОбъект[КлючЗначение.Ключ];
		Если НЕ ЗначениеЗаполнено(Значение) Тогда 
			
				Отказ=Истина;
				Сообщить(КлючЗначение.Значение);
				
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры // КонтрольЗаполненияРеквизитов()

// Выполняет формирование бюджетных операций в соответствии с настройками формы.
//
// Параметры: нет
//
Процедура КопированиеДанных() Экспорт

	Отказ=Ложь;
	
	КонтрольЗаполненияРеквизитов(Отказ);
	
	Если Отказ Тогда
	
		Возврат;
	
	КонецЕсли; 
		
	Если КопироватьБюджетныеОперации Тогда
		
	РегистрКурсовВалют=?(СценарийПриемник.ИспользоватьКурсыСценария,"КурсыВалютПоСценариям","КурсыВалют");
	
	Если СпособКопированияДанных=Перечисления.СпособыКопированияДанныхБюджетирования.ИнтервалВИнтервал Тогда
		
		СдвигПериодов=Бюджетирование.РассчитатьКоличествоПериодов(ДатаНачалаИсточник,ДатаНачалаПриемник,ШагИнтервалаКопирования);
		Если СдвигПериодов <> 0 Тогда
			СдвигПериодов = Формат(СдвигПериодов, "ЧГ=0");
		КонецЕсли; 
		
		Если СценарийИсточник.Пустая() Тогда // Фактические данные
			
			Если СдвигПериодов=0 Тогда
				
				СтрокаДатаПланирования="ОборотыБюджетовОбороты.Период";
				
			Иначе
				
				СтрокаДатаПланирования="ДобавитьКДате(ОборотыБюджетовОбороты.Период,"+Строка(ШагИнтервалаКопирования)+","+СдвигПериодов+")";
				
			КонецЕсли;
		
		ТекстЗапроса="ВЫБРАТЬ
			|"+ СтрокаДатаПланирования+" КАК ПериодПланирования,
			|	ОборотыБюджетовОбороты.Проект КАК Проект,
			|	ОборотыБюджетовОбороты.ЦФО КАК ЦФО,
			|	ОборотыБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
			|	ОборотыБюджетовОбороты.Контрагент КАК Контрагент,
			|	ОборотыБюджетовОбороты.Номенклатура КАК Номенклатура,
			|	ОборотыБюджетовОбороты.Валюта КАК ВалютаДокумента,
			|	КурсыВалютОборотов.Курс КАК КурсДокумента,
			|	КурсыВалютОборотов.Кратность КАК КратностьДокумента,
			|	Сумма(ОборотыБюджетовОбороты.КоличествоОборот)*&Коэффициент+&КоличествоАбс КАК Количество,
			|	Сумма(ОборотыБюджетовОбороты.ВалютнаяСуммаОборот)*&Коэффициент+&СуммаАбс КАК Сумма
			|ИЗ
			|	РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачалаИсточник, &ДатаКонцаИсточник,"
			+Строка(ШагИнтервалаКопирования)+",Сценарий=&СценарийИсточник {Сценарий,СтатьяОборотов.*,ЦФО.*,Проект.*,Контрагент.*,Номенклатура.*}) КАК ОборотыБюджетовОбороты
			// Курсы создаваемого документа 
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|(ВЫБРАТЬ 
			|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
			|	КурсыВалют.Курс КАК Курс, 
			|	КурсыВалют.Кратность КАК Кратность,
			|	КурсыВалют.Валюта КАК Валюта
			|ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВалют
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
			|	ВЫБРАТЬ
			|		Максимум(КурсыВнутр.Период) КАК Период,
			|		Обороты.Дата КАК Дата,
			|		КурсыВнутр.Валюта КАК Валюта
			|	ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВнутр
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
			|	ВЫБРАТЬ
			|	"+ СтрокаДатаПланирования+" КАК Дата,
			|	ОборотыБюджетовОбороты.Валюта КАК Валюта
			|ИЗ
			|	РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачалаИсточник, &ДатаКонцаИсточник,"
			+Строка(ШагИнтервалаКопирования)+",Сценарий=&СценарийИсточник {СтатьяОборотов.*,ЦФО.*,Проект.*,Контрагент.*,Номенклатура.*}) КАК ОборотыБюджетовОбороты) КАК Обороты
			   |ПО Обороты.Дата >= КурсыВнутр.Период
			|	И КурсыВнутр.Валюта = Обороты.Валюта";
			Если СценарийПриемник.ИспользоватьКурсыСценария Тогда
				ТекстЗапроса=ТекстЗапроса+"
			|	И (КурсыВнутр.Сценарий=&СценарийПриемник)";
			КонецЕсли;
			ТекстЗапроса=ТекстЗапроса+"
			|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
			|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
			|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта";
			Если СценарийПриемник.ИспользоватьКурсыСценария Тогда
				ТекстЗапроса=ТекстЗапроса+"
			|	ГДЕ КурсыВалют.Сценарий=&СценарийПриемник";
			КонецЕсли;
			ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыВалютОборотов
			|ПО КурсыВалютОборотов.Дата = "+ СтрокаДатаПланирования+" И
			|   КурсыВалютОборотов.Валюта = ОборотыБюджетовОбороты.Валюта
			|	СГРУППИРОВАТЬ ПО
			|	"+ СтрокаДатаПланирования+",
			|	ОборотыБюджетовОбороты.Проект,
			|	ОборотыБюджетовОбороты.ЦФО,
			|	ОборотыБюджетовОбороты.СтатьяОборотов,
			|	ОборотыБюджетовОбороты.Контрагент,
			|	ОборотыБюджетовОбороты.Номенклатура,
			|	КурсыВалютОборотов.Курс,
			|	КурсыВалютОборотов.Кратность,
			|	ОборотыБюджетовОбороты.Валюта";
			
		Иначе  // Бюджетные операции
			
			
			Если СдвигПериодов=0 Тогда
				
				СтрокаДатаПланирования="НАЧАЛОПЕРИОДА(БюджетнаяОперация.ПериодПланирования,"+Строка(ШагИнтервалаКопирования)+")";
				
			Иначе
				
				СтрокаДатаПланирования="ДобавитьКДате(
				|		НАЧАЛОПЕРИОДА(БюджетнаяОперация.ПериодПланирования,"+Строка(ШагИнтервалаКопирования)+"),
				|					"+Строка(ШагИнтервалаКопирования)+","+СдвигПериодов+")";
								
			КонецЕсли;
			
			ТекстЗапроса="ВЫБРАТЬ
			|"+СтрокаДатаПланирования+" КАК ПериодПланирования,
			|	БюджетнаяОперация.СтатьяОборотов КАК СтатьяОборотов,
			|	БюджетнаяОперация.ЦФО КАК ЦФО,
			|	БюджетнаяОперация.Проект КАК Проект,
			|	БюджетнаяОперация.Контрагент КАК Контрагент,
			|	БюджетнаяОперация.Номенклатура КАК Номенклатура,
			|	СУММА(БюджетнаяОперация.Количество)*&Коэффициент+&КоличествоАбс КАК Количество,
			|	СУММА(БюджетнаяОперация.Сумма)*&Коэффициент+&СуммаАбс КАК Сумма,
			|	БюджетнаяОперация.ВалютаДокумента КАК ВалютаДокумента,
			|	КурсыВалютОборотов.Курс КАК КурсДокумента,
			|	КурсыВалютОборотов.Кратность КАК КратностьДокумента		
			|						
			|ИЗ
			|	Документ.БюджетнаяОперация КАК БюджетнаяОперация
			// Курсы создаваемого документа 
			|ЛЕВОЕ СОЕДИНЕНИЕ
			|(ВЫБРАТЬ 
			|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
			|	КурсыВалют.Курс КАК Курс, 
			|	КурсыВалют.Кратность КАК Кратность,
			|	КурсыВалют.Валюта КАК Валюта
			|ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВалют
			|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
			|	ВЫБРАТЬ
			|		Максимум(КурсыВнутр.Период) КАК Период,
			|		Обороты.Дата КАК Дата,
			|		КурсыВнутр.Валюта КАК Валюта
			|	ИЗ РегистрСведений."+РегистрКурсовВалют+" КАК КурсыВнутр
			|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
			|	ВЫБРАТЬ
			|	"+СтрокаДатаПланирования+" КАК Дата,
			|		БюджетнаяОперация.ВалютаДокумента КАК Валюта
			|ИЗ
			|	Документ.БюджетнаяОперация КАК БюджетнаяОперация
			|ГДЕ
			|(БюджетнаяОперация.Проведен И БюджетнаяОперация.Сценарий=&СценарийИсточник)
			|И (БюджетнаяОперация.ПериодПланирования МЕЖДУ &ДатаНачалаИсточник И &ДатаКонцаИсточник)
			|{ГДЕ
			|БюджетнаяОперация.СтатьяОборотов.*,
			|БюджетнаяОперация.ЦФО.*,
			|БюджетнаяОперация.Проект.*,
			|БюджетнаяОперация.Контрагент.*,
			|БюджетнаяОперация.Номенклатура.*}) КАК Обороты
			|ПО Обороты.Дата >= КурсыВнутр.Период
			|	И КурсыВнутр.Валюта = Обороты.Валюта";
			Если СценарийПриемник.ИспользоватьКурсыСценария Тогда
				ТекстЗапроса=ТекстЗапроса+"
				|	И (КурсыВнутр.Сценарий=&СценарийПриемник)";
			КонецЕсли;
			ТекстЗапроса=ТекстЗапроса+"
			|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
			|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
			|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта";
			Если СценарийПриемник.ИспользоватьКурсыСценария Тогда
				ТекстЗапроса=ТекстЗапроса+"
				|	ГДЕ КурсыВалют.Сценарий=&СценарийПриемник";
			КонецЕсли;
			ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыВалютОборотов
			|ПО КурсыВалютОборотов.Дата = "+СтрокаДатаПланирования+" И
			|   КурсыВалютОборотов.Валюта = БюджетнаяОперация.ВалютаДокумента
			|ГДЕ
			|(БюджетнаяОперация.Проведен И БюджетнаяОперация.Сценарий=&СценарийИсточник)
			|И (БюджетнаяОперация.ПериодПланирования МЕЖДУ &ДатаНачалаИсточник И &ДатаКонцаИсточник)
			|{ГДЕ 
			|БюджетнаяОперация.СтатьяОборотов.*,
			|БюджетнаяОперация.ЦФО.*,
			|БюджетнаяОперация.Проект.*,
			|БюджетнаяОперация.Контрагент.*,
			|БюджетнаяОперация.Номенклатура.*}			 
			|СГРУППИРОВАТЬ ПО
			|"+СтрокаДатаПланирования+",
			|	БюджетнаяОперация.СтатьяОборотов,
			|	БюджетнаяОперация.ЦФО,
			|	БюджетнаяОперация.Проект,
			|	БюджетнаяОперация.Контрагент,
			|	БюджетнаяОперация.Номенклатура,
			|	КурсыВалютОборотов.Курс,
			|	КурсыВалютОборотов.Кратность,
			|	БюджетнаяОперация.ВалютаДокумента";
			
		 КонецЕсли;
		 
	ТекущиеНастройкиПостроителя=ПостроительОтчета.ПолучитьНастройки(Истина,Ложь,Ложь,Ложь);	 
		 
	ПостроительОтчета.Текст=ТекстЗапроса;
		
	ПостроительОтчета.Параметры.Вставить("СценарийИсточник",СценарийИсточник);
	ПостроительОтчета.Параметры.Вставить("СценарийПриемник",СценарийПриемник);
	ПостроительОтчета.Параметры.Вставить("ДатаНачалаИсточник",ДатаНачалаИсточник);
	ПостроительОтчета.Параметры.Вставить("ДатаКонцаИсточник",ДатаКонцаИсточник);
	ПостроительОтчета.Параметры.Вставить("Коэффициент",КоэффициентПериоды);
	ПостроительОтчета.Параметры.Вставить("КоличествоАбс",АбсолютноеЗначениеПериодыКоличество);
	ПостроительОтчета.Параметры.Вставить("СуммаАбс",АбсолютноеЗначениеПериодыСумма);
	
	ПостроительОтчета.УстановитьНастройки(ТекущиеНастройкиПостроителя,Истина,Ложь,Ложь,Ложь);
	
	ПостроительОтчета.Выполнить();

	ТабОбразовДокумента=ПостроительОтчета.Результат.Выгрузить();
	
	Если ТабОбразовДокумента.Количество()>0 Тогда
		
		НачатьТранзакцию();
		
		Для Каждого Образ Из ТабОбразовДокумента Цикл
			
			Если РавномерноПоПериодам И (ОбщегоНазначения.ЧислоДнейВПериоде(ШагИнтервалаКопирования)>ОбщегоНазначения.ЧислоДнейВПериоде(СценарийПриемник.Периодичность)) Тогда
				
				Коэффициент=Бюджетирование.РассчитатьКоличествоПериодов(ОбщегоНазначения.ДатаНачалаПериода(Образ.ПериодПланирования,ШагИнтервалаКопирования),
													ОбщегоНазначения.ДатаКонцаПериода(Образ.ПериодПланирования,ШагИнтервалаКопирования),
													СценарийПриемник.Периодичность);
				
				
				ДатаДокумента=Образ.ПериодПланирования;	
				Для Индекс=1 По Коэффициент Цикл
					
					НовыйДокумент=Документы.БюджетнаяОперация.СоздатьДокумент();
					НовыйДокумент.Дата = РабочаяДата;
					НовыйДокумент.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
					
					НовыйДокумент.ПериодПланирования	=ДатаДокумента;
					НовыйДокумент.Сценарий				=СценарийПриемник;
					НовыйДокумент.СтатьяОборотов		=?(УстановитьСтатью,СтатьяОборотовПриемник,Образ.СтатьяОборотов);
					НовыйДокумент.ЦФО					=?(УстановитьЦФО,ЦФОПриемник,Образ.ЦФО);
					НовыйДокумент.Проект				=?(УстановитьПроект,ПроектПриемник,Образ.Проект);
					НовыйДокумент.Контрагент			=?(УстановитьКонтрагента,КонтрагентПриемник,Образ.Контрагент);
					НовыйДокумент.Номенклатура			=?(УстановитьНоменклатуру,НоменклатураПриемник,Образ.Номенклатура);
					НовыйДокумент.Количество			=Образ.Количество/Коэффициент;
					НовыйДокумент.Сумма					=Образ.Сумма/Коэффициент;
					
					Если (НЕ НовыйДокумент.Количество=0) И (НЕ НовыйДокумент.Сумма=0) Тогда
						НовыйДокумент.Цена=НовыйДокумент.Сумма/НовыйДокумент.Количество;
					КонецЕсли;
						
					НовыйДокумент.ВалютаДокумента		=Образ.ВалютаДокумента;
					НовыйДокумент.Ответственный			=Ответственный;
					НовыйДокумент.Состояние				=Состояние;

					НовыйДокумент.ОбновитьКурсДокумента();
					
					НовыйДокумент.Записать(РежимЗаписиДокумента.Запись);
					
					НоваяСтрока 					= СписокДокументовОперации.Добавить();
					НоваяСтрока.ДокументОперация 	= НовыйДокумент.Ссылка;
					НоваяСтрока.СтатьяОборотов 		= НовыйДокумент.СтатьяОборотов;
					НоваяСтрока.Валюта 				= НовыйДокумент.ВалютаДокумента;
					НоваяСтрока.Сумма 				= НовыйДокумент.Сумма;
					НоваяСтрока.Пометка  			= Истина;
									
					ДатаДокумента=ОбщегоНазначения.ДобавитьИнтервал(ДатаДокумента,СценарийПриемник.Периодичность,1);
					
				КонецЦикла;			
				
			Иначе
				
				НовыйДокумент=Документы.БюджетнаяОперация.СоздатьДокумент();
				НовыйДокумент.Дата = РабочаяДата;
				НовыйДокумент.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
				
				НовыйДокумент.ПериодПланирования	=Образ.ПериодПланирования;
				НовыйДокумент.Сценарий				=СценарийПриемник;
				НовыйДокумент.СтатьяОборотов		=?(УстановитьСтатью,СтатьяОборотовПриемник,Образ.СтатьяОборотов);
				НовыйДокумент.ЦФО					=?(УстановитьЦФО,ЦФОПриемник,Образ.ЦФО);
				НовыйДокумент.Проект				=?(УстановитьПроект,ПроектПриемник,Образ.Проект);
				НовыйДокумент.Контрагент			=?(УстановитьКонтрагента,КонтрагентПриемник,Образ.Контрагент);
				НовыйДокумент.Номенклатура			=?(УстановитьНоменклатуру,НоменклатураПриемник,Образ.Номенклатура);
				НовыйДокумент.Количество			=Образ.Количество;
				НовыйДокумент.Сумма					=Образ.Сумма;
				
				Если (НЕ НовыйДокумент.Количество=0) И (НЕ НовыйДокумент.Сумма=0) Тогда
					НовыйДокумент.Цена=НовыйДокумент.Сумма/НовыйДокумент.Количество;
				КонецЕсли;
				
				НовыйДокумент.ВалютаДокумента		=Образ.ВалютаДокумента;
				НовыйДокумент.КурсДокумента			=Образ.КурсДокумента;
				НовыйДокумент.КратностьДокумента	=Образ.КратностьДокумента;
				НовыйДокумент.Ответственный			=Ответственный;
				НовыйДокумент.Состояние				=Состояние;
				
				НовыйДокумент.Записать();
				
				НоваяСтрока 					= СписокДокументовОперации.Добавить();
				НоваяСтрока.ДокументОперация 	= НовыйДокумент.Ссылка;
				НоваяСтрока.СтатьяОборотов 		= НовыйДокумент.СтатьяОборотов;
				НоваяСтрока.Валюта 				= НовыйДокумент.ВалютаДокумента;
				НоваяСтрока.Сумма 				= НовыйДокумент.Сумма;
				НоваяСтрока.Пометка  			= Истина;
							
			КонецЕсли;
			
		КонецЦикла; 
		
		ЗафиксироватьТранзакцию()
		
	КонецЕсли;
	
Иначе // Нормируем по принимающему периоду
	
	НормКоэффициент=Бюджетирование.РассчитатьКоличествоПериодов(ДатаНачалаИсточник,ДатаКонцаИсточник,СценарийПриемник.Периодичность);
		
	Если СценарийИсточник.Пустая() Тогда // Фактические данные
		
		ТекстЗапроса="ВЫБРАТЬ
		|	ОборотыБюджетовОбороты.Проект КАК Проект,
		|	ОборотыБюджетовОбороты.ЦФО КАК ЦФО,
		|	ОборотыБюджетовОбороты.СтатьяОборотов КАК СтатьяОборотов,
		|	ОборотыБюджетовОбороты.Контрагент КАК Контрагент,
		|	ОборотыБюджетовОбороты.Номенклатура КАК Номенклатура,
		|	ОборотыБюджетовОбороты.Валюта КАК ВалютаДокумента,
		|	Сумма(ОборотыБюджетовОбороты.КоличествоОборот)/&Коэффициент КАК КоличествоСред,
		|	Сумма(ОборотыБюджетовОбороты.ВалютнаяСуммаОборот)/&Коэффициент КАК СуммаСред
		|ИЗ
		|	РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачалаИсточник, &ДатаКонцаИсточник,"
		+Строка(ШагИнтервалаКопирования)+",Сценарий=&СценарийИсточник {СтатьяОборотов.*,ЦФО.*,Проект.*,Контрагент.*,Номенклатура.*}) КАК ОборотыБюджетовОбороты
		| СГРУППИРОВАТЬ ПО
		|	ОборотыБюджетовОбороты.Проект,
		|	ОборотыБюджетовОбороты.ЦФО,
		|	ОборотыБюджетовОбороты.СтатьяОборотов,
		|	ОборотыБюджетовОбороты.Контрагент,
		|	ОборотыБюджетовОбороты.Номенклатура,
		|	ОборотыБюджетовОбороты.Валюта";
		
	Иначе
		
		ТекстЗапроса="ВЫБРАТЬ
		|	БюджетнаяОперация.СтатьяОборотов КАК СтатьяОборотов,
		|	БюджетнаяОперация.ЦФО КАК ЦФО,
		|	БюджетнаяОперация.Проект КАК Проект,
		|	БюджетнаяОперация.Контрагент КАК Контрагент,
		|	БюджетнаяОперация.Номенклатура КАК Номенклатура,
		|	СУММА(БюджетнаяОперация.Количество)/&Коэффициент КАК КоличествоСред,
		|	СУММА(БюджетнаяОперация.Сумма)/&Коэффициент КАК СуммаСред,
		|	БюджетнаяОперация.ВалютаДокумента КАК ВалютаДокумента
		|						
		|ИЗ
		|	Документ.БюджетнаяОперация КАК БюджетнаяОперация
		|ГДЕ
		|(БюджетнаяОперация.Проведен И БюджетнаяОперация.Сценарий=&СценарийИсточник)
		|И (БюджетнаяОперация.ПериодПланирования МЕЖДУ &ДатаНачалаИсточник И &ДатаКонцаИсточник)
		|{ГДЕ 
		|БюджетнаяОперация.СтатьяОборотов.*,
		|БюджетнаяОперация.ЦФО.*,
		|БюджетнаяОперация.Проект.*,
		|БюджетнаяОперация.Контрагент.*,
		|БюджетнаяОперация.Номенклатура.*}
		|СГРУППИРОВАТЬ ПО
		|	БюджетнаяОперация.СтатьяОборотов,
		|	БюджетнаяОперация.ЦФО,
		|	БюджетнаяОперация.Проект,
		|	БюджетнаяОперация.Контрагент,
		|	БюджетнаяОперация.Номенклатура,
		|	БюджетнаяОперация.ВалютаДокумента";
		
	КонецЕсли;
	
	ТекущиеНастройкиПостроителя=ПостроительОтчета.ПолучитьНастройки(Истина,Ложь,Ложь,Ложь);	 
	
	ПостроительОтчета.Текст=ТекстЗапроса;
	
	ПостроительОтчета.Параметры.Вставить("СценарийИсточник",СценарийИсточник);
	ПостроительОтчета.Параметры.Вставить("ДатаНачалаИсточник",ДатаНачалаИсточник);
	ПостроительОтчета.Параметры.Вставить("ДатаКонцаИсточник",ДатаКонцаИсточник);
	ПостроительОтчета.Параметры.Вставить("Коэффициент",НормКоэффициент);
	
	ПостроительОтчета.УстановитьНастройки(ТекущиеНастройкиПостроителя,Истина,Ложь,Ложь,Ложь);
	
	ПостроительОтчета.Выполнить();
	
	ТабОбразовДокумента=ПостроительОтчета.Результат.Выгрузить();
	
	Если ТабОбразовДокумента.Количество()>0 Тогда
		
		ПериодовКопирования=Бюджетирование.РассчитатьКоличествоПериодов(ДатаНачалаПриемник,ДатаКонцаПриемник,СценарийПриемник.Периодичность);
		
		НачатьТранзакцию();
		
		Для Каждого Образ Из ТабОбразовДокумента Цикл
			
				ДатаДокумента=ДатаНачалаПриемник;
				БазовоеЗначение=КоэффициентБазовый;
								
				Для Индекс=1 По ПериодовКопирования Цикл
					
					НовыйДокумент=Документы.БюджетнаяОперация.СоздатьДокумент();
					НовыйДокумент.Дата = РабочаяДата;
					НовыйДокумент.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
					
					НовыйДокумент.ПериодПланирования	=ДатаДокумента;
					НовыйДокумент.Сценарий				=СценарийПриемник;
					НовыйДокумент.СтатьяОборотов		=?(УстановитьСтатью,СтатьяОборотовПриемник,Образ.СтатьяОборотов);
					НовыйДокумент.ЦФО					=?(УстановитьЦФО,ЦФОПриемник,Образ.ЦФО);
					НовыйДокумент.Проект				=?(УстановитьПроект,ПроектПриемник,Образ.Проект);
					НовыйДокумент.Контрагент			=?(УстановитьКонтрагента,КонтрагентПриемник,Образ.Контрагент);
					НовыйДокумент.Номенклатура			=?(УстановитьНоменклатуру,НоменклатураПриемник,Образ.Номенклатура);
					НовыйДокумент.ВалютаДокумента		=Образ.ВалютаДокумента;
					НовыйДокумент.Ответственный			=Ответственный;
					НовыйДокумент.Состояние				=Состояние;
					
					// Расчет количества и суммы
					
					Если ТипРаспределения=Перечисления.ВидыРаспределенияЗначенийБюджетирования.ПоПериодамСИзменением Тогда
						
						Если ТипИзменения=Перечисления.ВидыИзмененийПоПериодамБюджетирования.ЦепноеИзменение Тогда
							
							// Каждый следующий период рассчитывается от значения предыдущего
							
							БазовоеЗначение=БазовоеЗначение+БазовоеЗначение*ИзменениеЗаПериод;
							ТекущийКоэффициент=БазовоеЗначение;
													
						Иначе
							// Каждый следующий период рассчитывается от значения первого
							
							ТекущийКоэффициент=БазовоеЗначение+ИзменениеЗаПериод*(Индекс);
							
						КонецЕсли;
												
					Иначе
						
						ТекущийКоэффициент=БазовоеЗначение;
						
					КонецЕсли;			
					
					НовыйДокумент.Количество=Образ.КоличествоСред*ТекущийКоэффициент;
					НовыйДокумент.Сумма=Образ.СуммаСред*ТекущийКоэффициент;
					
					Если (НЕ НовыйДокумент.Количество=0) И (НЕ НовыйДокумент.Сумма=0) Тогда
						НовыйДокумент.Цена=НовыйДокумент.Сумма/НовыйДокумент.Количество;
					КонецЕсли;
				
					НовыйДокумент.ОбновитьКурсДокумента();
					НовыйДокумент.Записать();
					
					НоваяСтрока 					= СписокДокументовОперации.Добавить();
					НоваяСтрока.ДокументОперация 	= НовыйДокумент.Ссылка;
					НоваяСтрока.СтатьяОборотов 		= НовыйДокумент.СтатьяОборотов;
					НоваяСтрока.Валюта 				= НовыйДокумент.ВалютаДокумента;
					НоваяСтрока.Сумма 				= НовыйДокумент.Сумма;
					НоваяСтрока.Пометка  			= Истина;
									
					ДатаДокумента=ОбщегоНазначения.ДобавитьИнтервал(ДатаДокумента,СценарийПриемник.Периодичность,1);
					
				КонецЦикла;			
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецЕсли;

Если КопироватьРасчетПоМодели Тогда
	
	Если СценарийИсточник.Пустая() Тогда
		Сообщить("Не указан сценарий для копирования документов расчета по модели");
		Возврат;
	Иначе
		
		СдвигПериодов=Бюджетирование.РассчитатьКоличествоПериодов(ДатаНачалаИсточник,ДатаНачалаПриемник,ШагИнтервалаКопирования);
		Если СдвигПериодов <> 0 Тогда
			СдвигПериодов = Формат(СдвигПериодов, "ЧГ=0");
		КонецЕсли; 
		
		Если СдвигПериодов=0 Тогда
			
			СтрокаДатаПланирования="НАЧАЛОПЕРИОДА(РасчетПоМоделиБюджетирования.ДатаРасчета,"+Строка(ШагИнтервалаКопирования)+")";
			
		Иначе
			
			СтрокаДатаПланирования="ДобавитьКДате(
			|		НАЧАЛОПЕРИОДА(РасчетПоМоделиБюджетирования.ДатаРасчета,"+Строка(ШагИнтервалаКопирования)+"),
			|					"+Строка(ШагИнтервалаКопирования)+","+СдвигПериодов+")";
			
		КонецЕсли;
		
		Запрос=Новый Запрос;
		ТекстЗапроса="
		|ВЫБРАТЬ
		|	РасчетПоМоделиБюджетирования.Ссылка КАК ДокументРасчет,
		|	"+СтрокаДатаПланирования+" КАК ДатаРасчета,
		|	РасчетПоМоделиБюджетирования.ОсновнойИсточникДанных КАК ОсновнойИсточникДанных
		|ИЗ
		|	Документ.РасчетПоМоделиБюджетирования КАК РасчетПоМоделиБюджетирования
		|
		|ГДЕ
		|	РасчетПоМоделиБюджетирования.Проведен И РасчетПоМоделиБюджетирования.Сценарий=&СценарийИсточник И
		|	(РасчетПоМоделиБюджетирования.ДатаРасчета МЕЖДУ &ДатаНачалаИсточник И &ДатаКонцаИсточник)";
		
		Запрос.Текст=ТекстЗапроса;
		
		Запрос.УстановитьПараметр("ДатаНачалаИсточник",ДатаНачалаИсточник);
		Запрос.УстановитьПараметр("ДатаКонцаИсточник",ДатаКонцаИсточник);
		Запрос.УстановитьПараметр("СценарийИсточник",СценарийИсточник);
				
		ТабДокументовРасчета=Запрос.Выполнить().Выгрузить();
		
		Если ТабДокументовРасчета.Количество()>0 Тогда
			
			НачатьТранзакцию();
			
			Для Каждого Расчет Из ТабДокументовРасчета Цикл
				
				НовыйДокумент=Расчет.ДокументРасчет.Скопировать();
				НовыйДокумент.Дата = РабочаяДата;
				НовыйДокумент.УстановитьВремя(АвтоВремя.ТекущееИлиПоследним);
				НовыйДокумент.ДатаРасчета=Расчет.ДатаРасчета;
				НовыйДокумент.Сценарий=СценарийПриемник;
				
				НовыйДокумент.Записать();
				
				НоваяСтрока 				= СписокДокументовРасчеты.Добавить();
				НоваяСтрока.ДокументРасчет 	= НовыйДокумент.Ссылка;
				НоваяСтрока.ИсточникДанных 	= Расчет.ОсновнойИсточникДанных;
				НоваяСтрока.ДатаРасчета		= НовыйДокумент.ДатаРасчета;
				НоваяСтрока.Пометка  		= Истина;
				
			КонецЦикла;
			
			ЗафиксироватьТранзакцию();
			
		КонецЕсли;	
		
	КонецЕсли;
	
КонецЕсли;

КонецПроцедуры // КопированиеДанных()

 
 НПИсточник = Новый НастройкаПериода;
 НППриемник = Новый НастройкаПериода;
 
 #КонецЕсли