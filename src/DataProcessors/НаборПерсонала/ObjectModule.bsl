////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПолучитьСписокНеРазобранныхПисем(ПолеДляУпорядочивания) Экспорт
	
	Если Не ПравоДоступа("Чтение", Метаданные.Документы.ЭлектронноеПисьмо) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЭлектронноеПисьмо.ОтправительПредставление КАК Отправитель,
	|	ЭлектронноеПисьмо.Тема КАК Тема,";
	Если ПолеДляУпорядочивания = "ДатаПолучения" Тогда
	Запрос.Текст = Запрос.Текст + "
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ЭлектронноеПисьмо.ДатаТранспорта, ДЕНЬ) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА 1
	|		ИНАЧЕ 2
	|	КОНЕЦ КАК ДополнительноеУпорядочивание,";
	КонецЕсли;
	Запрос.Текст = Запрос.Текст + "
	|	НАЧАЛОПЕРИОДА(ЭлектронноеПисьмо.ДатаТранспорта, ДЕНЬ) КАК ДатаПолучения,
	|	ЭлектронноеПисьмо.Ссылка,
	|	ЭлектронноеПисьмо.НеРассмотрено,
	|	ЭлектронноеПисьмо.РассмотретьПосле,
	|	ЭлектронноеПисьмо.СтатусПисьма
	|ИЗ
	|	Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
	|ГДЕ
	|	ЭлектронноеПисьмо.ЗаявкаКандидата = ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
	|	И (НЕ ЭлектронноеПисьмо.ПометкаУдаления)
	|	И ЭлектронноеПисьмо.НеРассмотрено
	|
	|УПОРЯДОЧИТЬ ПО
	|	"+?(ПолеДляУпорядочивания = "ДатаПолучения", "ДополнительноеУпорядочивание,", "")+"
	|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания);
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьСписокЗаявок(ПолеДляУпорядочивания, РежимНабораПерсонала) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПравоДоступа("Чтение", Метаданные.Документы.ЭлектронноеПисьмо) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаявкиКандидатов.Наименование КАК Наименование,
		|	ЗаявкиКандидатов.Ссылка КАК Ссылка";
		Если ПолеДляУпорядочивания = "ДатаСобытия" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ДополнительноеУпорядочивание";
		ИначеЕсли ПолеДляУпорядочивания = "Ответственный" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ЗаявкиКандидатов.Вакансия.Ответственный,ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|		ИНАЧЕ ЗаявкиКандидатов.Ответственный
		|	КОНЕЦ КАК Ответственный";
		ИначеЕсли ПолеДляУпорядочивания = "Подразделение" Тогда
			Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			КонецЕсли;
		ИначеЕсли ПолеДляУпорядочивания = "Должность" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ЗаявкиКандидатов.Должность
		|		ИНАЧЕ ЗаявкиКандидатов.Вакансия.Должность
		|	КОНЕЦ КАК Должность";
		Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ЗаявкиКандидатов."+ПолеДляУпорядочивания;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов";
		Если (ПолеДляУпорядочивания = "Состояние") ИЛИ (ПолеДляУпорядочивания = "ДатаСобытия") Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|			МАКСИМУМ(ВложенныйЗапрос.Дата) КАК ДатаСобытия
		|		ИЗ
		|			(ВЫБРАТЬ
		|				ЭлектронноеПисьмо.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|				МАКСИМУМ(ВЫБОР
		|						КОГДА ЭлектронноеПисьмо.РассмотретьПосле > ЭлектронноеПисьмо.ДатаТранспорта
		|							ТОГДА ЭлектронноеПисьмо.РассмотретьПосле
		|						ИНАЧЕ ЭлектронноеПисьмо.ДатаТранспорта
		|					КОНЕЦ) КАК Дата
		|			ИЗ
		|				Документ.ЭлектронноеПисьмо КАК ЭлектронноеПисьмо
		|			ГДЕ
		|				ЭлектронноеПисьмо.НеРассмотрено
		|				И (НЕ ЭлектронноеПисьмо.ПометкаУдаления)
		|				И ЭлектронноеПисьмо.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|	
		|			СГРУППИРОВАТЬ ПО
		|				ЭлектронноеПисьмо.ЗаявкаКандидата
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				Событие.ЗаявкаКандидата,
		|				МАКСИМУМ(Событие.ВремяНапоминания)
		|			ИЗ
		|				Документ.Событие КАК Событие
		|			ГДЕ
		|				Событие.НапомнитьОСобытии
		|				И Событие.Проведен
		|				И Событие.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|	
		|			СГРУППИРОВАТЬ ПО
		|				Событие.ЗаявкаКандидата
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				ЗаявкиКандидатов.Ссылка,
		|				ЗаявкиКандидатов.ДатаОткрытия
		|			ИЗ
		|				Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов) КАК ВложенныйЗапрос
		|		
		|				СГРУППИРОВАТЬ ПО
		|					ВложенныйЗапрос.ЗаявкаКандидата) КАК События
		|		ПО ЗаявкиКандидатов.Ссылка = События.ЗаявкаКандидата";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	(НЕ ЗаявкиКандидатов.Закрыта)
		|	И (НЕ ЗаявкиКандидатов.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	"+?(ПолеДляУпорядочивания = "ДатаСобытия", "ДополнительноеУпорядочивание,", "")+"
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания);
		
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ЗаявкиКандидатов.Наименование КАК Наименование,
		|	ЗаявкиКандидатов.Ссылка КАК Ссылка";
		Если ПолеДляУпорядочивания = "ДатаСобытия" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаСобытия,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(НАЧАЛОПЕРИОДА(События.ДатаСобытия, ДЕНЬ), ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ДополнительноеУпорядочивание";
		ИначеЕсли ПолеДляУпорядочивания = "Ответственный" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Ответственный = ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка)
		|			ТОГДА ЕСТЬNULL(ЗаявкиКандидатов.Вакансия.Ответственный,ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
		|		ИНАЧЕ ЗаявкиКандидатов.Ответственный
		|	КОНЕЦ КАК Ответственный";
		ИначеЕсли ПолеДляУпорядочивания = "Подразделение" Тогда
			Если РежимНабораПерсонала = Перечисления.ВидыОрганизационнойСтруктурыПредприятия.ПоСтруктуреЮридическихЛиц Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.ПодразделенияОрганизаций ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ВЫБОР КОГДА ЗаявкиКандидатов.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|		ИНАЧЕ ВЫБОР КОГДА ЗаявкиКандидатов.Вакансия.Подразделение ССЫЛКА Справочник.Подразделения ТОГДА ЗаявкиКандидатов.Вакансия.Подразделение ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Подразделения.ПустаяСсылка) КОНЕЦ
		|	КОНЕЦ КАК Подразделение";
			КонецЕсли;
		ИначеЕсли ПолеДляУпорядочивания = "Должность" Тогда
		Запрос.Текст = Запрос.Текст + ",
		|	ВЫБОР
		|		КОГДА ЗаявкиКандидатов.Вакансия = ЗНАЧЕНИЕ(Справочник.Вакансии.ПустаяСсылка)
		|			ТОГДА ЗаявкиКандидатов.Должность
		|		ИНАЧЕ ЗаявкиКандидатов.Вакансия.Должность
		|	КОНЕЦ КАК Должность";
		Иначе
		Запрос.Текст = Запрос.Текст + ",
		|	ЗаявкиКандидатов."+ПолеДляУпорядочивания;
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ИЗ
		|	Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов";
		Если (ПолеДляУпорядочивания = "Состояние") ИЛИ (ПолеДляУпорядочивания = "ДатаСобытия") Тогда
		Запрос.Текст = Запрос.Текст + "
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ВложенныйЗапрос.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|			МАКСИМУМ(ВложенныйЗапрос.Дата) КАК ДатаСобытия
		|		ИЗ
		|			(ВЫБРАТЬ
		|				Событие.ЗаявкаКандидата КАК ЗаявкаКандидата,
		|				МАКСИМУМ(Событие.ВремяНапоминания) КАК Дата
		|			ИЗ
		|				Документ.Событие КАК Событие
		|			ГДЕ
		|				Событие.НапомнитьОСобытии
		|				И Событие.Проведен
		|				И Событие.ЗаявкаКандидата <> ЗНАЧЕНИЕ(Справочник.ЗаявкиКандидатов.ПустаяСсылка)
		|	
		|			СГРУППИРОВАТЬ ПО
		|				Событие.ЗаявкаКандидата
		|	
		|			ОБЪЕДИНИТЬ
		|	
		|			ВЫБРАТЬ
		|				ЗаявкиКандидатов.Ссылка,
		|				ЗаявкиКандидатов.ДатаОткрытия
		|			ИЗ
		|				Справочник.ЗаявкиКандидатов КАК ЗаявкиКандидатов) КАК ВложенныйЗапрос
		|		
		|				СГРУППИРОВАТЬ ПО
		|					ВложенныйЗапрос.ЗаявкаКандидата) КАК События
		|		ПО ЗаявкиКандидатов.Ссылка = События.ЗаявкаКандидата";
		КонецЕсли;
		Запрос.Текст = Запрос.Текст + "
		|ГДЕ
		|	(НЕ ЗаявкиКандидатов.Закрыта)
		|	И (НЕ ЗаявкиКандидатов.ПометкаУдаления)
		|
		|УПОРЯДОЧИТЬ ПО
		|	"+?(ПолеДляУпорядочивания = "ДатаСобытия", "ДополнительноеУпорядочивание,", "")+"
		|	"+ПолеДляУпорядочивания+" "+ПолучитьНаправлениеУпорядочивания(ПолеДляУпорядочивания);
		
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции


Функция ПолучитьСписокСобытийПоЗаявке(ЗаявкаСоискателя) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ЗаявкаСоискателя",	ЗаявкаСоискателя);
	Запрос.УстановитьПараметр("ТекущаяДата",		ТекущаяДата());
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Событие.ОписаниеСобытия,
	|	Событие.Ссылка,
	|	Событие.НачалоСобытия КАК НачалоСобытия,
	|	Событие.ОкончаниеСобытия
	|ИЗ
	|	Документ.Событие КАК Событие
	|ГДЕ
	|	Событие.ЗаявкаКандидата = &ЗаявкаСоискателя
	|	И Событие.Проведен
	|	И (Событие.ОкончаниеСобытия >= &ТекущаяДата
	|			ИЛИ Событие.НапомнитьОСобытии
	|				И Событие.ВремяНапоминания >= &ТекущаяДата)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НачалоСобытия";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ПолучитьСписокФайловПоЗаявке(ЗаявкаСоискателя) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ЗаявкаСоискателя",	ЗаявкаСоискателя);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХранилищеДополнительнойИнформации.Ссылка,
	|	ВЫБОР
	|		КОГДА ХранилищеДополнительнойИнформации.Наименование ПОДОБНО """"
	|			ТОГДА ХранилищеДополнительнойИнформации.ИмяФайла
	|		ИНАЧЕ ХранилищеДополнительнойИнформации.Наименование
	|	КОНЕЦ КАК Наименование
	|ИЗ
	|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	|ГДЕ
	|	ХранилищеДополнительнойИнформации.Объект = &ЗаявкаСоискателя";
	
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции


Функция ПолучитьНаправлениеУпорядочивания(ИмяПоля) Экспорт
	
	Если ИмяПоля = "ДатаПолучения" ИЛИ ИмяПоля = "ДатаСобытия" Тогда
		Возврат "УБЫВ";
	Иначе
		Возврат "ВОЗР";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьГруппировкуУпорядочивания(ИмяПоля) Экспорт
	
	Возврат (ИмяПоля <> "Отправитель") И (ИмяПоля <> "Наименование");
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

