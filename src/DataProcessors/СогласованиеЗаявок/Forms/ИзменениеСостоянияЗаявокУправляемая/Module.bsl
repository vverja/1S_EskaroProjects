////////////////////////////////////////////////////////////////////////////////
// АНАЛИЗ ЗАЯВОК

&НаСервере
Процедура СформироватьОтчеты()

	РезультатАнализа.Очистить();
	
	Если Объект.ПроизвольныйОтчет.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	ПроизвольныйОтчетОбъект = Отчеты.ПроизвольныйОтчет.Создать();
	ПроизвольныйОтчетОбъект.УстановитьПроизвольныйОтчет(Объект.ПроизвольныйОтчет, Объект.СохраненнаяНастройка);
	
	// Установим параметр "СписокЗаявок"
	ПараметрСписокЗаявок = ПроизвольныйОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("СписокЗаявок");
	Если ПараметрСписокЗаявок <> Неопределено Тогда
		СписокЗаявок = Новый СписокЗначений;
		Для каждого ЭлКоллекции Из Объект.ЗаявкиНаРасходованиеСредств Цикл
			Если ЭлКоллекции.Пометка Тогда
				СписокЗаявок.Добавить(ЭлКоллекции.Заявка);
			КонецЕсли; 
		КонецЦикла; 
		ПараметрСписокЗаявок.Значение = СписокЗаявок;
		ПараметрСписокЗаявок.Использование = Истина;
	КонецЕсли; 
	
	// Установим параметр "НовоеСостояниеЗаявок"
	ПараметрНовоеСостояниеЗаявок = ПроизвольныйОтчетОбъект.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("НовоеСостояниеЗаявок");
	Если ПараметрНовоеСостояниеЗаявок <> Неопределено Тогда
		ПараметрНовоеСостояниеЗаявок.Значение = НовоеСостояние;
		ПараметрНовоеСостояниеЗаявок.Использование = Истина;
	КонецЕсли; 
	
	ПроизвольныйОтчетОбъект.СформироватьОтчет(РезультатАнализа,, Ложь);
	
КонецПроцедуры //

&НаСервере
Процедура УстановитьВидимостьОтчетов()

	Если Объект.ПроизвольныйОтчет.Пустая() Тогда
		Элементы.АнализЗаявок.Видимость = Ложь;
	Иначе
		Элементы.АнализЗаявок.Видимость = Истина;
		
		ЗаголовокОтчета = Объект.ПроизвольныйОтчет.Наименование;
		Если Объект.СохраненнаяНастройка.Пустая() Тогда
			ТекстСохраненнаяНастройка = "";
		Иначе
			ТекстСохраненнаяНастройка = " [" + Объект.СохраненнаяНастройка + "]";
		КонецЕсли;
		
		ЗаголовокОтчета = ЗаголовокОтчета + ТекстСохраненнаяНастройка;
		Элементы.АнализЗаявок.Заголовок = ЗаголовокОтчета;
	КонецЕсли; 

КонецПроцедуры //

&НаКлиенте
Процедура РезультатАнализаОбработкаРасшифровки(Элемент, Расшифровка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ЗАЯВКИ

&НаСервере
Функция ОбработатьСогласованиеЗаявок()

	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	РезультатОбработки = ОбработкаОбъект.ОбработатьСогласованиеЗаявок();
	
	ЗначениеВРеквизитФормы(ОбработкаОбъект, "Объект");
	
	Возврат РезультатОбработки;
	
КонецФункции //

&НаКлиенте
Процедура ЗаявкиНаРасходованиеСредствПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкиВСписке(НоваяПометка)

	ВыделенныеСтроки = Элементы.ЗаявкиНаРасходованиеСредств.ВыделенныеСтроки;
	Если ВыделенныеСтроки.Количество() < 2 Тогда
		Для Каждого ДанныеСтроки ИЗ Объект.ЗаявкиНаРасходованиеСредств Цикл
			ДанныеСтроки.Пометка = НоваяПометка;
		КонецЦикла;
	Иначе
		Для Каждого ИндексСтроки ИЗ ВыделенныеСтроки Цикл
			ДанныеСтроки = Объект.ЗаявкиНаРасходованиеСредств.НайтиПоИдентификатору (ИндексСтроки);
			ДанныеСтроки.Пометка = НоваяПометка;
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры //
 

////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ

&НаКлиенте
Процедура ИзменитьСостояние(Команда)
	
	ВыбранныеЗаявки = Объект.ЗаявкиНаРасходованиеСредств.НайтиСтроки(Новый Структура("Пометка", Истина));
	Если ВыбранныеЗаявки.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Не выбрано ни одной заявки'"));
		Возврат;
	КонецЕсли; 
	
	ТекстВопроса = НСтр("ru = 'Изменить состояние выбранных заявок?'");
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет);
	Если Ответ <> КодВозвратаДиалога.Да Тогда
		 Возврат;
	КонецЕсли;
	
	Если ОбработатьСогласованиеЗаявок() Тогда
		СтатусЗаявокБылИзменен = Истина;
	КонецЕсли;
	
	Если Объект.ЗаявкиНаРасходованиеСредств.Количество() = 0 Тогда
		Закрыть();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура Сформировать(Команда)
	
	СформироватьОтчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометки(Команда)
	
	УстановитьПометкиВСписке(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометки(Команда)
	
	УстановитьПометкиВСписке(Ложь);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ФОРМА

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры.СвойстваОбъекта);
	
	// Заполним список заявок
	Объект.ЗаявкиНаРасходованиеСредств.Очистить();
	Для Каждого ДанныеСтроки ИЗ Параметры.Заявки Цикл
		СтрокаТабличнойЧасти = Объект.ЗаявкиНаРасходованиеСредств.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ДанныеСтроки);
		СтрокаТабличнойЧасти.Состояние = Параметры.НовоеСостояние;
	КонецЦикла;
	
	НовоеСостояние = Параметры.НовоеСостояние;
	
	// Установим заголовок кнопки для изменения заявок
	Если НовоеСостояние = Перечисления.СостоянияОбъектов.Согласован Тогда
		ЗаголовокКнопки = НСтр("ru = 'Согласовать заявки'");
	ИначеЕсли НовоеСостояние = Перечисления.СостоянияОбъектов.Отклонен Тогда
		ЗаголовокКнопки = НСтр("ru = 'Отклонить заявки'");
	ИначеЕсли НовоеСостояние = Перечисления.СостоянияОбъектов.Отложен Тогда
		ЗаголовокКнопки = НСтр("ru = 'Отложить согласование'");
	КонецЕсли; 
	Элементы.ИзменитьСостояние.Заголовок = ЗаголовокКнопки;
	
	УстановитьВидимостьОтчетов();
	СформироватьОтчеты();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если СтатусЗаявокБылИзменен Тогда
		Оповестить("СтатусЗаявокБылИзменен");
	КонецЕсли; 
	
КонецПроцедуры


