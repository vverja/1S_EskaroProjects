
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Производит автозаполнение табличной части РКО
//
Процедура Автозаполнение() Экспорт
	
	Если ДокументыНачисления.Количество()= 0 Тогда
		#Если Клиент Тогда
		Предупреждение("Необходимо выбрать ведомости, по которойым будут формироваться платежки!");
		#КонецЕсли
		Возврат;
	КонецЕсли;
	АвтозаполнениеВедомость();
	
КонецПроцедуры	
	
// Производит автозаполнение табличной части РКО
//
Процедура АвтозаполнениеВедомость() Экспорт
		
	
	Запрос = Новый Запрос;    
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамВедомости", ДокументыНачисления.ВыгрузитьКолонку("Ведомость"));
	
	//	ВТНалоги
	Если Истина Тогда
		//	Описание:
		//      осноная часть запроса, тут получим даные для проведения
		// 
		ТекстЗапросаВТ = "
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Ссылка						КАК Ссылка,
		|		Основной.Ссылка.Организация			КАК Организация,
		|		Основной.Налог						КАК Налог,
		|		Основной.СтатьяНалоговойДекларации	КАК СтатьяНалоговойДекларации,
		|		СУММА( Основной.Результат )			КАК Результат
		|ПОМЕСТИТЬ ВТНалоги	
		|   ИЗ	Документ.ЗарплатаКВыплатеОрганизаций.Взносы КАК Основной
		|	ГДЕ Основной.Ссылка в (&парамВедомости)
		|       И Основной.Результат <> 0
		|	СГРУППИРОВАТЬ ПО
		|		Основной.Ссылка,
		|		Основной.Налог,
		|		Основной.СтатьяНалоговойдекларации
		|
		|   ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ 
		|		Основной.Ссылка						КАК Ссылка,
		|		Основной.Ссылка.Организация			КАК Организация,
		|		Основной.Налог						КАК Налог,
		|		Основной.СтатьяНалоговойдекларации	КАК СтатьяНалоговойдекларации,
		|		СУММА( Основной.Результат )		КАК Результат
		|   ИЗ	Документ.ЗарплатаКВыплатеОрганизаций.ВзносыФОТ КАК Основной
		|	ГДЕ Основной.Ссылка в (&парамВедомости)
		|       И Основной.Результат <> 0
		|	СГРУППИРОВАТЬ ПО
		|		Основной.Ссылка,
		|		Основной.Налог,
		|		Основной.СтатьяНалоговойдекларации
		|
		|   ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ 
		|		Основной.Ссылка						КАК Ссылка,
		|		Основной.Ссылка.Организация			КАК Организация,
		|		""""								КАК Налог,
		|		""""								КАК СтатьяНалоговойдекларации,
		|		СУММА( Основной.Налог )			КАК Результат
		|   ИЗ	Документ.ЗарплатаКВыплатеОрганизаций.НДФЛ КАК Основной
		|	ГДЕ Основной.Ссылка в (&парамВедомости)
		|       И Основной.Налог <> 0
		|	СГРУППИРОВАТЬ ПО
		|		Основной.Ссылка
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		Основной.Ссылка						КАК Ссылка,
		|		Основной.Ссылка.Организация			КАК Организация,
		|		&КоммунальныйНалог					КАК Налог,
		|		Основной.СтатьяВаловыхРасходов		КАК СтатьяНалоговойДекларации,
		|		Сумма(Основной.Сумма)				КАК Результат
		|	ИЗ	Документ.НачислениеКоммунальногоНалога.ОтражениеВУчете КАК Основной
		|	ГДЕ Основной.Ссылка в (&парамВедомости)
		|	СГРУППИРОВАТЬ ПО
		|		Основной.Ссылка,
		|		Основной.СтатьяВаловыхРасходов
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.УстановитьПараметр("КоммунальныйНалог",Справочники.Налоги.КоммунальныйНалог);
		Запрос.Выполнить();
		ТекстЗапросаВТНалоги = "ВТНалоги";
	КонецЕсли;
	
	ТекстЗапроса = "	       
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	|	ВЫБОР	КОГДА ПараметрыСтрогие.СчетУчета ЕСТЬ NULL
	|			ТОГДА Параметры.СчетУчета	
	|			ИНАЧЕ ПараметрыСтрогие.СчетУчета	
	|	КОНЕЦ	                                КАК СчетУчета,
	|	Начисления.Ссылка						КАК Ведомость,
	|	Начисления.Налог						КАК Налог,
	|	Начисления.СтатьяНалоговойДекларации	КАК СтатьяНалоговойДекларации,
	|	Начисления.Результат					КАК Сумма,
	|	ЕСТЬNULL(ПлатежноеПоручение.Ссылка, ЗНАЧЕНИЕ(Документ.ПлатежноеПоручениеИсходящее.ПустаяСсылка)) КАК Платежка,
	|	НЕ ЕСТЬNULL(ПлатежноеПоручение.Ссылка.Проведен, ЛОЖЬ) КАК Отметка,
	|	ВЫБОР	КОГДА ПараметрыСтрогие.СчетУчета ЕСТЬ NULL
	|			ТОГДА Параметры.Контрагент	
	|			ИНАЧЕ ПараметрыСтрогие.Контрагент	
	|	КОНЕЦ	                                КАК Контрагент,
	|	ВЫБОР	КОГДА ПараметрыСтрогие.СчетУчета ЕСТЬ NULL
	|			ТОГДА Параметры.СчетКонтрагента	
	|			ИНАЧЕ ПараметрыСтрогие.СчетКонтрагента	
	|	КОНЕЦ	                                КАК СчетКонтрагента
	|ИЗ ВТНалоги КАК Начисления
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ  (" + ПроведениеРасчетов.ПолучитьПараметрыПлатежекПоВзносамВФонды(Организация) + ") КАК ПараметрыСтрогие
	|	ПО Начисления.Организация = ПараметрыСтрогие.Организация
	|	И Начисления.СтатьяНалоговойДекларации = ПараметрыСтрогие.СтатьяНалоговойДекларации
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ (" + ПроведениеРасчетов.ПолучитьПараметрыПлатежекПоВзносамВФонды(Организация) + ") КАК Параметры
	|ПО		Начисления.Организация = Параметры.Организация
	|    И	(Параметры.СтатьяНалоговойдекларации = ЗНАЧЕНИЕ(Справочник.СтатьиНалоговыхдеклараций.ПустаяСсылка) И Начисления.Налог = """"
	|    ИЛИ	Начисления.СтатьяНалоговойдекларации.Родитель = Параметры.СтатьяНалоговойдекларации)
	|
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПлатежноеПоручениеИсходящее.ПеречислениеНалогов КАК ПлатежноеПоручение
 	|ПО		Начисления.Ссылка = ПлатежноеПоручение.Ведомость
 	|	И ВЫБОР	КОГДА ПараметрыСтрогие.СчетУчета ЕСТЬ NULL
 	|			ТОГДА Параметры.СчетУчета	
 	|			ИНАЧЕ ПараметрыСтрогие.СчетУчета	
 	|	КОНЕЦ	                                = ПлатежноеПоручение.Ссылка.СчетУчетаРасчетовСКонтрагентом
 	|	И	(ПлатежноеПоручение.СубконтоДт1 = ЗНАЧЕНИЕ(Справочник.налоги.ПустаяСсылка) И Начисления.Налог = """"
 	|	ИЛИ	Начисления.Налог = ПлатежноеПоручение.СубконтоДт1
 	|	И	Начисления.СтатьяНалоговойДекларации = ПлатежноеПоручение.СубконтоДт2)
 	|
	|
	|ИТОГИ СУММА(Сумма) ПО
	|	СчетУчета, Контрагент, СчетКонтрагента
	|
	|";
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Организация", Организация);


	ВыборкаПоСчетуУчета =  Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПоСчетуУчета.Следующий() Цикл
		ВыборкаПоКонтрагент =  ВыборкаПоСчетуУчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоКонтрагент.Следующий() Цикл
			ВыборкаПоСчетКонтрагента = ВыборкаПоКонтрагент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаПоСчетКонтрагента.Следующий() Цикл
				
				СтрПлатежки = Платежки.Добавить();
				СтрПлатежки.СчетУчета 		= ВыборкаПоСчетКонтрагента.СчетУчета;
				СтрПлатежки.Контрагент		= ВыборкаПоСчетКонтрагента.Контрагент;
				СтрПлатежки.СчетКонтрагента = ВыборкаПоСчетКонтрагента.СчетКонтрагента;
				ИтогСум = 0;
				
				ВыборкаПоНалогам =  ВыборкаПоСчетКонтрагента.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока ВыборкаПоНалогам.Следующий() Цикл
					СтрПлатежки.Платежка		= ВыборкаПоНалогам.Платежка;
					СтрПлатежки.Отметка			= ВыборкаПоНалогам.Отметка;
					
					СтрНалоги = Налоги.Добавить();
					СтрНалоги.СчетУчета 				= ВыборкаПоНалогам.СчетУчета;
					Сум     		= ВыборкаПоНалогам.Сумма;
					Сум = Окр(Сум,2) + ?(Сум-Окр(Сум,2)>0, 0.01, 0); // "случайная" копейка
					ИтогСум = ИтогСум + Сум;
					СтрНалоги.Сумма     				= Сум;
					СтрНалоги.Налог						= ВыборкаПоНалогам.Налог;
					СтрНалоги.СтатьяНалоговойДекларации	= ВыборкаПоНалогам.СтатьяНалоговойДекларации;
					СтрНалоги.Ведомость					= ВыборкаПоНалогам.Ведомость;
					СтрНалоги.Контрагент		= ВыборкаПоСчетКонтрагента.Контрагент;
					СтрНалоги.СчетКонтрагента = ВыборкаПоСчетКонтрагента.СчетКонтрагента;
					
					СтрНалоги.Платежка					= ВыборкаПоНалогам.Платежка;
				КонецЦикла;
				СтрПлатежки.Сумма  = ИтогСум;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

// Формирует номер платежного поручения в пределах расчетного счета
//
Функция УстановитьНомерПоручения(ППИ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачалаГода", НачалоГода(ППИ.Дата));
	Запрос.УстановитьПараметр("ДатаКонцаГода", КонецГода(ППИ.Дата));
	Запрос.УстановитьПараметр("Организация", ППИ.Организация);
	Запрос.УстановитьПараметр("СчетОрганизации", ППИ.СчетОрганизации);
	

	Запрос.Текст =
	"ВЫБРАТЬ
	|	НомерПоручения КАК НомерПоручения
	|ИЗ
	|	Документ.ПлатежноеПоручениеИсходящее КАК ПлатежноеПоручение
	|
	|ГДЕ
	|	ПлатежноеПоручение.Организация = &Организация
	|	И ПлатежноеПоручение.СчетОрганизации = &СчетОрганизации
	|	И ПлатежноеПоручение.Дата >= &ДатаНачалаГода
	|	И ПлатежноеПоручение.Дата <= &ДатаКонцаГода";

	СписокПлатежек = Запрос.Выполнить().Выбрать();
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	 
	ТаблицаЗначений.Колонки.Добавить("Номер"); 
	ТаблицаЗначений.Колонки.Добавить("Длина"); 

	Пока СписокПлатежек.Следующий() Цикл
		НоваяСтрока = ТаблицаЗначений.Добавить(); 
		НоваяСтрока.Номер = СписокПлатежек.НомерПоручения; 
		НоваяСтрока.Длина = СтрДлина(СписокПлатежек.НомерПоручения); 
	КонецЦикла;
	
	ТаблицаЗначений.Сортировать("Длина Убыв, Номер Убыв");
	
	Попытка
		НомерПорученияЧисло = Число(ТаблицаЗначений[0].Номер) + 1;
		НомерПоручения = Формат(НомерПорученияЧисло, "ЧГ=0");
	Исключение
		НомерПоручения = 1;
	КонецПопытки;
	
	Возврат НомерПоручения;
	
КонецФункции
