Перем мСоответствиеНазначений Экспорт;

Перем мСтруктураДляОтбораПоКатегориям;

#Если Клиент Тогда

Процедура ЗаполнитьНачальныеНастройки(НачальноеЗаполнение = Истина) Экспорт
	
	// структура представлений полей
	СтруктураПредставлениеПолей = Новый Структура();
	СтруктураФорматаПолей = Новый Структура();
	
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда
		
		Если ВыбиратьСотрудника Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Сотрудник,
			|	РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,		
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости,
			|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|	РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,		
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,		
			|	РаботникиОрганизации.Должность КАК Должность,		
			|	ДатаПриемаСотрудника.ДатаПриема КАК ДатаПриема,
			|	РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,		
			|	РаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение,	
			|	СпособыВыплаты.СпособВыплаты	КАК СпособВыплаты,
			|	СпособыВыплаты.Банк 			КАК Банк,
			|	СпособыВыплаты.НомерКарточки	КАК НомерКарточки,
			|	&Выплачено						КАК ВыплаченностьЗарплаты

			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
			|			
			|	ЛЕВОЕ СОЕДИНЕНИЕ ( 
			|		ВЫБРАТЬ		
			|			Сотрудник,		
			|			МИНИМУМ(Период) КАК ДатаПриема		
			|		ИЗ РегистрСведений.РаботникиОрганизаций  
			|		СГРУППИРОВАТЬ ПО		
			|			Сотрудник		
			|			) КАК ДатаПриемаСотрудника
			|		ПО РаботникиОрганизации.Сотрудник = ДатаПриемаСотрудника.Сотрудник
			|			
			|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ДатыПоследнихДвиженийРаботников.Период КАК Период,
			|			ДатыПоследнихДвиженийРаботников.Сотрудник КАК Сотрудник,
			|			ДанныеПоРаботникуПриНазначении.Регистратор КАК Приказ
			|		ИЗ
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(Работники.Период) КАК Период,
			|				ТЧРаботникиОрганизации.Сотрудник КАК Сотрудник
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК ТЧРаботникиОрганизации
			|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
			|					ПО Работники.Период <= ТЧРаботникиОрганизации.Период
			|						И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
			|						И ТЧРаботникиОрганизации.Сотрудник = Работники.Сотрудник
			|			{ГДЕ
			|				ТЧРаботникиОрганизации.Должность КАК Должность,
			|				ТЧРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|				ТЧРаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|				ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|				ТЧРаботникиОрганизации.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
			|				ТЧРаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение}
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ТЧРаботникиОрганизации.Сотрудник) КАК ДатыПоследнихДвиженийРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
			|				ПО ДатыПоследнихДвиженийРаботников.Период = ДанныеПоРаботникуПриНазначении.Период
			|					И ДатыПоследнихДвиженийРаботников.Сотрудник = ДанныеПоРаботникуПриНазначении.Сотрудник) КАК ПриказыОПриеме
			|		ПО РаботникиОрганизации.Сотрудник = ПриказыОПриеме.Сотрудник}
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыВыплатыЗПРаботников.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК СпособыВыплаты
			|ПО	СпособыВыплаты.Сотрудник = РаботникиОрганизации.Сотрудник
			|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЛьготыРаботниковОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК ЛьготыРаботников
			|ПО	ЛьготыРаботников.Сотрудник = РаботникиОрганизации.Сотрудник
			|И	ЛьготыРаботников.Актуальность

			|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
			|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
			|//УСЛОВИЕ
			|{ГДЕ
			|	РаботникиОрганизации.Сотрудник КАК Работник,
			|	РаботникиОрганизации.Сотрудник.Родитель КАК Группа,
			|	РаботникиОрганизации.Должность.* КАК Должность,
			|	РаботникиОрганизации.ГрафикРаботы.* КАК ГрафикРаботы,
			|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	ПриказыОПриеме.Период КАК ДатаПриема,
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости,
			|	РаботникиОрганизации.ПодразделениеОрганизации.* КАК Подразделение,
			|	РаботникиОрганизации.ОбособленноеПодразделение.* КАК ОбособленноеПодразделение,
			|	ЛьготыРаботников.Льгота	КАК ЛьготаНДФЛ
			|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|УПОРЯДОЧИТЬ ПО
			|	РаботникиОрганизации.Сотрудник.Наименование";
			
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,		
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости
			|ИЗ
			|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК РаботникиОрганизации
			|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ДатыПоследнихДвиженийРаботников.Период КАК Период,
			|			ДатыПоследнихДвиженийРаботников.Организация КАК Организация,
			|			ДатыПоследнихДвиженийРаботников.Физлицо КАК Физлицо,
			|			ДанныеПоРаботникуПриНазначении.Регистратор КАК Приказ
			|		ИЗ
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(Работники.Период) КАК Период,
			|				ТЧРаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|				ТЧРаботникиОрганизации.Организация КАК Организация
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Организация = &ГоловнаяОрганизация) КАК ТЧРаботникиОрганизации
			|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
			|					ПО Работники.Период <= ТЧРаботникиОрганизации.Период
			|						И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
			|						И ТЧРаботникиОрганизации.Сотрудник = Работники.Сотрудник
			|			{ГДЕ
			|				ТЧРаботникиОрганизации.Должность КАК Должность,
			|				ТЧРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|				ТЧРаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|				ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|				ТЧРаботникиОрганизации.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
			|				ТЧРаботникиОрганизации.ПодразделениеОрганизации КАК Подразделение}
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ТЧРаботникиОрганизации.Сотрудник.Физлицо,
			|				ТЧРаботникиОрганизации.Организация) КАК ДатыПоследнихДвиженийРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК ДанныеПоРаботникуПриНазначении
			|				ПО ДатыПоследнихДвиженийРаботников.Период = ДанныеПоРаботникуПриНазначении.Период
			|					И ДатыПоследнихДвиженийРаботников.Физлицо = ДанныеПоРаботникуПриНазначении.Сотрудник.Физлицо
			|					И ДатыПоследнихДвиженийРаботников.Организация = ДанныеПоРаботникуПриНазначении.Сотрудник.Организация) КАК ПриказыОПриеме
			|		ПО РаботникиОрганизации.Сотрудник.Физлицо = ПриказыОПриеме.Физлицо
			|			И РаботникиОрганизации.Сотрудник.Организация = ПриказыОПриеме.Организация}
			|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
			|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
			|//УСЛОВИЕ
			|{ГДЕ
			|	РаботникиОрганизации.Сотрудник КАК Работник,
			|	РаботникиОрганизации.Сотрудник.Родитель КАК Группа,
			|	РаботникиОрганизации.Должность.* КАК Должность,
			|	РаботникиОрганизации.ГрафикРаботы.* КАК ГрафикРаботы,
			|	РаботникиОрганизации.Сотрудник.Код КАК ТабельныйНомер,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	ПриказыОПриеме.Период КАК ДатаПриема,
			|	РаботникиОрганизации.Сотрудник.ВидЗанятости КАК ВидЗанятости,
			|	РаботникиОрганизации.ПодразделениеОрганизации.* КАК Подразделение,
			|	РаботникиОрганизации.ОбособленноеПодразделение.* КАК ОбособленноеПодразделение
			|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|УПОРЯДОЧИТЬ ПО
			|	РаботникиОрганизации.Сотрудник.Физлицо.Наименование";
		КонецЕсли;
	
	Иначе
		Если ВыбиратьСотрудника Тогда
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	Сотрудники.Сотрудник КАК Сотрудник,
			|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния,
			|	РаботникиОрганизации.ФизЛицо КАК Физлицо,
			|	РаботникиОрганизации.ГрафикРаботы,
			|	РаботникиОрганизации.ЗанимаемыхСтавок,
			|	РаботникиОрганизации.Должность,
			////|	ДатаПриемаСотрудника.ДатаПриема КАК ДатаПриема,
			////|	РаботникиОрганизации.Подразделение КАК ПодразделениеОрганизации,
			|	РаботникиОрганизации.Подразделение КАК Подразделение
			|ИЗ
			|	РегистрСведений.Работники.СрезПоследних(&ДатаАктуальности, ) КАК РаботникиОрганизации
			|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ДатыПоследнихДвиженийРаботников.Период КАК Период,
			|			ДатыПоследнихДвиженийРаботников.Физлицо КАК Физлицо,
			|			ДанныеПоРаботникуПриНазначении.Регистратор КАК Приказ
			|		ИЗ
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(Работники.Период) КАК Период,
			|				ТЧРаботникиОрганизации.ФизЛицо КАК Физлицо
			|			ИЗ
			|				РегистрСведений.Работники.СрезПоследних(&ДатаАктуальности, ) КАК ТЧРаботникиОрганизации
			|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
			|					ПО ТЧРаботникиОрганизации.ФизЛицо = Работники.ФизЛицо
			|						И Работники.Период <= ТЧРаботникиОрганизации.Период
			|						И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
			|			{ГДЕ
			|				ТЧРаботникиОрганизации.Должность КАК Должность,
			|				ТЧРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|				ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|				ТЧРаботникиОрганизации.Подразделение КАК Подразделение}
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ТЧРаботникиОрганизации.ФизЛицо) КАК ДатыПоследнихДвиженийРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК ДанныеПоРаботникуПриНазначении
			|				ПО ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период
			|					И ДатыПоследнихДвиженийРаботников.Физлицо = ДанныеПоРаботникуПриНазначении.ФизЛицо) КАК ПриказыОПриеме
			|		ПО ПриказыОПриеме.Физлицо = РаботникиОрганизации.ФизЛицо}
			|			
			|	
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			СписокСотрудников.Сотрудник КАК Сотрудник,
			|			СписокСотрудников.Физлицо КАК Физлицо
			|		ИЗ
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
			|				РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
			|				1 КАК Приоритет
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|					&ДатаАктуальности,
			|					Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
			|			ГДЕ
			|				РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|			
			|			СГРУППИРОВАТЬ ПО
			|				РаботникиОсновноеМесто.Сотрудник.Физлицо
			|			
			|			ОБЪЕДИНИТЬ
			|			
			|			ВЫБРАТЬ
			|				МАКСИМУМ(РаботникиСовместительство.Сотрудник),
			|				РаботникиСовместительство.Сотрудник.Физлицо,
			|				2
			|			ИЗ
			|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|					&ДатаАктуальности,
			|					Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
			|			ГДЕ
			|				РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|			
			|			СГРУППИРОВАТЬ ПО
			|				РаботникиСовместительство.Сотрудник.Физлицо
			|			
			|			ОБЪЕДИНИТЬ
			|			
			|			ВЫБРАТЬ
			|				МАКСИМУМ(СотрудникиДУ.Ссылка),
			|				СотрудникиДУ.Физлицо,
			|				ВЫБОР
			|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
			|						ТОГДА 3
			|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|						ТОГДА 4
			|					ИНАЧЕ 5
			|				КОНЕЦ
			|			ИЗ
			|				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
			|			
			|			СГРУППИРОВАТЬ ПО
			|				СотрудникиДУ.Физлицо,
			|				ВЫБОР
			|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
			|						ТОГДА 3
			|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|						ТОГДА 4
			|					ИНАЧЕ 5
			|				КОНЕЦ) КАК СписокСотрудников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|					СписокФизическихЛиц.Физлицо КАК Физлицо,
			|					МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
			|				ИЗ
			|					(ВЫБРАТЬ
			|						РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
			|						1 КАК Приоритет
			|					ИЗ
			|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|							&ДатаАктуальности,
			|							Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|								И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
			|					ГДЕ
			|						РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|					
			|					ОБЪЕДИНИТЬ
			|					
			|					ВЫБРАТЬ
			|						РаботникиСовместительство.Сотрудник.Физлицо,
			|						2
			|					ИЗ
			|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(
			|							&ДатаАктуальности,
			|							Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|								И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
			|					ГДЕ
			|						РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
			|					
			|					ОБЪЕДИНИТЬ
			|					
			|					ВЫБРАТЬ
			|						СотрудникиДУ.Физлицо,
			|						ВЫБОР
			|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
			|								ТОГДА 3
			|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
			|								ТОГДА 4
			|							ИНАЧЕ 5
			|						КОНЕЦ
			|					ИЗ
			|						Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
			|				
			|				СГРУППИРОВАТЬ ПО
			|					СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
			|				ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
			|					И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
			|		ПО РаботникиОрганизации.ФизЛицо = Сотрудники.Физлицо
			|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
			|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
			|			
			////|	ЛЕВОЕ СОЕДИНЕНИЕ ( 
			////|		ВЫБРАТЬ		
			////|			Сотрудник,		
			////|			МИНИМУМ(Период) КАК ДатаПриема		
			////|		ИЗ РегистрСведений.РаботникиОрганизаций 
			////|		СГРУППИРОВАТЬ ПО		
			////|			Сотрудник		
			////|			) КАК ДатаПриемаСотрудника
			////|		ПО ДатаПриемаСотрудника.Сотрудник = Сотрудники.Сотрудник
			////|			
			|//УСЛОВИЕ
			|{ГДЕ
			|	Сотрудники.Сотрудник КАК Работник,
			|	Сотрудники.Сотрудник.Родитель КАК Группа,
			|	РаботникиОрганизации.Должность.* КАК Должность,
			|	РаботникиОрганизации.ГрафикРаботы.* КАК ГрафикРаботы,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	ПриказыОПриеме.Период КАК ДатаПриема,
			|	РаботникиОрганизации.Подразделение КАК Подразделение
			|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|УПОРЯДОЧИТЬ ПО
			|	Сотрудники.Сотрудник.Наименование";
			
		Иначе
			ТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
			|	РаботникиОрганизации.Физлицо КАК Физлицо,
			|	РаботникиОрганизации.ПричинаИзмененияСостояния КАК ПричинаИзмененияСостояния
			|
			|ИЗ
			|	РегистрСведений.Работники.СрезПоследних(&ДатаАктуальности, ) КАК РаботникиОрганизации
			|		{ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ДатыПоследнихДвиженийРаботников.Период,
			|			ДатыПоследнихДвиженийРаботников.Физлицо,
			|			ДанныеПоРаботникуПриНазначении.Регистратор КАК Приказ
			|		ИЗ
			|			(ВЫБРАТЬ
			|				МАКСИМУМ(Работники.Период) КАК Период,
			|				ТЧРаботникиОрганизации.Физлицо КАК Физлицо
			|			ИЗ
			|				РегистрСведений.Работники.СрезПоследних(&ДатаАктуальности) КАК ТЧРаботникиОрганизации
			|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
			|					ПО ТЧРаботникиОрганизации.Физлицо = Работники.Физлицо
			|						И Работники.Период <= ТЧРаботникиОрганизации.Период
			|						И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу))
			|			{ГДЕ
			|				ТЧРаботникиОрганизации.Должность КАК Должность,
			|				ТЧРаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|				ТЧРаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|				ТЧРаботникиОрганизации.Подразделение КАК Подразделение}
			|			
			|			СГРУППИРОВАТЬ ПО
			|				ТЧРаботникиОрганизации.Физлицо) КАК ДатыПоследнихДвиженийРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК ДанныеПоРаботникуПриНазначении
			|				ПО ДанныеПоРаботникуПриНазначении.Период = ДатыПоследнихДвиженийРаботников.Период
			|					И ДатыПоследнихДвиженийРаботников.Физлицо = ДанныеПоРаботникуПриНазначении.Физлицо) КАК ПриказыОПриеме
			|		ПО ПриказыОПриеме.Физлицо = РаботникиОрганизации.Физлицо}
			|		//ДАННЫЕ О ФИЗЛИЦЕ: СОЕДИНЕНИЯ
			|		//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ
			|//УСЛОВИЕ
			|{ГДЕ
			|	РаботникиОрганизации.Физлицо КАК Работник,
			|	РаботникиОрганизации.Физлицо.Родитель КАК Группа,
			|	РаботникиОрганизации.Должность.* КАК Должность,
			|	РаботникиОрганизации.ГрафикРаботы.* КАК ГрафикРаботы,
			|	РаботникиОрганизации.ЗанимаемыхСтавок КАК ЗанимаемыхСтавок,
			|	ПриказыОПриеме.Период КАК ДатаПриема,
			|	РаботникиОрганизации.Подразделение КАК Подразделение
			|	//ДАННЫЕ О ФИЗЛИЦЕ: ПОЛЯ
			|	//СВОЙСТВА
			|	//КАТЕГОРИИ
			|}
			|
			|УПОРЯДОЧИТЬ ПО
			|	РаботникиОрганизации.Физлицо.Наименование";
			
		КонецЕсли;
	
	КонецЕсли;
	
	Если Не ВключатьУволенных Тогда
		СтрокаУсловия =
		"ГДЕ
		|	(РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение))
		//Смартис Лиманчук начало 16.05.2012
		|   И РаботникиОрганизации.ЗанимаемыхСтавок > 0
		//Смартис Лиманчук окончание 16.05.2012
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ", СтрокаУсловия);
		
	ИначеЕсли ЗначениеЗаполнено(ДатаУволенных) Тогда
		СтрокаУсловия =
		"ГДЕ
		|	((РаботникиОрганизации.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)) ИЛИ (РаботникиОрганизации.Период > &ДатаУволенных))
		//Смартис Лиманчук начало 16.05.2012
		|   И РаботникиОрганизации.ЗанимаемыхСтавок > 0
		//Смартис Лиманчук окончание 16.05.2012
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ", СтрокаУсловия);
	//Смартис Лиманчук начало 16.05.2012	
	Иначе
		СтрокаУсловия =
		"ГДЕ
		|   РаботникиОрганизации.ЗанимаемыхСтавок > 0
		|";
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//УСЛОВИЕ", СтрокаУсловия);
	//Смартис Лиманчук окончание 16.05.2012
	КонецЕсли;
	
	// Преобразуем текст запроса для получения полной информации о физлице
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда
		УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "РаботникиОрганизации", "Сотрудник.Физлицо");
	Иначе
		УправлениеОтчетами.ДобавитьВТекстПостроителяДанныеОФизлице(ТекстЗапроса, СтруктураПредставлениеПолей, СтруктураФорматаПолей, "РаботникиОрганизации", "Физлицо");
	КонецЕсли;
	
	// Для использования свойств и категорий в текст запроса добавляются дополнительные поля

	ТаблицаПолей = Новый ТаблицаЗначений;
	ТаблицаПолей.Колонки.Добавить("ПутьКДанным");  // описание поля запроса поля, для которого добавляются свойства и категории. Используется в условии соединения с регистром сведений, хранящим значения свойств или категорий
	ТаблицаПолей.Колонки.Добавить("Представление");// представление поля, для которого добавляются свойства и категории. 
	ТаблицаПолей.Колонки.Добавить("Назначение");   // назначение свойств/категорий объектов для данного поля
	ТаблицаПолей.Колонки.Добавить("ТипЗначения");  // тип значения поля, для которого добавляются свойства и категории. Используется, если не установлено назначение
	ТаблицаПолей.Колонки.Добавить("НетКатегорий"); // признак НЕиспользования категорий для объекта
	
	НоваяСтрока = ТаблицаПолей.Добавить();
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда
		НоваяСтрока.ПутьКДанным = "РаботникиОрганизации.Сотрудник.Физлицо";
	Иначе
		НоваяСтрока.ПутьКДанным = "РаботникиОрганизации.Физлицо";
	КонецЕсли;
	НоваяСтрока.Представление = "Работник";
	НоваяСтрока.Назначение = ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ФизическиеЛица;
	
	// Добавим строки запроса, необходимые для использования свойств и категорий
	мСоответствиеНазначений = Новый Соответствие;
	ТекстПоляКатегорий = "";
	ТекстПоляСвойств = "";
	УправлениеОтчетами.ДобавитьВТекстСвойстваИКатегории(ТаблицаПолей, ТекстЗапроса, СтруктураПредставлениеПолей, мСоответствиеНазначений, ПостроительОтчета.Параметры,,ТекстПоляКатегорий,ТекстПоляСвойств,,,,"//СОЕДИНЕНИЯ СВОЙСТВ И КАТЕГОРИЙ",, мСтруктураДляОтбораПоКатегориям);
	
	ПостроительОтчета.Текст = ТекстЗапроса;
	ПостроительОтчета.Параметры.Вставить("Выплачено", Перечисления.ВыплаченностьЗарплаты.Выплачено);
	
	УправлениеОтчетами.УстановитьТипыЗначенийСвойствИКатегорийДляОтбора(ПостроительОтчета, ТекстПоляКатегорий, ТекстПоляСвойств, мСоответствиеНазначений, СтруктураПредставлениеПолей);
	
	//представление полей запроса
	СтруктураПредставлениеПолей.Вставить("Группа",						"Группа сотрудников");
	СтруктураПредставлениеПолей.Вставить("ОбособленноеПодразделение",	"Организация");
	Если ИмяРегистра = "РаботникиОрганизаций" Тогда 
		СтруктураПредставлениеПолей.Вставить("ВидЗанятости",			"Вид занятости");
	КонецЕсли;
	СтруктураПредставлениеПолей.Вставить("ДатаПриема",					"Дата приема");
	СтруктураПредставлениеПолей.Вставить("ГрафикРаботы",				"График работы");
	СтруктураПредставлениеПолей.Вставить("ЗанимаемыхСтавок",			"Занимаемых ставок");
	
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	Если НачальноеЗаполнение Тогда
		// отборы по умолчанию
		МассивОтбора = Новый Массив;
		Если ИмяРегистра = "РаботникиОрганизаций" Тогда
			МассивОтбора.Добавить("ОбособленноеПодразделение");
		КонецЕсли;
		МассивОтбора.Добавить("Подразделение");
		МассивОтбора.Добавить("Должность");
		МассивОтбора.Добавить("Работник");
		УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
		ПостроительОтчета.Отбор.Работник.ВидСравнения = ВидСравнения.ВСписке;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСписокРаботников() Экспорт
	
	Если НЕ УправлениеОтчетами.ЗадатьПараметрыОтбораПоКатегориям(ПостроительОтчета, мСтруктураДляОтбораПоКатегориям) Тогда
		//повторные отборы по категориям
		Возврат Новый Структура("Команда,Данные,Реквизиты","ЗаполнитьСписокРаботников");
	КонецЕсли;
	
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности", ДатаАктуальности);
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Год", Год(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_Месяц", Месяц(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаАктуальности_День", День(ДатаАктуальности));
	ПостроительОтчета.Параметры.Вставить("ДатаУволенных", ДатаУволенных);
	
	Если ИсполнятьЗапрос Тогда
		ПостроительОтчета.Выполнить();
		РезультатОтбора = ПостроительОтчета.Результат;
		Если РезультатОтбора.Пустой() Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не обнаружено работников, удовлетворяющих указанным условиям!");
		КонецЕсли;
		
		Возврат Новый Структура("Команда,Данные,Реквизиты","ЗаполнитьСписокРаботников",РезультатОтбора,Реквизиты)
	Иначе
		ПостроительЗапроса = Новый ПостроительЗапроса(ПостроительОтчета.Текст);
		Для каждого Параметр Из ПостроительОтчета.Параметры Цикл
			ПостроительЗапроса.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
		КонецЦикла; 
		Для каждого ЭлементОтбора Из ПостроительОтчета.Отбор Цикл
			Если ЭлементОтбора.Использование и ЗначениеЗаполнено(ЭлементОтбора.ПутьКДанным) Тогда
				НовыйОтбор = ПостроительЗапроса.Отбор.Добавить(ЭлементОтбора.ПутьКДанным,ЭлементОтбора.Имя,ЭлементОтбора.Представление);
				НовыйОтбор.ВидСравнения = ЭлементОтбора.ВидСравнения;
				НовыйОтбор.Значение = ЭлементОтбора.Значение;
				НовыйОтбор.ЗначениеПо = ЭлементОтбора.ЗначениеПо;
				НовыйОтбор.ЗначениеС = ЭлементОтбора.ЗначениеС;
				НовыйОтбор.Использование = Истина;
			КонецЕсли;
		КонецЦикла; 
		Возврат Новый Структура("Команда,ПостроительЗапроса,Реквизиты","ЗаполнитьПостроительЗапроса",ПостроительЗапроса,Реквизиты)
	КонецЕсли;
	
КонецФункции // ПолучитьСписокРаботников()

#КонецЕсли
