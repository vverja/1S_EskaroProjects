Перем КаталогИконок        Экспорт;
Перем ОтборКонтрагент      Экспорт;
Перем МаркерыТреков        Экспорт;
Перем Иконки               Экспорт; 
Перем Путь 				   Экспорт;
Перем Имена                Экспорт;
Перем МаркерыОрганизаций   Экспорт;
Перем МаркерыКонтрагентов  Экспорт;
Перем МаркерыТорговыхТочек Экспорт; 
Перем МаркерыДокументов    Экспорт;
                
Процедура СохранитьИконкиПоУмолчанию() Экспорт 
	
	кпкАгентПлюс.ПроверитьСуществованиеКаталога(КаталогИконок, Ложь, Истина);
		
	Иконка_Нач_марш             = ПолучитьМакет("кпкИконкаНачалоМаршрута");
	Иконка_Кон_марш             = ПолучитьМакет("кпкИконкаКонецМаршрута");
	Иконка_Точ_марш             = ПолучитьМакет("кпкИконкаТочкаМаршрута");
	Иконка_Орг_По_Умол          = ПолучитьМакет("кпкИконкаОрганизацийПоУмолчанию");
	Иконка_Контр_По_Умол        = ПолучитьМакет("кпкИконкаКонтрагентовПоУмолчанию");
	Иконка_Торг_Точ_По_Умол     = ПолучитьМакет("кпкИконкаТорговаяТочка");
	Иконка_ДокументовОбщая      = ПолучитьМакет("кпкИконкаДокументовОбщая");
	Иконка_ДокументовНесколько  = ПолучитьМакет("кпкИконкаДокументовНесколько");
	Иконка_ПКО                  = ПолучитьМакет("кпкИконкаПКО");
	Иконка_ВозвТовОтПокуп       = ПолучитьМакет("кпкИконкаВозвратТоваровОтПокупателя");
	Иконка_ЗаказПокупателя      = ПолучитьМакет("кпкИконкаЗаказПокупателя");
	Иконка_ИнвентарТовНаСкладе  = ПолучитьМакет("кпкИконкаИнвентаризацияТоваровНаСкладе");
	Иконка_ЗаданиеАгента        = ПолучитьМакет("кпкИконкаЗадание");
	Иконка_Мерчендайзинг        = ПолучитьМакет("кпкИконкаМерчендайзинг");
	Иконка_Посещение            = ПолучитьМакет("кпкИконкаПосещение");
	Иконка_ПеремещениеТовров    = ПолучитьМакет("кпкИконкаПеремещениеТоваров");
	Иконка_ПостТовУслуг         = ПолучитьМакет("кпкИконкаПоступлениеТоваровУслуг");
	Иконка_РКО                  = ПолучитьМакет("кпкИконкаРКО");
	Иконка_РеалТовУслуг         = ПолучитьМакет("кпкИконкаРеализацияТоваровУслугИОтчет");
		
	
	Если Иконка_Нач_марш <> Неопределено  Тогда
		Иконка_Нач_марш.Записать(КаталогИконок + "Иконка_начала_маршрута" + ".png" );
	КонецЕсли;

	Если Иконка_Кон_марш <> Неопределено  Тогда
		Иконка_Кон_марш.Записать(КаталогИконок + "Иконка_конца_маршрута" + ".png");
	КонецЕсли;

	Если Иконка_Точ_марш <> Неопределено  Тогда
		Иконка_Точ_марш.Записать(КаталогИконок + "Иконка_точки_маршрута" + ".png");
	КонецЕсли;	
	
	Если Иконка_Орг_По_Умол <> Неопределено  Тогда
		Иконка_Орг_По_Умол.Записать(КаталогИконок + "Иконка_организации_по_умолчанию" + ".png");
	КонецЕсли;
	
	Если Иконка_Контр_По_Умол <> Неопределено  Тогда
		Иконка_Контр_По_Умол.Записать(КаталогИконок + "Иконка_контрагента_по_умолчанию" + ".png");
	КонецЕсли;
	
	Если Иконка_Торг_Точ_По_Умол <> Неопределено  Тогда
		Иконка_Торг_Точ_По_Умол.Записать(КаталогИконок + "Иконка_торговой_точки_по_умолчанию" + ".png");
	КонецЕсли;
	
	Если Иконка_ДокументовОбщая <> Неопределено  Тогда
		Иконка_ДокументовОбщая.Записать(КаталогИконок + "Иконка_документов_общая" + ".png");
	КонецЕсли;
	
	Если Иконка_ДокументовНесколько <> Неопределено  Тогда
		Иконка_ДокументовНесколько.Записать(КаталогИконок + "Иконка_нескольких_документов" + ".png");
	КонецЕсли;
	
	Если Иконка_ПКО <> Неопределено  Тогда
		Иконка_ПКО.Записать(КаталогИконок + Имена["Икон_Док_ПКО"] + ".png");
	КонецЕсли;
	
	Если Иконка_ВозвТовОтПокуп <> Неопределено  Тогда
		Иконка_ВозвТовОтПокуп.Записать(КаталогИконок + Имена["Икон_Док_Возврат"] + ".png");
	КонецЕсли;
	
    Если Иконка_ЗаказПокупателя <> Неопределено  Тогда
		Иконка_ЗаказПокупателя.Записать(КаталогИконок + Имена["Икон_Док_Заказ"] + ".png");
	КонецЕсли;
	
    Если Иконка_ИнвентарТовНаСкладе <> Неопределено  Тогда
		Иконка_ИнвентарТовНаСкладе.Записать(КаталогИконок + Имена["Икон_Док_Инвентар"] + ".png");
	КонецЕсли;
	
    Если Иконка_ЗаданиеАгента <> Неопределено  Тогда
		Иконка_ЗаданиеАгента.Записать(КаталогИконок + Имена["Икон_Док_Задание"] + ".png");
	КонецЕсли;               	
	
    Если Иконка_Мерчендайзинг <> Неопределено  Тогда
		Иконка_Мерчендайзинг.Записать(КаталогИконок + Имена["Икон_Док_Мерч"] + ".png");
	КонецЕсли;
	
    Если Иконка_Посещение <> Неопределено  Тогда
		Иконка_Посещение.Записать(КаталогИконок + Имена["Икон_Док_Посещение"] + ".png");
	КонецЕсли;
	
    Если Иконка_ПеремещениеТовров <> Неопределено  Тогда
		Иконка_ПеремещениеТовров.Записать(КаталогИконок + Имена["Икон_Док_Перемещение"] + ".png");
	КонецЕсли;
	
    Если Иконка_ПостТовУслуг <> Неопределено  Тогда
		Иконка_ПостТовУслуг.Записать(КаталогИконок + Имена["Икон_Док_Поступление"] + ".png");
	КонецЕсли;
	
    Если Иконка_РКО <> Неопределено  Тогда
		Иконка_РКО.Записать(КаталогИконок + Имена["Икон_Док_РКО"] + ".png");
	КонецЕсли;
	
    Если Иконка_РеалТовУслуг <> Неопределено  Тогда
		Иконка_РеалТовУслуг.Записать(КаталогИконок + Имена["Икон_Док_Реализ"] + ".png");
	КонецЕсли;

КонецПроцедуры //СохранитьИконкиПоУмолчанию

Имена = Новый Соответствие;
Имена.Вставить("ПВ_Организация", 		НСтр("ru='Организация'"));
Имена.Вставить("ПВ_Контрагент", 		НСтр("ru='Контрагент'"));
Имена.Вставить("ПВ_ТорговаяТочка",		НСтр("ru='Торговая точка'"));
Имена.Вставить("Икон_Док_ПКО", 			НСтр("ru='Иконка_док_приходныйКассовыйОрдер'"));
Имена.Вставить("Икон_Док_Возврат",		НСтр("ru='Иконка_док_возвратТоваровОтПокупателя'"));
Имена.Вставить("Икон_Док_Заказ", 		НСтр("ru='Иконка_док_заказПокупателя'"));
Имена.Вставить("Икон_Док_Инвентар", 	НСтр("ru='Иконка_док_инвентаризацияТоваровНаСкладе'"));
Имена.Вставить("Икон_Док_Задание", 		НСтр("ru='Иконка_док_заданиеАгента'"));
Имена.Вставить("Икон_Док_Мерч", 		НСтр("ru='Иконка_док_мерчендайзинг'"));
Имена.Вставить("Икон_Док_Посещение", 	НСтр("ru='Иконка_док_посещение'"));
Имена.Вставить("Икон_Док_Перемещение", 	НСтр("ru='Иконка_док_перемещениеТоваров'"));
Имена.Вставить("Икон_Док_Поступление",	НСтр("ru='Иконка_док_поступлениеТоваровУслуг'"));
Имена.Вставить("Икон_Док_РКО", 			НСтр("ru='Иконка_дк_расходныйКассовыйОрдер'"));
Имена.Вставить("Икон_Док_Реализ", 		НСтр("ru='Иконка_док_реализацияИОтчет'"));

КаталогИконок = КаталогВременныхФайлов() + "Icons_AgentPlusUT_10_3\";

ОтборКонтрагент = Новый Массив;

Путь = Новый ТаблицаЗначений;
Путь.Колонки.Добавить("Точки", Новый ОписаниеТипов("СписокЗначений"));	

МаркерыОрганизаций = Новый ТаблицаЗначений;  	
МаркерыОрганизаций.Колонки.Добавить("Заголовок", Новый ОписаниеТипов("Строка"));
МаркерыОрганизаций.Колонки.Добавить("Иконка", 	 Новый ОписаниеТипов("Строка"));
МаркерыОрганизаций.Колонки.Добавить("Широта", 	 Новый ОписаниеТипов("Число"));
МаркерыОрганизаций.Колонки.Добавить("Долгота",   Новый ОписаниеТипов("Число"));
              
МаркерыКонтрагентов = Новый ТаблицаЗначений;
МаркерыКонтрагентов.Колонки.Добавить("Ссылка");
МаркерыКонтрагентов.Колонки.Добавить("Заголовок", 	Новый ОписаниеТипов("Строка"));
МаркерыКонтрагентов.Колонки.Добавить("Иконка", 		Новый ОписаниеТипов("Строка"));
МаркерыКонтрагентов.Колонки.Добавить("Широта", 		Новый ОписаниеТипов("Число"));
МаркерыКонтрагентов.Колонки.Добавить("Долгота", 	Новый ОписаниеТипов("Число"));	

МаркерыТорговыхТочек = Новый ТаблицаЗначений;
МаркерыТорговыхТочек.Колонки.Добавить("Ссылка");
МаркерыТорговыхТочек.Колонки.Добавить("Заголовок", Новый ОписаниеТипов("Строка"));
МаркерыТорговыхТочек.Колонки.Добавить("Иконка",    Новый ОписаниеТипов("Строка"));
МаркерыТорговыхТочек.Колонки.Добавить("Широта",    Новый ОписаниеТипов("Число"));
МаркерыТорговыхТочек.Колонки.Добавить("Долгота",   Новый ОписаниеТипов("Число"));

МаркерыДокументов = Новый ТаблицаЗначений;
МаркерыДокументов.Колонки.Добавить("Заголовок", Новый ОписаниеТипов("Строка"));
МаркерыДокументов.Колонки.Добавить("Иконка", Новый ОписаниеТипов("Строка"));
МаркерыДокументов.Колонки.Добавить("Широта", Новый ОписаниеТипов("Число"));
МаркерыДокументов.Колонки.Добавить("Долгота", Новый ОписаниеТипов("Число"));