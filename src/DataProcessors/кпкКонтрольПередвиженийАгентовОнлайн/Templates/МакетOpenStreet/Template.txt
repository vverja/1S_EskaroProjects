<HTML lang=en xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">														
<STYLE>														
<!-- 														
HTML {														
	BORDER-BOTTOM: 0px;													
	BORDER-LEFT: 0px;													
	PADDING-BOTTOM: 0px;													
	MARGIN: 0px;													
	PADDING-LEFT: 0px;													
	PADDING-RIGHT: 0px;													
	BORDER-TOP: 0px;													
	BORDER-RIGHT: 0px;													
	PADDING-TOP: 0px													
}														
#tags {														
	DISPLAY: none													
}														
-->                 														
.smallmap {														
	BORDER-BOTTOM: 1px;													
	BORDER-LEFT: 1px;													
	WIDTH: 100%;													
	HEIGHT: 100%;													
	BORDER-TOP: 1px;													
	BORDER-RIGHT: 1px													
}														
</STYLE>														
<META content="text/html; charset=utf-8" http-equiv=Content-Type>														
<SCRIPT type=text/javascript src="http://www.openlayers.org/api/OpenLayers.js"></SCRIPT>														
    														
<SCRIPT type=text/javascript>														

    var map;														
    var zoom = 3;														
    var popup = null;														
	var icons;													
   														
    window.onload = function() {														
      var options = {														
        projection: new OpenLayers.Projection("EPSG:900913"),														
        displayProjection: new OpenLayers.Projection("EPSG:4326"),														
        units: "m",														
        numZoomLevels: 18,														
        maxResolution: 156543.0339,														
        maxExtent: new OpenLayers.Bounds(-20037508, -20037508,														
                                                 20037508, 20037508.34)														
      };														
    OpenLayers.IMAGE_RELOAD_ATTEMPTS = 3;														
    OpenLayers.Util.onImageLoadErrorColor = "transparent";														


      map = new OpenLayers.Map('map', options);														

      var mapnik = new OpenLayers.Layer.TMS(														
                "OpenStreetMap",														
                "http://b.tile.openstreetmap.org/",														
                {														
                  type: 'png', getURL: osm_getTileURL,														
                  displayOutsideMaxExtent: true,														
                  wrapDateLine: true														
                }														
            );														

      //var vector = new OpenLayers.Layer.Vector("Editable Vectors");														
      map.addControl(new OpenLayers.Control.LayerSwitcher());														
      map.addControl(new OpenLayers.Control.MousePosition());														
      map.addControl( new OpenLayers.Control.ScaleLine());														

      var centre = lonLatToMercator(new OpenLayers.LonLat(-75.65, 41.4));														

      function osm_getTileURL(bounds) {														
        var res = this.map.getResolution();														
        var x = Math.round((bounds.left - this.maxExtent.left) / (res * this.tileSize.w));														
        var y = Math.round((this.maxExtent.top - bounds.top) / (res * this.tileSize.h));														
        var z = this.map.getZoom();														
        var limit = Math.pow(2, z);														

        if (y < 0 || y >= limit) {														
          return OpenLayers.Util.getImagesLocation() + "404.png";														
        } else {														
          x = ((x % limit) + limit) % limit;														
          return this.url + z + "/" + x + "/" + y + "." + this.type;														
        }														
      }														

      map.addLayers([mapnik]);														
      map.setCenter(centre,13);														
      loadMyIcons();														  
      drawMarkers();														
    }														

    function onMarkerClick(evt) {														
      if (popup != null) map.removePopup(popup);														

      var Obj = new Object();														
      Obj.size = new OpenLayers.Size(10, 10);														
      Obj.offset = new OpenLayers.Pixel(0, 0);														
      popup = new OpenLayers.Popup.AnchoredBubble("1", this.lonLat, new OpenLayers.Size(400, 100),														
      this.title,														
      Obj, true, null);														
      //popup.setBackgroundColor("Black");														
      map.addPopup(popup);														

      OpenLayers.Event.stop(evt);														
    }														

	function loadMyIcons() {													
	  icons = new Object();													
	  var MyIcons = document.getElementById("MyIcons");													
	  var root = MyIcons.XMLDocument.childNodes[0];													
		for (elemIndex = 0; elemIndex < root.childNodes.length; elemIndex++) {												
			var element = root.childNodes[elemIndex];											
			var iconId;											

            iconId = element.getAttribute("id");														
            var size = new OpenLayers.Size(24, 24);														
            var offset = new OpenLayers.Pixel(-(size.w / 2), -size.h / 2);														
            icons[iconId] = new OpenLayers.Icon(element.getAttribute("url"), size, offset);														
		}			  									
	}													

    function drawMarkers() {														
      while (map.layers.length > 1) {														
        map.removeLayer(map.layers[1]);														
      }														

      if (Markers.XMLDocument.childNodes.length == 0) return;														
      var root = Markers.XMLDocument.childNodes[0];														
      if(root.getAttribute("valid")=="1") {														
	      var centre = lonLatToMercator(new OpenLayers.LonLat(parseFloat(root.getAttribute("long")), parseFloat(root.getAttribute("lat"))));													
	      map.setCenter(centre, parseInt(root.getAttribute("scale")));      													
	      root.setAttribute("valid","0");													
	  }													
      var layer_style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);														
      layer_style.fillOpacity = 1.0;														
      layer_style.graphicOpacity = 1.0;														
       														
      var vectorLayer = new OpenLayers.Layer.Vector("Треки", { style: layer_style });														
   														
      map.addLayer(vectorLayer);														

      var markers = new OpenLayers.Layer.Markers("Метки");														
      map.addLayer(markers);														

      for (elemIndex = 0; elemIndex < root.childNodes.length; elemIndex++) {														
        var element = root.childNodes[elemIndex];														
        var iconId;														

        switch (element.nodeName) {														
          case "Marker":														
            var pos = lonLatToMercator(														
              new OpenLayers.LonLat(														
                parseFloat(element.getAttribute("long")),														
                parseFloat(element.getAttribute("lat"))														
              )														
            );														
            iconId = element.getAttribute("icon");														
            var marker;														
            if (iconId == null) {														
              var size = new OpenLayers.Size(10, 17);														
              var offset = new OpenLayers.Pixel(-(size.w / 2), -size.h);														
              var icon = new OpenLayers.Icon('img/marker.png', size, offset);														
              marker = new OpenLayers.Marker(pos, icon);														
            } else {														
              marker = new OpenLayers.Marker(pos, icons[iconId].clone());														
            }														
            marker.lonLat = pos;														
            marker.title = element.getAttribute("title");														
            markers.addMarker(marker);														
            marker.events.register("click", marker, onMarkerClick);														
            break;														
          case "Path":														
            var points = element.text.split(",");														
            var latLngs = new Array();														
            for (n = 0; n < points.length; n++) {														
              var s = points[n].replace(/\s*/, "");														

              var coords = s.split(" ");														
              coords = lonLatToMercator(new OpenLayers.LonLat(parseFloat(coords[1]), parseFloat(coords[0])));														
              var point = new OpenLayers.Geometry.Point(coords.lon, coords.lat);														
              latLngs.push(point);														
            }														
            newLine = new OpenLayers.Geometry.LineString(latLngs);														
            var style = {														
              														
              strokeColor: "Blue",														
              strokeWidth: 5,														
              strokeDashstyle: "solid"														
              														
            };            														
            var lineFeature = new OpenLayers.Feature.Vector(newLine, null, style );    														
            vectorLayer.addFeatures([lineFeature]);														

            break;														
        }														
      }														
    }														

    function lonLatToMercator(ll) {														
      var lon = ll.lon * 20037508.34 / 180;														
      var lat = Math.log(Math.tan((90 + ll.lat) * Math.PI / 360)) / (Math.PI / 180);														
      lat = lat * 20037508.34 / 180;														
      return new OpenLayers.LonLat(lon, lat);														
    }														
 														
</SCRIPT>														

<META name=GENERATOR content="MSHTML 8.00.7600.16671">														
<LINK rel=stylesheet type=text/css href="http://www.openlayers.org/api/theme/default/style.css">														
<BODY>														
	<xml id=Markers>													
	    <Root lat="0" long="0" scale="2" valid="1">													
	      <Path width="5" opacity="0.5" color="#ff0000">													
	        0 0													
	      </Path>													
	    </Root>													
	</xml>													
	<xml id=MyIcons>													
		<Root valid="1">												
		</Root>												
	</xml> 													

	<DIV style="POSITION: absolute" id=map class=smallmap></DIV>													
	<INPUT style="DISPLAY: none" id=RefreshMarkers onclick=drawMarkers() type=button> 													
    <INPUT style="DISPLAY: none" id=RefreshIcons onclick=loadMyIcons() type=button> 														
</BODY>														
</HTML>														