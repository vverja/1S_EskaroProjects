Перем мУдалятьДвижения;

// Настройка периода
Перем НП Экспорт;

Функция ПроверкаКонтролируемыхЗначений(СтруктураДанныхШапки, СтрокаОборотовДляКонтроля)
	
	// Получение списка контролирующих сценариев для выбранного периода и измерений бюджетирования
	
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	|	УстановкаОграниченийПоБюджетам.КонтролирующийСценарий КАК КонтролирующийСценарий,
	|	УстановкаОграниченийПоБюджетам.СтатьяОборотов КАК СтатьяОборотов,
	|	УстановкаОграниченийПоБюджетам.ЦФО КАК ЦФО,
	|	УстановкаОграниченийПоБюджетам.Проект КАК Проект,
	|	УстановкаОграниченийПоБюджетам.Контрагент КАК Контрагент,
	|	УстановкаОграниченийПоБюджетам.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.УстановкаОграниченийПоБюджетам КАК УстановкаОграниченийПоБюджетам
	|
	|ГДЕ
	|	УстановкаОграниченийПоБюджетам.Период = &Период И
	|	УстановкаОграниченийПоБюджетам.СтатьяОборотов = &СтатьяОборотов И
	|	УстановкаОграниченийПоБюджетам.Сценарий = &Сценарий И
	|	(УстановкаОграниченийПоБюджетам.ЦФО = &ЦФО ИЛИ УстановкаОграниченийПоБюджетам.ЦФО = &ПустойЦФО) И
	|	(УстановкаОграниченийПоБюджетам.Проект = &Проект ИЛИ УстановкаОграниченийПоБюджетам.Проект = &ПустойПроект) И
	|	(УстановкаОграниченийПоБюджетам.Контрагент = &Контрагент ИЛИ УстановкаОграниченийПоБюджетам.Контрагент = &ПустойКонтрагент) И
	|	(УстановкаОграниченийПоБюджетам.Номенклатура = &Номенклатура ИЛИ УстановкаОграниченийПоБюджетам.Номенклатура = Неопределено) И
	|	УстановкаОграниченийПоБюджетам.ИспользованиеКонтролируемогоЗначения = &ИспользованиеКонтролируемогоЗначения";
	
	Запрос.УстановитьПараметр("Период",СтрокаОборотовДляКонтроля.Период);
	Запрос.УстановитьПараметр("СтатьяОборотов",СтрокаОборотовДляКонтроля.СтатьяОборотов);
	Запрос.УстановитьПараметр("ИспользованиеКонтролируемогоЗначения",Перечисления.ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании);	
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
		
	Запрос.УстановитьПараметр("ЦФО",СтрокаОборотовДляКонтроля.ЦФО);
	Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));
	
	Запрос.УстановитьПараметр("Проект",СтрокаОборотовДляКонтроля.Проект);
	Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));
	
	Запрос.УстановитьПараметр("Контрагент",СтрокаОборотовДляКонтроля.Контрагент);
	Запрос.УстановитьПараметр("ПустойКонтрагент",Новый(Тип("СправочникСсылка.Контрагенты")));
	
	Запрос.УстановитьПараметр("Номенклатура",СтрокаОборотовДляКонтроля.Номенклатура);
	
	ТабРезультата=Запрос.Выполнить().Выгрузить();
	
	Если ТабРезультата.Количество()=0 Тогда
		
		Возврат ТабРезультата;
		
	Иначе
		
		ТабРезультата.Колонки.Добавить("СуммаСценарияИсполнение");
		ТабРезультата.Колонки.Добавить("Период");
		
		Для каждого СтрокаПроверки Из ТабРезультата Цикл
			
			Если СтрокаПроверки.КонтролирующийСценарий.Пустая() Тогда
				
				ТекущийСценарий=Сценарий;
				ДатаНачала=СтрокаОборотовДляКонтроля.Период;
				ДатаКонца  = ОбщегоНазначения.ДатаКонцаПериода(ДатаНачала,СтруктураДанныхШапки.СценарийПериодичность);
				
			Иначе
				ТекущийСценарий=СтрокаПроверки.КонтролирующийСценарий;				
				ДатаНачала = ОбщегоНазначения.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период, ТекущийСценарий.Периодичность);
				ДатаКонца  = ОбщегоНазначения.ДатаКонцаПериода(ДатаНачала,ТекущийСценарий.Периодичность);
								
			КонецЕсли;
			
			СуммаСценария=СтрокаОборотовДляКонтроля.СуммаСценария;
			
			Запрос.Текст="ВЫБРАТЬ
			|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияКонтрольОборот) КАК СуммаКонтроль,
			|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияИсполнениеОборот) КАК СуммаИсполнение
			|ИЗ
			|	РегистрНакопления.КонтролируемыеЗначенияБюджетов.Обороты(&ДатаНачала, &ДатаНачала, , 
			|					Контрагент = &Контрагент И 
			|					КонтролирующийСценарий=&КонтролирующийСценарий И
			|					Номенклатура=&Номенклатура И 
			|					Проект=&Проект И 
			|					СтатьяОборотов=&СтатьяОборотов И 
			|					Сценарий=&Сценарий И 
			|					ЦФО=&ЦФО И 
			|					ИспользованиеКонтролируемогоЗначения=&ИспользованиеКонтролируемогоЗначения
			|					) КАК КонтролируемыеЗначенияБюджетовОбороты";		
			
			Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
			Запрос.УстановитьПараметр("Контрагент",СтрокаПроверки.Контрагент);
			Запрос.УстановитьПараметр("КонтролирующийСценарий",СтрокаПроверки.КонтролирующийСценарий);
			Запрос.УстановитьПараметр("Номенклатура",СтрокаПроверки.Номенклатура);
			Запрос.УстановитьПараметр("Проект",СтрокаПроверки.Проект);
			Запрос.УстановитьПараметр("СтатьяОборотов",СтрокаПроверки.СтатьяОборотов);
			Запрос.УстановитьПараметр("Сценарий",Сценарий);
			Запрос.УстановитьПараметр("ЦФО",СтрокаПроверки.ЦФО);
			Запрос.УстановитьПараметр("ИспользованиеКонтролируемогоЗначения",Перечисления.ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании);
			
			СуммаКонтроль=0;
			СуммаИсполнение=0;
			
			Результат = Запрос.Выполнить();
			Выборка=Результат.Выбрать();
			Если Выборка.Следующий() И (НЕ Выборка["СуммаКонтроль"]=NULL) И (НЕ Выборка["СуммаИсполнение"]=NULL) Тогда
				СуммаКонтроль=Выборка["СуммаКонтроль"];
				СуммаИсполнение=Выборка["СуммаИсполнение"]+СуммаСценария;
			КонецЕсли;
			
			Если СуммаИсполнение>СуммаКонтроль Тогда
				
			ТекстСообщения="Оборот приведет к превышению контролируемого значения!
				|Контролирующий сценарий: "+ ТекущийСценарий+"
				|Период планирования: "+Формат(ДатаНачала,"ДФ=dd.MM.yyyy")+" - "+Формат(ДатаКонца,"ДФ=dd.MM.yyyy");
				
			Если Не СтрокаПроверки.СтатьяОборотов.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Статья оборотов: "+СтрокаПроверки.СтатьяОборотов;
				
			КонецЕсли;
			
			
			Если Не СтрокаПроверки.ЦФО.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|ЦФО: "+СтрокаПроверки.ЦФО;
			
			КонецЕсли;
			
			Если Не СтрокаПроверки.Проект.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Проект: "+СтрокаПроверки.Проект;
				
			КонецЕсли;
			
			Если Не СтрокаПроверки.Контрагент.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Контрагент: "+СтрокаПроверки.Контрагент;
				
			КонецЕсли;
			
			Если Не СтрокаПроверки.Номенклатура=Неопределено Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Номенклатура: "+СтрокаПроверки.Номенклатура;
				
			КонецЕсли;

			ТекстСообщения=ТекстСообщения+"
				|Контролируемое значение: "+СуммаКонтроль+" "+СтруктураДанныхШапки.СценарийВалюта+"
				|Значение с учетом суммы операции: "+СуммаИсполнение+" "+СтруктураДанныхШапки.СценарийВалюта;
				
				#Если Клиент Тогда
				Сообщить(ТекстСообщения);
				#КонецЕсли
				
				Возврат Ложь;
				
			КонецЕсли;
			
			СтрокаПроверки.СуммаСценарияИсполнение=СуммаСценария;
			СтрокаПроверки.Период=ДатаНачала;
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Возврат ТабРезультата;
	
КонецФункции // ПроверкаКонтролируемыхЗначений()

// Возвращает таблицу значений для использования в движениях
// регистров
//
Функция СформироватьЗапросПоДаннымДокумента(СтруктураДанныхШапки)

	Запрос=Новый Запрос;
	
	ТекстЗапроса="ВЫБРАТЬ
	            |	ПереносТранзакцийДокумент.Период КАК Период,
	            |	ПереносТранзакцийДокумент.Ссылка.Сценарий КАК Сценарий,
				|	ПереносТранзакцийДокумент.Валюта КАК Валюта,
	            |	ПереносТранзакцийДокумент.ЦФО КАК ЦФО,
	            |	ПереносТранзакцийДокумент.Проект КАК Проект,
	            |	ПереносТранзакцийДокумент.Контрагент КАК Контрагент,
	            |	ПереносТранзакцийДокумент.Номенклатура КАК Номенклатура,
	            |	ПереносТранзакцийДокумент.СтатьяОборотов КАК СтатьяОборотов,
				|	ГраницыПланирования.ГраницаФиксации КАК ГраницаФиксации,
				|	СУММА(ПереносТранзакцийДокумент.Сумма) КАК ВалютнаяСумма,
	            |	СУММА(ПереносТранзакцийДокумент.Количество) КАК Количество,
				|	СУММА(ВЫРАЗИТЬ 
				|	(ВЫБОР 
				|		КОГДА ПереносТранзакцийДокумент.Валюта=&ВалютаСценария ТОГДА ПереносТранзакцийДокумент.Сумма
				|		КОГДА ПереносТранзакцийДокумент.Валюта<>&ВалютаСценария И КурсыОперации.Курс <>0 И КурсыСценария.Курс <>0 ТОГДА
				|			ПереносТранзакцийДокумент.Сумма*КурсыОперации.Курс * КурсыСценария.Кратность 
				|			/ (КурсыСценария.Курс * КурсыОперации.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаСценария,
				|	СУММА(ВЫРАЗИТЬ 
				|	(ВЫБОР 
				|		КОГДА ПереносТранзакцийДокумент.Валюта=&ВалютаУпрУчета ТОГДА ПереносТранзакцийДокумент.Сумма
				|		КОГДА ПереносТранзакцийДокумент.Валюта<>&ВалютаУпрУчета И КурсыОперации.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
				|			ПереносТранзакцийДокумент.Сумма*КурсыОперации.Курс * КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс * КурсыОперации.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаУпр
	            |	ИЗ
	            |	Документ.АктуализацияБюджетов.ПереносТранзакций КАК ПереносТранзакцийДокумент
				//  Курсы валюты сценария планирования	
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
				|	КурсыВалют.Курс КАК Курс, 
				|	КурсыВалют.Кратность КАК Кратность
				|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		Максимум(КурсыВнутр.Период) КАК Период,
				|		Обороты.Дата КАК Дата
				|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|		ВЫБРАТЬ
  				|			ОперацииДата.Период КАК Дата
  				|		ИЗ
  				|			Документ.АктуализацияБюджетов.ПереносТранзакций КАК ОперацииДата
  				|		ГДЕ
				|			ОперацииДата.Ссылка = &Ссылка
  				|		) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И (КурсыВнутр.Валюта = &ВалютаСценария)";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И (КурсыВнутр.Сценарий=&Сценарий)";
				КонецЕсли;
			    ТекстЗапроса=ТекстЗапроса+"
				|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
				|ГДЕ КурсыВалют.Валюта = &ВалютаСценария";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВалют.Сценарий=&Сценарий";
				КонецЕсли;
                ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыСценария
				|ПО КурсыСценария.Дата = ПереносТранзакцийДокумент.Период
				// Курсы документа 
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
				|	КурсыВалют.Курс КАК Курс, 
				|	КурсыВалют.Кратность КАК Кратность,
				|	КурсыВалют.Валюта КАК Валюта
				|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		Максимум(КурсыВнутр.Период) КАК Период,
				|		Обороты.Дата КАК Дата,
				|		КурсыВнутр.Валюта КАК Валюта
				|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|			ВЫБРАТЬ
  				|			АктуализацияБюджетовПереносТранзакций.Период КАК Дата,
				|			АктуализацияБюджетовПереносТранзакций.Валюта КАК ВалютаДок
  				|		ИЗ
  				|			Документ.АктуализацияБюджетов.ПереносТранзакций КАК АктуализацияБюджетовПереносТранзакций
  				|		ГДЕ
				|			АктуализацияБюджетовПереносТранзакций.Ссылка = &Ссылка
  				|		) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И КурсыВнутр.Валюта = Обороты.ВалютаДок";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И (КурсыВнутр.Сценарий=&Сценарий)";
				КонецЕсли;
			    ТекстЗапроса=ТекстЗапроса+"
				|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
				|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	ГДЕ КурсыВалют.Сценарий=&Сценарий";
				КонецЕсли;
                ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыОперации
				|ПО КурсыОперации.Дата = ПереносТранзакцийДокумент.Период И
				|   КурсыОперации.Валюта = ПереносТранзакцийДокумент.Валюта
				// Курсы валюты управленческого учета
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
				|	КурсыВалют.Курс КАК Курс, 
				|	КурсыВалют.Кратность КАК Кратность
				|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		МАКСИМУМ(КурсыВнутр.Период) КАК Период,
				|		Обороты.Дата КАК Дата
				|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|		ВЫБРАТЬ
  				|			ОперацииДата.Период КАК Дата
  				|		ИЗ
  				|			Документ.АктуализацияБюджетов.ПереносТранзакций КАК ОперацииДата
  				|		ГДЕ
				|			ОперацииДата.Ссылка = &Ссылка
  				|		) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И (КурсыВнутр.Валюта = &ВалютаУпрУчета)";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И (КурсыВнутр.Сценарий=&Сценарий)";
				КонецЕсли;
			    ТекстЗапроса=ТекстЗапроса+"
				|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
				|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВалют.Сценарий=&Сценарий";
				КонецЕсли;
                ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыУпрУчета
				|ПО КурсыУпрУчета.Дата = ПереносТранзакцийДокумент.Период
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ
				|	ГраницыПериодов.Сценарий КАК Сценарий,
				|	ГраницыПериодов.ЦФО КАК ЦФО,
				|	ГраницыПериодов.Проект КАК Проект,
				|	МАКСИМУМ(ГраницыПериодов.ГраницаФиксации) КАК ГраницаФиксации
				|ИЗ
				|		РегистрСведений.ГраницыПериодовБюджетирования КАК ГраницыПериодов				
				|				
				|СГРУППИРОВАТЬ ПО
				|	ГраницыПериодов.Сценарий,
				|	ГраницыПериодов.ЦФО,
				|	ГраницыПериодов.Проект) КАК ГраницыПланирования
				|ПО ГраницыПланирования.Сценарий=ПереносТранзакцийДокумент.Ссылка.Сценарий
				| И (ПереносТранзакцийДокумент.ЦФО = ГраницыПланирования.ЦФО ИЛИ ГраницыПланирования.ЦФО = &ПустойЦФО) 
				| И (ПереносТранзакцийДокумент.Проект = ГраницыПланирования.Проект ИЛИ ГраницыПланирования.Проект = &ПустойПроект)	
				|ГДЕ
				|ПереносТранзакцийДокумент.Ссылка = &Ссылка
				|СГРУППИРОВАТЬ ПО
				|ПереносТранзакцийДокумент.Период,
				|ПереносТранзакцийДокумент.Ссылка.Сценарий,
				|ПереносТранзакцийДокумент.Валюта,
				|ПереносТранзакцийДокумент.ЦФО,
				|ПереносТранзакцийДокумент.Проект,
				|ПереносТранзакцийДокумент.Контрагент,
				|ПереносТранзакцийДокумент.Номенклатура,
				|ПереносТранзакцийДокумент.СтатьяОборотов,
				|ГраницыПланирования.ГраницаФиксации";
					
				Запрос.Текст=ТекстЗапроса;
				
				Запрос.УстановитьПараметр("ВалютаСценария",СтруктураДанныхШапки.СценарийВалюта);
				Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
				Запрос.УстановитьПараметр("Ссылка",Ссылка);
				Запрос.УстановитьПараметр("Сценарий",Сценарий);
				
    			Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));
    			Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));

                ТабОборотовДокумента=Запрос.Выполнить().Выгрузить();
				
	Возврат ТабОборотовДокумента;
	
КонецФункции // СформироватьЗапросПоДаннымДокумента()

// Возвращает таблицу значений для использования в движениях
// регистра бухгалтерии "Бюджетирование"
//
Функция СформироватьПроводкиПоДаннымДокумента(СтруктураДанныхШапки)
	
	Запрос=Новый Запрос;
	ТекстЗапроса="
	|ВЫБРАТЬ
	|ПереносТранзакцийДокумент.Период КАК Период,
	|ДанныеСчетДт.Счет КАК СчетДт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт1,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт2,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт3,
	|ДанныеСчетКт.Счет КАК СчетКт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт1,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт2,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт3,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА ПереносТранзакцийДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ КАК ВалютаДт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА ПереносТранзакцийДокумент.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	ИНАЧЕ NULL КОНЕЦ) КАК ВалютнаяСуммаДт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА ПереносТранзакцийДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ КАК ВалютаКт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА ПереносТранзакцийДокумент.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	ИНАЧЕ NULL КОНЕЦ) КАК ВалютнаяСуммаКт,
	|ТаблицаПроводок.Ссылка КАК СтатьяОборотов,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетДт.Количественный ТОГДА ПереносТранзакцийДокумент.Количество * ТаблицаПроводок.КоэффициентДляКоличества 
	|	ИНАЧЕ NULL КОНЕЦ) КАК КоличествоДт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетКт.Количественный ТОГДА ПереносТранзакцийДокумент.Количество * ТаблицаПроводок.КоэффициентДляКоличества 
	|	ИНАЧЕ NULL КОНЕЦ) КАК КоличествоКт,
	|	СУММА(ВЫРАЗИТЬ 
	|	(ВЫБОР 
	|		КОГДА ПереносТранзакцийДокумент.Валюта=&ВалютаУпрУчета ТОГДА ПереносТранзакцийДокумент.Сумма
	|		КОГДА ПереносТранзакцийДокумент.Валюта<>&ВалютаУпрУчета И КурсыОперации.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
	|			ПереносТранзакцийДокумент.Сумма*КурсыОперации.Курс * КурсыУпрУчета.Кратность 
	|			/ (КурсыУпрУчета.Курс * КурсыОперации.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаУпр,
	|	СУММА(ВЫРАЗИТЬ 
	|	(ВЫБОР 
	|		КОГДА ПереносТранзакцийДокумент.Валюта=&ВалютаСценария ТОГДА ПереносТранзакцийДокумент.Сумма
	|		КОГДА ПереносТранзакцийДокумент.Валюта<>&ВалютаСценария И КурсыОперации.Курс <>0 И КурсыСценария.Курс <>0 ТОГДА
	|			ПереносТранзакцийДокумент.Сумма*КурсыОперации.Курс * КурсыСценария.Кратность 
	|			/ (КурсыУпрУчета.Курс * КурсыСценария.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаСценария
	|ИЗ
	|	Документ.АктуализацияБюджетов.ПереносТранзакций КАК ПереносТранзакцийДокумент
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиОборотовПоБюджетам.ШаблоныПроводок КАК ТаблицаПроводок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Бюджетирование.Ссылка КАК Счет,
	|			Бюджетирование.Валютный КАК Валютный,
	|			Бюджетирование.Количественный КАК Количественный,
	|			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	|		ИЗ
	|			ПланСчетов.Бюджетирование КАК Бюджетирование
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчетДт
	|		ПО ТаблицаПроводок.СчетДт = ДанныеСчетДт.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Бюджетирование.Ссылка КАК Счет,
	|			Бюджетирование.Валютный КАК Валютный,
	|			Бюджетирование.Количественный КАК Количественный,
	|			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	|		ИЗ
	|			ПланСчетов.Бюджетирование КАК Бюджетирование
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчетКт
	|		ПО ТаблицаПроводок.СчетКт = ДанныеСчетКт.Счет
	|	ПО ПереносТранзакцийДокумент.СтатьяОборотов = ТаблицаПроводок.Ссылка
	// Курсы документа 
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность,
	|	КурсыВалют.Валюта КАК Валюта
	|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата,
	|		КурсыВнутр.Валюта КАК Валюта
	|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ
  	|			АктуализацияБюджетовПереносТранзакций.Период КАК Дата,
	|			АктуализацияБюджетовПереносТранзакций.Валюта КАК ВалютаДок
  	|		ИЗ
  	|			Документ.АктуализацияБюджетов.ПереносТранзакций КАК АктуализацияБюджетовПереносТранзакций
  	|		ГДЕ
	|			АктуализацияБюджетовПереносТранзакций.Ссылка = &Ссылка
  	|		) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И КурсыВнутр.Валюта = Обороты.ВалютаДок";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И (КурсыВнутр.Сценарий=&Сценарий)";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
	|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	ГДЕ КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
    ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыОперации
	|ПО КурсыОперации.Дата = ПереносТранзакцийДокумент.Период И
	|   КурсыОперации.Валюта = ПереносТранзакцийДокумент.Валюта
	// Курсы валюты управленческого учета
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		МАКСИМУМ(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
  	|			ОперацииДата.Период КАК Дата
  	|		ИЗ
  	|			Документ.АктуализацияБюджетов.ПереносТранзакций КАК ОперацииДата
  	|		ГДЕ
	|			ОперацииДата.Ссылка = &Ссылка
  	|		) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаУпрУчета)";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И (КурсыВнутр.Сценарий=&Сценарий)";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
    ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыУпрУчета
	|ПО КурсыУпрУчета.Дата = ПереносТранзакцийДокумент.Период
	// Курсы валюты сценария планирования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		МАКСИМУМ(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
  	|			ОперацииДата.Период КАК Дата
  	|		ИЗ
  	|			Документ.АктуализацияБюджетов.ПереносТранзакций КАК ОперацииДата
  	|		ГДЕ
	|			ОперацииДата.Ссылка = &Ссылка
  	|		) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаСценария)";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И (КурсыВнутр.Сценарий=&Сценарий)";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаСценария";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
    ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыСценария
	|ПО КурсыСценария.Дата = ПереносТранзакцийДокумент.Период
	|ГДЕ
	|ПереносТранзакцийДокумент.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|ПереносТранзакцийДокумент.Период,
	|ДанныеСчетДт.Счет,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ДанныеСчетКт.Счет,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА ПереносТранзакцийДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Проекты"" ТОГДА ПереносТранзакцийДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА ПереносТранзакцийДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА ПереносТранзакцийДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА ПереносТранзакцийДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА ПереносТранзакцийДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ТаблицаПроводок.Ссылка";
	
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	Запрос.УстановитьПараметр("ВалютаСценария",СтруктураДанныхШапки.СценарийВалюта);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
		
	ТабПроводокДокумента=Запрос.Выполнить().Выгрузить();
				
Возврат ТабПроводокДокумента;

КонецФункции // СформироватьПроводкиПоДаннымДокумента()



// Формирует движения по регистру "Обороты бюджетов" в соответствии с настройками
// табличной части "ПереносТранзакций"
//
// Параметры: нет
//
Процедура ПереносТранзакций(Отказ, Заголовок)
	
	СтруктураДанныхШапки=Новый Структура;
	
	СтруктураДанныхШапки.Вставить("СценарийПериодичность",Сценарий.Периодичность);
	СтруктураДанныхШапки.Вставить("СценарийВалюта",Сценарий.Валюта);
	СтруктураДанныхШапки.Вставить("РегистрКурсовВалют",?(Сценарий.ИспользоватьКурсыСценария,"КурсыВалютПоСценариям","КурсыВалют"));
	СтруктураДанныхШапки.Вставить("ИспользоватьКурсыСценария",Сценарий.ИспользоватьКурсыСценария);
	
	ТабОборотовДокумента=СформироватьЗапросПоДаннымДокумента(СтруктураДанныхШапки);
	
	// Проверка на границу фиксации
	Для каждого СтрокаОборотов Из ТабОборотовДокумента Цикл
		
		Если (НЕ СтрокаОборотов.ГраницаФиксации=NULL ) И (СтрокаОборотов.Период<=СтрокаОборотов.ГраницаФиксации) Тогда
			
			#Если Клиент Тогда
			Сообщить("Попытка изменения зафиксированного плана:
			|Сценарий планирования: "+Сценарий+"
			|Статья оборотов: "+СтрокаОборотов.СтатьяОборотов+"
			|ЦФО: "+СтрокаОборотов.ЦФО+"
			|Проект: "+СтрокаОборотов.Проект+"
			|Период планирования: "+СтрокаОборотов.Период+"
			|Граница фиксации планов: "+СтрокаОборотов.ГраницаФиксации+"
			|Проведение отменено.");
			#КонецЕсли
			
			Отказ=Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла; 
	
	// Проверка и движения по регистру "Контролируемые значения бюджетов"
	НаборДвижений = Движения.КонтролируемыеЗначенияБюджетов;
	ТабКонтролируемыхДвижений=НаборДвижений.Выгрузить();
	ТабКонтролируемыхДвижений.Очистить();
	
	Для Каждого СтрокаОборотовДляКонтроля Из ТабОборотовДокумента Цикл
		
		ТабКонтролируемыхЗначений=ПроверкаКонтролируемыхЗначений(СтруктураДанныхШапки, СтрокаОборотовДляКонтроля);
		
		Если ТипЗнч(ТабКонтролируемыхЗначений)=Тип("Булево") И НЕ ТабКонтролируемыхЗначений Тогда
			Сообщить("Превышение контролируемого значения. Проведение отменено!");
			Отказ=Истина;
			Возврат;
		Иначе
			
			Если ТабКонтролируемыхЗначений.Количество()>0 Тогда
				
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТабКонтролируемыхЗначений,ТабКонтролируемыхДвижений)
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабКонтролируемыхДвижений.ЗаполнитьЗначения(Сценарий,"Сценарий");
	ТабКонтролируемыхДвижений.ЗаполнитьЗначения(Перечисления.ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании,"ИспользованиеКонтролируемогоЗначения");
	ТабКонтролируемыхДвижений.ЗаполнитьЗначения(Истина,"Активность");
	
	НаборДвижений.мТаблицаДвижений   = ТабКонтролируемыхДвижений;	
	Движения.КонтролируемыеЗначенияБюджетов.ВыполнитьДвижения();
	
	// По регистру "ОборотыБюджетов"
	
	НаборДвижений = Движения.ОборотыБюджетов;
	ТабОборотыБюджетов=НаборДвижений.Выгрузить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТабОборотовДокумента,ТабОборотыБюджетов);
	ТабОборотыБюджетов.ЗаполнитьЗначения(Истина,"Активность");
	НаборДвижений.мТаблицаДвижений   = ТабОборотыБюджетов;
	
	Движения.ОборотыБюджетов.ВыполнитьДвижения();
	
	// По регистру бухгалтерии "Бюджетирование"
	
	ТабПроводокДокумента=СформироватьПроводкиПоДаннымДокумента(СтруктураДанныхШапки);
	ТабПроводокДокумента.Колонки.Добавить("Сценарий");
	ТабПроводокДокумента.ЗаполнитьЗначения(Сценарий,"Сценарий");
	
	НаборДвижений=Движения.Бюджетирование;
	ТабБюджетирование=НаборДвижений.Выгрузить();
	ТабБюджетирование.Очистить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТабПроводокДокумента,ТабБюджетирование);
	ТабБюджетирование.ЗаполнитьЗначения(Истина,"Активность");
	НаборДвижений.мТаблицаДвижений   = ТабБюджетирование;
	
	Движения.Бюджетирование.ВыполнитьДвижения();
	
КонецПроцедуры // ПереносТранзакций()


// Возвращает таблицу корректирующих движений по регистру "ОборотыБюджетов"
//
Функция СформироватьЗапросПоОборотам() Экспорт

	Запрос=Новый Запрос;
	Периодичность=Строка(Сценарий.Периодичность);
	
	ТекстЗапроса=
	"ВЫБРАТЬ
	|	ОборотыПланФакт.Проект,
	|	ОборотыПланФакт.Период,
	|	ОборотыПланФакт.ЦФО,
	|	ОборотыПланФакт.СтатьяОборотов,
	|	ОборотыПланФакт.Контрагент,
	|	ОборотыПланФакт.Номенклатура,
	|	ОборотыПланФакт.Валюта,
	|	СУММА(ОборотыПланФакт.КоличествоФакт - ОборотыПланФакт.КоличествоПлан) КАК Количество,
	|	СУММА(ОборотыПланФакт.СуммаУпрФакт - ОборотыПланФакт.СуммаУпрПлан) КАК СуммаУпр,
	|	СУММА(ОборотыПланФакт.ВалютнаяСуммаФакт - ОборотыПланФакт.ВалютнаяСуммаПлан) КАК ВалютнаяСумма,
	|	СУММА(ВЫРАЗИТЬ 
	|		(ВЫБОР 
	|		КОГДА ОборотыПланФакт.Валюта=&ВалютаСценария ТОГДА (ОборотыПланФакт.ВалютнаяСуммаФакт - ОборотыПланФакт.ВалютнаяСуммаПлан)
	|		КОГДА ОборотыПланФакт.Валюта<>&ВалютаСценария И КурсыОперации.Курс <>0 И КурсыСценария.Курс <>0 ТОГДА
	|			(ОборотыПланФакт.ВалютнаяСуммаФакт - ОборотыПланФакт.ВалютнаяСуммаПлан)*КурсыОперации.Курс * КурсыСценария.Кратность 
	|			/ (КурсыСценария.Курс * КурсыОперации.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаСценария
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОборотыБюджетовОборотыПлан.Проект КАК Проект,
	|		ОборотыБюджетовОборотыПлан.Период КАК Период,
	|		ОборотыБюджетовОборотыПлан.ЦФО КАК ЦФО,
	|		ОборотыБюджетовОборотыПлан.СтатьяОборотов КАК СтатьяОборотов,
	|		ОборотыБюджетовОборотыПлан.Контрагент КАК Контрагент,
	|		ОборотыБюджетовОборотыПлан.Номенклатура КАК Номенклатура,
	|		ОборотыБюджетовОборотыПлан.Валюта КАК Валюта,
	|		ОборотыБюджетовОборотыПлан.КоличествоОборот КАК КоличествоПлан,
	|		ОборотыБюджетовОборотыПлан.СуммаУпрОборот КАК СуммаУпрПлан,
	|		ОборотыБюджетовОборотыПлан.ВалютнаяСуммаОборот КАК ВалютнаяСуммаПлан,
	|		0 КАК КоличествоФакт,
	|		0 КАК СуммаУпрФакт,
	|		0 КАК ВалютнаяСуммаФакт
	|	ИЗ
	|		РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачала, &ДатаКонца,"+Периодичность+", Сценарий = &Сценарий) КАК ОборотыБюджетовОборотыПлан
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыБюджетовОборотыФакт.Проект,
	|		ОборотыБюджетовОборотыФакт.Период,
	|		ОборотыБюджетовОборотыФакт.ЦФО,
	|		ОборотыБюджетовОборотыФакт.СтатьяОборотов,
	|		ОборотыБюджетовОборотыФакт.Контрагент,
	|		ОборотыБюджетовОборотыФакт.Номенклатура,
	|		ОборотыБюджетовОборотыФакт.Валюта,
	|		0,
	|		0,
	|		0,
	|		ОборотыБюджетовОборотыФакт.КоличествоОборот,
	|		ОборотыБюджетовОборотыФакт.СуммаУпрОборот,
	|		ОборотыБюджетовОборотыФакт.ВалютнаяСуммаОборот
	|	ИЗ
	|		РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачала, &ДатаКонца,"+Периодичность+", Сценарий = &ПустойСценарий) КАК ОборотыБюджетовОборотыФакт
	|	) КАК ОборотыПланФакт
	// Курсы операций 
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность,
	|	КурсыВалют.Валюта КАК Валюта
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата,
	|		КурсыВнутр.Валюта КАК Валюта
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 	
	|	(ВЫБРАТЬ
	|		ОборотыБюджетовОборотыПлан.Период КАК Дата,
	|		ОборотыБюджетовОборотыПлан.Валюта КАК Валюта
	|	ИЗ
	|		РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачала, &ДатаКонца,"+Периодичность+", Сценарий = &Сценарий) КАК ОборотыБюджетовОборотыПлан
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыБюджетовОборотыФакт.Период,
	|		ОборотыБюджетовОборотыФакт.Валюта
	|	ИЗ
	|		РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачала, &ДатаКонца,"+Периодичность+", Сценарий = &ПустойСценарий) КАК ОборотыБюджетовОборотыФакт
	|	) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И КурсыВнутр.Валюта = Обороты.Валюта
	|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
	|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта) КАК КурсыОперации
	|ПО КурсыОперации.Дата = ОборотыПланФакт.Период И
	|   КурсыОперации.Валюта = ОборотыПланФакт.Валюта
    //  Курсы валюты сценария планирования	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	(ВЫБРАТЬ
	|		ОборотыБюджетовОборотыПлан.Период КАК Дата
	|	ИЗ
	|		РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачала, &ДатаКонца,"+Периодичность+", Сценарий = &Сценарий) КАК ОборотыБюджетовОборотыПлан
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыБюджетовОборотыФакт.Период
	|	ИЗ
	|		РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНачала, &ДатаКонца,"+Периодичность+", Сценарий = &ПустойСценарий) КАК ОборотыБюджетовОборотыФакт
	|	) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаСценария)
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаСценария) КАК КурсыСценария
	|ПО КурсыСценария.Дата = ОборотыПланФакт.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыПланФакт.Проект,
	|	ОборотыПланФакт.Период,
	|	ОборотыПланФакт.ЦФО,
	|	ОборотыПланФакт.СтатьяОборотов,
	|	ОборотыПланФакт.Контрагент,
	|	ОборотыПланФакт.Номенклатура,
	|	ОборотыПланФакт.Валюта";
	
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("ВалютаСценария",Сценарий.Валюта);
	Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	Запрос.УстановитьПараметр("ПустойСценарий",Новый(Тип("СправочникСсылка.СценарииПланирования")));
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
    Запрос.УстановитьПараметр("ДатаКонца",ДатаКонца);
		
	ТабОборотовДокумента=Запрос.Выполнить().Выгрузить();
				
	Возврат ТабОборотовДокумента;
	
КонецФункции // СформироватьЗапросПоОборотам()
 
// Возвращает таблицу корректирующих движений по регистру бухгалтерии "Бюджетирование"
//
Функция СформироватьЗапросПоСчетам()
	
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	Периодичность=Строка(Сценарий.Периодичность);
	
	ТекстЗапроса="
	|ВЫБРАТЬ
	|	ОборотыДтКтПланФакт.Период,
	|	ОборотыДтКтПланФакт.СчетДт,
	|	ОборотыДтКтПланФакт.СубконтоДт1,
	|	ОборотыДтКтПланФакт.СубконтоДт2,
	|	ОборотыДтКтПланФакт.СубконтоДт3,
	|	ОборотыДтКтПланФакт.СчетКт,
	|	ОборотыДтКтПланФакт.СубконтоКт1,
	|	ОборотыДтКтПланФакт.СубконтоКт2,
	|	ОборотыДтКтПланФакт.СубконтоКт3,
	|	ОборотыДтКтПланФакт.ВалютаДт,
	|	ОборотыДтКтПланФакт.ВалютаКт,
	|	СУММА(ОборотыДтКтПланФакт.СуммаУпрФакт - ОборотыДтКтПланФакт.СуммаУпрПлан) КАК СуммаУпр,
	|	СУММА(ВЫРАЗИТЬ 
	|		(ВЫБОР 
	|		КОГДА &ВалютаУпрУчета=&ВалютаСценария ТОГДА (ОборотыДтКтПланФакт.СуммаУпрФакт - ОборотыДтКтПланФакт.СуммаУпрПлан)
	|		КОГДА &ВалютаУпрУчета<>&ВалютаСценария И КурсыУпрУчета.Курс <>0 И КурсыСценария.Курс <>0 ТОГДА
	|			(ОборотыДтКтПланФакт.СуммаУпрФакт - ОборотыДтКтПланФакт.СуммаУпрПлан)*КурсыУпрУчета.Курс * КурсыСценария.Кратность 
	|			/ (КурсыСценария.Курс * КурсыУпрУчета.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаСценария,
	|	СУММА(ОборотыДтКтПланФакт.ВалютнаяСуммаДтФакт - ОборотыДтКтПланФакт.ВалютнаяСуммаДтПлан) КАК ВалютнаяСуммаДт,
	|	СУММА(ОборотыДтКтПланФакт.ВалютнаяСуммаКтФакт - ОборотыДтКтПланФакт.ВалютнаяСуммаКтПлан) КАК ВалютнаяСуммаКт,
	|	СУММА(ОборотыДтКтПланФакт.КоличествоДтФакт - ОборотыДтКтПланФакт.КоличествоДтПлан) КАК КоличествоДт,
	|	СУММА(ОборотыДтКтПланФакт.КоличествоКтФакт - ОборотыДтКтПланФакт.КоличествоКтПлан) КАК КоличествоКт
	|ИЗ
	|	(ВЫБРАТЬ
	|		БюджетированиеОборотыДтКтПлан.Период КАК Период,
	|		БюджетированиеОборотыДтКтПлан.СчетДт КАК СчетДт,
	|		БюджетированиеОборотыДтКтПлан.СубконтоДт1 КАК СубконтоДт1,
	|		БюджетированиеОборотыДтКтПлан.СубконтоДт2 КАК СубконтоДт2,
	|		БюджетированиеОборотыДтКтПлан.СубконтоДт3 КАК СубконтоДт3,
	|		БюджетированиеОборотыДтКтПлан.СчетКт КАК СчетКт,
	|		БюджетированиеОборотыДтКтПлан.СубконтоКт1 КАК СубконтоКт1,
	|		БюджетированиеОборотыДтКтПлан.СубконтоКт2 КАК СубконтоКт2,
	|		БюджетированиеОборотыДтКтПлан.СубконтоКт3 КАК СубконтоКт3,
	|		БюджетированиеОборотыДтКтПлан.ВалютаДт КАК ВалютаДт,
	|		БюджетированиеОборотыДтКтПлан.ВалютаКт КАК ВалютаКт,
	|		БюджетированиеОборотыДтКтПлан.СуммаУпрОборот КАК СуммаУпрПлан,
	|		БюджетированиеОборотыДтКтПлан.ВалютнаяСуммаОборотДт КАК ВалютнаяСуммаДтПлан,
	|		БюджетированиеОборотыДтКтПлан.ВалютнаяСуммаОборотКт КАК ВалютнаяСуммаКтПлан,
	|		БюджетированиеОборотыДтКтПлан.КоличествоОборотДт КАК КоличествоДтПлан,
	|		БюджетированиеОборотыДтКтПлан.КоличествоОборотКт КАК КоличествоКтПлан,
	|		0 КАК СуммаУпрФакт,
	|		0 КАК ВалютнаяСуммаДтФакт,
	|		0 КАК ВалютнаяСуммаКтФакт,
	|		0 КАК КоличествоДтФакт,
	|		0 КАК КоличествоКтФакт
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетирование.ОборотыДтКт(&ДатаНачала, &ДатаКонца,"+Периодичность+", , , , , Сценарий = &Сценарий) КАК БюджетированиеОборотыДтКтПлан
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БюджетированиеОборотыДтКтФакт.Период,
	|		БюджетированиеОборотыДтКтФакт.СчетДт,
	|		БюджетированиеОборотыДтКтФакт.СубконтоДт1,
	|		БюджетированиеОборотыДтКтФакт.СубконтоДт2,
	|		БюджетированиеОборотыДтКтФакт.СубконтоДт3,
	|		БюджетированиеОборотыДтКтФакт.СчетКт,
	|		БюджетированиеОборотыДтКтФакт.СубконтоКт1,
	|		БюджетированиеОборотыДтКтФакт.СубконтоКт2,
	|		БюджетированиеОборотыДтКтФакт.СубконтоКт3,
	|		БюджетированиеОборотыДтКтФакт.ВалютаДт,
	|		БюджетированиеОборотыДтКтФакт.ВалютаКт,
	|		0,
	|		0,
	|		0,
	|		0,
	|		0,
	|		БюджетированиеОборотыДтКтФакт.СуммаУпрОборот,
	|		БюджетированиеОборотыДтКтФакт.ВалютнаяСуммаОборотДт,
	|		БюджетированиеОборотыДтКтФакт.ВалютнаяСуммаОборотКт,
	|		БюджетированиеОборотыДтКтФакт.КоличествоОборотДт,
	|		БюджетированиеОборотыДтКтФакт.КоличествоОборотКт
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетирование.ОборотыДтКт(&ДатаНачала, &ДатаКонца,"+Периодичность+", , , , , Сценарий = &ПустойСценарий) КАК БюджетированиеОборотыДтКтФакт) КАК ОборотыДтКтПланФакт
//  Курсы валюты сценария планирования	
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	(ВЫБРАТЬ
	|		ОборотыДтКтПлан.Период КАК Дата
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетирование.ОборотыДтКт(&ДатаНачала, &ДатаКонца,"+Периодичность+", , , , , Сценарий = &Сценарий) КАК ОборотыДтКтПлан
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыДтКтФакт.Период
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетирование.ОборотыДтКт(&ДатаНачала, &ДатаКонца,"+Периодичность+", , , , , Сценарий = &ПустойСценарий) КАК ОборотыДтКтФакт
	|	) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаСценария)
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаСценария) КАК КурсыСценария
	|ПО КурсыСценария.Дата = ОборотыДтКтПланФакт.Период
// Курсы валюты упр. учета
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	(ВЫБРАТЬ
	|		ОборотыДтКтПлан.Период КАК Дата
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетирование.ОборотыДтКт(&ДатаНачала, &ДатаКонца,"+Периодичность+", , , , , Сценарий = &Сценарий) КАК ОборотыДтКтПлан
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ОборотыДтКтФакт.Период
	|	ИЗ
	|		РегистрБухгалтерии.Бюджетирование.ОборотыДтКт(&ДатаНачала, &ДатаКонца,"+Периодичность+", , , , , Сценарий = &ПустойСценарий) КАК ОборотыДтКтФакт
	|	) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаУпрУчета)
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета) КАК КурсыУпрУчета
	|ПО КурсыУпрУчета.Дата = ОборотыДтКтПланФакт.Период
	|СГРУППИРОВАТЬ ПО
	|	ОборотыДтКтПланФакт.Период,
	|	ОборотыДтКтПланФакт.СчетДт,
	|	ОборотыДтКтПланФакт.СубконтоДт1,
	|	ОборотыДтКтПланФакт.СубконтоДт2,
	|	ОборотыДтКтПланФакт.СубконтоДт3,
	|	ОборотыДтКтПланФакт.СчетКт,
	|	ОборотыДтКтПланФакт.СубконтоКт1,
	|	ОборотыДтКтПланФакт.СубконтоКт2,
	|	ОборотыДтКтПланФакт.СубконтоКт3,
	|	ОборотыДтКтПланФакт.ВалютаДт,
	|	ОборотыДтКтПланФакт.ВалютаКт";
	
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	Запрос.УстановитьПараметр("ПустойСценарий",Новый(Тип("СправочникСсылка.СценарииПланирования")));
	Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
	Запрос.УстановитьПараметр("ДатаКонца",ДатаКонца);
	Запрос.УстановитьПараметр("ВалютаСценария",Сценарий.Валюта);
	Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));

	ТабПроводокДокумента=Запрос.Выполнить().Выгрузить();
				
	Возврат ТабПроводокДокумента;

КонецФункции // СформироватьЗапросПоСчетам()

Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект,Новый Структура("Сценарий,ДатаНачала,ДатаКонца,Ответственный,Состояние"),Отказ, Заголовок);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если АктуализироватьБюджеты Тогда
		
		ТабОборотовДокумента=СформироватьЗапросПоОборотам();
		ТабОборотовДокумента.Колонки.Добавить("Сценарий");
		ТабОборотовДокумента.ЗаполнитьЗначения(Сценарий,"Сценарий");
		
		// По регистру "ОборотыБюджетов"
		
		НаборДвижений = Движения.ОборотыБюджетов;	
		НаборДвижений.мТаблицаДвижений   = ТабОборотовДокумента;
		
		Движения.ОборотыБюджетов.ВыполнитьДвижения();
		
		// По регистру бухгалтерии "Бюджетирование"
		
		ТабПроводокДокумента=СформироватьЗапросПоСчетам();
		
		ТабПроводокДокумента.Колонки.Добавить("Сценарий");
		ТабПроводокДокумента.ЗаполнитьЗначения(Сценарий,"Сценарий");
		
		ТабПроводокДокумента.Колонки.Добавить("СтатьяОборотов");
		ТабПроводокДокумента.ЗаполнитьЗначения(Новый(Тип("СправочникСсылка.СтатьиОборотовПоБюджетам")),"СтатьяОборотов");
		
		НаборДвижений=Движения.Бюджетирование;
		
		НаборДвижений.мТаблицаДвижений   = ТабПроводокДокумента;
		Движения.Бюджетирование.ВыполнитьДвижения();
		
		// Устанавливаем границу фиксации (если не была установлена ранее).
		
		Запрос=Новый Запрос;
		ТекстЗапроса="
		|ВЫБРАТЬ
		|	МАКСИМУМ(ГраницыПериодовБюджетирования.ГраницаФиксации) КАК ТекущаяГраницаФиксации
		|ИЗ
		|	РегистрСведений.ГраницыПериодовБюджетирования КАК ГраницыПериодовБюджетирования
		|
		|ГДЕ
		|	(ГраницыПериодовБюджетирования.Сценарий = &Сценарий) И
		|	(ГраницыПериодовБюджетирования.ЦФО = &ПустойЦФО) И
		|	(ГраницыПериодовБюджетирования.Проект = &ПустойПроект)";
		
		Запрос.Текст=ТекстЗапроса;
		
		Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));
		Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));	
		
		Запрос.УстановитьПараметр("Сценарий",Сценарий);
		
		Результат=Запрос.Выполнить().Выбрать();
		
		Если (НЕ Результат.Следующий())
			ИЛИ (Результат.ТекущаяГраницаФиксации=NULL)
			ИЛИ (Результат.ТекущаяГраницаФиксации<ОбщегоНазначения.ДатаНачалаПериода(ДатаКонца,Сценарий.Периодичность)) Тогда
			
			НаборДвижений = Движения.ГраницыПериодовБюджетирования;
			ТаблицаДвижений = НаборДвижений.Выгрузить();
			
			Движение=ТаблицаДвижений.Добавить();
			
			Движение.Сценарий=Сценарий;
			Движение.Период=Дата;
			Движение.ГраницаФиксации=ОбщегоНазначения.ДатаНачалаПериода(ДатаКонца,Сценарий.Периодичность);
			
			НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;			
			Движения.ГраницыПериодовБюджетирования.ВыполнитьДвижения();	
			
		КонецЕсли;
		
	КонецЕсли;

	Если ПеренестиТранзакции И ПереносТранзакций.Количество()>0 Тогда
		
		ПереносТранзакций(Отказ, Заголовок);
		
	КонецЕсли;
		
КонецПроцедуры 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью





#Если Клиент Тогда
НП = Новый НастройкаПериода;
#КонецЕсли



