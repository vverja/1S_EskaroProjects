Перем мУдалятьДвижения;

#Если Клиент Тогда


// Получает курс и кратность документа на основании реквизитов шапки
//
Процедура ОбновитьКурсДокумента() Экспорт

	Если Сценарий.ИспользоватьКурсыСценария Тогда
		РегистрКурсов=РегистрыСведений.КурсыВалютПоСценариям;
		ОтборПоВалюте=Новый Структура;
		ОтборПоВалюте.Вставить("Валюта",ВалютаДокумента);
		ОтборПоВалюте.Вставить("Сценарий",Сценарий);		
	Иначе
		РегистрКурсов=РегистрыСведений.КурсыВалют;
		ОтборПоВалюте=Новый Структура;
		ОтборПоВалюте.Вставить("Валюта",ВалютаДокумента);
	КонецЕсли;
	
	СтруктураКурсов=РегистрКурсов.ПолучитьПоследнее(ПериодПланирования,ОтборПоВалюте);
	
	Если НЕ СтруктураКурсов.Курс=КурсДокумента Тогда
		
		КурсДокумента=СтруктураКурсов.Курс;
		
	КонецЕсли;
	
	Если НЕ СтруктураКурсов.Кратность=КратностьДокумента Тогда 
		
		КратностьДокумента= СтруктураКурсов.Кратность;
		
	КонецЕсли;
	
КонецПроцедуры // ОбновитьКурсДокумента()

//Обновляет курс и сумму документа при изменении валюты
//
Процедура ОбновитьКурсИСуммуДокумента(СтараяВалюта) Экспорт

	СтарыйКурс=КурсДокумента;
	СтараяКратность=КратностьДокумента;
	
	ОбновитьКурсДокумента();
	
	Сумма=МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Сумма,
										СтараяВалюта,ВалютаДокумента,
										СтарыйКурс,КурсДокумента,
										СтараяКратность,КратностьДокумента);
										
	Если СтатьяОборотов.УчетПоКоличеству И СтатьяОборотов.УчетПоСумме И (НЕ Количество=0) Тогда
		Цена=Окр(Сумма/Количество,2);
	КонецЕсли;
		
КонецПроцедуры // ОбновитьКурсИСуммуДокумента()

#КонецЕсли

// Заполняет таблицу зависимых оборотов рекурсивно зависимыми от статьи
// переданной в качестве параметра.
//
// Параметры
//  Статья  – <Справочник.СтатьиОборотовБюджета> – статья оборотов, для которой выбираются зависимые
//  ДатаДвижения - дата движения по влияющей статье
//  КоличествоПоСтатье - количественный оборот по влияющей статье
//  СуммаПоСтатье - суммовой оборот по влияющей статье
//
Процедура ЗаполнитьЗависимымиОборотами(ТекСтатья,
										ТекЦФО,
										ТекПроект,
										ТекКонтрагент,
										ТекНоменклатура,ДатаДвижения, КоличествоПоСтатье, СуммаПоСтатье)

	ПустойСценарий=Новый(Тип("СправочникСсылка.СценарииПланирования"));
	ПустойЦФО=Новый(Тип("СправочникСсылка.Подразделения"));
	ПустойПроект=Новый(Тип("СправочникСсылка.Проекты"));
	ПустойКонтрагент=Новый(Тип("СправочникСсылка.Контрагенты"));
	
	ОтборНоменклатура=?(ТекНоменклатура=Неопределено,Неопределено,?(ТекНоменклатура.Пустая(),Неопределено,ТекНоменклатура));

	Запрос=Новый Запрос;

	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов КАК ЗависимаяСтатьяОборотов,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.УчетПоКоличеству КАК УчетПоКоличеству,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.УчетПоСумме КАК УчетПоСумме,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.РазделениеПоКонтрагентам КАК РазделениеПоКонтрагентам,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяСтатьяОборотов.РазделениеПоНоменклатуре КАК РазделениеПоНоменклатуре,
	|	ЗависимостиОборотовПоСтатьям.ЗависимаяНоменклатура КАК ЗависимаяНоменклатура,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйКонтрагент КАК ЗависимыйКонтрагент,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйПроект КАК ЗависимыйПроект,
	|	ЗависимостиОборотовПоСтатьям.ЗависимыйЦФО КАК ЗависимыйЦФО,
	|	ЗависимостиОборотовПоСтатьям.КоэффициентДляРасчетаКоличества КАК КоэффициентДляРасчетаКоличества,
	|	ЗависимостиОборотовПоСтатьям.КоэффициентДляРасчетаСуммы КАК КоэффициентДляРасчетаСуммы,
	|	ЗависимостиОборотовПоСтатьям.РеквизитВлияющейСтатьиДляРасчетаКоличества КАК РеквизитВлияющейСтатьиДляРасчетаКоличества,
	|	ЗависимостиОборотовПоСтатьям.РеквизитВлияющейСтатьиДляРасчетаСуммы КАК РеквизитВлияющейСтатьиДляРасчетаСуммы,
	|	ЗависимостиОборотовПоСтатьям.ЗначениеИзмененияПоПериодам КАК ЗначениеИзмененияПоПериодам
	|ИЗ
	|	РегистрСведений.ЗависимостиОборотовПоСтатьямБюджетирования.СрезПоследних(&ДатаДвижения, (ИсхСтатьяОборотов = &Статья)
	|					И ((ИсхСценарий =&ИсхСценарий) ИЛИ (ИсхСценарий =&ПустойИсхСценарий))
	|					И ((ИсхЦФО =&ИсхЦФО) ИЛИ (ИсхЦФО =&ПустойИсхЦФО)) 
	|					И ((ИсхПроект =&ИсхПроект) ИЛИ (ИсхПроект =&ПустойИсхПроект)) 
	|					И ((ИсхКонтрагент =&ИсхКонтрагент) ИЛИ (ИсхКонтрагент =&ПустойИсхКонтрагент)) 
	|					И ((ИсхНоменклатура =&ИсхНоменклатура) ИЛИ (ИсхНоменклатура = Неопределено))) КАК ЗависимостиОборотовПоСтатьям";

	Запрос.УстановитьПараметр("ДатаДвижения",ДатаДвижения);
	Запрос.УстановитьПараметр("Статья",ТекСтатья);

	Запрос.УстановитьПараметр("ИсхСценарий",Сценарий);
    Запрос.УстановитьПараметр("ПустойИсхСценарий",ПустойСценарий);
	
    Запрос.УстановитьПараметр("ИсхЦФО",ТекЦФО);
    Запрос.УстановитьПараметр("ПустойИсхЦФО",ПустойЦФО);

	Запрос.УстановитьПараметр("ИсхПроект",ТекПроект);
    Запрос.УстановитьПараметр("ПустойИсхПроект",ПустойПроект);

	Запрос.УстановитьПараметр("ИсхКонтрагент",ТекКонтрагент);
    Запрос.УстановитьПараметр("ПустойИсхКонтрагент",ПустойКонтрагент);

	Запрос.УстановитьПараметр("ИсхНоменклатура",ОтборНоменклатура);
 

	РезультатЗапроса=Запрос.Выполнить();

	Если РезультатЗапроса.Пустой() Тогда

		Возврат;

	Иначе

		ТабЗависимыхСтатей=РезультатЗапроса.Выгрузить();

		Для Каждого ТекущаяЗависимость Из ТабЗависимыхСтатей Цикл

			РеквизитДляСуммы=ТекущаяЗависимость.РеквизитВлияющейСтатьиДляРасчетаСуммы;
			РеквизитДляКоличества=ТекущаяЗависимость.РеквизитВлияющейСтатьиДляРасчетаКоличества;
			КоэффициентДляСуммы=ТекущаяЗависимость.КоэффициентДляРасчетаСуммы;
			КоэффициентДляКоличества=ТекущаяЗависимость.КоэффициентДляРасчетаКоличества;

            СуммаЗависимая=0;
			КоличествоЗависимое=0;

			Если РеквизитДляСуммы=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество Тогда
				СуммаЗависимая=КоличествоПоСтатье*КоэффициентДляСуммы;
			ИначеЕсли РеквизитДляСуммы=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма Тогда
				СуммаЗависимая=СуммаПоСтатье*КоэффициентДляСуммы;
			КонецЕсли;

			Если РеквизитДляКоличества=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Количество Тогда
				КоличествоЗависимое=КоличествоПоСтатье*КоэффициентДляКоличества;
			ИначеЕсли РеквизитДляКоличества=Перечисления.РеквизитыДляРасчетаЗависимыхСтатейБюджета.Сумма Тогда
				КоличествоЗависимое=СуммаПоСтатье*КоэффициентДляКоличества;
			КонецЕсли;

			Если НЕ ТекущаяЗависимость.ЗначениеИзмененияПоПериодам.Пустая() Тогда

				ПериодСмещения=ТекущаяЗависимость.ЗначениеИзмененияПоПериодам.ПериодСмещения;

				Для Каждого Период Из ТекущаяЗависимость.ЗначениеИзмененияПоПериодам.ПрофильИзменения Цикл

					НовыйЗависимыйОборот=ЗависимыеОбороты.Добавить();
					НовыйЗависимыйОборот.ПериодПланирования=ОбщегоНазначения.ДатаНачалаПериода(ОбщегоНазначения.ДобавитьИнтервал(ДатаДвижения,ПериодСмещения,Период.НомерПериода),Сценарий.Периодичность);
					НовыйЗависимыйОборот.СтатьяОборотов=ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
					НовыйЗависимыйОборот.ЦФО=?(ТекущаяЗависимость.ЗависимыйЦФО=ПустойЦФО,ТекЦФО,ТекущаяЗависимость.ЗависимыйЦФО);
                    НовыйЗависимыйОборот.Проект=?(ТекущаяЗависимость.ЗависимыйПроект=ПустойПроект,ТекПроект,ТекущаяЗависимость.ЗависимыйПроект);
					
					Если ТекущаяЗависимость.РазделениеПоКонтрагентам Тогда
						НовыйЗависимыйОборот.Контрагент=?(ТекущаяЗависимость.ЗависимыйКонтрагент=ПустойКонтрагент,ТекКонтрагент,ТекущаяЗависимость.ЗависимыйКонтрагент);
					КонецЕсли;
					
					Если ТекущаяЗависимость.РазделениеПоНоменклатуре Тогда
						НовыйЗависимыйОборот.Номенклатура=?(ТекущаяЗависимость.ЗависимаяНоменклатура=Неопределено,ТекНоменклатура,ТекущаяЗависимость.ЗависимаяНоменклатура);
					КонецЕсли;
					
					Если ТекущаяЗависимость.УчетПоСумме Тогда
						НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаСуммы=РеквизитДляСуммы;
						НовыйЗависимыйОборот.КоэффициентДляРасчетаСуммы=КоэффициентДляСуммы*Период.Коэффициент;
						НовыйЗависимыйОборот.Сумма=СуммаЗависимая*Период.Коэффициент;
					КонецЕсли;
								
					Если ТекущаяЗависимость.УчетПоКоличеству Тогда
						НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаКоличества=РеквизитДляКоличества;
						НовыйЗависимыйОборот.КоэффициентДляРасчетаКоличества=КоэффициентДляКоличества*Период.Коэффициент;		
						НовыйЗависимыйОборот.Количество=КоличествоЗависимое*Период.Коэффициент;
					КонецЕсли;
					
					ЗаполнитьЗависимымиОборотами(НовыйЗависимыйОборот.СтатьяОборотов,
												НовыйЗависимыйОборот.ЦФО,
												НовыйЗависимыйОборот.Проект,
												НовыйЗависимыйОборот.Контрагент,
												НовыйЗависимыйОборот.Номенклатура,
												НовыйЗависимыйОборот.ПериодПланирования,
												НовыйЗависимыйОборот.Количество,
												НовыйЗависимыйОборот.Сумма);

				КонецЦикла;

			Иначе

				НовыйЗависимыйОборот=ЗависимыеОбороты.Добавить();
				НовыйЗависимыйОборот.ПериодПланирования=ДатаДвижения;
				НовыйЗависимыйОборот.СтатьяОборотов=ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
				НовыйЗависимыйОборот.СтатьяОборотов=ТекущаяЗависимость.ЗависимаяСтатьяОборотов;
				НовыйЗависимыйОборот.ЦФО=?(ТекущаяЗависимость.ЗависимыйЦФО=ПустойЦФО,ТекЦФО,ТекущаяЗависимость.ЗависимыйЦФО);
				НовыйЗависимыйОборот.Проект=?(ТекущаяЗависимость.ЗависимыйПроект=ПустойПроект,ТекПроект,ТекущаяЗависимость.ЗависимыйПроект);
				
				Если ТекущаяЗависимость.РазделениеПоКонтрагентам Тогда
					НовыйЗависимыйОборот.Контрагент=?(ТекущаяЗависимость.ЗависимыйКонтрагент=ПустойКонтрагент,ТекКонтрагент,ТекущаяЗависимость.ЗависимыйКонтрагент);
				КонецЕсли;
				
				Если ТекущаяЗависимость.РазделениеПоНоменклатуре Тогда
					НовыйЗависимыйОборот.Номенклатура=?(ТекущаяЗависимость.ЗависимаяНоменклатура=Неопределено,ТекНоменклатура,ТекущаяЗависимость.ЗависимаяНоменклатура);
				КонецЕсли;
				
				Если ТекущаяЗависимость.УчетПоСумме Тогда
					НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаСуммы=РеквизитДляСуммы;
					НовыйЗависимыйОборот.КоэффициентДляРасчетаСуммы=КоэффициентДляСуммы;
					НовыйЗависимыйОборот.Сумма=СуммаЗависимая;
				КонецЕсли;
				
				Если ТекущаяЗависимость.УчетПоКоличеству Тогда
					НовыйЗависимыйОборот.РеквизитОперацииДляРасчетаКоличества=РеквизитДляКоличества;
					НовыйЗависимыйОборот.КоэффициентДляРасчетаКоличества=КоэффициентДляКоличества;
					НовыйЗависимыйОборот.Количество=КоличествоЗависимое;
				КонецЕсли;
				
				ЗаполнитьЗависимымиОборотами(НовыйЗависимыйОборот.СтатьяОборотов,
											НовыйЗависимыйОборот.ЦФО,
											НовыйЗависимыйОборот.Проект,
											НовыйЗависимыйОборот.Контрагент,
											НовыйЗависимыйОборот.Номенклатура,
											НовыйЗависимыйОборот.ПериодПланирования,
											НовыйЗависимыйОборот.Количество,
											НовыйЗависимыйОборот.Сумма);


			КонецЕсли;

		КонецЦикла;

	КонецЕсли;				

КонецПроцедуры // ЗаполнитьЗависимымиОборотами()

// Инициирует процесс заполнения ТЧ "ЗависимыеОбороты"
//
Процедура РассчитатьЗависимыеОбороты() Экспорт
	
	ЗависимыеОбороты.Очистить();
	ЗаполнитьЗависимымиОборотами(СтатьяОборотов,
									ЦФО,
									Проект,
									Контрагент,
									Номенклатура,
									ПериодПланирования,Количество,Сумма);
	
КонецПроцедуры // РассчитатьЗависимые()


Функция ПроверкаКонтролируемыхЗначений(СтруктураДанныхШапки, СтрокаОборотовДляКонтроля)
	
	// Получение списка контролирующих сценариев для выбранного периода и измерений бюджетирования
	
	Запрос=Новый Запрос;
	
	Запрос.Текст="ВЫБРАТЬ
	|	УстановкаОграниченийПоБюджетам.КонтролирующийСценарий КАК КонтролирующийСценарий,
	|	УстановкаОграниченийПоБюджетам.СтатьяОборотов КАК СтатьяОборотов,
	|	УстановкаОграниченийПоБюджетам.ЦФО КАК ЦФО,
	|	УстановкаОграниченийПоБюджетам.Проект КАК Проект,
	|	УстановкаОграниченийПоБюджетам.Контрагент КАК Контрагент,
	|	УстановкаОграниченийПоБюджетам.Номенклатура КАК Номенклатура
	|ИЗ
	|	РегистрСведений.УстановкаОграниченийПоБюджетам КАК УстановкаОграниченийПоБюджетам
	|
	|ГДЕ
	|	УстановкаОграниченийПоБюджетам.Период = &Период И
	|	УстановкаОграниченийПоБюджетам.СтатьяОборотов = &СтатьяОборотов И
	|	УстановкаОграниченийПоБюджетам.Сценарий = &Сценарий И
	|	(УстановкаОграниченийПоБюджетам.ЦФО = &ЦФО ИЛИ УстановкаОграниченийПоБюджетам.ЦФО = &ПустойЦФО) И
	|	(УстановкаОграниченийПоБюджетам.Проект = &Проект ИЛИ УстановкаОграниченийПоБюджетам.Проект = &ПустойПроект) И
	|	(УстановкаОграниченийПоБюджетам.Контрагент = &Контрагент ИЛИ УстановкаОграниченийПоБюджетам.Контрагент = &ПустойКонтрагент) И
	|	(УстановкаОграниченийПоБюджетам.Номенклатура = &Номенклатура ИЛИ УстановкаОграниченийПоБюджетам.Номенклатура = Неопределено) И
	|	УстановкаОграниченийПоБюджетам.ИспользованиеКонтролируемогоЗначения = &ИспользованиеКонтролируемогоЗначения";
	
	Запрос.УстановитьПараметр("Период",СтрокаОборотовДляКонтроля.Период);
	Запрос.УстановитьПараметр("СтатьяОборотов",СтрокаОборотовДляКонтроля.СтатьяОборотов);
	Запрос.УстановитьПараметр("ИспользованиеКонтролируемогоЗначения",Перечисления.ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании);	
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	
	Запрос.УстановитьПараметр("ЦФО",СтрокаОборотовДляКонтроля.ЦФО);
	Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));	
	Запрос.УстановитьПараметр("Проект",СтрокаОборотовДляКонтроля.Проект);
	Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));	
	Запрос.УстановитьПараметр("Контрагент",СтрокаОборотовДляКонтроля.Контрагент);
	Запрос.УстановитьПараметр("ПустойКонтрагент",Новый(Тип("СправочникСсылка.Контрагенты")));	
	Запрос.УстановитьПараметр("Номенклатура",СтрокаОборотовДляКонтроля.Номенклатура);
	
	ТабРезультата=Запрос.Выполнить().Выгрузить();
	
	Если ТабРезультата.Количество()=0 Тогда
		
		Возврат ТабРезультата;
		
	Иначе
		
		ТабРезультата.Колонки.Добавить("СуммаСценарияИсполнение");
		ТабРезультата.Колонки.Добавить("Период");
		
		Для каждого СтрокаПроверки Из ТабРезультата Цикл
			
			Если СтрокаПроверки.КонтролирующийСценарий.Пустая() Тогда
				
				ТекущийСценарий=Сценарий;
				ДатаНачала=СтрокаОборотовДляКонтроля.Период;
				ДатаКонца  = ОбщегоНазначения.ДатаКонцаПериода(ДатаНачала,СтруктураДанныхШапки.СценарийПериодичность);
				
			Иначе
				ТекущийСценарий=СтрокаПроверки.КонтролирующийСценарий;				
				ДатаНачала = ОбщегоНазначения.ДатаНачалаПериода(СтрокаОборотовДляКонтроля.Период, ТекущийСценарий.Периодичность);
				ДатаКонца  = ОбщегоНазначения.ДатаКонцаПериода(ДатаНачала,ТекущийСценарий.Периодичность);
								
			КонецЕсли;
			
			СуммаСценария=СтрокаОборотовДляКонтроля.СуммаСценария;
			
			Запрос.Текст="ВЫБРАТЬ
			|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияКонтрольОборот) КАК СуммаКонтроль,
			|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияИсполнениеОборот) КАК СуммаИсполнение
			|ИЗ
			|	РегистрНакопления.КонтролируемыеЗначенияБюджетов.Обороты(&ДатаНачала, &ДатаНачала, , 
			|					Контрагент = &Контрагент И 
			|					КонтролирующийСценарий=&КонтролирующийСценарий И
			|					Номенклатура=&Номенклатура И 
			|					Проект=&Проект И 
			|					СтатьяОборотов=&СтатьяОборотов И 
			|					Сценарий=&Сценарий И 
			|					ЦФО=&ЦФО И 
			|					ИспользованиеКонтролируемогоЗначения=&ИспользованиеКонтролируемогоЗначения
			|					) КАК КонтролируемыеЗначенияБюджетовОбороты";		
			
			Запрос.УстановитьПараметр("ДатаНачала",ДатаНачала);
			Запрос.УстановитьПараметр("Контрагент",СтрокаПроверки.Контрагент);
			Запрос.УстановитьПараметр("КонтролирующийСценарий",СтрокаПроверки.КонтролирующийСценарий);
			Запрос.УстановитьПараметр("Номенклатура",СтрокаПроверки.Номенклатура);
			Запрос.УстановитьПараметр("Проект",СтрокаПроверки.Проект);
			Запрос.УстановитьПараметр("СтатьяОборотов",СтрокаПроверки.СтатьяОборотов);
			Запрос.УстановитьПараметр("Сценарий",Сценарий);
			Запрос.УстановитьПараметр("ЦФО",СтрокаПроверки.ЦФО);
			Запрос.УстановитьПараметр("ИспользованиеКонтролируемогоЗначения",Перечисления.ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании);
			
			СуммаКонтроль=0;
			СуммаИсполнение=0;
			
			Результат = Запрос.Выполнить();
			Выборка=Результат.Выбрать();
			Если Выборка.Следующий() И (НЕ Выборка["СуммаКонтроль"]=NULL) И (НЕ Выборка["СуммаИсполнение"]=NULL) Тогда
				СуммаКонтроль=Выборка["СуммаКонтроль"];
				СуммаИсполнение=Выборка["СуммаИсполнение"]+СуммаСценария;
			КонецЕсли;
			
			Если СуммаИсполнение>СуммаКонтроль Тогда
				
			ТекстСообщения="Оборот приведет к превышению контролируемого значения!
				|Контролирующий сценарий: "+ ТекущийСценарий+"
				|Период планирования: "+Формат(ДатаНачала,"ДФ=dd.MM.yyyy")+" - "+Формат(ДатаКонца,"ДФ=dd.MM.yyyy");
				
			Если Не СтрокаПроверки.СтатьяОборотов.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Статья оборотов: "+СтрокаПроверки.СтатьяОборотов;
				
			КонецЕсли;
								
			Если Не СтрокаПроверки.ЦФО.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|ЦФО: "+СтрокаПроверки.ЦФО;
			
			КонецЕсли;
			
			Если Не СтрокаПроверки.Проект.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Проект: "+СтрокаПроверки.Проект;
				
			КонецЕсли;
			
			Если Не СтрокаПроверки.Контрагент.Пустая() Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Контрагент: "+СтрокаПроверки.Контрагент;
				
			КонецЕсли;
			
			Если Не СтрокаПроверки.Номенклатура=Неопределено Тогда
				
				ТекстСообщения=ТекстСообщения+"
				|Номенклатура: "+СтрокаПроверки.Номенклатура;
				
			КонецЕсли;

			ТекстСообщения=ТекстСообщения+"
				|Контролируемое значение: "+СуммаКонтроль+" "+СтруктураДанныхШапки.СценарийВалюта+"
				|Значение с учетом суммы операции: "+СуммаИсполнение+" "+СтруктураДанныхШапки.СценарийВалюта;
				
				#Если Клиент Тогда
				Сообщить(ТекстСообщения);
				#КонецЕсли
				
				Возврат Ложь;
				
			КонецЕсли;
			
			СтрокаПроверки.СуммаСценарияИсполнение=СуммаСценария;
			СтрокаПроверки.Период=ДатаНачала;
			
		КонецЦикла; 
		
	КонецЕсли;
	
	Возврат ТабРезультата;
	
КонецФункции // ПроверкаКонтролируемыхЗначений()


// Возвращает структуру, содержащую поля шапки, обязательные для заполнения
//
//
// Возвращаемое значение:
//   СтруктураОбязательныхПолей - структура с именами реквизитов шапки
//
Функция СтруктураОбязательныхПолейШапка()
	
	СтруктураОбязательныхПолей=Новый Структура;
	СтруктураОбязательныхПолей.Вставить("Сценарий");
	СтруктураОбязательныхПолей.Вставить("ПериодПланирования");
	СтруктураОбязательныхПолей.Вставить("СтатьяОборотов");
	СтруктураОбязательныхПолей.Вставить("Ответственный");
	СтруктураОбязательныхПолей.Вставить("Состояние");
	
	Если СтатьяОборотов.УчетПоСумме Тогда
		СтруктураОбязательныхПолей.Вставить("ВалютаДокумента");
	КонецЕсли;
		
	Возврат СтруктураОбязательныхПолей;
	
КонецФункции // СтруктураОбязательныхПолейШапка()

// Возвращает таблицу значений для использования в движениях
// регистров
//
Функция СформироватьЗапросПоДаннымДокумента(СтруктураДанныхШапки)

	Запрос=Новый Запрос;
	
	ТекстЗапроса="ВЫБРАТЬ
	            |	БюджетнаяОперация.Период КАК Период,
	            |	БюджетнаяОперация.Сценарий КАК Сценарий,
				|	БюджетнаяОперация.ВалютаДокумента КАК Валюта,
	            |	БюджетнаяОперация.ЦФО КАК ЦФО,
	            |	БюджетнаяОперация.Проект КАК Проект,
	            |	БюджетнаяОперация.Контрагент КАК Контрагент,
	            |	БюджетнаяОперация.Номенклатура КАК Номенклатура,
	            |	БюджетнаяОперация.СтатьяОборотов КАК СтатьяОборотов,
				|	ГраницыПланирования.ГраницаФиксации КАК ГраницаФиксации,
				|	СУММА(БюджетнаяОперация.Сумма) КАК ВалютнаяСумма,
	            |	СУММА(БюджетнаяОперация.Количество) КАК Количество,
				|	СУММА(ВЫРАЗИТЬ 
				|	(ВЫБОР 
				|		КОГДА &ВалютаДокумента=&ВалютаСценария ТОГДА БюджетнаяОперация.Сумма
				|		КОГДА &ВалютаДокумента<>&ВалютаСценария И КурсыДокумента.Курс <>0 И КурсыСценария.Курс <>0 ТОГДА
				|			БюджетнаяОперация.Сумма*КурсыДокумента.Курс * КурсыСценария.Кратность 
				|			/ (КурсыСценария.Курс * КурсыДокумента.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаСценария,
				|	СУММА(ВЫРАЗИТЬ 
				|	(ВЫБОР 
				|		КОГДА &ВалютаДокумента=&ВалютаУпрУчета ТОГДА БюджетнаяОперация.Сумма
				|		КОГДА &ВалютаДокумента<>&ВалютаУпрУчета И КурсыДокумента.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
				|			БюджетнаяОперация.Сумма*КурсыДокумента.Курс * КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс * КурсыДокумента.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаУпр
	            |ИЗ
	            |	(ВЫБРАТЬ
	            |		БюджетнаяОперацияШапка.Сценарий,
	            |		БюджетнаяОперацияШапка.ПериодПланирования КАК Период,
	            |		БюджетнаяОперацияШапка.СтатьяОборотов,
	            |		БюджетнаяОперацияШапка.ЦФО,
	            |		БюджетнаяОперацияШапка.Проект,
	            |		БюджетнаяОперацияШапка.Контрагент,
	            |		БюджетнаяОперацияШапка.Номенклатура,
	            |		БюджетнаяОперацияШапка.ВалютаДокумента,
	            |		БюджетнаяОперацияШапка.Количество,
	            |		БюджетнаяОперацияШапка.Сумма
	            |	ИЗ
	            |		Документ.БюджетнаяОперация КАК БюджетнаяОперацияШапка
	            |       ГДЕ БюджетнаяОперацияШапка.Ссылка=&Ссылка
	            |	ОБЪЕДИНИТЬ ВСЕ
	            |
	            |	ВЫБРАТЬ
	            |		БюджетнаяОперацияЗависимыеОбороты.Ссылка.Сценарий,
	            |		БюджетнаяОперацияЗависимыеОбороты.ПериодПланирования КАК Период,
	            |		БюджетнаяОперацияЗависимыеОбороты.СтатьяОборотов,
	            |		БюджетнаяОперацияЗависимыеОбороты.ЦФО,
	            |		БюджетнаяОперацияЗависимыеОбороты.Проект,
	            |		БюджетнаяОперацияЗависимыеОбороты.Контрагент,
	            |		БюджетнаяОперацияЗависимыеОбороты.Номенклатура,
	            |		БюджетнаяОперацияЗависимыеОбороты.Ссылка.ВалютаДокумента,
	            |		БюджетнаяОперацияЗависимыеОбороты.Количество,
	            |		БюджетнаяОперацияЗависимыеОбороты.Сумма
	            |	ИЗ
	            |	Документ.БюджетнаяОперация.ЗависимыеОбороты КАК БюджетнаяОперацияЗависимыеОбороты
				|		ГДЕ БюджетнаяОперацияЗависимыеОбороты.Ссылка=&Ссылка) КАК БюджетнаяОперация
			//  Курсы валюты сценария планирования	
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата, 
				|	КурсыВалют.Курс, 
				|	КурсыВалют.Кратность
				|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		Максимум(КурсыВнутр.Период) КАК Период,
				|		Дата
				|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|		ВЫБРАТЬ
  				|			ПериодПланирования Как Дата
  				|		ИЗ
  				|			Документ.БюджетнаяОперация.ЗависимыеОбороты
  				|		ГДЕ
				|			Документ.БюджетнаяОперация.ЗависимыеОбороты.Ссылка = &Ссылка
  				|		ОБЪЕДИНИТЬ ВСЕ 
 				|		ВЫБРАТЬ
 				|			ПериодПланирования Как Дата
  				|		ИЗ 
 				|			Документ.БюджетнаяОперация
 				|		ГДЕ
				|			Документ.БюджетнаяОперация.Ссылка = &Ссылка) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И КурсыВнутр.Валюта = &ВалютаСценария";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВнутр.Сценарий=&Сценарий";
				КонецЕсли;
			    ТекстЗапроса=ТекстЗапроса+"
				|	СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
				|ГДЕ КурсыВалют.Валюта = &ВалютаСценария";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВалют.Сценарий=&Сценарий";
				КонецЕсли;
                ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыСценария
				|ПО КурсыСценария.Дата = БюджетнаяОперация.Период
				// Курсы документа 
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата, 
				|	КурсыВалют.Курс, 
				|	КурсыВалют.Кратность
				|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		Максимум(КурсыВнутр.Период) КАК Период,
				|		Дата
				|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|		ВЫБРАТЬ
  				|			ПериодПланирования Как Дата
  				|		ИЗ
  				|			Документ.БюджетнаяОперация.ЗависимыеОбороты
  				|		ГДЕ
				|			Документ.БюджетнаяОперация.ЗависимыеОбороты.Ссылка = &Ссылка
  				|		ОБЪЕДИНИТЬ ВСЕ 
 				|		ВЫБРАТЬ
 				|			ПериодПланирования Как Дата
  				|		ИЗ 
 				|			Документ.БюджетнаяОперация
 				|		ГДЕ
				|			Документ.БюджетнаяОперация.Ссылка = &Ссылка) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И КурсыВнутр.Валюта = &ВалютаДокумента";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВнутр.Сценарий=&Сценарий";
				КонецЕсли;
			    ТекстЗапроса=ТекстЗапроса+"
				|	СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
				|ГДЕ КурсыВалют.Валюта = &ВалютаДокумента";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВалют.Сценарий=&Сценарий";
				КонецЕсли;
                ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыДокумента
				|ПО КурсыДокумента.Дата = БюджетнаяОперация.Период
				// Курсы валюты управленческого учета
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата, 
				|	КурсыВалют.Курс, 
				|	КурсыВалют.Кратность
				|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		Максимум(КурсыВнутр.Период) КАК Период,
				|		Дата
				|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|		ВЫБРАТЬ
  				|			ПериодПланирования Как Дата
  				|		ИЗ
  				|			Документ.БюджетнаяОперация.ЗависимыеОбороты
  				|		ГДЕ
				|			Документ.БюджетнаяОперация.ЗависимыеОбороты.Ссылка = &Ссылка
  				|		ОБЪЕДИНИТЬ ВСЕ 
 				|		ВЫБРАТЬ
 				|			ПериодПланирования Как Дата
  				|		ИЗ 
 				|			Документ.БюджетнаяОперация
 				|		ГДЕ
				|			Документ.БюджетнаяОперация.Ссылка = &Ссылка) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И КурсыВнутр.Валюта = &ВалютаУпрУчета";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВнутр.Сценарий=&Сценарий";
				КонецЕсли;
			    ТекстЗапроса=ТекстЗапроса+"
				|	СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
				|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета";
				Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
					ТекстЗапроса=ТекстЗапроса+"
				|	И КурсыВалют.Сценарий=&Сценарий";
				КонецЕсли;
                ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыУпрУчета
				|ПО КурсыУпрУчета.Дата = БюджетнаяОперация.Период
				// Границы открытия и фиксации планов
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ
				|	ГраницыПериодов.Сценарий КАК Сценарий,
				|	ГраницыПериодов.ЦФО КАК ЦФО,
				|	ГраницыПериодов.Проект КАК Проект,
				|	МАКСИМУМ(ГраницыПериодов.ГраницаФиксации) КАК ГраницаФиксации
				|ИЗ
				|		РегистрСведений.ГраницыПериодовБюджетирования КАК ГраницыПериодов				
				|				
				|СГРУППИРОВАТЬ ПО
				|	ГраницыПериодов.Сценарий,
				|	ГраницыПериодов.ЦФО,
				|	ГраницыПериодов.Проект) КАК ГраницыПланирования
				|ПО ГраницыПланирования.Сценарий=БюджетнаяОперация.Сценарий
				| И (БюджетнаяОперация.ЦФО = ГраницыПланирования.ЦФО ИЛИ ГраницыПланирования.ЦФО = &ПустойЦФО) 
                | И (БюджетнаяОперация.Проект = ГраницыПланирования.Проект ИЛИ ГраницыПланирования.Проект = &ПустойПроект)
				|СГРУППИРОВАТЬ ПО
				|БюджетнаяОперация.Период,
				|БюджетнаяОперация.Сценарий,
				|БюджетнаяОперация.ВалютаДокумента,
				|БюджетнаяОперация.ЦФО,
				|БюджетнаяОперация.Проект,
				|БюджетнаяОперация.Контрагент,
				|БюджетнаяОперация.Номенклатура,
				|БюджетнаяОперация.СтатьяОборотов,
				|ГраницыПланирования.ГраницаФиксации";
					
				Запрос.Текст=ТекстЗапроса;
				
				Запрос.УстановитьПараметр("ВалютаДокумента",ВалютаДокумента);
				Запрос.УстановитьПараметр("ВалютаСценария",СтруктураДанныхШапки.СценарийВалюта);
				Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
				Запрос.УстановитьПараметр("Ссылка",Ссылка);
				Запрос.УстановитьПараметр("Сценарий",Сценарий);
				
    			Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));
    			Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));

                ТабОборотовДокумента=Запрос.Выполнить().Выгрузить();
				
	Возврат ТабОборотовДокумента;
	
КонецФункции // СформироватьЗапросПоДаннымДокумента()

// Возвращает таблицу значений для использования в движениях
// регистра бухгалтерии "Бюджетирование"
//
Функция СформироватьПроводкиПоДаннымДокумента(СтруктураДанныхШапки)
	
	Запрос=Новый Запрос;
	ТекстЗапроса="
	|ВЫБРАТЬ
	|БюджетнаяОперация.Период КАК Период,
	|ДанныеСчетДт.Счет КАК СчетДт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт1,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт2,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт3,
	|ДанныеСчетКт.Счет КАК СчетКт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт1,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт2,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт3,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА БюджетнаяОперация.ВалютаДокумента 
	|	ИНАЧЕ NULL КОНЕЦ КАК ВалютаДт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА БюджетнаяОперация.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	ИНАЧЕ NULL КОНЕЦ) КАК ВалютнаяСуммаДт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА БюджетнаяОперация.ВалютаДокумента 
	|	ИНАЧЕ NULL КОНЕЦ КАК ВалютаКт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА БюджетнаяОперация.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	ИНАЧЕ NULL КОНЕЦ) КАК ВалютнаяСуммаКт,
	|ТаблицаПроводок.Ссылка КАК СтатьяОборотов,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетДт.Количественный ТОГДА БюджетнаяОперация.Количество * ТаблицаПроводок.КоэффициентДляКоличества 
	|	ИНАЧЕ NULL КОНЕЦ) КАК КоличествоДт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетКт.Количественный ТОГДА БюджетнаяОперация.Количество * ТаблицаПроводок.КоэффициентДляКоличества 
	|	ИНАЧЕ NULL КОНЕЦ) КАК КоличествоКт,
	|СУММА(ВЫРАЗИТЬ(ВЫБОР 
	|	КОГДА &ВалютаДокумента = &ВалютаУпрУчета ТОГДА БюджетнаяОперация.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	КОГДА &ВалютаДокумента <> &ВалютаУпрУчета И КурсыДокумента.Курс <> 0 И КурсыУпрУчета.Курс <> 0 
	|		ТОГДА БюджетнаяОперация.Сумма * ТаблицаПроводок.КоэффициентДляСуммы * КурсыДокумента.Курс 
	|			* КурсыУпрУчета.Кратность / (КурсыУпрУчета.Курс * КурсыДокумента.Кратность) 
	|	ИНАЧЕ 0 КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|СУММА(ВЫРАЗИТЬ(ВЫБОР 
	|	КОГДА &ВалютаДокумента = &ВалютаСценария ТОГДА БюджетнаяОперация.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	КОГДА &ВалютаДокумента <> &ВалютаСценария И КурсыДокумента.Курс <> 0 И КурсыСценария.Курс <> 0 
	|		ТОГДА БюджетнаяОперация.Сумма * ТаблицаПроводок.КоэффициентДляСуммы * КурсыДокумента.Курс 
	|			* КурсыСценария.Кратность / (КурсыСценария.Курс * КурсыДокумента.Кратность) 
	|	ИНАЧЕ 0 КОНЕЦ КАК ЧИСЛО(15, 2))) КАК СуммаСценария
	|ИЗ
	|(ВЫБРАТЬ
	|	БюджетнаяОперацияШапка.Сценарий КАК Сценарий,
	|	БюджетнаяОперацияШапка.ПериодПланирования КАК Период,
	|	БюджетнаяОперацияШапка.СтатьяОборотов КАК СтатьяОборотов,
	|	БюджетнаяОперацияШапка.ЦФО КАК ЦФО,
	|	БюджетнаяОперацияШапка.Проект КАК Проект,
	|	БюджетнаяОперацияШапка.Контрагент КАК Контрагент,
	|	БюджетнаяОперацияШапка.Номенклатура КАК Номенклатура,
	|	БюджетнаяОперацияШапка.ВалютаДокумента КАК ВалютаДокумента,
	|	БюджетнаяОперацияШапка.Количество КАК Количество,
	|	БюджетнаяОперацияШапка.Сумма КАК Сумма
	|ИЗ
	|	Документ.БюджетнаяОперация КАК БюджетнаяОперацияШапка
	|
	|ГДЕ
	|	БюджетнаяОперацияШапка.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	БюджетнаяОперацияЗависимыеОбороты.Ссылка.Сценарий,
	|	БюджетнаяОперацияЗависимыеОбороты.ПериодПланирования,
	|	БюджетнаяОперацияЗависимыеОбороты.СтатьяОборотов,
	|	БюджетнаяОперацияЗависимыеОбороты.ЦФО,
	|	БюджетнаяОперацияЗависимыеОбороты.Проект,
	|	БюджетнаяОперацияЗависимыеОбороты.Контрагент,
	|	БюджетнаяОперацияЗависимыеОбороты.Номенклатура,
	|	БюджетнаяОперацияЗависимыеОбороты.Ссылка.ВалютаДокумента,
	|	БюджетнаяОперацияЗависимыеОбороты.Количество,
	|	БюджетнаяОперацияЗависимыеОбороты.Сумма
	|ИЗ
	|	Документ.БюджетнаяОперация.ЗависимыеОбороты КАК БюджетнаяОперацияЗависимыеОбороты
	|
	|ГДЕ
	|	БюджетнаяОперацияЗависимыеОбороты.Ссылка = &Ссылка) КАК БюджетнаяОперация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиОборотовПоБюджетам.ШаблоныПроводок КАК ТаблицаПроводок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Бюджетирование.Ссылка КАК Счет,
	|			Бюджетирование.Валютный КАК Валютный,
	|			Бюджетирование.Количественный КАК Количественный,
	|			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	|		ИЗ
	|			ПланСчетов.Бюджетирование КАК Бюджетирование
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчетДт
	|		ПО ТаблицаПроводок.СчетДт = ДанныеСчетДт.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Бюджетирование.Ссылка КАК Счет,
	|			Бюджетирование.Валютный КАК Валютный,
	|			Бюджетирование.Количественный КАК Количественный,
	|			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	|		ИЗ
	|			ПланСчетов.Бюджетирование КАК Бюджетирование
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчетКт
	|		ПО ТаблицаПроводок.СчетКт = ДанныеСчетКт.Счет
	|	ПО БюджетнаяОперация.СтатьяОборотов = ТаблицаПроводок.Ссылка
	// Курсы документа
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата, 
	|	КурсыВалют.Курс, 
	|	КурсыВалют.Кратность
	|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Дата
	|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|			ПериодПланирования Как Дата
	|		ИЗ
	|			Документ.БюджетнаяОперация.ЗависимыеОбороты
	|		ГДЕ
	|			Документ.БюджетнаяОперация.ЗависимыеОбороты.Ссылка = &Ссылка
	|		ОБЪЕДИНИТЬ ВСЕ 
	|		ВЫБРАТЬ
	|			ПериодПланирования Как Дата
	|		ИЗ 
	|			Документ.БюджетнаяОперация
	|		ГДЕ
	|			Документ.БюджетнаяОперация.Ссылка = &Ссылка) КАК Обороты
	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И КурсыВнутр.Валюта = &ВалютаДокумента";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВнутр.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаДокумента";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
    ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыДокумента
	|ПО КурсыДокумента.Дата = БюджетнаяОперация.Период
	// Курсы валюты управленческого учета
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата, 
	|	КурсыВалют.Курс, 
	|	КурсыВалют.Кратность
	|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Дата
	|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
  	|			ПериодПланирования Как Дата
  	|		ИЗ
  	|			Документ.БюджетнаяОперация.ЗависимыеОбороты
  	|		ГДЕ
	|			Документ.БюджетнаяОперация.ЗависимыеОбороты.Ссылка = &Ссылка
  	|		ОБЪЕДИНИТЬ ВСЕ 
 	|		ВЫБРАТЬ
 	|			ПериодПланирования Как Дата
  	|		ИЗ 
 	|			Документ.БюджетнаяОперация
 	|		ГДЕ
	|			Документ.БюджетнаяОперация.Ссылка = &Ссылка) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И КурсыВнутр.Валюта = &ВалютаУпрУчета";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВнутр.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
    ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыУпрУчета
	|ПО КурсыУпрУчета.Дата = БюджетнаяОперация.Период
	// Курсы сценария планирования
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата, 
	|	КурсыВалют.Курс, 
	|	КурсыВалют.Кратность
	|ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Дата
	|	ИЗ РегистрСведений."+СтруктураДанныхШапки.РегистрКурсовВалют+" КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
  	|			ПериодПланирования Как Дата
  	|		ИЗ
  	|			Документ.БюджетнаяОперация.ЗависимыеОбороты
  	|		ГДЕ
	|			Документ.БюджетнаяОперация.ЗависимыеОбороты.Ссылка = &Ссылка
  	|		ОБЪЕДИНИТЬ ВСЕ 
 	|		ВЫБРАТЬ
 	|			ПериодПланирования Как Дата
  	|		ИЗ 
 	|			Документ.БюджетнаяОперация
 	|		ГДЕ
	|			Документ.БюджетнаяОперация.Ссылка = &Ссылка) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И КурсыВнутр.Валюта = &ВалютаСценария";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВнутр.Сценарий=&Сценарий";
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|	СГРУППИРОВАТЬ ПО Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаСценария";
	Если СтруктураДанныхШапки.ИспользоватьКурсыСценария Тогда
		ТекстЗапроса=ТекстЗапроса+"
	|	И КурсыВалют.Сценарий=&Сценарий";
	КонецЕсли;
    ТекстЗапроса=ТекстЗапроса+" ) КАК КурсыСценария
	|ПО КурсыСценария.Дата = БюджетнаяОперация.Период
	|СГРУППИРОВАТЬ ПО
	|БюджетнаяОперация.Период,
	|ДанныеСчетДт.Счет,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ДанныеСчетКт.Счет,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетнаяОперация.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетнаяОперация.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетнаяОперация.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетнаяОперация.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА БюджетнаяОперация.ВалютаДокумента 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА БюджетнаяОперация.ВалютаДокумента 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ТаблицаПроводок.Ссылка";
	
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ВалютаДокумента",ВалютаДокумента);
	Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	Запрос.УстановитьПараметр("ВалютаСценария",СтруктураДанныхШапки.СценарийВалюта);
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	
	ТабПроводокДокумента=Запрос.Выполнить().Выгрузить();
				
Возврат ТабПроводокДокумента;

КонецФункции // СформироватьПроводкиПоДаннымДокумента()


// Проверяет курсы валют, используемых при проведении
//
Процедура ПроверкаКурсовПоДате(СтруктураДанныхШапки,Отказ,Заголовок)
	
	Запрос=Новый Запрос;
	Запрос.Текст="
	|ВЫБРАТЬ
	|	МИНИМУМ(ВложенныйЗапрос.ПериодПланирования) КАК ДатаКурса,
	|	&Сценарий КАК Сценарий,
	|	&ИспользоватьКурсыСценария КАК ИспользоватьКурсыСценария,
	|	&ВалютаСценария КАК ВалютаСценария,
	|	&ВалютаДокумента КАК Валюта
	|ИЗ
	|	(ВЫБРАТЬ
	|		БюджетнаяОперацияЗависимыеОбороты.ПериодПланирования КАК ПериодПланирования
	|	ИЗ
	|		Документ.БюджетнаяОперация.ЗависимыеОбороты КАК БюджетнаяОперацияЗависимыеОбороты
	|	
	|	ГДЕ
	|		БюджетнаяОперацияЗависимыеОбороты.Ссылка = &Ссылка
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		БюджетнаяОперация.ПериодПланирования
	|	ИЗ
	|		Документ.БюджетнаяОперация КАК БюджетнаяОперация
	|	
	|	ГДЕ
	|		БюджетнаяОперация.Ссылка = &Ссылка) КАК ВложенныйЗапрос";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	Запрос.УстановитьПараметр("ИспользоватьКурсыСценария",СтруктураДанныхШапки.ИспользоватьКурсыСценария);
	Запрос.УстановитьПараметр("ВалютаСценария",СтруктураДанныхШапки.СценарийВалюта);
	Запрос.УстановитьПараметр("ВалютаДокумента",ВалютаДокумента);
	
	ТаблицаВалют=Запрос.Выполнить().Выгрузить();				
	Бюджетирование.ПроверкаКурсовВалютСценарии(ТаблицаВалют,Отказ,Заголовок);
		
КонецПроцедуры // ПроверкаКурсовВалют()


Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураДанныхШапки=Новый Структура;
	
	СтруктураДанныхШапки.Вставить("СценарийПериодичность",Сценарий.Периодичность);
	СтруктураДанныхШапки.Вставить("СценарийВалюта",Сценарий.Валюта);
	СтруктураДанныхШапки.Вставить("РегистрКурсовВалют",?(Сценарий.ИспользоватьКурсыСценария,"КурсыВалютПоСценариям","КурсыВалют"));
	СтруктураДанныхШапки.Вставить("ИспользоватьКурсыСценария",Сценарий.ИспользоватьКурсыСценария);
	СтруктураДанныхШапки.Вставить("Сценарий",Сценарий);

	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолейШапка(), Отказ, Заголовок);
	
	Если ЗначениеЗаполнено(ВалютаДокумента) Тогда
		
		ПроверкаКурсовПоДате(СтруктураДанныхШапки,Отказ,Заголовок);
		
	КонецЕсли;
	
	Если Не Отказ Тогда
		
		
		ДвиженияПоРегистрам(СтруктураДанныхШапки, Отказ, Заголовок);
		
		
	КонецЕсли;		
	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ,РежимЗаписи,РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	
	Если НЕ (Номенклатура=Неопределено) И Номенклатура.Пустая() Тогда
		Номенклатура=Неопределено;
	КонецЕсли;
	
	Если НЕ РежимЗаписи=РежимЗаписиДокумента.ОтменаПроведения Тогда 
		
		РассчитатьЗависимыеОбороты();
		
	КонецЕсли;

	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Запрос=Новый Запрос;
	
	ТекстЗапроса="ВЫБРАТЬ
	|	БюджетнаяОперация.Период КАК Период,
	|	БюджетнаяОперация.Сценарий КАК Сценарий,
	|	БюджетнаяОперация.ЦФО КАК ЦФО,
	|	БюджетнаяОперация.Проект КАК Проект,
	|	БюджетнаяОперация.СтатьяОборотов КАК СтатьяОборотов,
	|	ГраницыПланирования.ГраницаФиксации КАК ГраницаФиксации
	|ИЗ
	|	(ВЫБРАТЬ
	|		БюджетнаяОперацияШапка.Сценарий,
	|		БюджетнаяОперацияШапка.ПериодПланирования КАК Период,
	|		БюджетнаяОперацияШапка.ЦФО,
	|		БюджетнаяОперацияШапка.Проект,
	|		БюджетнаяОперацияШапка.СтатьяОборотов
	|	ИЗ
	|		Документ.БюджетнаяОперация КАК БюджетнаяОперацияШапка
	|       ГДЕ БюджетнаяОперацияШапка.Ссылка=&Ссылка
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		БюджетнаяОперацияЗависимыеОбороты.Ссылка.Сценарий,
	|		БюджетнаяОперацияЗависимыеОбороты.ПериодПланирования КАК Период,
	|		БюджетнаяОперацияЗависимыеОбороты.ЦФО,
	|		БюджетнаяОперацияЗависимыеОбороты.Проект,
	|		БюджетнаяОперацияЗависимыеОбороты.СтатьяОборотов
	|	ИЗ
	|	Документ.БюджетнаяОперация.ЗависимыеОбороты КАК БюджетнаяОперацияЗависимыеОбороты
	|		ГДЕ БюджетнаяОперацияЗависимыеОбороты.Ссылка=&Ссылка) КАК БюджетнаяОперация
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ
	|	ГраницыПериодов.Сценарий КАК Сценарий,
	|	ГраницыПериодов.ЦФО КАК ЦФО,
	|	ГраницыПериодов.Проект КАК Проект,
	|	МАКСИМУМ(ГраницыПериодов.ГраницаФиксации) КАК ГраницаФиксации
	|ИЗ
	|		РегистрСведений.ГраницыПериодовБюджетирования КАК ГраницыПериодов				
	|				
	|СГРУППИРОВАТЬ ПО
	|	ГраницыПериодов.Сценарий,
	|	ГраницыПериодов.ЦФО,
	|	ГраницыПериодов.Проект) КАК ГраницыПланирования
	|ПО ГраницыПланирования.Сценарий=БюджетнаяОперация.Сценарий
	| И (БюджетнаяОперация.ЦФО = ГраницыПланирования.ЦФО ИЛИ ГраницыПланирования.ЦФО = &ПустойЦФО) 
	| И (БюджетнаяОперация.Проект = ГраницыПланирования.Проект ИЛИ ГраницыПланирования.Проект = &ПустойПроект)";
	
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Запрос.УстановитьПараметр("ПустойЦФО",Новый(Тип("СправочникСсылка.Подразделения")));
	Запрос.УстановитьПараметр("ПустойПроект",Новый(Тип("СправочникСсылка.Проекты")));
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		Если (НЕ РезультатЗапроса.ГраницаФиксации=NULL ) И (РезультатЗапроса.Период<=РезультатЗапроса.ГраницаФиксации) Тогда
			
			#Если Клиент Тогда
			
			Сообщить("Попытка изменения зафиксированного плана:
			|Сценарий планирования: "+Сценарий+"
			|Статья оборотов: "+РезультатЗапроса.СтатьяОборотов+"
			|ЦФО: "+РезультатЗапроса.ЦФО+"
			|Проект: "+РезультатЗапроса.Проект+"
			|Период планирования: "+РезультатЗапроса.Период+"
			|Граница фиксации планов: "+РезультатЗапроса.ГраницаФиксации+"
			|В отмене проведения отказано.");
			
			#КонецЕсли
			
			Отказ=Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

// Формирует движения по регистрам
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(СтруктураДанныхШапки, Отказ, Заголовок)
	
	ТабОборотовДокумента=СформироватьЗапросПоДаннымДокумента(СтруктураДанныхШапки);
	
	// Проверка на границу фиксации
	Для каждого СтрокаОборотов Из ТабОборотовДокумента Цикл
	
		Если (НЕ СтрокаОборотов.ГраницаФиксации=NULL ) И (СтрокаОборотов.Период<=СтрокаОборотов.ГраницаФиксации) Тогда
			
			#Если Клиент Тогда
			
			Сообщить("Попытка изменения зафиксированного плана:
			|Сценарий планирования: "+Сценарий+"
			|Статья оборотов: "+СтрокаОборотов.СтатьяОборотов+"
            |ЦФО: "+СтрокаОборотов.ЦФО+"
			|Проект: "+СтрокаОборотов.Проект+"
			|Период планирования: "+СтрокаОборотов.Период+"
			|Граница фиксации планов: "+СтрокаОборотов.ГраницаФиксации+"
			|Проведение отменено.");
			
			#КонецЕсли
			
			Отказ=Истина;
			Возврат;
			
		КонецЕсли;
		
	КонецЦикла; 	
		
	// Проверка и движения по регистру "Контролируемые значения бюджетов"
	НаборДвижений = Движения.КонтролируемыеЗначенияБюджетов;
	ТабКонтролируемыхДвижений=НаборДвижений.Выгрузить();
	ТабКонтролируемыхДвижений.Очистить();
	
	Для Каждого СтрокаОборотовДляКонтроля Из ТабОборотовДокумента Цикл
		
		ТабКонтролируемыхЗначений=ПроверкаКонтролируемыхЗначений(СтруктураДанныхШапки, СтрокаОборотовДляКонтроля);
		
		Если ТипЗнч(ТабКонтролируемыхЗначений)=Тип("Булево") И НЕ ТабКонтролируемыхЗначений Тогда
			
			#Если Клиент Тогда
			Сообщить("Превышение контролируемого значения. Проведение отменено!");
			#КонецЕсли
			
			Отказ=Истина;
			Возврат;
		Иначе
			
			Если ТабКонтролируемыхЗначений.Количество()>0 Тогда
				
				ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТабКонтролируемыхЗначений,ТабКонтролируемыхДвижений)
												
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабКонтролируемыхДвижений.ЗаполнитьЗначения(Сценарий,"Сценарий");
	ТабКонтролируемыхДвижений.ЗаполнитьЗначения(Перечисления.ИспользованиеКонтролируемыхЗначенийБюджетов.ПриПланировании,"ИспользованиеКонтролируемогоЗначения");
	ТабКонтролируемыхДвижений.ЗаполнитьЗначения(Истина,"Активность");
	
	НаборДвижений.мТаблицаДвижений   = ТабКонтролируемыхДвижений;	
	Движения.КонтролируемыеЗначенияБюджетов.ВыполнитьДвижения();
	
	// По регистру "ОборотыБюджетов"
	
	НаборДвижений = Движения.ОборотыБюджетов;	
	НаборДвижений.мТаблицаДвижений   = ТабОборотовДокумента;
	
	Движения.ОборотыБюджетов.ВыполнитьДвижения();
	
	// По регистру бухгалтерии "Бюджетирование"
	
	ТабПроводокДокумента=СформироватьПроводкиПоДаннымДокумента(СтруктураДанныхШапки);
	ТабПроводокДокумента.Колонки.Добавить("Сценарий");
	ТабПроводокДокумента.ЗаполнитьЗначения(Сценарий,"Сценарий");
		
	НаборДвижений=Движения.Бюджетирование;
	
	НаборДвижений.мТаблицаДвижений   = ТабПроводокДокумента;
    Движения.Бюджетирование.ВыполнитьДвижения();

					
КонецПроцедуры // ДвиженияПоРегистрам()




