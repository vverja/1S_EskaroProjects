////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СоответствиеВалютныеСпособыРасчета;
Перем мДлинаСуток;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Добавляет строки в таблицы начислений на основе данных регистра сведений "ПлановыеНачисленияРаботниковОрганизаций"
//
// Параметры
//
Процедура ДобавитьСтрокиНачисленийПоРаботнику(Сотрудник, ДатаАктуальности = Неопределено) Экспорт
	
	ГоловнаяОрганизация = ОбщегоНазначения.ГоловнаяОрганизация(Организация);
	Если ДатаАктуальности = Неопределено Тогда
		ДатаАктуальности = Дата
	КонецЕсли;
	
	ЗапросНачисления = Новый Запрос;
	ЗапросНачисления.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросНачисления.УстановитьПараметр("Организация", ГоловнаяОрганизация);
	ЗапросНачисления.УстановитьПараметр("Период",  ДатаАктуальности);
	ЗапросНачисления.УстановитьПараметр("Регистратор", Ссылка);
	ЗапросНачисления.УстановитьПараметр("Прекратить", Перечисления.ВидыДействияСНачислением.Прекратить);
	
	ЗапросНачисления.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА Начисления.ВидРасчета ССЫЛКА ПланВидовРасчета.ОсновныеНачисленияОрганизаций
	|			ТОГДА ""Основные""
	|		ИНАЧЕ ""Дополнительные""
	|	КОНЕЦ КАК ВидНачислений,
	|	Начисления.Сотрудник,
	|	Начисления.Сотрудник.Физлицо КАК Физлицо,
	|	Начисления.ДокументОснование,
	|	Начисления.ВидРасчета КАК ВидРасчета,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ Начисления.Показатель1
	|	КОНЕЦ КАК Показатель1,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ Начисления.Показатель2
	|	КОНЕЦ КАК Показатель2,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ Начисления.Показатель3
	|	КОНЕЦ КАК Показатель3,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ Начисления.Показатель4
	|	КОНЕЦ КАК Показатель4,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ Начисления.Показатель5
	|	КОНЕЦ КАК Показатель5,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ Начисления.Показатель6
	|	КОНЕЦ КАК Показатель6,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд1
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТарифныйРазряд1,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд2
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТарифныйРазряд2,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд3
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТарифныйРазряд3,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд4
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТарифныйРазряд4,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд5
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТарифныйРазряд5,
	|	ВЫБОР
	|				КОГДА Начисления.ВидРасчета.ТребуетВводаТарифногоРазряда
	|					ТОГДА Начисления.ТарифныйРазряд6
	|				ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ТарифныйРазряд6,
	|   Начисления.Валюта1 КАК Валюта1,
	|	Начисления.Валюта2 КАК Валюта2,
	|	Начисления.Валюта3 КАК Валюта3,
	|	Начисления.Валюта3 КАК Валюта4,
	|	Начисления.Валюта3 КАК Валюта5,
	|	Начисления.Валюта4 КАК Валюта6
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|		&Период,
	|		Сотрудник = &Сотрудник
	|			И Регистратор <> &Регистратор) КАК Начисления
	|ГДЕ
	|	Начисления.ВидРасчета.Код ЕСТЬ НЕ NULL 
	|	И Начисления.Актуальность";

	Выборка = ЗапросНачисления.Выполнить().Выбрать();
	
	СтруктураПоиска = Новый Структура("Сотрудник, ВидРасчета, Действие");
	СтруктураПоиска.Действие   = Перечисления.ВидыДействияСНачислением.НеИзменять;
	
	Пока Выборка.Следующий() Цикл
		
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		
		МассивНачислений = ОсновныеНачисления.НайтиСтроки(СтруктураПоиска);
		
		Если МассивНачислений.Количество() <> 0 Тогда
			Продолжить;
		КонецЕсли; 

		НоваяСтрокаТЧ 					= ОсновныеНачисления.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТЧ,Выборка);
		НоваяСтрокаТЧ.Действие		= Перечисления.ВидыДействияСНачислением.НеИзменять;
		НоваяСтрокаТЧ.ДатаДействия	= ДатаАктуальности;
		
	КонецЦикла;

КонецПроцедуры // ДобавитьСтрокиНачисленийПоРаботнику()

// Добавляет строки в таблицы взносов на основе данных регистра сведений "ВзносыВФондыРаботниковОрганизаций"
//
// Параметры
//
Процедура ДобавитьСтрокиВзносовПоРаботнику(Сотрудник, ДатаАктуальности = Неопределено) Экспорт
	
	ЗапросВзносы = Новый Запрос;
	ЗапросВзносы.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросВзносы.УстановитьПараметр("Организация", Организация);
	ЗапросВзносы.УстановитьПараметр("Период",  ДатаАктуальности);
	ЗапросВзносы.УстановитьПараметр("ПустойВзнос", Справочники.Налоги.ПустаяСсылка());
	ЗапросВзносы.УстановитьПараметр("ВзносыФОТ", Справочники.Налоги.ВзносыФОТ);
	
	ЗапросВзносы.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА Налог.Родитель=&ВзносыФОТ ТОГДА ""ВзносыФОТ"" ИНАЧЕ ""Взносы"" КОНЕЦ КАК ВидВзносов,
	|	Взносы.Сотрудник КАК Сотрудник,
	|	&Организация	КАК Организация,
	|	Взносы.Налог	КАК Налог	
	|ИЗ
	|	РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Период, Организация = &Организация И Сотрудник = &Сотрудник) КАК Взносы
	|
	|ГДЕ
	|	(Взносы.Налог <> &ПустойВзнос)
	|   И Взносы.Актуальность";
	ВыборкаВзносы = ЗапросВзносы.Выполнить().Выбрать();
		
	СтруктураПоиска = Новый Структура("Сотрудник, Налог, Действие"); 
	СтруктураПоиска.Действие   = Перечисления.ВидыДействияСНачислением.НеИзменять;
	Пока ВыборкаВзносы.Следующий() Цикл
		
		СтруктураПоиска.Сотрудник    	= ВыборкаВзносы.Сотрудник;
		СтруктураПоиска.Налог 	= ВыборкаВзносы.Налог;
		Если ВыборкаВзносы.ВидВзносов 	= "ВзносыФОТ" Тогда
			МассивВзносов = ВзносыФОТ.НайтиСтроки(СтруктураПоиска);
		Иначе	
			МассивВзносов = Взносы.НайтиСтроки(СтруктураПоиска);
		КонецЕсли; 
		
		Если МассивВзносов.Количество() <> 0 Тогда
			Продолжить;
		КонецЕсли; 

		Если ВыборкаВзносы.ВидВзносов = "ВзносыФОТ" Тогда
			НоваяСтрокаТЧ 					= ВзносыФОТ.Добавить();
		Иначе
			НоваяСтрокаТЧ 					= Взносы.Добавить();
		КонецЕсли;			
		
		НоваяСтрокаТЧ.Сотрудник	 		= ВыборкаВзносы.Сотрудник;
		НоваяСтрокаТЧ.Налог		 		= ВыборкаВзносы.Налог;
		НоваяСтрокаТЧ.Действие   		= Перечисления.ВидыДействияСНачислением.НеИзменять;
		НоваяСтрокаТЧ.ДатаДействия  	= Дата;		
	КонецЦикла;
	
	Если ВыборкаВзносы.Количество() = 0 и (Сотрудник.ВидЗанятости <> Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
		Если НЕ ПроведениеРасчетов.ИспользуетсяЕСВ(ДатаАктуальности) Тогда
			ДобавитьСтрокуВзносы( Сотрудник, Взносы, Справочники.Налоги.Безработица );
			ДобавитьСтрокуВзносы( Сотрудник, Взносы, Справочники.Налоги.Пенсионный );
			ДобавитьСтрокуВзносы( Сотрудник, Взносы, Справочники.Налоги.Соцстрах );
			
			ДобавитьСтрокуВзносы( Сотрудник, ВзносыФОТ, Справочники.Налоги.БезработицаФОТ );
			ДобавитьСтрокуВзносы( Сотрудник, ВзносыФОТ, Справочники.Налоги.ПенсионныйФОТ );
			ДобавитьСтрокуВзносы( Сотрудник, ВзносыФОТ, Справочники.Налоги.СоцстрахФОТ );
			ДобавитьСтрокуВзносы( Сотрудник, ВзносыФОТ, Справочники.Налоги.СоцстрахНесчФОТ );
		Иначе
			ДобавитьСтрокуВзносы( Сотрудник, Взносы, Справочники.Налоги.ЕСВРаботники );
			ДобавитьСтрокуВзносы( Сотрудник, Взносы, Справочники.Налоги.ЕСВБольничные );
			
			ДобавитьСтрокуВзносы( Сотрудник, ВзносыФОТ, Справочники.Налоги.ЕСВФОТРаботники );
			ДобавитьСтрокуВзносы( Сотрудник, ВзносыФОТ, Справочники.Налоги.ЕСВФОТБольничные );
		КонецЕсли;	
	КонецЕсли;	


КонецПроцедуры

Процедура ДобавитьСтрокуВзносы(Сотрудник, ТабЧасть, Налог)
	
	  ТекущаяСтрока = ТабЧасть.Добавить();
	  ТекущаяСтрока.Сотрудник			= Сотрудник;
	  ТекущаяСтрока.ДатаДействия	= Дата;
	  ТекущаяСтрока.Действие		= Перечисления.ВидыДействияСНачислением.Начать;
	  ТекущаяСтрока.Налог			= Налог;
	  
КонецПроцедуры

Процедура ГрупповаяОбработкаВзносов(ГруппаВзносов, Сотрудники, ДатаВзноса) Экспорт
	
	ЗапросВзносы = Новый Запрос;
	ЗапросВзносы.УстановитьПараметр("Сотрудники", Сотрудники);
	ЗапросВзносы.УстановитьПараметр("Организация", Организация);
	ЗапросВзносы.УстановитьПараметр("Дата",  ДатаВзноса);
	ЗапросВзносы.УстановитьПараметр("ДатаПрекратить",  ДатаВзноса-1);
	ЗапросВзносы.УстановитьПараметр("Группа", ГруппаВзносов);
	ЗапросВзносы.УстановитьПараметр("ФОТ", Справочники.Налоги.Взносы);
	
	ЗапросВзносы.Текст = 
	"ВЫБРАТЬ
	|	   Взносы.Сотрудник,
	|	   Взносы.Налог,
	|	   ВЫБОР 
	|	    КОГДА МАКСИМУМ(Взносы.Было) = ЛОЖЬ И МАКСИМУМ(Взносы.Стало)=ИСТИНА
	|	     ТОГДА ЗНАЧЕНИЕ (Перечисление.ВидыДействияСНачислением.Начать)
	|	    КОГДА МАКСИМУМ(Взносы.Было)  = ИСТИНА И МАКСИМУМ(Взносы.Стало) = ЛОЖЬ
	|	     ТОГДА ЗНАЧЕНИЕ (Перечисление.ВидыДействияСНачислением.Прекратить)
	|	   ИНАЧЕ ЗНАЧЕНИЕ (Перечисление.ВидыДействияСНачислением.НеИзменять)  
	|	   КОНЕЦ КАК Действие,
	|	   ВЫБОР 
	|	    КОГДА МАКСИМУМ(Взносы.Было) = ЛОЖЬ И МАКСИМУМ(Взносы.Стало)=ИСТИНА
	|	     ТОГДА &Дата
	|	    КОГДА МАКСИМУМ(Взносы.Было)  = ИСТИНА И МАКСИМУМ(Взносы.Стало) = ЛОЖЬ
	|	     ТОГДА &ДатаПрекратить
	|	   ИНАЧЕ &Дата  
	|	   КОНЕЦ КАК ДатаДействия
    |
	|	ИЗ
	|	(ВЫБРАТЬ	
	|		ВзносыВФондыРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|		ВзносыВФондыРаботниковОрганизацийСрезПоследних.Налог КАК Налог,
	|		Истина КАК Было,
	|		Ложь КАК Стало
	|	 ИЗ
	|		РегистрСведений.ВзносыВФондыРаботниковОрганизаций.СрезПоследних(&Дата,Сотрудник В (&Сотрудники) И Налог.Родитель = &ФОТ) КАК ВзносыВФондыРаботниковОрганизацийСрезПоследних
	|	 ГДЕ ВзносыВФондыРаботниковОрганизацийСрезПоследних.Актуальность
	|		
	|	 ОБЪЕДИНИТЬ	
    |
	|	 ВЫБРАТЬ
	|		Сотрудники.Ссылка,
	|		ВзносыВФондыПоГруппам.Налог,
	|		Ложь,
	|		Истина
	|	 ИЗ
	|	    Справочник.СотрудникиОрганизаций КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрСведений.ВзносыВФондыПоГруппам.СрезПоследних(&Дата) КАК ВзносыВФондыПоГруппам
	|		ПО Истина
	|	 ГДЕ ВзносыВФондыПоГруппам.ГруппаВзносов = &Группа
	|		И ВзносыВФондыПоГруппам.Налог.Родитель = &ФОТ
	|		И ВзносыВФондыПоГруппам.Действует
	|		И Сотрудники.Ссылка В (&Сотрудники)
	|	 ) КАК Взносы
	|	СГРУППИРОВАТЬ ПО Сотрудник, Налог";
	
	ВыборкаВзносы = ЗапросВзносы.Выполнить().Выгрузить();
	ЗапросВзносы.УстановитьПараметр("ФОТ", Справочники.Налоги.ВзносыФОТ);
	ВыборкаВзносыФОТ = ЗапросВзносы.Выполнить().Выгрузить();
	
	Взносы.Загрузить(ВыборкаВзносы);
	ВзносыФОТ.Загрузить(ВыборкаВзносыФОТ);
	
КонецПроцедуры	

// Удаляет строки начислений по РаботникиОрганизации
//
Процедура УдалитьСтрокиНачисленийПоРаботнику(Сотрудник) Экспорт
	
	СтруктураПоиска = Новый Структура("Сотрудник", Сотрудник);
	
	МассивСтрок = ОсновныеНачисления.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из МассивСтрок Цикл
		ОсновныеНачисления.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	
КонецПроцедуры // УдалитьСтрокиНачисленийПоРаботнику()

// Удаляет строки начислений по РаботникиОрганизации
//
Процедура УдалитьСтрокиВзносовПоРаботнику(Сотрудник) Экспорт
	
	СтруктураПоиска = Новый Структура("Сотрудник", Сотрудник);
	
	МассивСтрок = Взносы.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из МассивСтрок Цикл
		Взносы.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	
	МассивСтрок = ВзносыФОТ.НайтиСтроки(СтруктураПоиска);
	Для каждого СтрокаТабличнойЧасти Из МассивСтрок Цикл
		ВзносыФОТ.Удалить(СтрокаТабличнойЧасти);
	КонецЦикла;
	
КонецПроцедуры // УдалитьСтрокиНачисленийПоРаботнику()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",		Ссылка);
	Запрос.УстановитьПараметр("ПустаяОрганизация",	Справочники.Организации.ПустаяСсылка());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Дата,
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Организация,
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Организация КАК ГоловнаяОрганизация,
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Ссылка
	|ИЗ
	|	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций КАК ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций
	|ГДЕ
	|	ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "РаботникиОрганизации" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента, ПроверкаШтатногоРасписания)

	Запрос = Новый Запрос;
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Прием",					Перечисления.ПричиныИзмененияСостояния.ПриемНаРаботу);
	
	
	// получим временную таблицу с расчетом показателей
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧОсновныеНачисления.ВидРасчета КАК ВидРасчета,
	|	МАКСИМУМ(Показатели.НомерСтроки) КАК КоличествоПоказателей,
	|	Показатели1.Показатель.Предопределенный КАК Показатель1Предопределенный,
	|	Показатели1.Показатель.Наименование КАК Показатель1Наименование,
	|	Показатели1.Показатель.ТипПоказателя КАК Показатель1ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения КАК Показатель1ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный КАК Показатель2Предопределенный,
	|	Показатели2.Показатель.Наименование КАК Показатель2Наименование,
	|	Показатели2.Показатель.ТипПоказателя КАК Показатель2ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения КАК Показатель2ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный КАК Показатель3Предопределенный,
	|	Показатели3.Показатель.Наименование КАК Показатель3Наименование,
	|	Показатели3.Показатель.ТипПоказателя КАК Показатель3ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения КАК Показатель3ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный КАК Показатель4Предопределенный,
	|	Показатели4.Показатель.Наименование КАК Показатель4Наименование,
	|	Показатели4.Показатель.ТипПоказателя КАК Показатель4ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения КАК Показатель4ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный КАК Показатель5Предопределенный,
	|	Показатели5.Показатель.Наименование КАК Показатель5Наименование,
	|	Показатели5.Показатель.ТипПоказателя КАК Показатель5ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения КАК Показатель5ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный КАК Показатель6Предопределенный,
	|	Показатели6.Показатель.Наименование КАК Показатель6Наименование,
	|	Показатели6.Показатель.ТипПоказателя КАК Показатель6ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения КАК Показатель6ВозможностьИзменения,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.ТарифнаяСтавка КАК Показатель1ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка КАК Показатель2ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка КАК Показатель3ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка КАК Показатель4ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка КАК Показатель5ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка КАК Показатель6ТарифнаяСтавка
	|ПОМЕСТИТЬ ВТПоказатели
	|ИЗ
	|	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ТЧОсновныеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели1
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели1.Ссылка
	|			И (Показатели1.НомерСтроки = 1)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели2
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели2.Ссылка
	|			И (Показатели2.НомерСтроки = 2)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели3
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели3.Ссылка
	|			И (Показатели3.НомерСтроки = 3)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели4
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели4.Ссылка
	|			И (Показатели4.НомерСтроки = 4)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели5
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели5.Ссылка
	|			И (Показатели5.НомерСтроки = 5)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели6
	|		ПО ТЧОсновныеНачисления.ВидРасчета = Показатели6.Ссылка
	|			И (Показатели6.НомерСтроки = 6)
	|ГДЕ
	|	ТЧОсновныеНачисления.Ссылка = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТЧОсновныеНачисления.ВидРасчета,
	|	Показатели1.Показатель,
	|	Показатели2.Показатель,
	|	Показатели3.Показатель,
	|	Показатели4.Показатель,
	|	Показатели5.Показатель,
	|	Показатели6.Показатель,
	|	Показатели1.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели2.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели3.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели4.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели5.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели6.ЗапрашиватьПриКадровыхПеремещениях,
	|	Показатели1.Показатель.Предопределенный,
	|	Показатели1.Показатель.Наименование,
	|	Показатели1.Показатель.ТипПоказателя,
	|	Показатели1.Показатель.ВозможностьИзменения,
	|	Показатели2.Показатель.Предопределенный,
	|	Показатели2.Показатель.Наименование,
	|	Показатели2.Показатель.ТипПоказателя,
	|	Показатели2.Показатель.ВозможностьИзменения,
	|	Показатели3.Показатель.Предопределенный,
	|	Показатели3.Показатель.Наименование,
	|	Показатели3.Показатель.ТипПоказателя,
	|	Показатели3.Показатель.ВозможностьИзменения,
	|	Показатели4.Показатель.Предопределенный,
	|	Показатели4.Показатель.Наименование,
	|	Показатели4.Показатель.ТипПоказателя,
	|	Показатели4.Показатель.ВозможностьИзменения,
	|	Показатели5.Показатель.Предопределенный,
	|	Показатели5.Показатель.Наименование,
	|	Показатели5.Показатель.ТипПоказателя,
	|	Показатели5.Показатель.ВозможностьИзменения,
	|	Показатели6.Показатель.Предопределенный,
	|	Показатели6.Показатель.Наименование,
	|	Показатели6.Показатель.ТипПоказателя,
	|	Показатели6.Показатель.ВозможностьИзменения,
	|	Показатели1.Показатель.ТарифнаяСтавка,
	|	Показатели2.Показатель.ТарифнаяСтавка,
	|	Показатели3.Показатель.ТарифнаяСтавка,
	|	Показатели4.Показатель.ТарифнаяСтавка,
	|	Показатели5.Показатель.ТарифнаяСтавка,
	|	Показатели6.Показатель.ТарифнаяСтавка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВидРасчета";		

	Запрос.Выполнить();	
	
	ВТПоказатели = "ВТПоказатели";
	

	
	// Описание текста запроса:
	//
	// 1. Выборка "Начисления": 
	//		Выбираются строки ТЧ Начисления. Сразу проверяем наличие строк-дублей.  
	// 2. Выборка "СуществующиеДвижения": 
	//		Проверяем на наличие существующих конфликтных движений в регистре сведений. 
	
	Если ПроверкаШтатногоРасписания Тогда
		МассивСпособов = Новый Массив;
		МассивСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням);
		МассивСпособов.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам);
		
		МассивДействий = Новый Массив;
		МассивДействий.Добавить(Перечисления.ВидыДействияСНачислением.Начать);
		МассивДействий.Добавить(Перечисления.ВидыДействияСНачислением.Изменить);
		
		Запрос.УстановитьПараметр("ИзменитьРасчеты", МассивДействий);
		Запрос.УстановитьПараметр("МесячнаяСтавка", Перечисления.ВидыТарифныхСтавок.Месячная);
		Запрос.УстановитьПараметр("МесячныеРасчеты", МассивСпособов);
		Запрос.УстановитьПараметр("ДневнаяСтавка", Перечисления.ВидыТарифныхСтавок.Дневная);
		Запрос.УстановитьПараметр("ДневнойРасчет", Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке);
		Запрос.УстановитьПараметр("ЧасоваяСтавка", Перечисления.ВидыТарифныхСтавок.Часовая);
		Запрос.УстановитьПараметр("ЧасовойРасчет", Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке);

		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Начисления.НомерСтроки,
		|	Начисления.Сотрудник,
		|	Начисления.Сотрудник.Наименование,
		|	Начисления.ВидРасчета,
		|	Начисления.ПроизвольнаяФормулаРасчета,
		|	Начисления.ДокументОснование,
		|	ЕСТЬNULL(Начисления.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
		|	Начисления.СпособРасчета,
		|	Начисления.ОсновноеНачисление,
		|	Начисления.Действие,
		|	Начисления.ДатаДействия,
		|	Начисления.ДатаДействияКонец,
		|	Начисления.ТарифныйРазряд1,
		|	Начисления.Показатель1,
		|	Начисления.Валюта1,
		|	Начисления.ТарифныйРазряд2,
		|	Начисления.Показатель2,
		|	Начисления.Валюта2,
		|	Начисления.ТарифныйРазряд3,
		|	Начисления.Показатель3,
		|	Начисления.Валюта3,
		|	Начисления.ТарифныйРазряд4,
		|	Начисления.Показатель4,
		|	Начисления.Валюта4,
		|	Начисления.ТарифныйРазряд5,
		|	Начисления.Показатель5,
		|	Начисления.Валюта5,
		|	Начисления.ТарифныйРазряд6,
		|	Начисления.Показатель6,
		|	Начисления.Валюта6,
		|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
		|	Показатели.Показатель1Предопределенный,
		|	Показатели.Показатель1Наименование,
		|	Показатели.Показатель1ТипПоказателя,
		|	Показатели.Показатель1ВозможностьИзменения,
		|	Показатели.Показатель2Предопределенный,
		|	Показатели.Показатель2Наименование,
		|	Показатели.Показатель2ТипПоказателя,
		|	Показатели.Показатель2ВозможностьИзменения,
		|	Показатели.Показатель3Предопределенный,
		|	Показатели.Показатель3Наименование,
		|	Показатели.Показатель3ТипПоказателя,
		|	Показатели.Показатель3ВозможностьИзменения,
		|	Показатели.Показатель4Предопределенный,
		|	Показатели.Показатель4Наименование,
		|	Показатели.Показатель4ТипПоказателя,
		|	Показатели.Показатель4ВозможностьИзменения,
		|	Показатели.Показатель5Предопределенный,
		|	Показатели.Показатель5Наименование,
		|	Показатели.Показатель5ТипПоказателя,
		|	Показатели.Показатель5ВозможностьИзменения,
		|	Показатели.Показатель6Предопределенный,
		|	Показатели.Показатель6Наименование,
		|	Показатели.Показатель6ТипПоказателя,
		|	Показатели.Показатель6ВозможностьИзменения,
		|	Показатели.Показатель1ТарифнаяСтавка,
		|	Показатели.Показатель2ТарифнаяСтавка,
		|	Показатели.Показатель3ТарифнаяСтавка,
		|	Показатели.Показатель4ТарифнаяСтавка,
		|	Показатели.Показатель5ТарифнаяСтавка,
		|	Показатели.Показатель6ТарифнаяСтавка,
		|	ВЫБОР
		|		КОГДА Начисления.Сотрудник.Организация = &ГоловнаяОрганизация
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
		|	Начисления.КонфликтнаяСтрокаНомер,
		|	СуществующиеДвижения.Регистратор.Представление КАК КонфликтныйДокумент,
		|	ВЫБОР
		|		КОГДА Начисления.ОсновноеНачисление
		|				И Начисления.Действие В (&ИзменитьРасчеты)
		|			ТОГДА ВЫБОР
		|					КОГДА Начисления.СпособРасчета В (&МесячныеРасчеты)
		|							И Начисления.ВидТарифнойСтавки = &МесячнаяСтавка
		|						ТОГДА ВЫБОР
		|								КОГДА Начисления.ТребуетВводаТарифногоРазряда
		|									ТОГДА ВЫБОР
		|											КОГДА Начисления.РазмерРазряда < Начисления.МинимальнаяТарифнаяСтавка
		|												ТОГДА ЛОЖЬ
		|											КОГДА Начисления.РазмерРазряда > Начисления.МаксимальнаяТарифнаяСтавка
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ИСТИНА
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА Начисления.Показатель1 < Начисления.МинимальнаяТарифнаяСтавка
		|											ТОГДА ЛОЖЬ
		|										КОГДА Начисления.Показатель1 > Начисления.МаксимальнаяТарифнаяСтавка
		|											ТОГДА ЛОЖЬ
		|										ИНАЧЕ ИСТИНА
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОГДА Начисления.СпособРасчета = &ДневнойРасчет
		|							И Начисления.ВидТарифнойСтавки = &ДневнаяСтавка
		|						ТОГДА ВЫБОР
		|								КОГДА Начисления.ТребуетВводаТарифногоРазряда
		|									ТОГДА ВЫБОР
		|											КОГДА Начисления.РазмерРазряда < Начисления.МинимальнаяТарифнаяСтавка
		|												ТОГДА ЛОЖЬ
		|											КОГДА Начисления.РазмерРазряда > Начисления.МаксимальнаяТарифнаяСтавка
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ИСТИНА
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА Начисления.Показатель1 < Начисления.МинимальнаяТарифнаяСтавка
		|											ТОГДА ЛОЖЬ
		|										КОГДА Начисления.Показатель1 > Начисления.МаксимальнаяТарифнаяСтавка
		|											ТОГДА ЛОЖЬ
		|										ИНАЧЕ ИСТИНА
		|									КОНЕЦ
		|							КОНЕЦ
		|					КОГДА Начисления.СпособРасчета = &ЧасовойРасчет
		|							И Начисления.ВидТарифнойСтавки = &ЧасоваяСтавка
		|						ТОГДА ВЫБОР
		|								КОГДА Начисления.ТребуетВводаТарифногоРазряда
		|									ТОГДА ВЫБОР
		|											КОГДА Начисления.РазмерРазряда < Начисления.МинимальнаяТарифнаяСтавка
		|												ТОГДА ЛОЖЬ
		|											КОГДА Начисления.РазмерРазряда > Начисления.МаксимальнаяТарифнаяСтавка
		|												ТОГДА ЛОЖЬ
		|											ИНАЧЕ ИСТИНА
		|										КОНЕЦ
		|								ИНАЧЕ ВЫБОР
		|										КОГДА Начисления.Показатель1 < Начисления.МинимальнаяТарифнаяСтавка
		|											ТОГДА ЛОЖЬ
		|										КОГДА Начисления.Показатель1 > Начисления.МаксимальнаяТарифнаяСтавка
		|											ТОГДА ЛОЖЬ
		|										ИНАЧЕ ИСТИНА
		|									КОНЕЦ
		|							КОНЕЦ
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК РазмерСоответствуетШТР,
		|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях

		|ИЗ
		|	(ВЫБРАТЬ
		|		ТЧОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		ТЧОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		ТЧОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета КАК ПроизвольнаяФормулаРасчета,
		|		ВЫБОР
		|			КОГДА ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|				ТОГДА НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ ТЧОсновныеНачисления.ВидРасчета
		|		КОНЕЦ КАК ВидРасчетаИзмерение,
		|		НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|		ТЧОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ОсновноеНачисление,
		|		ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		|		ТЧОсновныеНачисления.Действие КАК Действие,
		|		ТЧОсновныеНачисления.ДатаДействия КАК ДатаДействия,
		|		ТЧОсновныеНачисления.ДатаДействияКонец КАК ДатаДействияКонец,
		|		ТЧОсновныеНачисления.Показатель1 КАК Показатель1,
		|		ТЧОсновныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
		|		ТЧОсновныеНачисления.Валюта1 КАК Валюта1,
		|		ТЧОсновныеНачисления.Показатель2 КАК Показатель2,
		|		ТЧОсновныеНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
		|		ТЧОсновныеНачисления.Валюта2 КАК Валюта2,
		|		ТЧОсновныеНачисления.Показатель3 КАК Показатель3,
		|		ТЧОсновныеНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
		|		ТЧОсновныеНачисления.Валюта3 КАК Валюта3,
		|		ТЧОсновныеНачисления.Показатель4 КАК Показатель4,
		|		ТЧОсновныеНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
		|		ТЧОсновныеНачисления.Валюта4 КАК Валюта4,
		|		ТЧОсновныеНачисления.Показатель5 КАК Показатель5,
		|		ТЧОсновныеНачисления.Валюта5 КАК Валюта5,
		|		ТЧОсновныеНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
		|		ТЧОсновныеНачисления.Показатель6 КАК Показатель6,
		|		ТЧОсновныеНачисления.Валюта6 КАК Валюта6,
		|		ТЧОсновныеНачисления.ТарифныйРазряд6 КаК ТарифныйРазряд6,
		|		МИНИМУМ(ПовторяющиесяСтроки.НомерСтроки) КАК КонфликтнаяСтрокаНомер,
		|		ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка КАК МинимальнаяТарифнаяСтавка,
		|		ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка КАК МаксимальнаяТарифнаяСтавка,
		|		ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки КАК ВидТарифнойСтавки,
		|		ШтатноеРасписаниеОрганизаций.РазмерРазряда КАК РазмерРазряда
		|	ИЗ
		|		Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ТЧОсновныеНачисления
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ПовторяющиесяСтроки
		|			ПО ТЧОсновныеНачисления.Ссылка = ПовторяющиесяСтроки.Ссылка
		|				И ТЧОсновныеНачисления.НомерСтроки < ПовторяющиесяСтроки.НомерСтроки
		|				И (ТЧОсновныеНачисления.ВидРасчета = ПовторяющиесяСтроки.ВидРасчета
		|					ИЛИ ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|						И ПовторяющиесяСтроки.ВидРасчета.ЗачетОтработанногоВремени)
		|				И ТЧОсновныеНачисления.ДатаДействия = ПовторяющиесяСтроки.ДатаДействия
		|				И ТЧОсновныеНачисления.Сотрудник = ПовторяющиесяСтроки.Сотрудник
		|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|				ДатыШтатногоРасписания.НомерСтроки КАК НомерСтроки,
		|				ДатыШтатногоРасписания.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|				ДатыШтатногоРасписания.Должность КАК Должность,
		|				ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка КАК МинимальнаяТарифнаяСтавка,
		|				ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка КАК МаксимальнаяТарифнаяСтавка,
		|				ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки КАК ВидТарифнойСтавки,
		|				РазмерТарифныхСтавок.Размер КАК РазмерРазряда
		|			ИЗ
		|				(ВЫБРАТЬ
		|					ДанныеРаботников.НомерСтроки КАК НомерСтроки,
		|					ДанныеРаботников.Сотрудник КАК Сотрудник,
		|					ДанныеРаботников.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|					ДанныеРаботников.Должность КАК Должность,
		|					МАКСИМУМ(ШтатноеРасписаниеОрганизаций.Период) КАК Период,
		|					ДанныеРаботников.ТарифныйРазряд КАК ТарифныйРазряд,
		|					МАКСИМУМ(РазмерТарифныхСтавок.Период) КАК ПериодРазряда
		|				ИЗ
		|					(ВЫБРАТЬ
		|						ДатыРаботников.НомерСтроки КАК НомерСтроки,
		|						ДатыРаботников.Сотрудник КАК Сотрудник,
		|						РаботникиОрганизации.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
		|						РаботникиОрганизации.Должность КАК Должность,
		|						ДатыРаботников.ДатаДействия КАК ДатаДействия,
		|						ДатыРаботников.ТарифныйРазряд КАК ТарифныйРазряд
		|					ИЗ
		|						(ВЫБРАТЬ
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Сотрудник КАК Сотрудник,
		|							МАКСИМУМ(РаботникиОрганизации.Период) КАК Период,
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ДатаДействия КАК ДатаДействия,
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд
		|						ИЗ
		|							Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления
		|								ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|								ПО ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ДатаДействия >= РаботникиОрганизации.Период
		|									И ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Сотрудник = РаботникиОрганизации.Сотрудник
		|						ГДЕ
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Ссылка = &ДокументСсылка
		|						
		|						СГРУППИРОВАТЬ ПО
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.НомерСтроки,
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ДатаДействия,
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.ТарифныйРазряд1,
		|							ВводСведенийОПлановыхНачисленияхРаботниковОрганизацииОсновныеНачисления.Сотрудник) КАК ДатыРаботников
		|							ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
		|							ПО ДатыРаботников.Период = РаботникиОрганизации.Период
		|								И ДатыРаботников.Сотрудник = РаботникиОрганизации.Сотрудник) КАК ДанныеРаботников
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
		|						ПО ДанныеРаботников.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
		|							И ДанныеРаботников.Должность = ШтатноеРасписаниеОрганизаций.Должность
		|							И ДанныеРаботников.ДатаДействия >= ШтатноеРасписаниеОрганизаций.Период
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
		|						ПО ДанныеРаботников.ДатаДействия >= РазмерТарифныхСтавок.Период
		|							И ДанныеРаботников.ТарифныйРазряд >= РазмерТарифныхСтавок.ТарифныйРазряд
		|				
		|				СГРУППИРОВАТЬ ПО
		|					ДанныеРаботников.НомерСтроки,
		|					ДанныеРаботников.ПодразделениеОрганизации,
		|					ДанныеРаботников.Должность,
		|					ДанныеРаботников.ТарифныйРазряд,
		|					ДанныеРаботников.Сотрудник) КАК ДатыШтатногоРасписания
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ШтатноеРасписаниеОрганизаций КАК ШтатноеРасписаниеОрганизаций
		|					ПО ДатыШтатногоРасписания.ПодразделениеОрганизации = ШтатноеРасписаниеОрганизаций.ПодразделениеОрганизации
		|						И ДатыШтатногоРасписания.Должность = ШтатноеРасписаниеОрганизаций.Должность
		|						И ДатыШтатногоРасписания.Период = ШтатноеРасписаниеОрганизаций.Период
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок КАК РазмерТарифныхСтавок
		|					ПО ДатыШтатногоРасписания.Период = РазмерТарифныхСтавок.Период
		|						И ДатыШтатногоРасписания.ТарифныйРазряд = РазмерТарифныхСтавок.ТарифныйРазряд) КАК ШтатноеРасписаниеОрганизаций
		|			ПО ТЧОсновныеНачисления.НомерСтроки = ШтатноеРасписаниеОрганизаций.НомерСтроки
		|	ГДЕ
		|		ТЧОсновныеНачисления.Ссылка = &ДокументСсылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТЧОсновныеНачисления.НомерСтроки,
		|		ТЧОсновныеНачисления.ВидРасчета,
		|		ТЧОсновныеНачисления.Действие,
		|		ТЧОсновныеНачисления.ДатаДействия,
		|		ТЧОсновныеНачисления.ДатаДействияКонец,
		|		ТЧОсновныеНачисления.Показатель1,
		|		ТЧОсновныеНачисления.ТарифныйРазряд1,
		|		ТЧОсновныеНачисления.Валюта1,
		|		ТЧОсновныеНачисления.Показатель2,
		|		ТЧОсновныеНачисления.ТарифныйРазряд2,
		|		ТЧОсновныеНачисления.Валюта2,
		|		ТЧОсновныеНачисления.Показатель3,
		|		ТЧОсновныеНачисления.ТарифныйРазряд3,
		|		ТЧОсновныеНачисления.Валюта3,
		|		ТЧОсновныеНачисления.Показатель4,
		|		ТЧОсновныеНачисления.ТарифныйРазряд4,
		|		ТЧОсновныеНачисления.Валюта4,
		|		ТЧОсновныеНачисления.Показатель5,
		|		ТЧОсновныеНачисления.ТарифныйРазряд5,
		|		ТЧОсновныеНачисления.Валюта5,
		|		ТЧОсновныеНачисления.Показатель6,
		|		ТЧОсновныеНачисления.ТарифныйРазряд6,
		|		ТЧОсновныеНачисления.Валюта6,
		|
		|		ШтатноеРасписаниеОрганизаций.МинимальнаяТарифнаяСтавка,
		|		ШтатноеРасписаниеОрганизаций.МаксимальнаяТарифнаяСтавка,
		|		ШтатноеРасписаниеОрганизаций.ВидТарифнойСтавки,
		|		ШтатноеРасписаниеОрганизаций.РазмерРазряда,
		|		ТЧОсновныеНачисления.Сотрудник,
		|		ТЧОсновныеНачисления.ВидРасчета.СпособРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени,
		|		ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда,
		|		ТЧОсновныеНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета) КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК СуществующиеДвижения
		|		ПО Начисления.ДатаДействия = СуществующиеДвижения.Период
		|			И Начисления.ВидРасчетаИзмерение = СуществующиеДвижения.ВидРасчетаИзмерение
		|			И Начисления.Сотрудник = СуществующиеДвижения.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|		ПО Начисления.ВидРасчета = Показатели.ВидРасчета";
		
	Иначе
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Начисления.НомерСтроки,
		|	Начисления.Сотрудник,
		|	Начисления.Сотрудник.Наименование,
		|	Начисления.ВидРасчета,
		|	Начисления.ПроизвольнаяФормулаРасчета,
		|	Начисления.ДокументОснование,
		|	ЕСТЬNULL(Начисления.ТребуетВводаТарифногоРазряда, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
		|	Начисления.СпособРасчета,
		|	Начисления.ОсновноеНачисление,
		|	Начисления.Действие,
		|	Начисления.ДатаДействия,
		|	Начисления.ДатаДействияКонец,
		|	Начисления.ТарифныйРазряд1,
		|	Начисления.Показатель1,
		|	Начисления.Валюта1,
		|	Начисления.ТарифныйРазряд2,
		|	Начисления.Показатель2,
		|	Начисления.Валюта2,
		|	Начисления.ТарифныйРазряд3,
		|	Начисления.Показатель3,
		|	Начисления.Валюта3,
		|	Начисления.ТарифныйРазряд4,
		|	Начисления.Показатель4,
		|	Начисления.Валюта4,
		|	Начисления.ТарифныйРазряд5,
		|	Начисления.Показатель5,
		|	Начисления.Валюта5,
		|	Начисления.ТарифныйРазряд6,
		|	Начисления.Показатель6,
		|	Начисления.Валюта6,	
		|	ЕСТЬNULL(Показатели.КоличествоПоказателей, 0) КАК КоличествоПоказателей,
		|	Показатели.Показатель1Предопределенный,
		|	Показатели.Показатель1Наименование,
		|	Показатели.Показатель1ТипПоказателя,
		|	Показатели.Показатель1ВозможностьИзменения,
		|	Показатели.Показатель2Предопределенный,
		|	Показатели.Показатель2Наименование,
		|	Показатели.Показатель2ТипПоказателя,
		|	Показатели.Показатель2ВозможностьИзменения,
		|	Показатели.Показатель3Предопределенный,
		|	Показатели.Показатель3Наименование,
		|	Показатели.Показатель3ТипПоказателя,
		|	Показатели.Показатель3ВозможностьИзменения,
		|	Показатели.Показатель4Предопределенный,
		|	Показатели.Показатель4Наименование,
		|	Показатели.Показатель4ТипПоказателя,
		|	Показатели.Показатель4ВозможностьИзменения,
		|	Показатели.Показатель5Предопределенный,
		|	Показатели.Показатель5Наименование,
		|	Показатели.Показатель5ТипПоказателя,
		|	Показатели.Показатель5ВозможностьИзменения,
		|	Показатели.Показатель6Предопределенный,
		|	Показатели.Показатель6Наименование,
		|	Показатели.Показатель6ТипПоказателя,
		|	Показатели.Показатель6ВозможностьИзменения,
		|	Показатели.Показатель1ТарифнаяСтавка,
		|	Показатели.Показатель2ТарифнаяСтавка,
		|	Показатели.Показатель3ТарифнаяСтавка,
		|	Показатели.Показатель4ТарифнаяСтавка,
		|	Показатели.Показатель5ТарифнаяСтавка,
		|	Показатели.Показатель6ТарифнаяСтавка,
		|	ВЫБОР
		|		КОГДА Начисления.Сотрудник.Организация = &ГоловнаяОрганизация
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ОшибкаНеСоответствиеСотрудникаИОрганизации,
		|	Начисления.КонфликтнаяСтрокаНомер,
		|	Показатели.Показатель1ЗапрашиватьПриКадровыхПеремещениях КАК Показатель1ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель2ЗапрашиватьПриКадровыхПеремещениях КАК Показатель2ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель3ЗапрашиватьПриКадровыхПеремещениях КАК Показатель3ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель4ЗапрашиватьПриКадровыхПеремещениях КАК Показатель4ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель5ЗапрашиватьПриКадровыхПеремещениях КАК Показатель5ЗапрашиватьПриКадровыхПеремещениях,
		|	Показатели.Показатель6ЗапрашиватьПриКадровыхПеремещениях КАК Показатель6ЗапрашиватьПриКадровыхПеремещениях,

		|	СуществующиеДвижения.Регистратор.Представление КАК КонфликтныйДокумент
		|ИЗ
		|	(ВЫБРАТЬ
		|		ТЧОсновныеНачисления.НомерСтроки КАК НомерСтроки,
		|		ТЧОсновныеНачисления.Сотрудник КАК Сотрудник,
		|		ТЧОсновныеНачисления.ВидРасчета КАК ВидРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета	КАК ПроизвольнаяФормулаРасчета,
		|		ВЫБОР
		|			КОГДА ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|				ТОГДА НЕОПРЕДЕЛЕНО
		|			ИНАЧЕ ТЧОсновныеНачисления.ВидРасчета
		|		КОНЕЦ КАК ВидРасчетаИзмерение,
		|		НЕОПРЕДЕЛЕНО КАК ДокументОснование,
		|		ТЧОсновныеНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ОсновноеНачисление,
		|		ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда КАК ТребуетВводаТарифногоРазряда,
		|		ТЧОсновныеНачисления.Действие КАК Действие,
		|		ТЧОсновныеНачисления.ДатаДействия КАК ДатаДействия,
		|		ТЧОсновныеНачисления.ДатаДействияКонец КАК ДатаДействияКонец,
		|		ТЧОсновныеНачисления.Показатель1 КАК Показатель1,
		|		ТЧОсновныеНачисления.ТарифныйРазряд1 КАК ТарифныйРазряд1,
		|		ТЧОсновныеНачисления.Валюта1 КАК Валюта1,
		|		ТЧОсновныеНачисления.Показатель2 КАК Показатель2,
		|		ТЧОсновныеНачисления.ТарифныйРазряд2 КАК ТарифныйРазряд2,
		|		ТЧОсновныеНачисления.Валюта2 КАК Валюта2,
		|		ТЧОсновныеНачисления.Показатель3 КАК Показатель3,
		|		ТЧОсновныеНачисления.ТарифныйРазряд3 КАК ТарифныйРазряд3,
		|		ТЧОсновныеНачисления.Валюта3 КАК Валюта3,
		|		ТЧОсновныеНачисления.Показатель4 КАК Показатель4,
		|		ТЧОсновныеНачисления.ТарифныйРазряд4 КАК ТарифныйРазряд4,
		|		ТЧОсновныеНачисления.Валюта4 КАК Валюта4,
		|		ТЧОсновныеНачисления.Показатель5 КАК Показатель5,
		|		ТЧОсновныеНачисления.ТарифныйРазряд5 КАК ТарифныйРазряд5,
		|		ТЧОсновныеНачисления.Валюта5 КАК Валюта5,
		|		ТЧОсновныеНачисления.Показатель6 КАК Показатель6,
		|		ТЧОсновныеНачисления.ТарифныйРазряд6 КАК ТарифныйРазряд6,
		|		ТЧОсновныеНачисления.Валюта6 КАК Валюта6,
		|		МИНИМУМ(ПовторяющиесяСтроки.НомерСтроки) КАК КонфликтнаяСтрокаНомер
		|	ИЗ
		|		Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ТЧОсновныеНачисления
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ОсновныеНачисления КАК ПовторяющиесяСтроки
		|			ПО ТЧОсновныеНачисления.Ссылка = ПовторяющиесяСтроки.Ссылка
		|				И ТЧОсновныеНачисления.НомерСтроки < ПовторяющиесяСтроки.НомерСтроки
		|				И (ТЧОсновныеНачисления.ВидРасчета = ПовторяющиесяСтроки.ВидРасчета
		|					ИЛИ ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
		|						И ПовторяющиесяСтроки.ВидРасчета.ЗачетОтработанногоВремени)
		|				И ТЧОсновныеНачисления.ДатаДействия = ПовторяющиесяСтроки.ДатаДействия
		|				И ТЧОсновныеНачисления.Сотрудник = ПовторяющиесяСтроки.Сотрудник
		|	ГДЕ
		|		ТЧОсновныеНачисления.Ссылка = &ДокументСсылка
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ТЧОсновныеНачисления.НомерСтроки,
		|		ТЧОсновныеНачисления.ВидРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ПроизвольнаяФормулаРасчета,
		|		ТЧОсновныеНачисления.Действие,
		|		ТЧОсновныеНачисления.ДатаДействия,
		|		ТЧОсновныеНачисления.ДатаДействияКонец,
		|		ТЧОсновныеНачисления.Показатель1,
		|		ТЧОсновныеНачисления.ТарифныйРазряд1,
		|		ТЧОсновныеНачисления.Валюта1,
		|		ТЧОсновныеНачисления.Показатель2,
		|		ТЧОсновныеНачисления.ТарифныйРазряд2,
		|		ТЧОсновныеНачисления.Валюта2,
		|		ТЧОсновныеНачисления.Показатель3,
		|		ТЧОсновныеНачисления.ТарифныйРазряд3,
		|		ТЧОсновныеНачисления.Валюта3,
		|		ТЧОсновныеНачисления.Показатель4,
		|		ТЧОсновныеНачисления.ТарифныйРазряд4,
		|		ТЧОсновныеНачисления.Валюта4,
		|		ТЧОсновныеНачисления.Показатель5,
		|		ТЧОсновныеНачисления.ТарифныйРазряд5,
		|		ТЧОсновныеНачисления.Валюта5,
		|		ТЧОсновныеНачисления.Показатель6,
		|		ТЧОсновныеНачисления.ТарифныйРазряд6,
		|		ТЧОсновныеначисления.Валюта6,
		|		ТЧОсновныеНачисления.Сотрудник,
		|		ТЧОсновныеНачисления.ВидРасчета.СпособРасчета,
		|		ТЧОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени,
		|		ТЧОсновныеНачисления.ВидРасчета.ТребуетВводаТарифногоРазряда) КАК Начисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций КАК СуществующиеДвижения
		|		ПО Начисления.ДатаДействия = СуществующиеДвижения.Период
		|			И Начисления.ВидРасчетаИзмерение = СуществующиеДвижения.ВидРасчетаИзмерение
		|			И Начисления.Сотрудник = СуществующиеДвижения.Сотрудник
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
		|		ПО Начисления.ВидРасчета = Показатели.ВидРасчета";
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

// Формирует запрос по таблице "Сотрудники" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса. В запросе данные документа дополняются значениями
//  проверяемых параметров из связанного с
//
Функция СформироватьЗапросПоВзносамСотрудники(Режим)

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);

    // Описание текста запроса:
	//
    // 1. Выборка "Начисления": 
	//		Сразу проверяем наличие строк-дублей.  

	ТекстЗапроса = "ВЫБРАТЬ
					|	ТЧВзносы.НомерСтроки,
					|	ТЧВзносы.Сотрудник,
					|	ТЧВзносы.Налог,
					|	ТЧВзносы.Действие,
					|	ТЧВзносы.ДатаДействия,
					|	ВЫБОР КОГДА ВзносыВФондыРаботниковОрганизаций.Актуальность ЕСТЬ NULL ТОГДА Ложь
					|	ИНАЧЕ Истина КОНЕЦ КАК Закрывается
					|ИЗ
					|	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.Взносы КАК ТЧВзносы
					|	ЛЕВОЕ СОЕДИНЕНИЕ
					|	РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
					|	ПО ВзносыВФондыРаботниковОрганизаций.Сотрудник = ТЧВзносы.Сотрудник
					|	 И ВзносыВФондыРаботниковОрганизаций.Налог = ТЧВзносы.Налог
					|	 И ВзносыВФондыРаботниковОрганизаций.Организация = ТЧВзносы.Ссылка.Организация
					|	 И ВзносыВФондыРаботниковОрганизаций.Период = НАЧАЛОПЕРИОДА(ТЧВзносы.ДатаДействия, ДЕНЬ)
					|ГДЕ
					|	ТЧВзносы.Ссылка = &ДокументСсылка
	                |	
	                |ОБЪЕДИНИТЬ	
	                |	
	                |ВЫБРАТЬ	
	                |	ТЧВзносыФОТ.НомерСтроки,
	                |	ТЧВзносыФОТ.Сотрудник,
	                |	ТЧВзносыФОТ.Налог,
	                |	ТЧВзносыФОТ.Действие,
	                |	ТЧВзносыФОТ.ДатаДействия,
					|	ВЫБОР КОГДА ВзносыВФондыРаботниковОрганизаций.Актуальность ЕСТЬ NULL ТОГДА Ложь
					|	ИНАЧЕ Истина КОНЕЦ КАК Закрывается
	                |ИЗ
	                |	Документ.ВводСведенийОПлановыхНачисленияхРаботниковОрганизаций.ВзносыФОТ КАК ТЧВзносыФОТ
					|	ЛЕВОЕ СОЕДИНЕНИЕ
					|	РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
					|	ПО ВзносыВФондыРаботниковОрганизаций.Сотрудник = ТЧВзносыФОТ.Сотрудник
					|	 И ВзносыВФондыРаботниковОрганизаций.Налог = ТЧВзносыФОТ.Налог
					|	 И ВзносыВФондыРаботниковОрганизаций.Организация = ТЧВзносыФОТ.Ссылка.Организация
					|	 И ВзносыВФондыРаботниковОрганизаций.Период = НАЧАЛОПЕРИОДА(КОНЕЦПЕРИОДА(ТЧВзносыФОТ.ДатаДействия, МЕСЯЦ), ДЕНЬ)
					|	
	                |ГДЕ
	                |	ТЧВзносыФОТ.Ссылка = &ДокументСсылка
	                |";
			   
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();

КонецФункции

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры:
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не указана организация!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "РаботникиОрганизации" документа.
// Если какой-то из реквизтов, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по строке ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента		- выборка из результата запроса по шапке документа,
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса
//  Отказ						- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоСтрокамДокумента, Отказ, Заголовок, ПроверкаШтатногоРасписания)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Плановые начисления"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// Организация сотрудника должна совпадать с организацией документа
//	Если ВыборкаПоСтрокамДокумента.ОшибкаНеСоответствиеСотрудникаИОрганизации Тогда
//		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "указанный сотрудник оформлен на другую организацию!", Отказ, Заголовок);
//	КонецЕсли;
	
	// Действие
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Действие) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задано действие!", Отказ, Заголовок);
	КонецЕсли;
	
	
	Если ВыборкаПоСтрокамДокумента.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		
		// Вид расчета
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задан вид расчета!", Отказ, Заголовок);
		ИначеЕсли (ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать ИЛИ ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить) Тогда
			
			// Соответствие размера "основного" начисления штатному расписанию
			Если ПроверкаШтатногоРасписания И Не ВыборкаПоСтрокамДокумента.РазмерСоответствуетШТР И Не ВыборкаПоСтрокамДокумента.ТребуетВводаТарифногоРазряда Тогда
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "размер основного начисления не соответствует штатному расписанию!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		
		// ДатаДействия
		Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаДействия) Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задана дата действия!", Отказ, Заголовок);
		ИначеЕсли ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтныйДокумент) Тогда
			// Движения в регистре на дату из документа
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "на дату "+ ВыборкаПоСтрокамДокумента.ДатаДействия + " начисление уже зарегистрировано документом " + ВыборкаПоСтрокамДокумента.КонфликтныйДокумент + "!", Отказ, Заголовок);
		КонецЕсли;
		
		// Период действия
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаДействияКонец) И ВыборкаПоСтрокамДокумента.ДатаДействия > ВыборкаПоСтрокамДокумента.ДатаДействияКонец Тогда
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата окончания действия не должна быть меньше даты начала!", Отказ, Заголовок);
		КонецЕсли; 
		
		// Одинаковые строки
		Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер) Тогда
			Если ВыборкаПоСтрокамДокумента.ОсновноеНачисление Тогда
				СтрокаСообщениеОбОшибке = "основное начисление работника " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " следует редактировать в одной строке (см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + ")!"; 
			Иначе
				СтрокаСообщениеОбОшибке = "работнику " + ВыборкаПоСтрокамДокумента.СотрудникНаименование + " не может быть назначено одно и тоже начисление дважды (см. строку " + ВыборкаПоСтрокамДокумента.КонфликтнаяСтрокаНомер + ")!"; 
			КонецЕсли;
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке  + СтрокаСообщениеОбОшибке, Отказ, Заголовок);
		КонецЕсли;
		
		Если ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Начать или ВыборкаПоСтрокамДокумента.Действие = Перечисления.ВидыДействияСНачислением.Изменить Тогда
			ИспользуютсяНачисленияВВалюте			= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ИспользуютсяНачисленияВВалюте");
			ПроведениеРасчетов.ПроверкаПоказателейВПлановыхНачислениях(ВыборкаПоСтрокамДокумента, СтрокаНачалаСообщенияОбОшибке, Истина, Отказ, Заголовок, ИспользуютсяНачисленияВВалюте, СоответствиеВалютныеСпособыРасчета);
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникаОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента					- выборка из результата запроса по шапке документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации)

	Если ВыборкаПоРаботникиОрганизации.Действие = Перечисления.ВидыДействияСНачислением.НеИзменять Тогда
		Возврат;
	КонецЕсли;
	
	Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
	
	// Свойства
	Движение.Период						= ВыборкаПоРаботникиОрганизации.ДатаДействия;
		
	// Измерения
	Движение.Сотрудник					= ВыборкаПоРаботникиОрганизации.Сотрудник;
	Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Если НЕ ВыборкаПоРаботникиОрганизации.ОсновноеНачисление Тогда
		Движение.ВидРасчетаИзмерение	= ВыборкаПоРаботникиОрганизации.ВидРасчета;
	КонецЕсли;
	Движение.ДокументОснование			= ВыборкаПоРаботникиОрганизации.ДокументОснование;

	// Ресурсы	
	Движение.ВидРасчета					= ВыборкаПоРаботникиОрганизации.ВидРасчета;
	Если ВыборкаПоРаботникиОрганизации.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
		Движение.Актуальность			= Истина;
		Движение.Показатель1			= ВыборкаПоРаботникиОрганизации.Показатель1;
		Движение.Валюта1				= ВыборкаПоРаботникиОрганизации.Валюта1;
		Движение.ТарифныйРазряд1		= ВыборкаПоРаботникиОрганизации.ТарифныйРазряд1;
		Движение.Показатель2			= ВыборкаПоРаботникиОрганизации.Показатель2;
		Движение.Валюта2				= ВыборкаПоРаботникиОрганизации.Валюта2;
		Движение.ТарифныйРазряд2		= ВыборкаПоРаботникиОрганизации.ТарифныйРазряд2;				
		Движение.Показатель3			= ВыборкаПоРаботникиОрганизации.Показатель3;
		Движение.Валюта3				= ВыборкаПоРаботникиОрганизации.Валюта3;
		Движение.ТарифныйРазряд3		= ВыборкаПоРаботникиОрганизации.ТарифныйРазряд3;				
		Движение.Показатель4			= ВыборкаПоРаботникиОрганизации.Показатель4;
		Движение.Валюта4				= ВыборкаПоРаботникиОрганизации.Валюта4;
		Движение.ТарифныйРазряд4		= ВыборкаПоРаботникиОрганизации.ТарифныйРазряд4;				
		Движение.Показатель5			= ВыборкаПоРаботникиОрганизации.Показатель5;
		Движение.Валюта5				= ВыборкаПоРаботникиОрганизации.Валюта5;
		Движение.ТарифныйРазряд5		= ВыборкаПоРаботникиОрганизации.ТарифныйРазряд5;
		Движение.Показатель6			= ВыборкаПоРаботникиОрганизации.Показатель6;
		Движение.Валюта6				= ВыборкаПоРаботникиОрганизации.Валюта6;
		Движение.ТарифныйРазряд6		= ВыборкаПоРаботникиОрганизации.ТарифныйРазряд6;			
		
	Иначе
		Движение.Период	= КонецДня(ВыборкаПоРаботникиОрганизации.ДатаДействия-1);
	КонецЕсли;

	
	// Движения на дату завершения
	Если ВыборкаПоРаботникиОрганизации.Действие = Перечисления.ВидыДействияСНачислением.Начать 
			И ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ДатаДействияКонец) Тогда
		
			Движение = Движения.ПлановыеНачисленияРаботниковОрганизаций.Добавить();
	
			// Свойства
			Движение.Период						= КонецДня(ВыборкаПоРаботникиОрганизации.ДатаДействияКонец);
		
			// Измерения
			Движение.Сотрудник					= ВыборкаПоРаботникиОрганизации.Сотрудник;
			Движение.Организация				= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
			Если НЕ ВыборкаПоРаботникиОрганизации.ОсновноеНачисление Тогда
				Движение.ВидРасчетаИзмерение	= ВыборкаПоРаботникиОрганизации.ВидРасчета;
			КонецЕсли;
			Движение.ДокументОснование			= ВыборкаПоРаботникиОрганизации.ДокументОснование;
			
			//Ресурсы
			Движение.Актуальность = Ложь;
			Движение.ВидРасчета					= ВыборкаПоРаботникиОрганизации.ВидРасчета;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента					- выборка из результата запроса по шапке документа,
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоВзносам(ВыборкаПоШапкеДокумента, ВыборкаПоВзносам)
	
	Если ВыборкаПоВзносам.Действие <> Перечисления.ВидыДействияСНачислением.НеИзменять тогда
		
		Движение = Движения.ВзносыВФондыРаботниковОрганизаций.Добавить();
		
		// Свойства
		Если ВыборкаПоВзносам.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Движение.Период       = КонецДня(ВыборкаПоВзносам.ДатаДействия);
		Иначе
			Движение.Период       = ВыборкаПоВзносам.ДатаДействия;
		КонецЕсли;
		
		// Измерения
		Движение.Организация  = ВыборкаПоШапкеДокумента.Организация;
		Движение.Сотрудник      = ВыборкаПоВзносам.Сотрудник;
		Движение.Налог		  = ВыборкаПоВзносам.Налог;
		
		// Ресурсы
		Если ВыборкаПоВзносам.Действие <> Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Движение.Актуальность	= Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамСведений()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	СоответствиеВалютныеСпособыРасчета = ПроведениеРасчетов.ПолучитьСоответствиеСпособовРасчетаТребующихВалюту();
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		ПроверкаШтатногоРасписания = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ПроверкаШтатногоРасписания");
		
		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			РезультатЗапросаПоРаботникиОрганизации= СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента,ПроверкаШтатногоРасписания);
			ВыборкаПоРаботникиОрганизации= РезультатЗапросаПоРаботникиОрганизации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			ПроверкаШтатногоРасписания = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ПроверкаШтатногоРасписания");
						
			Пока ВыборкаПоРаботникиОрганизации
				.Следующий() Цикл
				
				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникаОрганизации(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации, Отказ, Заголовок, ПроверкаШтатногоРасписания);

				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоРегистрамСведений(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);
					
				КонецЕсли;

			КонецЦикла;
			
			ВыборкаПоВзносам = СформироватьЗапросПоВзносамСотрудники(Режим).Выбрать();
			
			Пока ВыборкаПоВзносам.Следующий() Цикл
				
				Если НЕ Отказ Тогда

					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуВДвиженияПоВзносам(ВыборкаПоШапкеДокумента, ВыборкаПоВзносам);
					
				КонецЕсли;

			КонецЦикла;
			
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура ОбработкаЗаполнения(Основание)

	ТипОснования = ТипЗнч(Основание);
	
	Если ТипОснования = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда
		
		// Заполним реквизиты из стандартного набора.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		
		ДобавитьСтрокиНачисленийПоРаботнику(Основание, ОбщегоНазначения.ПолучитьРабочуюДату());
		ДобавитьСтрокиВзносовПоРаботнику(Основание, ОбщегоНазначения.ПолучитьРабочуюДату());
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Сотрудник", Основание);
		Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначения.ПолучитьРабочуюДату());
		Запрос.Текст =
		"ВЫБРАТЬ
		|	РаботникиОрганизации.ОбособленноеПодразделение КАК Организация
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаАктуальности, Сотрудник = &Сотрудник) КАК РаботникиОрганизации";
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Организация = Выборка.Организация
		Иначе 
			Организация = Основание.ОбособленноеПодразделение
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом") Тогда
		
		// Заполним реквизиты из стандартного набора.
		ЗаполнениеДокументов.ЗаполнитьШапкуДокументаПоОснованию(ЭтотОбъект, Основание);
		Сотрудник = Основание.Сотрудник;
		ГруппаВзносов = ?(ЗначениеЗаполнено(Сотрудник.ГруппаВзносов),Сотрудник.ГруппаВзносов,Справочники.ГруппыВзносовВФонды.Договорники);
		
		ГрупповаяОбработкаВзносов(ГруппаВзносов, Сотрудник, Основание.ДатаНачала);
				
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(ОсновныеНачисления, Взносы);
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(ОсновныеНачисления);
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(Взносы);
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(ВзносыФОТ);
	
КонецПроцедуры // ПередЗаписью()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

мДлинаСуток = 86400;
