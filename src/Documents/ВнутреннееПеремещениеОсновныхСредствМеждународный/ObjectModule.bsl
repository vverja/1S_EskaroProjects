Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА


#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()


Процедура ОбработкаПроведения(Отказ)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Для Каждого ТекСтрокаОсновныеСредства Из ОсновныеСредства Цикл
		СрезСведенийМежд = РегистрыСведений.ОсновныеСредстваМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("ОсновноеСредство", ТекСтрокаОсновныеСредства.ОсновноеСредство));

		// регистр ОсновныеСредстваМеждународныйУчет 
		Движение = Движения.ОсновныеСредстваМеждународныйУчет.Добавить();
		Движение.Период = Дата;
		Движение.ОсновноеСредство = ТекСтрокаОсновныеСредства.ОсновноеСредство;
		Движение.Организация = Организация;
		Движение.ДатаПринятияКУчету = СрезСведенийМежд.ДатаПринятияКУчету;
		Движение.МестонахождениеОбъекта = ТекСтрокаОсновныеСредства.МестонахождениеОбъектаНов;
		Движение.МОЛ = ТекСтрокаОсновныеСредства.МОЛНов;
		Движение.СчетУчета = СрезСведенийМежд.СчетУчета;
		Движение.СрокПолезногоИспользования = СрезСведенийМежд.СрокПолезногоИспользования;
		Движение.НачислятьАмортизацию = СрезСведенийМежд.НачислятьАмортизацию;
		Движение.МетодНачисленияАмортизации = СрезСведенийМежд.МетодНачисленияАмортизации;
		Движение.СчетНачисленияАмортизации = СрезСведенийМежд.СчетНачисленияАмортизации;
		Движение.КоэффициентУскорения = СрезСведенийМежд.КоэффициентУскорения;
		Движение.ПервоначальнаяСтоимость = СрезСведенийМежд.ПервоначальнаяСтоимость;
		Движение.ЛиквидационнаяСтоимость = СрезСведенийМежд.ЛиквидационнаяСтоимость;
		Движение.СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;
		Движение.СчетЗатрат = ТекСтрокаОсновныеСредства.СчетЗатратНов;
		Движение.Субконто1 = ТекСтрокаОсновныеСредства.Субконто1Нов;
		Движение.Субконто2 = ТекСтрокаОсновныеСредства.Субконто2Нов;
		Движение.Субконто3 = ТекСтрокаОсновныеСредства.Субконто3Нов;
		Движение.ПредполагаемыйОбъемПродукции = СрезСведенийМежд.ПредполагаемыйОбъемПродукции;
		Движение.СуммаНачисленнойАмортизации = СрезСведенийМежд.СуммаНачисленнойАмортизации;
		Движение.СправедливаяСтоимость = СрезСведенийМежд.СправедливаяСтоимость;
		Движение.УбытокОтОбесценения = СрезСведенийМежд.УбытокОтОбесценения;
		Движение.Состояние = СрезСведенийМежд.Состояние;
	КонецЦикла;
	
	// записываем движения регистров
	Движения.ОсновныеСредстваМеждународныйУчет.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью



