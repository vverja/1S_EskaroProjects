////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ


// Производит заполнение документа переданными из формы подбора данными.
//
// Параметры:
//  ТабличнаяЧасть    - табличная часть, в которую надо добавлять подобранную позицию номенклатуры;
//  ЗначениеВыбора    - структура, содержащая параметры подбора.
//
&НаКлиенте
Процедура ОбработкаПодбора(ИмяТабличнойЧасти, ЗначениеВыбора) Экспорт

	Перем Номенклатура, ЕдиницаИзмерения, ЕдиницаИзмеренияМест, Количество, Коэффициент, СведенияЕдиницаИзмеренияМест, Качество;
	Перем ХарактеристикаНоменклатуры, СерияНоменклатуры;

	// Получим параметры подбора из структуры подбора.
	ЗначениеВыбора.Свойство("Номенклатура",					Номенклатура);
	ЗначениеВыбора.Свойство("ХарактеристикаНоменклатуры",	ХарактеристикаНоменклатуры);
	ЗначениеВыбора.Свойство("СерияНоменклатуры",			СерияНоменклатуры);
	ЗначениеВыбора.Свойство("ЕдиницаИзмерения",				ЕдиницаИзмерения);
	ЗначениеВыбора.Свойство("ЕдиницаИзмеренияМест",			ЕдиницаИзмеренияМест);
	ЗначениеВыбора.Свойство("Коэффициент",					Коэффициент);
	ЗначениеВыбора.Свойство("Количество",					Количество);
	ЗначениеВыбора.Свойство("Качество",						Качество);
	ЗначениеВыбора.Свойство("СведенияЕдиницаИзмеренияМест", СведенияЕдиницаИзмеренияМест);


	// Ищем выбранную позицию в таблице подобранной номенклатуры.
	// Если найдем - увеличим количество; не найдем - добавим новую строку.
	СтруктураОтбора = Новый Структура();
	СтруктураОтбора.Вставить("ЕдиницаИзмерения", ЕдиницаИзмерения);
	СтруктураОтбора.Вставить("Качество", Качество);
	СтруктураОтбора.Вставить("ХарактеристикаНоменклатуры", ХарактеристикаНоменклатуры);
	СтруктураОтбора.Вставить("СерияНоменклатуры", СерияНоменклатуры);

	МассивСтрок = Объект[ИмяТабличнойЧасти].НайтиСтроки(СтруктураОтбора);
	Если МассивСтрок.Количество() = 0 Тогда
		СтрокаТабличнойЧасти = Неопределено;
	Иначе
		СтрокаТабличнойЧасти = МассивСтрок[0];
	КонецЕсли;
	
	Если СтрокаТабличнойЧасти <> Неопределено Тогда
		// Нашли, увеличиваем количество в первой найденной строке.
		СтрокаТабличнойЧасти.Количество = СтрокаТабличнойЧасти.Количество + Количество;
		РаботаСДиалогамиКлиент.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти);
	Иначе
		// Не нашли - добавляем новую строку.
		СтрокаТабличнойЧасти = Объект[ИмяТабличнойЧасти].Добавить();
		СтрокаТабличнойЧасти.Номенклатура     			= Номенклатура;
		СтрокаТабличнойЧасти.Количество       			= Количество;
		СтрокаТабличнойЧасти.ЕдиницаИзмерения 			= ЕдиницаИзмерения;
		СтрокаТабличнойЧасти.ЕдиницаИзмеренияМест		= ЕдиницаИзмеренияМест;
		СтрокаТабличнойЧасти.Коэффициент      			= Коэффициент;
		СтрокаТабличнойЧасти.Качество      				= Качество;
		СтрокаТабличнойЧасти.Спецификация 				= УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры, Объект.Дата, Объект.Подразделение);
		РаботаСДиалогамиКлиент.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, СведенияЕдиницаИзмеренияМест);
	КонецЕсли;
КонецПроцедуры //

&НаКлиенте
Процедура ДействиеПодбор()

	Команда = "ПодборВТабличнуюЧастьПродукция";
	ЕстьУслуги = Ложь;
	
	СтруктураПараметровПодбора = Новый Структура();
	СтруктураПараметровПодбора.Вставить("Команда", Команда);
	
	СтруктураПараметровПодбора.Вставить("ПодбиратьУслуги", ЕстьУслуги);
	Если ЕстьУслуги Тогда
		СтруктураПараметровПодбора.Вставить("ОтборУслугПоСправочнику", Ложь);
	КонецЕсли;
	
	ВременнаяДатаРасчетов = ?(НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДата()), Неопределено, Объект.Дата);
	СтруктураПараметровПодбора.Вставить("ДатаРасчетов", ВременнаяДатаРасчетов);
	
	РаботаСДиалогамиКлиент.ОткрытьПодборНоменклатуры(ЭтаФорма, СтруктураПараметровПодбора);
		
КонецПроцедуры //


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		// Это существующий документ. 
		// Проверим, что его можно менять.
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Перем Команда;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		
		ВыбранноеЗначение.Свойство("Команда", Команда);

		Если Команда = "ПодборВТабличнуюЧастьПродукция" Тогда
			ОбработкаПодбора("Продукция", ВыбранноеЗначение);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

// СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ДАННЫХ ИЗ НАСТРОЕК

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ДобавитьДополнительныеДанныеВНастройку(Объект, Настройки, Документы.ВыпускПродукции.СтруктураДополнительныхДанныхФормы());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ЗаполнитьОбъектДополнительнымиДанными(Объект, Настройки, Документы.ВыпускПродукции.СтруктураДополнительныхДанныхФормы());
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(Объект.Номер) Тогда
		ПрефиксацияОбъектовСобытия.ОчиститьНомерОбъекта(Объект.Номер, Объект.Организация);
	КонецЕсли; 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ДАННЫХ В ТАБЛИЧНОЙ ЧАСТИ

&НаСервереБезКонтекста
Функция ИзменениеНоменклатурыСервер(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = РаботаСДиалогамиСервер.ИзменениеНоменклатуры(ДанныеДляЗаполнения);
	
	// Специализированные для табличной части
	Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(
		ДанныеДляЗаполнения.Номенклатура, 
		Неопределено,
		ДанныеДляЗаполнения.Дата, 
		ДанныеДляЗаполнения.Подразделение);
	ЗначенияДляЗаполнения.Вставить("Спецификация",			Спецификация);

	Возврат ЗначенияДляЗаполнения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменениеХарактеристикиНоменклатурыСервер(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = Новый Структура();
	
	Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(
		ДанныеДляЗаполнения.Номенклатура, 
		Неопределено,
		ДанныеДляЗаполнения.Дата, 
		ДанныеДляЗаполнения.Подразделение);
	ЗначенияДляЗаполнения.Вставить("Спецификация",			Спецификация);

	Возврат ЗначенияДляЗаполнения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ТЧ "ПРОДУКЦИЯ" И ЕЁ РЕКВИЗИТОВ

&НаКлиенте
Процедура ПродукцияНоменклатураПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	ДанныеОбменаССервером = Новый Структура();
	ДанныеОбменаССервером.Вставить("Номенклатура",  СтрокаТабличнойЧасти.Номенклатура);
	ДанныеОбменаССервером.Вставить("Дата",          Объект.Дата);
	ДанныеОбменаССервером.Вставить("Подразделение", Объект.Подразделение);
	
	// Получим все необходимые данные на сервере
	ЗначенияДляЗаполнения = ИзменениеНоменклатурыСервер(ДанныеОбменаССервером);
	
	// Заполним реквизиты строки
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ЗначенияДляЗаполнения);
	РаботаСДиалогамиКлиент.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, ДанныеОбменаССервером.СведенияЕдиницаИзмеренияМест);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияХарактеристикаНоменклатурыПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	ДанныеОбменаССервером = Новый Структура();
	ДанныеОбменаССервером.Вставить("Номенклатура",					СтрокаТабличнойЧасти.Номенклатура);
	ДанныеОбменаССервером.Вставить("ХарактеристикаНоменклатуры",	СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры);
	ДанныеОбменаССервером.Вставить("Дата",          				Объект.Дата);
	ДанныеОбменаССервером.Вставить("Подразделение", 				Объект.Подразделение);
	
	// Получим все необходимые данные на сервере
	ЗначенияДляЗаполнения = ИзменениеХарактеристикиНоменклатурыСервер(ДанныеОбменаССервером);
	
	// Заполним реквизиты строки
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ЗначенияДляЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияЕдиницаИзмеренияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	ДанныеОбменаССервером = Новый Структура();
	ДанныеОбменаССервером.Вставить("ЕдиницаИзмерения",     СтрокаТабличнойЧасти.ЕдиницаИзмерения);
	ДанныеОбменаССервером.Вставить("ЕдиницаИзмеренияМест", СтрокаТабличнойЧасти.ЕдиницаИзмеренияМест);
	
	// Получим все необходимые данные на сервере
	ЗначенияДляЗаполнения = РаботаСДиалогамиСервер.ИзменениеЕдиницыИзмерения(ДанныеОбменаССервером);
	
	// Заполним реквизиты строки
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ЗначенияДляЗаполнения);
	РаботаСДиалогамиКлиент.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти, ДанныеОбменаССервером.СведенияЕдиницаИзмеренияМест);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияЕдиницаИзмеренияМестПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	РаботаСДиалогамиКлиент.ОчиститьКоличествоМестПриОчисткеЕдиницыМест(СтрокаТабличнойЧасти);
	РаботаСДиалогамиКлиент.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияКоличествоПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	РаботаСДиалогамиКлиент.РассчитатьКоличествоМестТабЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияКоличествоМестПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	РаботаСДиалогамиКлиент.РассчитатьКоличествоТабЧасти(СтрокаТабличнойЧасти);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	РаботаСДиалогамиКлиент.НачалоВыбораЗначенияСпецификации(СтрокаТабличнойЧасти.Номенклатура, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияПодбор(Команда)
	ДействиеПодбор();
КонецПроцедуры
