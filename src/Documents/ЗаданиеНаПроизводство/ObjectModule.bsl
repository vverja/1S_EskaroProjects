Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура ЗаполнитьТаблицуВыпускТехПроцесс() Экспорт
	
	Если ВыпускТехПроцесс.Количество() > 0 Тогда
		#Если Клиент Тогда
		Ответ = Вопрос("Табличная часть ""Выпуск.Тех. процесс"" уже содержит строки."
					  + Символы.ПС + "При заполнении они будут удалены!" + Символы.ПС,
					   РежимДиалогаВопрос.ДаНет);
		Если Не Ответ = КодВозвратаДиалога.Да Тогда
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		#КонецЕсли
		ВыпускТехПроцесс.Очистить();
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗанятостьРабочихЦентров.Период КАК Период,
	|	ЗанятостьРабочихЦентров.ДатаОкончания КАК ДатаОкончания,
	|	ЗанятостьРабочихЦентров.РабочийЦентр КАК РабочийЦентр,
	|	ЗанятостьРабочихЦентров.Смена КАК Смена,
	|	ЗанятостьРабочихЦентров.ТехОперация КАК ТехОперация,
	|	ЗанятостьРабочихЦентров.Номенклатура КАК Номенклатура,
	|	ЗанятостьРабочихЦентров.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ЗанятостьРабочихЦентров.Количество КАК КоличествоМест,
	|	ЗанятостьРабочихЦентров.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	ЗанятостьРабочихЦентров.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	ЗанятостьРабочихЦентров.Количество КАК Количество,
	|	ЗанятостьРабочихЦентров.Спецификация КАК Спецификация,
	|	ЗанятостьРабочихЦентров.КонечнаяПродукция КАК КонечнаяПродукция,
	|	ЗанятостьРабочихЦентров.Спецификация,
	|	ЗанятостьРабочихЦентров.КонечнаяПродукция,
	|	ЗанятостьРабочихЦентров.Заказ КАК Заказ,
	|	ЗанятостьРабочихЦентров.Проект
	|ИЗ
	|	РегистрСведений.ДанныеДляПланированияЗанятостиРабочихЦентров КАК ЗанятостьРабочихЦентров
	|
	|ГДЕ
	|	(ЗанятостьРабочихЦентров.Период МЕЖДУ НАЧАЛОПЕРИОДА(&ДатаЗадания, ДЕНЬ) И КОНЕЦПЕРИОДА(&ДатаЗадания, ДЕНЬ)) И
	|	ЗанятостьРабочихЦентров.Состояние = &Состояние";
	
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		
		Запрос.Текст = Запрос.Текст + " И РабочийЦентр.Подразделение = &Подразделение";
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Смена) Тогда
		
		Запрос.Текст = Запрос.Текст + " И Смена = &Смена";
		Запрос.УстановитьПараметр("Смена", Смена);
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Состояние", Перечисления.СостоянияРабочихЦентров.Занят);
	Запрос.УстановитьПараметр("ДатаЗадания", ДатаЗадания);

	ВыпускТехПроцесс.Загрузить(Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.Прямой));

КонецПроцедуры // ЗаполнитьТаблицуВыпуск()

Процедура ПроверкаРеквизитов(Отказ, Заголовок)

	РеквизитыШапки = "ДатаЗадания";
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура(РеквизитыШапки), Отказ, Заголовок);
	
	Если ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс Тогда
		РеквизитыТабВыпускТехПроцесс = "Период, ДатаОкончания, РабочийЦентр, ТехОперация";
	Иначе
		РеквизитыТабВыпускТехПроцесс = "Номенклатура, Количество";
	КонецЕсли;
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ВыпускТехПроцесс", Новый Структура(РеквизитыТабВыпускТехПроцесс), Отказ, Заголовок);
	
	Если ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс Тогда
		
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ПланыЗанятостиРабочихЦентров.Период,
		|	ПланыЗанятостиРабочихЦентров.ДатаОкончания,
		|	ПланыЗанятостиРабочихЦентров.РабочийЦентр,
		|	ПланыЗанятостиРабочихЦентров.Номенклатура,
		|	ПланыЗанятостиРабочихЦентров.ХарактеристикаНоменклатуры
		|ИЗ
		|	РегистрСведений.ПланыЗанятостиРабочихЦентров КАК ПланыЗанятостиРабочихЦентров
		|
		|ГДЕ
		|	ПланыЗанятостиРабочихЦентров.РабочийЦентр = &РабочийЦентр И
		|	ПланыЗанятостиРабочихЦентров.Номенклатура = &Номенклатура И
		|	ПланыЗанятостиРабочихЦентров.ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры И
		|	(ПланыЗанятостиРабочихЦентров.Период МЕЖДУ &Период И &ДатаОкончания ИЛИ ПланыЗанятостиРабочихЦентров.ДатаОкончания МЕЖДУ &Период И &ДатаОкончания)");
		
		
		ПредставлениеТабличнойЧасти = ЭтотОбъект.Метаданные().ТабличныеЧасти["ВыпускТехПроцесс"].Представление();
		
		Для каждого СтрокаТаблицы из ВыпускТехПроцесс Цикл
			
			СтрокаНачалаСообщенияОбОшибке = "В строке номер """ + СокрЛП(СтрокаТаблицы.НомерСтроки) +
			                               """ табличной части """ + ПредставлениеТабличнойЧасти + """: ";
										   
			Запрос.УстановитьПараметр("РабочийЦентр", СтрокаТаблицы.РабочийЦентр);
			Запрос.УстановитьПараметр("Номенклатура", СтрокаТаблицы.Номенклатура);
			Запрос.УстановитьПараметр("ХарактеристикаНоменклатуры", СтрокаТаблицы.ХарактеристикаНоменклатуры);
			Запрос.УстановитьПараметр("Период", СтрокаТаблицы.Период);
			Запрос.УстановитьПараметр("ДатаОкончания", СтрокаТаблицы.ДатаОкончания);
			
			Если НЕ Запрос.Выполнить().Пустой() Тогда
				
				СтрокаСообщения = "На данный период уже зафиксированы задания на производство!";
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + СтрокаСообщения, Отказ, Заголовок);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;

КонецПроцедуры // ПроверкаРеквизитов()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ЗаданиеНаПроизводство", "Задание на производство");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Процедура ДвиженияПоТабличнойЧастиВыпускТехПроцесс()
	
	НаборДвиженийЗаданияНаВыпуск = Движения.ЗаданияНаВыпуск;
	ТаблицаДвиженийЗаданияНаВыпуск = НаборДвиженийЗаданияНаВыпуск.Выгрузить();
	
	Для каждого Строка из ВыпускТехПроцесс Цикл
		
		Если Строка.Номенклатура.Пустая() ИЛИ Строка.Количество = 0 Тогда
			
			Продолжить;
			
		КонецЕсли;
		
		НоваяСтрокаЗаданияНаВыпуск = ТаблицаДвиженийЗаданияНаВыпуск.Добавить();
		НоваяСтрокаЗаданияНаВыпуск.ЗаданиеНаПроизводство = Ссылка;
		НоваяСтрокаЗаданияНаВыпуск.Заказ = Строка.Заказ;
		НоваяСтрокаЗаданияНаВыпуск.КонечнаяПродукция = Строка.КонечнаяПродукция;
		НоваяСтрокаЗаданияНаВыпуск.Номенклатура = Строка.Номенклатура;
		НоваяСтрокаЗаданияНаВыпуск.ХарактеристикаНоменклатуры = Строка.ХарактеристикаНоменклатуры;
		НоваяСтрокаЗаданияНаВыпуск.Количество = ?(Строка.Номенклатура.Услуга, Строка.Количество, Строка.Количество * Строка.Коэффициент / Строка.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент);
		
	КонецЦикла;
	
	ТаблицаДвиженийЗаданияНаВыпуск.Свернуть("ЗаданиеНаПроизводство, Заказ, КонечнаяПродукция, Номенклатура, ХарактеристикаНоменклатуры", "Количество");
	
	НаборДвиженийЗаданияНаВыпуск.мПериод = ДатаЗадания;
	НаборДвиженийЗаданияНаВыпуск.мТаблицаДвижений = ТаблицаДвиженийЗаданияНаВыпуск;
	НаборДвиженийЗаданияНаВыпуск.ВыполнитьПриход();
	
	Если ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс Тогда
		
		ТабВыпускТехПроцесс = ВыпускТехПроцесс.Выгрузить();
		ТабВыпускТехПроцесс.Колонки.Добавить("Документ");
		ТабВыпускТехПроцесс.Колонки.Добавить("Состояние");
		ТабВыпускТехПроцесс.ЗаполнитьЗначения(Ссылка, "Документ");
		ТабВыпускТехПроцесс.ЗаполнитьЗначения(Перечисления.СостоянияРабочихЦентров.Занят, "Состояние");
		
		Индекс = 0;
		
		Пока Индекс < ТабВыпускТехПроцесс.Количество() Цикл
			
			ТипКонечнойПродукции = ТипЗнч(ТабВыпускТехПроцесс[Индекс].КонечнаяПродукция);
			ТипЗаказа = ТипЗнч(ТабВыпускТехПроцесс[Индекс].Заказ);
			
			Если ТипКонечнойПродукции = Тип("СправочникСсылка.ОсновныеСредства") ИЛИ ТипЗаказа = Тип("ДокументСсылка.ЗаказНаОбслуживаниеОС") Тогда
				
				ТабВыпускТехПроцесс.Удалить(ТабВыпускТехПроцесс[Индекс]);
				
			ИначеЕсли ТабВыпускТехПроцесс[Индекс].Период = Дата('00010101') ИЛИ ТабВыпускТехПроцесс[Индекс].ДатаОкончания = Дата('00010101') ИЛИ ТабВыпускТехПроцесс[Индекс].Период > ТабВыпускТехПроцесс[Индекс].ДатаОкончания Тогда
				
				ТабВыпускТехПроцесс.Удалить(ТабВыпускТехПроцесс[Индекс]);
				
			Иначе
				
				Индекс = Индекс + 1;
				
			КонецЕсли;
			
		КонецЦикла;
		
		НаборДвиженийПланыЗанятостиРабочихЦентров = Движения.ПланыЗанятостиРабочихЦентров;
		
		Для Каждого СтрокаВыпускТехПроцесс Из ТабВыпускТехПроцесс Цикл
			
			ДвижениеПоПланыЗанятостиРабочихЦентров = НаборДвиженийПланыЗанятостиРабочихЦентров.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеПоПланыЗанятостиРабочихЦентров, СтрокаВыпускТехПроцесс);
				
			Если СтрокаВыпускТехПроцесс.Номенклатура.Пустая() ИЛИ СтрокаВыпускТехПроцесс.Количество = 0 Тогда
				
				ДвижениеПоПланыЗанятостиРабочихЦентров.Количество = 0;
				
			Иначе
				
				ДвижениеПоПланыЗанятостиРабочихЦентров.Количество = СтрокаВыпускТехПроцесс.Количество * СтрокаВыпускТехПроцесс.Коэффициент / СтрокаВыпускТехПроцесс.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
				
			КонецЕсли;
			
		КонецЦикла;	
		
		НаборДвиженийЗаданияНаТехОперации = Движения.ЗаданияНаТехОперации;
		ТаблицаДвиженийЗаданияНаТехОперации = НаборДвиженийЗаданияНаТехОперации.Выгрузить();
		
		Для каждого Строка из ВыпускТехПроцесс Цикл
			
			Если Строка.ТехОперация.Пустая() Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			Если Строка.Период = Дата('00010101') ИЛИ Строка.ДатаОкончания = Дата('00010101') ИЛИ Строка.Период > Строка.ДатаОкончания Тогда
				
				Продолжить;
				
			КонецЕсли;
			
			НоваяСтрокаЗаданияНаТехОперации = ТаблицаДвиженийЗаданияНаТехОперации.Добавить();
			НоваяСтрокаЗаданияНаТехОперации.ЗаданиеНаПроизводство = Ссылка;
			НоваяСтрокаЗаданияНаТехОперации.ТехОперация = Строка.ТехОперация;
			
			Если Строка.ТехОперация.НормаВремени > 0 Тогда
				
				НоваяСтрокаЗаданияНаТехОперации.Количество = (Строка.ДатаОкончания - Строка.Период) / Строка.ТехОперация.НормаВремени;
				
			Иначе
				
				НоваяСтрокаЗаданияНаТехОперации.Количество = 1;
				
			КонецЕсли;
				
		КонецЦикла;
		
		ТаблицаДвиженийЗаданияНаТехОперации.Свернуть("ЗаданиеНаПроизводство, ТехОперация", "Количество");
		
		НаборДвиженийЗаданияНаТехОперации.мПериод = ДатаЗадания;
		НаборДвиженийЗаданияНаТехОперации.мТаблицаДвижений = ТаблицаДвиженийЗаданияНаТехОперации;
		НаборДвиженийЗаданияНаТехОперации.ВыполнитьПриход();
		
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоТабличнойЧастиВыпуск()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
		
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверкаРеквизитов(Отказ, Заголовок);
	
	Если Отказ Тогда
		
		Возврат;
		
	КонецЕсли;
	
	// Формирование движений регистров
	ДвиженияПоТабличнойЧастиВыпускТехПроцесс();
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
Функция _СформироватьЗаголовокДокумента(ДокументОбъект, НазваниеДокумента = "", Подразделение, РабочийЦентр, КодЯзыкаПечать)

	Возврат НазваниеДокумента + " № " + ОбщегоНазначения.ПолучитьНомерНаПечать(ДокументОбъект) + "/"
	                          + ?(НЕ ЗначениеЗаполнено(РабочийЦентр.Подразделение), СокрЛП(Подразделение.Код), СокрЛП(РабочийЦентр.Подразделение.Код)) + "/"
							  + СокрЛП(РабочийЦентр.Код)
							  + НСтр("ru=' от ';uk=' від '",КодЯзыкаПечать) + Формат(ДокументОбъект.Дата, "ДФ='дд ММММ гггг';Л="+Локализация.ОпределитьКодЯзыкаДляФормат(КодЯзыкаПечать));

КонецФункции // ОбщегоНазначения.СформироватьЗаголовокДокумента()
	
// Функция формирует табличный документ с печатной формой
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьЗаданияНаПроизводство()
	
	ТабПродукция = Новый ТаблицаЗначений;
	ТабПродукция.Колонки.Добавить("Номенклатура");
	ТабПродукция.Колонки.Добавить("ХарактеристикаНоменклатуры");
	ТабПродукция.Колонки.Добавить("ЕдиницаИзмерения");
	ТабПродукция.Колонки.Добавить("Количество");
	ТабПродукция.Колонки.Добавить("Спецификация");
	
	ТабПродукцияНаСмену = ТабПродукция.Скопировать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаданиеНаПроизводство_ЗаданиеНаПроизводство";
	Макет = ПолучитьМакет("ЗаданиеНаПроизводство");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.РабочийЦентр КАК РабочийЦентр,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Смена КАК Смена,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПроизводствоВыпускТехПроцесс.РабочийЦентр) КАК РабочийЦентрПредставление,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.ТехОперация КАК ТехОперация,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПроизводствоВыпускТехПроцесс.ТехОперация) КАК ТехОперацияПредставление,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Номенклатура КАК Номенклатура,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПроизводствоВыпускТехПроцесс.Номенклатура) КАК НоменклатураПредставление,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПроизводствоВыпускТехПроцесс.ХарактеристикаНоменклатуры) КАК ХарактеристикаПредставление,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПроизводствоВыпускТехПроцесс.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Спецификация КАК Спецификация,
	|	ПРЕДСТАВЛЕНИЕ(ЗаданиеНаПроизводствоВыпускТехПроцесс.Спецификация) КАК СпецификацияПредставление,
	|	СУММА(ЗаданиеНаПроизводствоВыпускТехПроцесс.Количество) КАК Количество
	|ИЗ
	|	Документ.ЗаданиеНаПроизводство.ВыпускТехПроцесс КАК ЗаданиеНаПроизводствоВыпускТехПроцесс
	|ГДЕ
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Ссылка = &ЗаданиеНаПроизводство
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Смена,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.РабочийЦентр,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.ТехОперация,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Номенклатура,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.ХарактеристикаНоменклатуры,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.ЕдиницаИзмерения,
	|	ЗаданиеНаПроизводствоВыпускТехПроцесс.Спецификация
	|ИТОГИ ПО
	|	РабочийЦентр,
	|	Смена");
	
	Запрос.УстановитьПараметр("ЗаданиеНаПроизводство", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ОбластьМакетаЗаголовок = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакетаЗаголовокТаблицыТехПроцесс = Макет.ПолучитьОбласть("ЗаголовокТаблицыТехПроцесс");
	ОбластьМакетаСтрокаТехПроцесс = Макет.ПолучитьОбласть("СтрокаТехПроцесс");
	
	ОбластьМакетаЗаголовокТаблицыВыпуск = Макет.ПолучитьОбласть("ЗаголовокТаблицыВыпуск");
	ОбластьМакетаСтрокаВыпуск = Макет.ПолучитьОбласть("СтрокаВыпуск");
	
	ОбластьМакетаЗаголовокТаблицыКомплектующие = Макет.ПолучитьОбласть("ЗаголовокТаблицыКомплектующие");
	ОбластьМакетаСтрокаКомплектующее = Макет.ПолучитьОбласть("СтрокаКомплектующее");
	
	ОбластьМакетаИтоги = Макет.ПолучитьОбласть("Итоги");
	
	ВыборкаРабочиеЦентры = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРабочиеЦентры.Следующий() Цикл
		
		ВыборкаСмены = ВыборкаРабочиеЦентры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСмены.Следующий() Цикл
			
			ТабПродукцияНаСмену.Очистить();
			
			ОбластьМакетаЗаголовок.Параметры.ТекстЗаголовка = _СформироватьЗаголовокДокумента(Ссылка, НСтр("ru='Задание на производство';uk='Завдання на виробництво'",КодЯзыкаПечать), Подразделение, ВыборкаРабочиеЦентры.РабочийЦентр, КодЯзыкаПечать);
			ТабДокумент.Вывести(ОбластьМакетаЗаголовок);
			
			ОбластьМакетаШапка.Параметры.РабочийЦентр = ВыборкаРабочиеЦентры.РабочийЦентр;
			ОбластьМакетаШапка.Параметры.ДатаЗадания = ДатаЗадания;
			ОбластьМакетаШапка.Параметры.Смена = ?(НЕ ЗначениеЗаполнено(ВыборкаСмены.Смена), Смена, ВыборкаСмены.Смена);
		    ТабДокумент.Вывести(ОбластьМакетаШапка);
			
			ВыборкаТехОперации = ВыборкаСмены.Выбрать();
			
			Если ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс Тогда
				
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицыТехПроцесс);
				
			Иначе
				
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицыВыпуск);
				
			КонецЕсли;
			
			НомерПП = 0;
				
			Пока ВыборкаТехОперации.Следующий() Цикл
				
				НомерПП = НомерПП + 1;
				
				Если ВидЗадания = Перечисления.ВидыЗаданийНаПроизводство.НаТехПроцесс Тогда
				
					ОбластьМакетаСтрокаТехПроцесс.Параметры.Заполнить(ВыборкаТехОперации);
					ОбластьМакетаСтрокаТехПроцесс.Параметры.НомерПП = НомерПП;
					ОбластьМакетаСтрокаТехПроцесс.Параметры.НоменклатураПредставление = УправлениеЗапасами.ПредставлениеНоменклатуры(ВыборкаТехОперации.НоменклатураПредставление, ВыборкаТехОперации.ХарактеристикаПредставление);
					ТабДокумент.Вывести(ОбластьМакетаСтрокаТехПроцесс);
					
				Иначе
					
					ОбластьМакетаСтрокаВыпуск.Параметры.Заполнить(ВыборкаТехОперации);
					ОбластьМакетаСтрокаВыпуск.Параметры.НомерПП = НомерПП;
					ОбластьМакетаСтрокаВыпуск.Параметры.Код = ВыборкаТехОперации.Номенклатура.Код;
					ОбластьМакетаСтрокаВыпуск.Параметры.Артикул = ВыборкаТехОперации.Номенклатура.Артикул;
					ТабДокумент.Вывести(ОбластьМакетаСтрокаВыпуск);
					
				КонецЕсли;
				
				ТабПродукция.Очистить();
				
				Если ВыборкаТехОперации.Количество > 0 Тогда
					
					НоваяСтрокаТабПродукция = ТабПродукция.Добавить();
					НоваяСтрокаТабПродукция.Номенклатура = ВыборкаТехОперации.Номенклатура;
					НоваяСтрокаТабПродукция.ХарактеристикаНоменклатуры = ВыборкаТехОперации.Характеристика;
					НоваяСтрокаТабПродукция.ЕдиницаИзмерения = ВыборкаТехОперации.ЕдиницаИзмерения;
					НоваяСтрокаТабПродукция.Спецификация = ВыборкаТехОперации.Спецификация;
					НоваяСтрокаТабПродукция.Количество = ВыборкаТехОперации.Количество;
					
					НоваяСтрокаТабПродукцияНаСмену = ТабПродукцияНаСмену.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрокаТабПродукцияНаСмену, НоваяСтрокаТабПродукция);
					
				КонецЕсли;
				
			КонецЦикла;
			
			РезультатПотребности = Неопределено;
			РазузлованиеНоменклатуры.ПолучитьПотребность(ТабПродукцияНаСмену, РезультатПотребности);
				
			Если РезультатПотребности <> Неопределено Тогда

				РезультатПотребности.Потребности.Свернуть("Материал, ХарактеристикаМатериала, ЕдиницаИзмеренияМатериала", "КоличествоМатериала");
					
				Если РезультатПотребности.Потребности.Количество() > 0 Тогда
						
					ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицыКомплектующие);
					
				КонецЕсли;
					
				НомерПП = 0;
				
				Для Каждого Потребность Из РезультатПотребности.Потребности Цикл
						
					НомерПП = НомерПП + 1;
					
					ОбластьМакетаСтрокаКомплектующее.Параметры.НомерПП = НомерПП;
					ОбластьМакетаСтрокаКомплектующее.Параметры.Код = Потребность.Материал.Код;
					ОбластьМакетаСтрокаКомплектующее.Параметры.Артикул = Потребность.Материал.Артикул;
					ОбластьМакетаСтрокаКомплектующее.Параметры.Номенклатура = Потребность.Материал;
					ОбластьМакетаСтрокаКомплектующее.Параметры.НоменклатураПредставление = Потребность.Материал.Наименование;
					ОбластьМакетаСтрокаКомплектующее.Параметры.Характеристика = Потребность.ХарактеристикаМатериала;
					ОбластьМакетаСтрокаКомплектующее.Параметры.ХарактеристикаПредставление = Потребность.ХарактеристикаМатериала.Наименование;
					ОбластьМакетаСтрокаКомплектующее.Параметры.ЕдиницаИзмерения = Потребность.ЕдиницаИзмеренияМатериала;
					ОбластьМакетаСтрокаКомплектующее.Параметры.ЕдиницаИзмеренияПредставление = Потребность.ЕдиницаИзмеренияМатериала.Наименование;
					ОбластьМакетаСтрокаКомплектующее.Параметры.Количество = Потребность.КоличествоМатериала;
					ТабДокумент.Вывести(ОбластьМакетаСтрокаКомплектующее);
					
				КонецЦикла;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(ОбластьМакетаИтоги);
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьЗаданияНаПроизводство()
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
// Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ИмяМакета = "ЗаданиеНаПроизводство" Тогда
		
		// Получить экземпляр документа на печать
		ТабДокумент = ПечатьЗаданияНаПроизводство();
	
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли


