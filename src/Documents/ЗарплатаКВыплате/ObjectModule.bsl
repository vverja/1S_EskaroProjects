////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Формирует запрос по документу
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросДляПечати()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("НачалоМесяца",  НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("Ссылка",        Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ЗарплатаКВыплатеЗарплата.Физлицо.Наименование) КАК ФизЛицо,
	|	ЗарплатаКВыплатеЗарплата.Сумма,
	|	ВзаиморасчетыДатаДокумента.СуммаУпрОстаток КАК СуммаНаДатуДокумента,
	|	ВзаиморасчетыНачалоМесяца.СуммаУпрОстаток КАК СуммаНаНачалоМесяца,
	|	ЗарплатаКВыплатеЗарплата.НомерСтроки КАК НомерПП
	|ИЗ
	|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|		&ДатаДокумента,
	|		Физлицо В
	|		    (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		        ЗарплатаКВыплатеЗарплата.Физлицо
	|		    ИЗ
	|		        Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		    ГДЕ
	|		        ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка)) КАК ФИОФизЛицСрезПоследних
	|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(
	|		&НачалоМесяца,
	|		Физлицо В
	|		    (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		        ЗарплатаКВыплатеЗарплата.Физлицо
	|		    ИЗ
	|		        Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		    ГДЕ
	|		        ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка)) КАК ВзаиморасчетыНачалоМесяца
	|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ВзаиморасчетыНачалоМесяца.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(
	|		&ДатаДокумента,
	|		Физлицо В
	|		    (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		        ЗарплатаКВыплатеЗарплата.Физлицо
	|		    ИЗ
	|		        Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
	|		    ГДЕ
	|		        ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка)) КАК ВзаиморасчетыДатаДокумента
	|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ВзаиморасчетыДатаДокумента.Физлицо
	|ГДЕ
	|	ЗарплатаКВыплатеЗарплата.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура Автозаполнение() Экспорт
	
	Зарплата.Очистить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("парамДата",					КонецМесяца(Дата) + 1);
	Запрос.УстановитьПараметр("парамНеВыплачено",			Перечисления.ВыплаченностьЗарплаты.НеВыплачено);
	Запрос.УстановитьПараметр("парамМесяц",					КонецМесяца(Дата));
	Если Не Подразделение.Пустая() Или ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда
		Запрос.УстановитьПараметр("парамПодразделение",Подразделение);
	КонецЕсли;
	
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	РаботникиСрезПоследних.Физлицо,
		|	АвансыРаботникам.СуммаАванса КАК Сумма,
		|	Истина КАК Авторасчет
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(&парамДата) КАК РаботникиСрезПоследних
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АвансыРаботникам КАК АвансыРаботникам
		|		ПО РаботникиСрезПоследних.Физлицо = АвансыРаботникам.Физлицо
		|ГДЕ
		|	РаботникиСрезПоследних.ПричинаИзмененияСостояния <> &парамУволен" +
		?(Подразделение.Пустая(),"",Символы.ПС + " И РаботникиСрезПоследних.Подразделение = &парамПодразделение") + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	РаботникиСрезПоследних.Физлицо.Наименование"; 
		
		Запрос.УстановитьПараметр("парамУволен",	Перечисления.ПричиныИзмененияСостояния.Увольнение);
		Зарплата.Загрузить(Запрос.Выполнить().Выгрузить());

	Иначе
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВзаиморасчетыСРаботникамиОстатки.Физлицо,
		|	0 КАК Сумма,
		|	Истина КАК Авторасчет
		|ИЗ
		|	РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(
		|		&парамДата,) КАК ВзаиморасчетыСРаботникамиОстатки
		|ГДЕ
		|	ВзаиморасчетыСРаботникамиОстатки.СуммаУпрОстаток > 0";
		Если Не Подразделение.Пустая() Тогда
			Запрос.Текст = Запрос.Текст + "
			|	И ВзаиморасчетыСРаботникамиОстатки.Физлицо В
			|		(ВЫБРАТЬ
			|			РаботникиСрезПоследних.ФизЛицо
			|		ИЗ
			|			РегистрСведений.Работники.СрезПоследних(&парамДата, ) КАК РаботникиСрезПоследних
			|		ГДЕ
			|			РаботникиСрезПоследних.Подразделение = &парамПодразделение)";
		КонецЕсли;
		
		Запрос.Текст = Запрос.Текст + "
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВзаиморасчетыСРаботникамиОстатки.Физлицо.Наименование";
		
		Зарплата.Загрузить(Запрос.Выполнить().Выгрузить());
		
		
	КонецЕсли;
		
КонецПроцедуры //  Автозаполнение

Процедура Рассчитать() Экспорт

	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("парамСсылка",		Ссылка);
	Запрос.УстановитьПараметр("парамДата",			КонецМесяца(Дата) + 1);
	Запрос.УстановитьПараметр("парамМесяц",			КонецМесяца(Дата));
	
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Аванс Тогда 
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗарплатаКВыплатеЗарплата.НомерСтроки КАК НомерСтроки,
		|	ЗарплатаКВыплатеЗарплата.Физлицо,
		|	ВЫБОР
		|		КОГДА ЗарплатаКВыплатеЗарплата.Авторасчет
		|			ТОГДА АвансыРаботникам.СуммаАванса
		|		ИНАЧЕ ЗарплатаКВыплатеЗарплата.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ЗарплатаКВыплатеЗарплата.Авторасчет
		|ИЗ
		|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
		|		ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ РегистрСведений.АвансыРаботникам КАК АвансыРаботникам
		|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = АвансыРаботникам.Физлицо
		|ГДЕ
		|	ЗарплатаКВыплатеЗарплата.Ссылка = &парамСсылка И 
		|	ВЫБОР
		|		КОГДА ЗарплатаКВыплатеЗарплата.Авторасчет
		|			ТОГДА АвансыРаботникам.СуммаАванса ЕСТЬ НЕ NULL 
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Зарплата.Загрузить(Запрос.Выполнить().Выгрузить());
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗарплатаКВыплатеЗарплата.НомерСтроки,
		|	ЗарплатаКВыплатеЗарплата.Физлицо,
		|	ВЫБОР
		|		КОГДА ЗарплатаКВыплатеЗарплата.Авторасчет
		|			ТОГДА ВзаиморасчетыСРаботникамиОстатки.СуммаУпрОстаток
		|		ИНАЧЕ ЗарплатаКВыплатеЗарплата.Сумма
		|	КОНЕЦ КАК Сумма,
		|	ЗарплатаКВыплатеЗарплата.Авторасчет
		|ИЗ
		|	Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
		|		ЛЕВОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСРаботниками.Остатки(
		|		&парамДата,
		|		    Физлицо В
		|		        (ВЫБРАТЬ
		|		            ЗарплатаКВыплатеЗарплата.Физлицо
		|		        ИЗ
		|		            Документ.ЗарплатаКВыплате.Зарплата КАК ЗарплатаКВыплатеЗарплата
		|		        ГДЕ
		|		            ЗарплатаКВыплатеЗарплата.Ссылка = &парамСсылка)) КАК ВзаиморасчетыСРаботникамиОстатки
		|		ПО ЗарплатаКВыплатеЗарплата.Физлицо = ВзаиморасчетыСРаботникамиОстатки.Физлицо
		|ГДЕ
		|	ЗарплатаКВыплатеЗарплата.Ссылка = &парамСсылка И
		|	ВЫБОР
		|		КОГДА ЗарплатаКВыплатеЗарплата.Авторасчет
		|			ТОГДА ВзаиморасчетыСРаботникамиОстатки.СуммаУпрОстаток ЕСТЬ НЕ NULL 
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ	
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗарплатаКВыплатеЗарплата.НомерСтроки";
				
		Зарплата.Загрузить(Запрос.Выполнить().Выгрузить());
		
	КонецЕсли;
		

КонецПроцедуры

#Если Клиент Тогда

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "Печать" Тогда
	
		ТабДокумент = Новый ТабличныйДокумент;
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗарплатаКВыплате_Печать";
		
		// получаем данные для печати
		Выборка = СформироватьЗапросДляПечати().Выбрать();
		
		// получаем макет
		Макет = ПолучитьМакет("Макет");
		
		// выводим шапку документа
		ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка"); 
		ОбластьМакетаШапка.Параметры.НачалоМесяца  = НачалоМесяца(Ссылка.Дата);
		ОбластьМакетаШапка.Параметры.ДатаДокумента = Ссылка.Дата;
		ТабДокумент.Вывести(ОбластьМакетаШапка);
		
		ОбластьМакета = Макет.ПолучитьОбласть("СтрокаРаботника"); // строка работника
		
		// выводим данные
		Пока Выборка.Следующий() Цикл
			ОбластьМакета.Параметры.Заполнить(Выборка);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,"Зарплата к выплате "));
	
КонецФункции // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Печать","Взаиморасчеты с работниками");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(Зарплата,, "Физлицо");
КонецПроцедуры
