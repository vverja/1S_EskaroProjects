#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой "П6",
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьЗаявления() Экспорт
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ДатаНК = ПроведениеРасчетов.ДатаВводаНК();
	
	//// ВЫВОД ДАННЫХ В ОТЧЕТ
	Выборка = СформироватьЗапросПоДокументу().Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.ДатаИзменения < ДатаНК Тогда
			Макет = ПолучитьМакет("Заявление");
		Иначе
			Макет = ПолучитьМакет("Заявление2011");
		КонецЕсли;	
		
		ОбластьШапка1 = Макет.ПолучитьОбласть("Шапка1");
		ОбластьШапка1.Параметры.Заполнить(Выборка);
		ТабДокумент.Присоединить(ОбластьШапка1);
	
		ОбластьДРФО = Макет.ПолучитьОбласть("ДРФО");
		ТабДокумент.Присоединить(ОбластьДРФО);
		Счетчик = 1; 
		Пока Счетчик < 11 Цикл
			ОбластьДРФО = Макет.ПолучитьОбласть("КодПоДРФО" + Строка(Счетчик));	
			КодПоДРФО = Сред(Выборка.ФизЛицо.КодпоДРФО, Счетчик, 1);
			Если Номер <> Неопределено Тогда
				ОбластьДРФО.Параметры.Номер = КодПоДРФО;
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьДРФО);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		ОбластьШапка2 = Макет.ПолучитьОбласть("Шапка2");
		Областьшапка2.Параметры.Заполнить(Выборка);
		ТабДокумент.Присоединить(ОбластьШапка2);		
		
		Если Выборка.Актуальность Тогда
			ОбластьЗаявление = Макет.ПолучитьОбласть("ПрименениеЛьготы");
			//Закон про налог с доходов физических лиц
			
			Если Выборка.ДатаИзменения < ДатаНК Тогда
				ОбластьЗаявление.Параметры.Норма = Выборка.Льгота.ПунктЗаконаНДФЛ;
			Иначе
				КодЛьготы = СтрЗаменить(Выборка.Льгота.Код,"ВР","");
				ОбластьЗаявление.Параметры.Норма = КодЛьготы;
			КонецЕсли;
			
			ОбластьЗаявление.Параметры.Дата = Формат(Дата,"Л=uk; ДФ='дд ММММ гггг'");
			ТабДокумент.Присоединить(ОбластьЗаявление);
		Иначе
			ОбластьЗаявление = Макет.ПолучитьОбласть("ОтказОтЛьготы");
			ОбластьЗаявление.Параметры.Месяц =  Формат(Выборка.ДатаИзменения,"Л=uk; ДФ=ММММ");
			ОбластьЗаявление.Параметры.Год2 = Прав(Формат(выборка.ДатаИзменения,"ДФ=гггг"), 1);
			ОбластьЗаявление.Параметры.Год1 = Сред(Формат(выборка.ДатаИзменения,"ДФ=гггг"), 3,1);
			ОбластьЗаявление.Параметры.Дата = Формат(Дата,"Л=uk; ДФ='дд ММММ гггг'");
			ТабДокумент.Присоединить(ОбластьЗаявление);
		КонецЕсли;
		
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	

	
	Возврат ТабДокумент;
	
КонецФункции // 

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	// Получить экземпляр документа на печать
	Если  ИмяМакета = "ПечатьЗаявления" Тогда
		ТабДокумент = ПечатьЗаявления()
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,"Заявление на применение (отказ от) налоговой социальной льготы "));

КонецФункции // Печать

#КонецЕсли


Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура("ПечатьЗаявления","Печать заявления");		
КонецФункции

Функция  СформироватьЗапросПоДокументу()
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ЗаявлениеРаботникиОрганизации.Ссылка.Организация	КАК Организация,
	|	ЗаявлениеРаботникиОрганизации.Ссылка.Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	ЗаявлениеРаботникиОрганизации.Сотрудник				КАК Сотрудник,
	|	ЗаявлениеРаботникиОрганизации.Сотрудник.ФизЛицо 	КАК ФизЛицо,
	|	ЗаявлениеРаботникиОрганизации.Льгота				КАК Льгота,
	|	ЗаявлениеРаботникиОрганизации.ДатаИзменения			КАК ДатаИзменения,
	|	ЗаявлениеРаботникиОрганизации.Актуальность 			КАК Актуальность,
	|	РаботникиОрганизаций.Должность						КАК Должность,
	|	ЕСТЬNULL(ФИОФизЛиц.Фамилия + "" "" + ФИОФизЛиц.Имя + "" "" + ФИОФизЛиц.Отчество, ФизЛицо.Наименование) КАК ФИО	
	|ИЗ
	|	Документ.ЗаявлениеНаПрименениеЛьготы.РаботникиОрганизации КАК ЗаявлениеРаботникиОрганизации
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&МоментВремени) КАК ФИОФизЛиц
	|ПО
	|	ЗаявлениеРаботникиОрганизации.Сотрудник.ФизЛицо = ФИОФизЛиц.ФизЛицо
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&МоментВремени) КАК РаботникиОрганизаций
	|ПО
	|	ЗаявлениеРаботникиОрганизации.Сотрудник = РаботникиОрганизаций.Сотрудник
	|	И ЗаявлениеРаботникиОрганизации.Ссылка.Организация	= РаботникиОрганизаций.Организация
	|ГДЕ
	|	ЗаявлениеРаботникиОрганизации.Ссылка = &Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявлениеРаботникиОрганизации.Актуальность УБЫВ,
	|	ЗаявлениеРаботникиОрганизации.Сотрудник.Наименование
	|";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат Запрос;
	
КонецФункции



////////////////////////////////////////////////////////////////////////////
Процедура ОбработкаЗаполнения(Основание)
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПриемНаРаботуВОрганизацию") Тогда
		Организация = Основание.Организация;
		Ответственный = Основание.Ответственный;
		Для каждого СтрокаОснования Из Основание.РаботникиОрганизации Цикл
	      СтрокаРаботники = РаботникиОрганизации.Добавить();
		  
		  СтрокаРаботники.Сотрудник     = СтрокаОснования.Сотрудник;
		  СтрокаРаботники.Льгота        = Справочники.ВидыЛьготРаботниковОрганизаций.НДФЛ_611;
		  СтрокаРаботники.ДатаИзменения = СтрокаОснования.ДатаПриема;
		  СтрокаРаботники.Актуальность  = Истина;
	   КонецЦикла;		
	
	КонецЕсли; 
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ)
	Для каждого СтрокаРаботники Из РаботникиОрганизации Цикл

		Движение = Движения.ЛьготыРаботниковОрганизаций.Добавить();
		
		Движение.Организация   = Организация;
		Движение.Сотрудник     = СтрокаРаботники.Сотрудник;
		Движение.Льгота        = СтрокаРаботники.Льгота;
		Движение.Период        = СтрокаРаботники.ДатаИзменения;
		Движение.Актуальность  = СтрокаРаботники.Актуальность;

	КонецЦикла;		

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации);
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(РаботникиОрганизации);
	
КонецПроцедуры


