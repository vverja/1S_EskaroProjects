Перем ДокументИзменен;
Перем ЭтоПерепроведение;
Перем ЭтоУстановкаСтатуса Экспорт;
//Перем ПечатьПустых Экспорт;
#Если Клиент Тогда
Процедура ЗаполнитьПоОстаткамНаСкладе(ПостроительОтчета) Экспорт

	//ДатаОстатков = ОбщегоНазначения.ПолучитьДатуОстатков(ЭтотОбъект);
	МоментДокумента = Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Исключая);
	//клПаллета = Справочники.КлассификаторЕдиницИзмерения.Паллета;
	//клКоробка = Справочники.КлассификаторЕдиницИзмерения.Коробка;
	
	Запрос = ПостроительОтчета.ПолучитьЗапрос();
	Запрос.УстановитьПараметр("Склад", 		Склад);
	Запрос.УстановитьПараметр("НаДату", 	МоментДокумента);
	Запрос.УстановитьПараметр("СтатусЗавершено", Перечисления.СтатусыРазмещенийВЯчейках.Завершено);
	//Запрос.УстановитьПараметр("клПаллета", 	клПаллета);
	//Запрос.УстановитьПараметр("клКоробка", 	клКоробка);

	Выборка = Запрос.Выполнить().Выбрать();
	КоличествоСтрок = Выборка.Количество();
	п = 1;
	Пока Выборка.Следующий() Цикл
        Состояние("Обрабатывается строка " + п + " из " + КоличествоСтрок);
		
		Если Выборка.КоличествоЕХО = 0 Тогда
			Продолжить;
		КонецЕсли;

		СтрокаТабличнойЧасти = Товары.Добавить();

		СтрокаТабличнойЧасти.Номенклатура    			 = Выборка.Номенклатура;
		СтрокаТабличнойЧасти.ЕдиницаХраненияОстатков 	 = Выборка.Номенклатура.ЕдиницаХраненияОстатков;
		СтрокаТабличнойЧасти.Коэффициент 				 = Выборка.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
		СтрокаТабличнойЧасти.УчетноеКоличествоЕХО 		 = Выборка.КоличествоЕХО;
		СтрокаТабличнойЧасти.УчетнаяЯчейка 				 = Выборка.Ячейка;
		СтрокаТабличнойЧасти.ФактическоеКоличествоЕХО 	 = Выборка.КоличествоЕХО;
		СтрокаТабличнойЧасти.ФактическаяЯчейка 			 = Выборка.Ячейка;
		СтрокаТабличнойЧасти.НомерПаллета 				 = Выборка.НомерПаллета;

		п = п + 1;
	КонецЦикла;

КонецПроцедуры // ЗаполнитьПоОстаткамНаСкладе()
#КонецЕсли 

Функция ПолучитьТекстЗапросаПоУчетнымДанным()
	Возврат
	"ВЫБРАТЬ
	|	РазмещениеТоваровНаСкладахОстатки.Номенклатура КАК Номенклатура,
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка КАК Ячейка,
	|	РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток КАК КоличествоЕХО,
	|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета КАК НомерПаллета
	|ПОМЕСТИТЬ Остатки
	|ИЗ
	|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(&НаДату, Склад = &Склад И Статус = &СтатусЗавершено) КАК РазмещениеТоваровНаСкладахОстатки
	|{ГДЕ
	|	РазмещениеТоваровНаСкладахОстатки.Номенклатура.* КАК Номенклатура,
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка.НомерРяда КАК Ряд,
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка.НомерЯруса КАК Ярус,
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка.* КАК Ячейка}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Остатки.Номенклатура,
	|	Остатки.Ячейка,
	|	Остатки.КоличествоЕХО КАК КоличествоЕХО,
	|	Остатки.НомерПаллета КАК НомерПаллета
	|ИЗ
	|	Остатки КАК Остатки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Остатки.Номенклатура.Наименование";
	
КонецФункции

Процедура ЗаполнитьНачальныеНастройки(ПостроительОтчета) Экспорт
	ПостроительОтчета.Текст = ПолучитьТекстЗапросаПоУчетнымДанным();
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Номенклатура");
	МассивОтбора.Добавить("Ряд");
	МассивОтбора.Добавить("Ярус");
	МассивОтбора.Добавить("Ячейка");
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
КонецПроцедуры

Процедура ПроверитьНоменклатуру(Отказ)
	//мсвНоменклатура = Товары.ВыгрузитьКолонку("Номенклатура");
	//
	//ЗапросВТ = Новый Запрос;
	//ЗапросВТ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	//
	//ЗапросВТ.Текст = 
	//"ВЫБРАТЬ
	//|	Товары.Номенклатура,
	//|	Товары.ФактическоеКоличествоПаллет,
	//|	Товары.ФактическоеКоличествоКоробок,
	//|	Товары.ФактическоеКоличествоЕХО,
	//|	Товары.ОтклонениеПаллет,
	//|	Товары.ОтклонениеКоробок,
	//|	Товары.ОтклонениеЕХО,
	//|	Товары.НомерПаллета,
	//|	Товары.УчетнаяЯчейка,
	//|	Товары.ФактическаяЯчейка
	//|ПОМЕСТИТЬ ТаблицаДокументаПред
	//|ИЗ
	//|	&ТабТовары КАК Товары";
	//
	//ЗапросВТ.УстановитьПараметр("ТабТовары", Товары.Выгрузить());
	//ЗапросВТ.Выполнить();	
КонецПроцедуры

Процедура ПроверитьУчетныеДанные(Отказ)
	
	МоментДокумента = Новый Граница(ЭтотОбъект.МоментВремени(), ВидГраницы.Исключая);
	//клПаллета = Справочники.КлассификаторЕдиницИзмерения.Паллета;
	//клКоробка = Справочники.КлассификаторЕдиницИзмерения.Коробка;
	
	Запрос = Новый Запрос;
	Запрос.Текст = ПолучитьТекстЗапросаПоУчетнымДанным();
	
	Запрос.УстановитьПараметр("Склад",          Склад);
	Запрос.УстановитьПараметр("НаДату",         МоментДокумента);
	Запрос.УстановитьПараметр("СтатусЗавершено", Перечисления.СтатусыРазмещенийВЯчейках.Завершено);
	//Запрос.УстановитьПараметр("клПаллета",      клПаллета);
	//Запрос.УстановитьПараметр("клКоробка",      клКоробка);

	тзРез = Запрос.Выполнить().Выгрузить();
	
	Для каждого стрТовары Из Товары Цикл
		Если ЗначениеЗаполнено(стрТовары.УчетнаяЯчейка) Тогда
		
			ОтборСтрок = Новый Структура("Номенклатура, Ячейка", стрТовары.Номенклатура, стрТовары.УчетнаяЯчейка);
			мсвСтроки = тзРез.НайтиСтроки(ОтборСтрок);
			Если мсвСтроки.Количество() = 0 Тогда
				//Отказ = Истина;
				Сообщить("Учетное количество по номенклатуе """ + СокрЛП(стрТовары.Номенклатура) + """ в ячейке """ + стрТовары.УчетнаяЯчейка + """равно 0", СтатусСообщения.Важное);
			Иначе
				стрРез = мсвСтроки[0];
				Если стрТовары.УчетноеКоличествоЕХО <> стрРез.КоличествоЕХО Тогда
					
					Отказ = Истина;
					Сообщить("Учетное количество по номенклатуре """ + СокрЛП(стрТовары.Номенклатура) + """ в ячейке """ + стрТовары.УчетнаяЯчейка + """ не соответствует текущим остаткам", СтатусСообщения.Важное);
				
				КонецЕсли;
				Если стрРез.НомерПаллета <> Null И стрТовары.НомерПаллета <> стрРез.НомерПаллета Тогда
					Отказ = Истина;
					Сообщить("Учетный номер паллета (" + СокрЛП(стрТовары.НомерПаллета) + ") номенклатуры """ + СокрЛП(стрТовары.Номенклатура) + """ в ячейке """ + стрТовары.УчетнаяЯчейка + """ не соответствует номеру в текущих остатках (" + СокрЛП(стрРез.НомерПаллета) + ")", СтатусСообщения.Важное);
				КонецЕсли;
			КонецЕсли;
		
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьРазмещение(Отказ)
	
	ЗапросВТ = Новый Запрос;
	ЗапросВТ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗапросВТ.Текст = 
	"ВЫБРАТЬ
	|	Товары.Номенклатура,
	|	Товары.ФактическоеКоличествоЕХО,
	|	Товары.ОтклонениеЕХО КАК Количество,
	|	Товары.НомерПаллета,
	|	Товары.УчетнаяЯчейка,
	|	Товары.ФактическаяЯчейка КАК ЯчейкаФакт
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&ТабТовары КАК Товары";
	
	ЗапросВТ.УстановитьПараметр("ТабТовары", Товары.Выгрузить());
	ЗапросВТ.Выполнить();	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
	|	РазмещениеТоваровНаСкладахОстатки.Номенклатура,
	|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета КАК НомерПаллета,
	|	РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток КАК КоличествоЕХООстаток
	|ПОМЕСТИТЬ ОстаткиЕХО
	|ИЗ
	|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
	|			&НаДату,
	|			Склад = &Склад
	|				И Статус = &СтатусЗавершено) КАК РазмещениеТоваровНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|ГДЕ
	|	1 В
	|			(ВЫБРАТЬ
	|				1 КАК Поле1
	|			ИЗ
	|				ТаблицаДокумента КАК ТаблицаДокумента
	|			ГДЕ
	|				РазмещениеТоваровНаСкладахОстатки.Ячейка = ТаблицаДокумента.ЯчейкаФакт)
	|	И СостояниеВидовЯчеекСрезПоследних.ВидЯчейки <> &ВидЯчейкиОбщая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков КАК ЕХО,
	|	ТаблицаДокумента.Количество КАК КоличествоЕХО,
	|	ТаблицаДокумента.НомерПаллета,
	|	ТаблицаДокумента.ЯчейкаФакт,
	|	ТаблицаДокумента.ЯчейкаФакт.ДлинаЯчейки * ТаблицаДокумента.ЯчейкаФакт.ШиринаЯчейки * ТаблицаДокумента.ЯчейкаФакт.ВысотаЯчейки КАК ОбъемЯчейки,
	|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток, 0) КАК КоличествоЕХООстаток,
	|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.НомерПаллета, 0) КАК НомерПаллетаВОстатке,
	|	ЕСТЬNULL(СостояниеБлокировокЯчеекСрезПоследних.Заблокирована, ЛОЖЬ) КАК Заблокирована,
	|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки КАК ТекущийВидЯчейки,
	|	СостояниеЗонЯчеекСрезПоследних.Зона КАК ТекущаяЗонаЯчейки,
	|	ЕСТЬNULL(СостояниеРезервовЯчеекСрезПоследних.Заблокирована, ЛОЖЬ) КАК Зарезервирована,
	|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка КАК ЗакрепленнаяЯчейка,
	|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.МаксимальноеКоличество,
	|	РазмещениеТоваровНаСкладахОстатки.Номенклатура КАК НоменклатураРазмещенная
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиЕХО КАК РазмещениеТоваровНаСкладахОстатки
	|		ПО ТаблицаДокумента.ЯчейкаФакт = РазмещениеТоваровНаСкладахОстатки.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеБлокировокЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеБлокировокЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеБлокировокЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЗонЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеЗонЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеЗонЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРезервовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеРезервовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеРезервовЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаХраненияНоменклатурыНаСкладах.СрезПоследних(&НаДату, Склад = &Склад) КАК АдресаХраненияНоменклатурыНаСкладахСрезПоследних
	|		ПО ТаблицаДокумента.Номенклатура = АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Номенклатура
	|ГДЕ
	|	ТаблицаДокумента.Количество > 0";
	
	МоментДокумента = Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Исключая);
	
	//клПаллета = Справочники.КлассификаторЕдиницИзмерения.Паллета;
	//клКоробка = Справочники.КлассификаторЕдиницИзмерения.Коробка;
	//
	//Запрос.УстановитьПараметр("клПаллета", 		клПаллета);
	//Запрос.УстановитьПараметр("клКоробка", 		клКоробка);
	Запрос.УстановитьПараметр("НаДату", 		МоментДокумента);
	Запрос.УстановитьПараметр("Склад", 			Склад);
	Запрос.УстановитьПараметр("СтатусЗавершено", Перечисления.СтатусыРазмещенийВЯчейках.Завершено);
	Запрос.УстановитьПараметр("ВидЯчейкиОбщая", Перечисления.ВидыСкладскихЯчеек.Общая);
	
	Запрос.МенеджерВременныхТаблиц = ЗапросВТ.МенеджерВременныхТаблиц;
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	тзОбщиеОстатки = тзРезультат.Скопировать();
	тзОбщиеОстатки.Свернуть("Номенклатура, ЕХО, ЯчейкаФакт, ТекущийВидЯчейки, ОбъемЯчейки, МаксимальноеКоличество", "КоличествоЕХО, КоличествоЕХООстаток"); 
	//тзОбщиеОстатки.Свернуть("Номенклатура, ЕХО, ЯчейкаФакт, ТекущийВидЯчейки, МаксимальноеКоличество", "КоличествоЕХО, КоличествоЕХООстаток"); 
	
	Для Каждого стрРез Из тзРезультат Цикл
		Если стрРез.ТекущаяЗонаЯчейки = Null Тогда
			Сообщить("Не установлена зона ячейки """ + стрРез.ЯчейкаФакт + """", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если стрРез.ТекущийВидЯчейки = Null Тогда
			Сообщить("Не установлен вид ячейки """ + стрРез.ЯчейкаФакт + """", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если стрРез.Заблокирована Тогда
			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ заблокирована", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если стрРез.Зарезервирована Тогда
			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ зарезервирована", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		//Если стрРез.РасположенаДругаяНоменклатура Тогда
		//	Сообщить("Нельзя разместить товар ячейку """ + стрРез.ЯчейкаФакт + """, так как в ней уже размещена другая номенклатура", СтатусСообщения.Важное);
		//	Отказ = Истина;
		//КонецЕсли;
		
		Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
			Если стрРез.ЯчейкаФакт <> стрРез.ЗакрепленнаяЯчейка Тогда
				Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ не является закрепленной ячейкой номенклатуры """ + стрРез.Номенклатура + """", СтатусСообщения.Важное);
				Отказ = Истина;
			ИначеЕсли стрРез.НомерПаллета <> 0 Тогда
				Сообщить("Нельзя разместить паллету в ячейку комплектации """ + стрРез.ЯчейкаФакт + """", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если стрРез.НоменклатураРазмещенная <> null И стрРез.Номенклатура <> стрРез.НоменклатураРазмещенная Тогда
			Сообщить("В ячейке """ + стрРез.ЯчейкаФакт + """ уже размещена другая номенклатура.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		//Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
		//	Если стрРез.КоличествоЕХООстаток > 0 Тогда
		//		Сообщить("Нельзя размещать в буферную ячейку """ + стрРез.ЯчейкаФакт + """, так как в ней уже содержится товар", СтатусСообщения.Важное);
		//		Отказ = Истина;
		//	КонецЕсли;
		//КонецЕсли;
		
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		Для каждого стрРез Из тзОбщиеОстатки Цикл
			Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
				РазмещенноеКоличество = стрРез.КоличествоЕХООстаток + стрРез.КоличествоЕХО;
				Если РазмещенноеКоличество > стрРез.МаксимальноеКоличество Тогда
					Сообщить("Обнаружено переполнение ячейки """ + стрРез.ЯчейкаФакт
					+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", размещение: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
					+ ", макс. кол-во: " + стрРез.МаксимальноеКоличество + " " + стрРез.ЕХО
					, СтатусСообщения.Важное);
					
					Отказ = Истина;
				КонецЕсли;
				
				Если НЕ Отказ Тогда
					ОбъемЕдиницы = стрРез.ЕХО.Длина * стрРез.ЕХО.Ширина * стрРез.ЕХО.Высота;
					РазмещенныйОбъем = ОбъемЕдиницы * РазмещенноеКоличество;
					
					Если РазмещенныйОбъем > стрРез.ОбъемЯчейки Тогда
						Сообщить("Обнаружено превышение объема ячейки """ + стрРез.ЯчейкаФакт
						+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", размещение: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
						, СтатусСообщения.Важное);
						
						Отказ = Истина;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
				РазмещенноеКоличество = стрРез.КоличествоЕХООстаток + стрРез.КоличествоЕХО;
				ОбъемЕдиницы = стрРез.ЕХО.Длина * стрРез.ЕХО.Ширина * стрРез.ЕХО.Высота;
				РазмещенныйОбъем = ОбъемЕдиницы * РазмещенноеКоличество;
				
				Если РазмещенныйОбъем > стрРез.ОбъемЯчейки Тогда
					Сообщить("Обнаружено превышение объема ячейки """ + стрРез.ЯчейкаФакт
					+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", размещение: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
					, СтатусСообщения.Важное);
					
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ЯчейкаФакт,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаДокумента.Номенклатура) КАК КоличествоПозиций
	|ПОМЕСТИТЬ НоменклатураПоЯчейкам
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|ГДЕ
	|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки <> &ВидЯчейкиОбщая
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.ЯчейкаФакт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПоЯчейкам.ЯчейкаФакт
	|ИЗ
	|	НоменклатураПоЯчейкам КАК НоменклатураПоЯчейкам
	|ГДЕ
	|	НоменклатураПоЯчейкам.КоличествоПозиций > 1";
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	Для каждого стрРез Из тзРезультат Цикл
		Сообщить("Обнаружено размещение нескольких номенклатурных позиций в ячейку """ + стрРез.ЯчейкаФакт + """", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокумент(Отказ)
	Если НЕ РольДоступна("АдминистраторЛогистики") Тогда
		ПроверитьНоменклатуру(Отказ);
		ПроверитьУчетныеДанные(Отказ);
		ПроверитьРазмещение(Отказ);
		
		Если НЕ Отказ И НЕ ЭтоУстановкаСтатуса	И (НЕ ЭтоПерепроведение ИЛИ ДокументИзменен) Тогда
			мсвЯчейки = Товары.ВыгрузитьКолонку("ФактическаяЯчейка");
			мсвЯчейкиУч = Товары.ВыгрузитьКолонку("УчетнаяЯчейка");
			Для каждого ЯчейкаУ Из мсвЯчейкиУч Цикл
				Если мсвЯчейки.Найти(ЯчейкаУ) = Неопределено Тогда
					мсвЯчейки.Добавить(ЯчейкаУ);
				КонецЕсли;
			КонецЦикла;
			
			ГраницаДокумента = Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Включая);
			мсвДокументы = Новый Массив;
			УправлениеСкладскойЛогистикой.ПроверитьНаПрисутствиеВПозднихДокументах(Отказ, ГраницаДокумента, мсвЯчейки, мсвДокументы);
			Если Отказ Тогда
				Сообщить("Существуют более поздние проведенные документы, осуществляющие движения по ячейкам использованным в данном документе:", СтатусСообщения.Важное);
				
				Для каждого Док Из мсвДокументы Цикл
					Сообщить(СокрЛП(Док));
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры


Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.СостояниеРезервовЯчеек.Записывать = Истина;
	Движения.СостояниеРезервовЯчеек.Очистить();
	Движения.РазмещениеТоваровНаСкладах.Записывать = Истина;
	Движения.РазмещениеТоваровНаСкладах.Очистить();
	
	ПроверитьДокумент(Отказ);
	
	Если Статус = Перечисления.СтатусыСкладскихПеремещений.Выполнение Тогда
		тзУчетныеЯчейки = Товары.Выгрузить();
		тзУчетныеЯчейки.Свернуть("УчетнаяЯчейка");
		мсвУчетныеЯчейки = тзУчетныеЯчейки.ВыгрузитьКолонку("УчетнаяЯчейка");
		Для каждого Ячейка Из мсвУчетныеЯчейки Цикл
			Если ЗначениеЗаполнено(Ячейка) Тогда
				Движение = Движения.СостояниеРезервовЯчеек.Добавить();
				Движение.Период = Дата;
				Движение.Ячейка = Ячейка;
				Движение.Заблокирована = Истина;
			КонецЕсли;
		КонецЦикла;
		тзФактическиеЯчейки = Товары.Выгрузить();
		тзФактическиеЯчейки.Свернуть("ФактическаяЯчейка");
		мсвФактическиеЯчейки = тзФактическиеЯчейки.ВыгрузитьКолонку("ФактическаяЯчейка");
		Для каждого Ячейка Из мсвФактическиеЯчейки Цикл
			Если мсвУчетныеЯчейки.Найти(Ячейка) <> Неопределено Тогда
				Продолжить;
			КонецЕсли;
			Движение = Движения.СостояниеРезервовЯчеек.Добавить();
			Движение.Период = Дата;
			Движение.Ячейка = Ячейка;
			Движение.Заблокирована = Истина;
		КонецЦикла;
	Иначе
		// регистр РазмещениеТоваровНаСкладах
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			Если ТекСтрокаТовары.УчетнаяЯчейка = ТекСтрокаТовары.ФактическаяЯчейка Тогда
				Если ТекСтрокаТовары.ОтклонениеЕХО <> 0 Тогда
					Движение = Движения.РазмещениеТоваровНаСкладах.Добавить();
					
					Если ТекСтрокаТовары.ОтклонениеЕХО > 0 Тогда
						Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
						КоличествоКДвижению = ТекСтрокаТовары.ОтклонениеЕХО;
					Иначе
						Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
						КоличествоКДвижению = -ТекСтрокаТовары.ОтклонениеЕХО;
					КонецЕсли;
					
					Движение.Период = Дата;
					Движение.Склад = Склад;
					Движение.Ячейка = ТекСтрокаТовары.ФактическаяЯчейка;
					Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
					Движение.КоличествоЕХО = КоличествоКДвижению;
					Движение.Статус = Перечисления.СтатусыРазмещенийВЯчейках.Завершено;
					Движение.НомерПаллета = ТекСтрокаТовары.НомерПаллета;
				КонецЕсли;
			Иначе
				Если ТекСтрокаТовары.УчетноеКоличествоЕХО <> 0 Тогда
					Движение = Движения.РазмещениеТоваровНаСкладах.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Склад = Склад;
					Движение.Ячейка = ТекСтрокаТовары.УчетнаяЯчейка;
					Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
					Движение.КоличествоЕХО = ТекСтрокаТовары.УчетноеКоличествоЕХО;
					Движение.Статус = Перечисления.СтатусыРазмещенийВЯчейках.Завершено;
					Движение.НомерПаллета = ТекСтрокаТовары.НомерПаллета;
				КонецЕсли;
				
				Если ТекСтрокаТовары.ФактическоеКоличествоЕХО <> 0 Тогда
					Движение = Движения.РазмещениеТоваровНаСкладах.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					Движение.Период = Дата;
					Движение.Склад = Склад;
					Движение.Ячейка = ТекСтрокаТовары.ФактическаяЯчейка;
					Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
					Движение.КоличествоЕХО = ТекСтрокаТовары.ФактическоеКоличествоЕХО;
					Движение.Статус = Перечисления.СтатусыРазмещенийВЯчейках.Завершено;
					Движение.НомерПаллета = ТекСтрокаТовары.НомерПаллета;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение И НЕ Проведен Тогда
		Дата = ТекущаяДата(); // Только "оперативное" проведение
	КонецЕсли;
	
	ДокументИзменен = Модифицированность();
	ЭтоПерепроведение = (Проведен = Истина И РежимЗаписи = РежимЗаписиДокумента.Проведение);
	
	Если Статус <> Перечисления.СтатусыСкладскихПеремещений.Выполнение
		И НЕ ЭтоУстановкаСтатуса
		И НЕ УправлениеСкладскойЛогистикой.ДоступноПоРолям("ИзменениеЗавершенныхДокументов") Тогда
		
		Отказ = Истина;
		Сообщить("Запрещено изменение завершенных документов по логистике", СтатусСообщения.Важное);
	КонецЕсли;
	
	Если НЕ Отказ И Дата < Дата(2013, 03, 25) И НЕ РольДоступна("АдминистраторЛогистики") Тогда
		Отказ = Истина;
		Сообщить("Запрещено изменение документов по логистике оформленных до 25.03.2013", СтатусСообщения.Важное);
	КонецЕсли;
КонецПроцедуры

#Если Клиент Тогда

//Коновалова 28012013 +
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт

	СтруктураМакетов = Новый Структура();
	СтруктураМакетов.Вставить("ИнформационныйЛистПаллета", "Информационный лист (паллета)");
	СтруктураМакетов.Вставить("ИнвентаризацияБезУчета", "Инвентаризация (без отражения учетных количеств)");
	СтруктураМакетов.Вставить("ИнвентаризацияСУчетом", "Инвентаризация (с отражением учетных количеств)");

	Возврат СтруктураМакетов;

КонецФункции 

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ИмяМакета = "ИнформационныйЛистПаллета" Тогда
		ТабДокумент = ПечатьИнформационныйЛистПаллета();
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);
	ИначеЕсли ИмяМакета = "ИнвентаризацияБезУчета" Тогда
		ТабДокумент = ПечатьИнвентаризацияБезУчета();
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);
	ИначеЕсли ИмяМакета = "ИнвентаризацияСУчетом" Тогда
		ТабДокумент = ПечатьИнвентаризацияСУчетом();
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);
	КонецЕсли;

КонецПроцедуры // Печать()
       	
#КонецЕсли 

Функция ПечатьИнформационныйЛистПаллета() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Инвентаризация_ИнформационныйЛистПаллета";
	Макет = Документы.Инвентаризация.ПолучитьМакет("ИнформационныйЛистПаллета");
	
	Область = Макет.ПолучитьОбласть("Область1");
	ТаблицаРазмещения = Товары.Выгрузить();
	ТаблицаРазмещения.Свернуть("Номенклатура,НомерПаллета,ФактическаяЯчейка,ФактическоеКоличествоКоробок,ФактическоеКоличествоЕХО");
	ТаблицаРазмещения.Колонки.Добавить("ВидЯчейки");
	
	Для каждого строк из ТаблицаРазмещения Цикл
		 строк.ВидЯчейки = ПолучитьВидЯчейки(строк.ФактическаяЯчейка);
	КонецЦикла;	
	
	Для каждого стр из ТаблицаРазмещения Цикл
		Если (стр.ВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная И стр.НомерПаллета <> 0) ИЛИ (стр.ВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Общая И стр.НомерПаллета <> 0) Тогда
			Область.Параметры.Номер = Номер;
			Область.Параметры.Дата = Дата;
			//Область.Параметры.Поставщик = Поставщик;
			//Область.Параметры.ДатаПоступленияФакт = ДокументПоступления.Дата;
			Область.Параметры.НомерПаллета = стр.НомерПаллета;
			Область.Параметры.Номенклатура = стр.Номенклатура;
			Область.Параметры.КодНоменклатура = стр.Номенклатура.Код;
			Область.Параметры.КоличествоИЕУ = ПолучитьИЕУ(стр.Номенклатура,Справочники.КлассификаторЕдиницИзмерения.Паллета);
			//Область.Параметры.ЯчейкаПриемки = ЯчейкаПриемки;
			Область.Параметры.ЯчейкаФакт = стр.ФактическаяЯчейка;
			ТабДок.Вывести(Область);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//ИначеЕсли стр.ВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная И стр.НомерПаллета = 0 ТОгда
		//	Область.Параметры.Номер = Номер;
		//	Область.Параметры.Дата = Дата;
		//	//Область.Параметры.Поставщик = Поставщик;
		//	//Коновалова 18022013 +
		//	//Область.Параметры.ДатаПоступленияФакт = ДокументПоступления.Дата;
		//	//НайдСтрока = Приемка.Найти(стр.Номенклатура);
		//	//Область.Параметры.ДатаПоступленияФакт = ?(НайдСтрока<>Неопределено,НайдСтрока.ДокументОснование.Дата,"");
		//	//Коновалова 18022013 -
		//	Область.Параметры.НомерПаллета = стр.НомерПаллета;
		//	Область.Параметры.Номенклатура = стр.Номенклатура;
		//	Область.Параметры.КодНоменклатура = стр.Номенклатура.Код;
		//	Область.Параметры.КоличествоИЕУ = стр.ФактическоеКоличествоКоробок*ПолучитьИЕУ(стр.Номенклатура,Справочники.КлассификаторЕдиницИзмерения.Коробка) + стр.ФактическоеКоличествоЕХО;
		//	Область.Параметры.ЯчейкаФакт = стр.ФактическаяЯчейка;
		//	ТабДок.Вывести(Область);
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСправа = 2;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьИнвентаризацияБезУчета() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Инвентаризация_ИнвентаризацияБезУчета";
	Макет = Документы.Инвентаризация.ПолучитьМакет("БланкИнвентаризации");
	
	ТаблицаНом = Товары.Выгрузить();

	Если ПечатьСПустымиЯчейками Тогда
		//Вводим анализ на предмет того, какой из вариантов печати использовать. По умолчанию используется новый вариант печати по всем ячейкам склада
		СтарыйВариантПечати = Ложь;
		РядЯрус = Ложь;
		ПоВсемЯчейкамСклада = Истина;
		//1. Анализ на одинаковую номенклатуру
		ТаблицаНом_Анализ = ТаблицаНом.Скопировать(,"Номенклатура");
		ТаблицаНом_Анализ.Свернуть("Номенклатура");
		Если ТаблицаНом_Анализ.Количество()=1 ТОгда
			СтарыйВариантПечати = Истина;
		КонецЕсли;	 
		//2. Раскладываем УчетнуюЯчейку на составляющие
		ТаблицаЯчейка_Анализ = ТаблицаНом.Скопировать(,"УчетнаяЯчейка");
		ТаблицаЯчейка_Анализ.Колонки.Добавить("Ряд");
		ТаблицаЯчейка_Анализ.Колонки.Добавить("Ярус");
		ТаблицаЯчейка_Анализ.Колонки.Добавить("Ячейка");
		Для каждого Строк_Анализ из ТаблицаЯчейка_Анализ Цикл
			Строк_Анализ.Ряд = Строк_Анализ.УчетнаяЯчейка.НомерРяда;
			Строк_Анализ.Ярус = Строк_Анализ.УчетнаяЯчейка.НомерЯруса;
			Строк_Анализ.Ячейка = Строк_Анализ.УчетнаяЯчейка.НомерЯчейки;
		КонецЦикла;
		//3. Анализ на одинаковую ячейку
		ТаблицаЯчейка_Анализ_Ячейки = ТаблицаЯчейка_Анализ.Скопировать();
		ТаблицаЯчейка_Анализ_Ячейки.Свернуть("Ячейка");
		Если ТаблицаЯчейка_Анализ_Ячейки.Количество()=1 ТОгда
			СтарыйВариантПечати = Истина;
		КонецЕсли;	 
		//4. Анализ на одинаковый ряд и ярус
		ТаблицаЯчейка_Анализ_Ярус = ТаблицаЯчейка_Анализ.Скопировать();
		ТаблицаЯчейка_Анализ_Ярус.Свернуть("Ряд,Ярус");
		Если ТаблицаЯчейка_Анализ_Ярус.Количество()=1 ТОгда
			РядЯрус = Истина;
		Иначе	 
			//5. Анализ на вывод по всем ячейкам склада
			ТаблицаЯчейка_Анализ_Ряд = ТаблицаЯчейка_Анализ.Скопировать();
			ТаблицаЯчейка_Анализ_Ряд.Свернуть("Ряд");
			Если ТаблицаЯчейка_Анализ_Ряд.Количество() = 1 ТОгда
				ПоВсемЯчейкамСклада = Ложь;
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если НЕ СтарыйВариантПечати ТОгда
			Если РядЯрус Тогда
				ЯчейкиСклада = ПолучитьЯчейкиСклада(Склад,ТаблицаЯчейка_Анализ_Ярус[0].Ряд,ТаблицаЯчейка_Анализ_Ярус[0].Ярус);
				Для каждого стр из ЯчейкиСклада Цикл
					НайденнаяСтрокаСЯчейкой = ТаблицаНом.Найти(стр.УчетнаяЯчейка,"УчетнаяЯчейка");
					Если НайденнаяСтрокаСЯчейкой = Неопределено Тогда
						НоваяСтрока = ТаблицаНом.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если НЕ ПоВсемЯчейкамСклада Тогда  //по одному ряду
					ЯчейкиСклада = ПолучитьЯчейкиСклада(Склад,ТаблицаЯчейка_Анализ_Ярус[0].Ряд,0);
					Для каждого стр из ЯчейкиСклада Цикл
						НайденнаяСтрокаСЯчейкой = ТаблицаНом.Найти(стр.УчетнаяЯчейка,"УчетнаяЯчейка");
						Если НайденнаяСтрокаСЯчейкой = Неопределено Тогда
							НоваяСтрока = ТаблицаНом.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
						КонецЕсли;
					КонецЦикла;
				Иначе //по нескольким рядам
					СписокРядов = Новый СписокЗначений;
					Для каждого стрк из ТаблицаЯчейка_Анализ_Ряд Цикл
						СписокРядов.Добавить(стрк.Ряд);
					КонецЦикла;
					ЯчейкиСклада = ПолучитьЯчейкиСклада(Склад,СписокРядов,0);
					Для каждого стр из ЯчейкиСклада Цикл
						НайденнаяСтрокаСЯчейкой = ТаблицаНом.Найти(стр.УчетнаяЯчейка,"УчетнаяЯчейка");
						Если НайденнаяСтрокаСЯчейкой = Неопределено Тогда
							НоваяСтрока = ТаблицаНом.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//КС_ТЧ = Товары.Количество();
	КС_ТЧ = ТаблицаНом.Количество();
	КС_ПЛ = 16;
	КС_СЛ = 19;
	КСтр_Д = (КС_ТЧ - КС_ПЛ)/КС_СЛ;
	Ост = КСтр_Д - Цел(КСтр_Д);
	Если Ост = 0 Тогда
		КСтр = 1 +Цел(КСтр_Д);
	Иначе
		Если КСтр_Д < 0 Тогда 
			КСтр = Цел(КСтр_Д)+1;
		Иначе
			КСтр = Цел(КСтр_Д)+2;
		КонецЕсли;
	КонецЕсли;
	НомерСтр = 1;
	н=0;
	ИтогПаллет = 0;
	ИтогКоробок = 0;
	ИтогЕХО = 0;
	
	Для ф = НомерСтр по КСтр Цикл
		
		// Заголовок
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.НомерСтраницы = НомерСтр;
		Область.Параметры.ДатаПечати = Формат(ТекущаяДата(),"ДЛФ=Д");
		Область.Параметры.ВремяПечати = Формат(ТекущаяДата(),"ДЛФ=В");
			
		ТабДок.Вывести(Область);
		// Шапка
		Если НомерСтр = 1 ТОгда
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Склад = Склад;
			Шапка.Параметры.Дата = Дата; 
			Шапка.Параметры.Номер = Номер; 
			ТабДок.Вывести(Шапка);
		КонецЕсли;
		// Приемка
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДок.Вывести(Область);
		
		ОбластьНом = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		ТаблицаНом.Сортировать("УчетнаяЯчейка Возр"); //сортировка по алфавиту
			
			Если НомерСтр = 1 ТОгда
				Для к=н по н+15 Цикл
					Если н <= (ТаблицаНом.Количество()-1) Тогда
						ОбластьНом.Параметры.Номенклатура = ТаблицаНом[н].Номенклатура;
						ОбластьНом.Параметры.НомерПаллеты = ТаблицаНом[н].НомерПаллета;
						ОбластьНом.Параметры.ЯчейкаУчет = ТаблицаНом[н].УчетнаяЯчейка;
						//Коновалова 01062013 +
						Если ТаблицаНом[н].УчетнаяЯчейка <> ТаблицаНом[н].ФактическаяЯчейка ТОгда
							ОбластьНом.Параметры.ЯчейкаФакт = ТаблицаНом[н].ФактическаяЯчейка;
						Иначе
							ОбластьНом.Параметры.ЯчейкаФакт = "";
						КонецЕсли;	
						//Коновалова 01062013 -
						ТабДок.Вывести(ОбластьНом);
					КонецЕсли;
					н=н+1;
				КонецЦикла;
			Иначе	
				Для к=н по н+18 Цикл
					Если н <= (ТаблицаНом.Количество()-1) Тогда
						ОбластьНом.Параметры.Номенклатура = ТаблицаНом[н].Номенклатура;
						ОбластьНом.Параметры.НомерПаллеты = ТаблицаНом[н].НомерПаллета;
						ОбластьНом.Параметры.ЯчейкаУчет = ТаблицаНом[н].УчетнаяЯчейка;
						//Коновалова 01062013 +
						Если ТаблицаНом[н].УчетнаяЯчейка <> ТаблицаНом[н].ФактическаяЯчейка ТОгда
							ОбластьНом.Параметры.ЯчейкаФакт = ТаблицаНом[н].ФактическаяЯчейка;
						Иначе
							ОбластьНом.Параметры.ЯчейкаФакт = "";
						КонецЕсли;	
						//Коновалова 01062013 -
						ТабДок.Вывести(ОбластьНом);
					КонецЕсли;
					н=н+1;
				КонецЦикла;
			КонецЕсли;
			Если НомерСтр <> КСтр Тогда      
				ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;
			НомерСтр = НомерСтр + 1;

	КонецЦикла;
	
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСправа = 2;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПечатьИнвентаризацияСУчетом() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Инвентаризация_ИнвентаризацияСУчетом";
	Макет = Документы.Инвентаризация.ПолучитьМакет("БланкИнвентаризации");

	ТаблицаНом = Товары.Выгрузить();

	Если ПечатьСПустымиЯчейками Тогда
		//Вводим анализ на предмет того, какой из вариантов печати использовать. По умолчанию используется новый вариант печати по всем ячейкам склада
		СтарыйВариантПечати = Ложь;
		РядЯрус = Ложь;
		ПоВсемЯчейкамСклада = Истина;
		//1. Анализ на одинаковую номенклатуру
		ТаблицаНом_Анализ = ТаблицаНом.Скопировать(,"Номенклатура");
		ТаблицаНом_Анализ.Свернуть("Номенклатура");
		Если ТаблицаНом_Анализ.Количество()=1 ТОгда
			СтарыйВариантПечати = Истина;
		КонецЕсли;	 
		//2. Раскладываем УчетнуюЯчейку на составляющие
		ТаблицаЯчейка_Анализ = ТаблицаНом.Скопировать(,"УчетнаяЯчейка");
		ТаблицаЯчейка_Анализ.Колонки.Добавить("Ряд");
		ТаблицаЯчейка_Анализ.Колонки.Добавить("Ярус");
		ТаблицаЯчейка_Анализ.Колонки.Добавить("Ячейка");
		Для каждого Строк_Анализ из ТаблицаЯчейка_Анализ Цикл
			Строк_Анализ.Ряд = Строк_Анализ.УчетнаяЯчейка.НомерРяда;
			Строк_Анализ.Ярус = Строк_Анализ.УчетнаяЯчейка.НомерЯруса;
			Строк_Анализ.Ячейка = Строк_Анализ.УчетнаяЯчейка.НомерЯчейки;
		КонецЦикла;
		//3. Анализ на одинаковую ячейку
		ТаблицаЯчейка_Анализ_Ячейки = ТаблицаЯчейка_Анализ.Скопировать();
		ТаблицаЯчейка_Анализ_Ячейки.Свернуть("Ячейка");
		Если ТаблицаЯчейка_Анализ_Ячейки.Количество()=1 ТОгда
			СтарыйВариантПечати = Истина;
		КонецЕсли;	 
		//4. Анализ на одинаковый ряд и ярус
		ТаблицаЯчейка_Анализ_Ярус = ТаблицаЯчейка_Анализ.Скопировать();
		ТаблицаЯчейка_Анализ_Ярус.Свернуть("Ряд,Ярус");
		Если ТаблицаЯчейка_Анализ_Ярус.Количество()=1 ТОгда
			РядЯрус = Истина;
		Иначе	 
			//5. Анализ на вывод по всем ячейкам склада
			ТаблицаЯчейка_Анализ_Ряд = ТаблицаЯчейка_Анализ.Скопировать();
			ТаблицаЯчейка_Анализ_Ряд.Свернуть("Ряд");
			Если ТаблицаЯчейка_Анализ_Ряд.Количество() = 1 ТОгда
				ПоВсемЯчейкамСклада = Ложь;
			КонецЕсли;	 
		КонецЕсли;	 
		
		Если НЕ СтарыйВариантПечати ТОгда
			Если РядЯрус Тогда
				ЯчейкиСклада = ПолучитьЯчейкиСклада(Склад,ТаблицаЯчейка_Анализ_Ярус[0].Ряд,ТаблицаЯчейка_Анализ_Ярус[0].Ярус);
				Для каждого стр из ЯчейкиСклада Цикл
					НайденнаяСтрокаСЯчейкой = ТаблицаНом.Найти(стр.УчетнаяЯчейка,"УчетнаяЯчейка");
					Если НайденнаяСтрокаСЯчейкой = Неопределено Тогда
						НоваяСтрока = ТаблицаНом.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
					КонецЕсли;
				КонецЦикла;
			Иначе
				Если НЕ ПоВсемЯчейкамСклада Тогда  //по одному ряду
					ЯчейкиСклада = ПолучитьЯчейкиСклада(Склад,ТаблицаЯчейка_Анализ_Ярус[0].Ряд,0);
					Для каждого стр из ЯчейкиСклада Цикл
						НайденнаяСтрокаСЯчейкой = ТаблицаНом.Найти(стр.УчетнаяЯчейка,"УчетнаяЯчейка");
						Если НайденнаяСтрокаСЯчейкой = Неопределено Тогда
							НоваяСтрока = ТаблицаНом.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
						КонецЕсли;
					КонецЦикла;
				Иначе //по нескольким рядам
					СписокРядов = Новый СписокЗначений;
					Для каждого стрк из ТаблицаЯчейка_Анализ_Ряд Цикл
						СписокРядов.Добавить(стрк.Ряд);
					КонецЦикла;
					ЯчейкиСклада = ПолучитьЯчейкиСклада(Склад,СписокРядов,0);
					Для каждого стр из ЯчейкиСклада Цикл
						НайденнаяСтрокаСЯчейкой = ТаблицаНом.Найти(стр.УчетнаяЯчейка,"УчетнаяЯчейка");
						Если НайденнаяСтрокаСЯчейкой = Неопределено Тогда
							НоваяСтрока = ТаблицаНом.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока,стр);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	//КС_ТЧ = Товары.Количество();
	КС_ТЧ = ТаблицаНом.Количество();
	КС_ПЛ = 16;
	КС_СЛ = 19;
	КСтр_Д = (КС_ТЧ - КС_ПЛ)/КС_СЛ;
	Ост = КСтр_Д - Цел(КСтр_Д);
	Если Ост = 0 Тогда
		КСтр = 1 +Цел(КСтр_Д);
	Иначе
		Если КСтр_Д < 0 Тогда 
			КСтр = Цел(КСтр_Д)+1;
		Иначе
			КСтр = Цел(КСтр_Д)+2;
		КонецЕсли;
	КонецЕсли;
	НомерСтр = 1;
	н=0;
	ИтогПаллет = 0;
	ИтогКоробок = 0;
	ИтогЕХО = 0;
	Для ф = НомерСтр по КСтр Цикл
		
		// Заголовок
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.НомерСтраницы = НомерСтр;
		Область.Параметры.ДатаПечати = Формат(ТекущаяДата(),"ДЛФ=Д");
		Область.Параметры.ВремяПечати = Формат(ТекущаяДата(),"ДЛФ=В");
			
		ТабДок.Вывести(Область);
		// Шапка
		Если НомерСтр = 1 ТОгда
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Склад = Склад;
			Шапка.Параметры.Дата = Дата; 
			Шапка.Параметры.Номер = Номер; 
			ТабДок.Вывести(Шапка);
		КонецЕсли;
		// Приемка
		Область = Макет.ПолучитьОбласть("ШапкаТаблицы");
		ТабДок.Вывести(Область);
		
		ОбластьНом = Макет.ПолучитьОбласть("СтрокаТаблицы");
		//ТаблицаНом = Товары.Выгрузить();
		ТаблицаНом.Сортировать("УчетнаяЯчейка Возр"); //сортировка по алфавиту
		
		Если НомерСтр = 1 ТОгда
			Для к=н по н+15 Цикл
				Если н <= (ТаблицаНом.Количество()-1) Тогда
					ОбластьНом.Параметры.Номенклатура = ТаблицаНом[н].Номенклатура;
					ОбластьНом.Параметры.НомерПаллеты = ТаблицаНом[н].НомерПаллета;
					ОбластьНом.Параметры.ЯчейкаУчет = ТаблицаНом[н].УчетнаяЯчейка;
					//Коновалова 01062013 +
					Если ТаблицаНом[н].УчетнаяЯчейка <> ТаблицаНом[н].ФактическаяЯчейка ТОгда
						ОбластьНом.Параметры.ЯчейкаФакт = ТаблицаНом[н].ФактическаяЯчейка;
					Иначе
						ОбластьНом.Параметры.ЯчейкаФакт = "";
					КонецЕсли;	
					//Коновалова 01062013 -
					ОбластьНом.Параметры.КУ_паллет = ТаблицаНом[н].УчетноеКоличествоЕХО;
					ТабДок.Вывести(ОбластьНом);
				КонецЕсли;
				н=н+1;
			КонецЦикла;
		Иначе	
			Для к=н по н+18 Цикл
				Если н <= (ТаблицаНом.Количество()-1) Тогда
					ОбластьНом.Параметры.Номенклатура = ТаблицаНом[н].Номенклатура;
					ОбластьНом.Параметры.НомерПаллеты = ТаблицаНом[н].НомерПаллета;
					ОбластьНом.Параметры.ЯчейкаУчет = ТаблицаНом[н].УчетнаяЯчейка;
					//Коновалова 01062013 +
					Если ТаблицаНом[н].УчетнаяЯчейка <> ТаблицаНом[н].ФактическаяЯчейка ТОгда
						ОбластьНом.Параметры.ЯчейкаФакт = ТаблицаНом[н].ФактическаяЯчейка;
					Иначе
							ОбластьНом.Параметры.ЯчейкаФакт = "";
					КонецЕсли;	
					//Коновалова 01062013 -
					ОбластьНом.Параметры.КУ_паллет = ТаблицаНом[н].УчетноеКоличествоЕХО;
					ТабДок.Вывести(ОбластьНом);
				КонецЕсли;
				н=н+1;
			КонецЦикла;
		КонецЕсли;
		Если НомерСтр <> КСтр Тогда      
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтр = НомерСтр + 1;
	КонецЦикла;
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСправа = 2;
	
	Возврат ТабДок;
	
КонецФункции

Функция ПолучитьВидЯчейки(Ячейка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки
	                      |ИЗ
	                      |	РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&ДатаКон, ) КАК СостояниеВидовЯчеекСрезПоследних
	                      |ГДЕ
	                      |	СостояниеВидовЯчеекСрезПоследних.Ячейка = &Ячейка");
						  
	Запрос.УстановитьПараметр("ДатаКон",Дата);					  
	Запрос.УстановитьПараметр("Ячейка",Ячейка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(Результат) ТОгда
		Возврат Результат[0].ВидЯчейки;
	Иначе
		Возврат Перечисления.ВидыСкладскихЯчеек.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьИЕУ(номен, единица)
	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ЕдиницыИзмерения.СодержитЕХО
	                      |ИЗ
	                      |	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	                      |ГДЕ
	                      |	ЕдиницыИзмерения.Владелец = &Владелец
	                      |	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору");
	Запрос.УстановитьПараметр("Владелец",номен);
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору",единица);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(Результат) ТОгда
		Возврат Результат[0].СодержитЕХО;
	Иначе
		Возврат 0;
	КонецЕсли;
		
КонецФункции

Функция ПолучитьЯчейкиСклада(Скл,Ряд_,Ярус_)
	
	Запрос = Новый Запрос();
	Текст = "ВЫБРАТЬ
	        |	СкладскиеЯчейки.Ссылка КАК УчетнаяЯчейка
	        |ИЗ
	        |	Справочник.СкладскиеЯчейки КАК СкладскиеЯчейки
	        |ГДЕ
	        |	СкладскиеЯчейки.Владелец = &Склад";
			
	Если ТипЗнч(Ряд_) = Тип("СписокЗначений") ТОгда
		Текст = Текст + "			
	        |	И СкладскиеЯчейки.НомерРяда В (&НомерРяда)";
	Иначе		
			Текст = Текст + "			
			|	И СкладскиеЯчейки.НомерРяда = &НомерРяда";
	КонецЕсли;		
	Если Ярус_<>0 ТОгда		
		Текст = Текст + "			
	        |	И СкладскиеЯчейки.НомерЯруса = &НомерЯруса";
	КонецЕсли;		
			
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("Склад",Скл);
	Запрос.УстановитьПараметр("НомерРяда",Ряд_);
	Запрос.УстановитьПараметр("НомерЯруса",Ярус_);

	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.Инвентаризация") Тогда
		Если ДанныеЗаполнения.Статус =  Перечисления.СтатусыСкладскихПеремещений.Выполнение Тогда
			ВызватьИсключение "Документ незавершен!!! Завершите инвентаризацию";
		КонецЕсли; 
		ИсполнительИнвентаризации = ДанныеЗаполнения.ИсполнительИнвентаризации;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Организация = ДанныеЗаполнения.Организация;
		Планшет = ДанныеЗаполнения.Планшет;
		Склад = ДанныеЗаполнения.Склад;
		Статус = Перечисления.СтатусыСкладскихПеремещений.Выполнение;
		УсловияПроведенияИнвентаризации = ДанныеЗаполнения.УсловияПроведенияИнвентаризации;
		
		Для Каждого ТекСтрокаТовары Из ДанныеЗаполнения.Товары Цикл
			Если ТекСтрокаТовары.ОтклонениеЕХО <> 0 Тогда
				НоваяСтрока = Товары.Добавить();
				НоваяСтрока.ЕдиницаХраненияОстатков = ТекСтрокаТовары.ЕдиницаХраненияОстатков;
				НоваяСтрока.Коэффициент = ТекСтрокаТовары.Коэффициент;
				НоваяСтрока.Номенклатура = ТекСтрокаТовары.Номенклатура;
				НоваяСтрока.УчетнаяЯчейка = ТекСтрокаТовары.УчетнаяЯчейка;
				НоваяСтрока.ФактическаяЯчейка = ТекСтрокаТовары.ФактическаяЯчейка;
				НоваяСтрока.УчетноеКоличествоЕХО = ТекСтрокаТовары.УчетноеКоличествоЕХО + ТекСтрокаТовары.ОтклонениеЕХО;
				НоваяСтрока.УчетноеКоличествоКоробок = ТекСтрокаТовары.УчетноеКоличествоКоробок + ТекСтрокаТовары.ОтклонениеКоробок;
				НоваяСтрока.УчетноеКоличествоПаллет = ТекСтрокаТовары.УчетноеКоличествоПаллет + ТекСтрокаТовары.ОтклонениеПаллет;	
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

 
//Коновалова 28012013 -
//ПечатьПустых = Ложь;
ЭтоУстановкаСтатуса = Ложь;