Перем мУдалятьДвижения;

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мСтрокаРеквизитыУпрУчета Экспорт; // (Упр)

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.ИнвентаризацияНЗП", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.ИнвентаризацияНЗП", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать
	
#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктПечФорм = Новый Структура;
	Если ОтражатьВУправленческомУчете И ОтражатьВБухгалтерскомУчете Тогда
		СтруктПечФорм.Вставить( "ИнвентаризацияУпр", "Инвентаризация (упр.)");
		СтруктПечФорм.Вставить( "ИнвентаризацияБух", "Инвентаризация (регл.)");
	Иначе
		Если ОтражатьВУправленческомУчете Тогда
			СтруктПечФорм.Вставить( "ИнвентаризацияУпр", "Инвентаризация");
		Иначе
			СтруктПечФорм.Вставить( "ИнвентаризацияБух", "Инвентаризация");
		КонецЕсли;
	КонецЕсли;
	СтруктПечФорм.Вставить( "ИнвентаризационнаяОпись", "Инвентаризационная опись");
	СтруктПечФорм.Вставить( "АктИнвентаризацииНЗП",    "Акт инвентаризации НЗП");
	
	Возврат СтруктПечФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр();
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл();
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для упр. учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()
	
	мСтрокаРеквизитыУпрУчета = "ПрочиеЗатраты.Сумма";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для регл. учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()
	
	мСтрокаРеквизитыБухУчета = "ПодразделениеОрганизации, НадписьПодразделениеОрганизации,
							   |Материалы.СчетЗатрат, Материалы.НалоговоеНазначение,
							   |ПрочиеЗатраты.СуммаРегл, ПрочиеЗатраты.СуммаНал, ПрочиеЗатраты.СуммаНДС, ПрочиеЗатраты.СуммаНДСКредит,
							   |ПрочиеЗатраты.СчетЗатрат, ПрочиеЗатраты.НалоговоеНазначениеДоходовИЗатрат";
	
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()

////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ТАБЛИЧНЫХ ЧАСТЕЙ

// Процедура заполняет табличную часть "Прочие затраты" остатками в НЗП.
//
Процедура ЗаполнитьПрочиеЗатратыПоОстаткам(ВидУчета = Неопределено) Экспорт
	
	ТаблицаПрочиеЗатраты = ПрочиеЗатраты.ВыгрузитьКолонки();
	
	РеквизитыДоИзменения = Новый Структура();
	УправлениеПроизводством.ПодготовитьШапкуДокументаДляЗаполненияОстаткамиЗатрат(ЭтотОбъект, ВидУчета, РеквизитыДоИзменения);
	
	УправлениеПроизводством.ЗаполнитьПрочиеЗатратыПоОстаткамНЗП(ЭтотОбъект, ТаблицаПрочиеЗатраты);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыДоИзменения);
	
	ПрочиеЗатраты.Загрузить(ТаблицаПрочиеЗатраты);
		
КонецПроцедуры // ЗаполнитьПрочиеЗатратыПоОстаткам()

// Заполняет табличную часть Материалы остатками затрат
//
// Параметры:
//  ВидУчета - перечисление ВидыОтраженияВУчете, вид учета, данными которого заполнять табличную часть
//  СообщениеОбОшибке - текст сообщения об ошибке
//
// Возвращаемое значение:
//  Истина - успешно заполнено
//  Ложь   - ошибка при заполнении, текст сообщения об ошибке возвращен в параметр СообщениеОбОшибке
Процедура ЗаполнитьМатериалыОстаткамиЗатрат(ВидУчета) Экспорт
	
	ТабМатериалы = Материалы.ВыгрузитьКолонки();
	
	РеквизитыДоИзменения = Новый Структура();
	УправлениеПроизводством.ПодготовитьШапкуДокументаДляЗаполненияОстаткамиЗатрат(ЭтотОбъект, ВидУчета, РеквизитыДоИзменения);

	УправлениеПроизводством.ЗаполнитьМатериалыПоОстаткамНЗП(
		ЭтотОбъект, 
		ТабМатериалы, 
		Ложь,// ЕстьСумма
		Истина,// ЕстьЕдиницаИзмерения
		Ложь, // ЕстьЕдиницаИзмеренияМест
		Истина, // ИсключатьДавальческоеСырье
		,// ТолькоОтрицательныеОстатки = Ложь,
		,// ИсключатьУслуги = Ложь,
		 // ТолькоВозвратныеОтходы = Ложь,
		);
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, РеквизитыДоИзменения);
	
	КоличествоСтрок = ТабМатериалы.Количество();
	Для НомерСтроки = 1 По КоличествоСтрок Цикл
		СтрокаТаблицы = ТабМатериалы[КоличествоСтрок - НомерСтроки];
		Если СтрокаТаблицы.Количество = 0 Тогда
			ТабМатериалы.Удалить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Материалы.Загрузить(ТабМатериалы);
	
КонецПроцедуры

// Процедура заполняет табличную часть "Материалы" остатками материалов в производстве
// на конец месяца по данным оперативного учета.
Процедура ЗаполнитьОстаткамиМатериаловВПроизводстве() Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МатериалыВПроизводствеОстатки.Затрата КАК Номенклатура,
	|	МатериалыВПроизводствеОстатки.Затрата.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	МатериалыВПроизводствеОстатки.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	МатериалыВПроизводствеОстатки.ХарактеристикаЗатраты КАК ХарактеристикаНоменклатуры,
	|	МатериалыВПроизводствеОстатки.СерияЗатраты КАК СерияНоменклатуры,
	|	МатериалыВПроизводствеОстатки.Заказ КАК Заказ,
	|	МатериалыВПроизводствеОстатки.КоличествоОстаток КАК Количество
	|ИЗ
	|	РегистрНакопления.МатериалыВПроизводстве.Остатки(
	|			&Дата,
	|			Подразделение = &Подразделение
	|				И ((НЕ &ЗаданЗаказ)
	|					ИЛИ Заказ = &Заказ)) КАК МатериалыВПроизводствеОстатки
	|ГДЕ
	|	МатериалыВПроизводствеОстатки.КоличествоОстаток > 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ЕдиницаИзмерения,
	|	Коэффициент,
	|	ХарактеристикаНоменклатуры,
	|	СерияНоменклатуры,
	|	Заказ
	|АВТОУПОРЯДОЧИВАНИЕ"
	);
	Запрос.УстановитьПараметр("Дата",          КонецМесяца(Дата) + 1);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ЗаданЗаказ",    ЗначениеЗаполнено(Заказ));
	Запрос.УстановитьПараметр("Заказ",         Заказ);
	
	ОстаткиМатериалов = Запрос.Выполнить().Выгрузить();
	Материалы.Загрузить(ОстаткиМатериалов);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ПО НОРМАТИВАМ

Процедура ЗаполнитьМатериалыПоНормативам(ВидУчета) Экспорт
	
	Если УправлениеЗапасами.ИспользуетсяРасширеннаяАналитикаУчета(Дата) Тогда
		РассчитатьОстатокМатериаловПоНормативам(ВидУчета);
	Иначе
		РассчитатьОстатокМатериаловПоНормативамТрадиционныйРежим(ВидУчета);
	КонецЕсли;
	
КонецПроцедуры

// ТРАДИЦИОННЫЙ РЕЖИМ УЧЕТА ЗАТРАТ

Процедура СформироватьЗапросНезавершенноеПроизводствоУпр(ТабЗапроса)
	
	ТекстЗапроса = " 
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА РегНЗП.НоменклатурнаяГруппа ЕСТЬ NULL ТОГДА
		|		РегЗатраты.ГруппаТМЦ
		|	ИНАЧЕ
		|		РегНЗП.НоменклатурнаяГруппа
		|	КОНЕЦ КАК ГруппаТМЦ,
		|	ВЫБОР КОГДА РегНЗП.Заказ ЕСТЬ NULL ТОГДА
		|		РегЗатраты.Заказ
		|	ИНАЧЕ
		|		РегНЗП.Заказ
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР КОГДА РегНЗП.Затрата ЕСТЬ NULL ТОГДА
		|		РегЗатраты.Затрата
		|	ИНАЧЕ
		|		РегНЗП.Затрата
		|	КОНЕЦ КАК Материал,
		|	ВЫБОР КОГДА РегНЗП.ХарактеристикаЗатраты ЕСТЬ NULL ТОГДА
		|		РегЗатраты.ХарактеристикаЗатраты
		|	ИНАЧЕ
		|		РегНЗП.ХарактеристикаЗатраты
		|	КОНЕЦ КАК ХарактеристикаМатериала,
		|	ВЫБОР КОГДА РегНЗП.КоличествоОстаток ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		РегНЗП.КоличествоОстаток
		|	КОНЕЦ КАК КолОст,
		|	ВЫБОР КОГДА РегЗатраты.КолСписано ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		РегЗатраты.КолСписано
		|	КОНЕЦ КАК КолСписано
		|ИЗ
		|	РегистрНакопления.НезавершенноеПроизводство.Остатки(&КонГраница, Подразделение = &Подр) КАК РегНЗП
		|		ПОЛНОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ (
		|			ВЫБРАТЬ
		|				РегЗатраты.Затрата                 КАК Затрата,
		|				РегЗатраты.ХарактеристикаЗатраты   КАК ХарактеристикаЗатраты,
		|				РегЗатраты.НоменклатурнаяГруппа    КАК ГруппаТМЦ,
		|				РегЗатраты.СтатьяЗатрат            КАК СтатьяЗатрат,
		|				РегЗатраты.Заказ                   КАК Заказ,
		|				СУММА(РегЗатраты.Количество) КАК КолСписано
		|			ИЗ
		|				РегистрНакопления.ЗатратыНаВыпускПродукции КАК РегЗатраты
		|		
		|			ГДЕ
		|				РегЗатраты.Период МЕЖДУ &НачДата И &КонДата
		|				И РегЗатраты.КодОперации   = &КодОперПрямЗатраты
		|				И РегЗатраты.Подразделение = &Подр
		|		
		|			СГРУППИРОВАТЬ ПО
		|				РегЗатраты.Затрата,
		|				РегЗатраты.ХарактеристикаЗатраты,
		|				РегЗатраты.НоменклатурнаяГруппа,
		|				РегЗатраты.Заказ,
		|				РегЗатраты.СтатьяЗатрат
		|			) КАК РегЗатраты
		|
		|		ПО РегНЗП.НоменклатурнаяГруппа  = РегЗатраты.ГруппаТМЦ
		|		 И РегНЗП.Заказ                 = РегЗатраты.Заказ
		|		 И РегНЗП.СтатьяЗатрат          = РегЗатраты.СтатьяЗатрат
		|		 И РегНЗП.Затрата               = РегЗатраты.Затрата
		|		 И РегНЗП.ХарактеристикаЗатраты = РегЗатраты.ХарактеристикаЗатраты";
		
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("НачДата",    НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонДата",    Дата);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(НачалоМесяца(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Подр",       Подразделение);
	//Запрос.УстановитьПараметр("СтатЗатрат", СтатьяЗатрат);
	Запрос.УстановитьПараметр("КодОперПрямЗатраты", Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты);
	
	ТабЗапроса = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры // СформироватьЗапросНезавершенноеПроизводствоУпр()

Процедура СформироватьЗапросНезавершенноеПроизводствоРегл(ТабЗапроса)
	
	СуффиксИмениРегистра = "БухгалтерскийУчет";
	
	ТекстЗапроса = " 
		|ВЫБРАТЬ
		|	ВЫБОР КОГДА РегНЗП.НоменклатурнаяГруппа ЕСТЬ NULL ТОГДА
		|		РегЗатраты.ГруппаТМЦ
		|	ИНАЧЕ
		|		РегНЗП.НоменклатурнаяГруппа
		|	КОНЕЦ КАК ГруппаТМЦ,
		|	ВЫБОР КОГДА РегНЗП.Заказ ЕСТЬ NULL ТОГДА
		|		РегЗатраты.Заказ
		|	ИНАЧЕ
		|		РегНЗП.Заказ
		|	КОНЕЦ КАК Заказ,
		|	ВЫБОР КОГДА РегНЗП.Затрата ЕСТЬ NULL ТОГДА
		|		РегЗатраты.Затрата
		|	ИНАЧЕ
		|		РегНЗП.Затрата
		|	КОНЕЦ КАК Материал,
		|	ВЫБОР КОГДА РегНЗП.ХарактеристикаЗатраты ЕСТЬ NULL ТОГДА
		|		РегЗатраты.ХарактеристикаЗатраты
		|	ИНАЧЕ
		|		РегНЗП.ХарактеристикаЗатраты
		|	КОНЕЦ КАК ХарактеристикаМатериала,
		|	ВЫБОР КОГДА РегНЗП.СчетУчета ЕСТЬ NULL ТОГДА
		|		РегЗатраты.СчетУчета
		|	ИНАЧЕ
		|		РегНЗП.СчетУчета
		|	КОНЕЦ КАК СчетУчета,
		|	ВЫБОР КОГДА РегНЗП.НалоговоеНазначение ЕСТЬ NULL ТОГДА
		|		РегЗатраты.НалоговоеНазначение 
		|	ИНАЧЕ
		|		РегНЗП.НалоговоеНазначение 
		|	КОНЕЦ КАК НалоговоеНазначение,
		|	ВЫБОР КОГДА РегНЗП.КоличествоОстаток ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		РегНЗП.КоличествоОстаток
		|	КОНЕЦ КАК КолОст,
		|	ВЫБОР КОГДА РегЗатраты.КолСписано ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		РегЗатраты.КолСписано
		|	КОНЕЦ КАК КолСписано
		|ИЗ
		|	РегистрНакопления.НезавершенноеПроизводство%Суффикс%.Остатки(&КонГраница, Подразделение = &Подр) КАК РегНЗП
		|		ПОЛНОЕ ВНЕШНЕЕ СОЕДИНЕНИЕ (
		|			ВЫБРАТЬ
		|				РегЗатраты.СчетУчета               КАК СчетУчета,
		|				РегЗатраты.НалоговоеНазначение     КАК НалоговоеНазначение,
		|				РегЗатраты.Затрата                 КАК Затрата,
		|				РегЗатраты.ХарактеристикаЗатраты   КАК ХарактеристикаЗатраты,
		|				РегЗатраты.НоменклатурнаяГруппа    КАК ГруппаТМЦ,
		|				РегЗатраты.СтатьяЗатрат            КАК СтатьяЗатрат,
		|				РегЗатраты.Заказ                   КАК Заказ,
		|				СУММА(РегЗатраты.Количество)       КАК КолСписано
		|			ИЗ
		|				РегистрНакопления.ЗатратыНаВыпускПродукции%Суффикс% КАК РегЗатраты
		|		
		|			ГДЕ
		|				РегЗатраты.Период МЕЖДУ &НачДата И &КонДата
		|				И РегЗатраты.КодОперации   = &КодОперПрямЗатраты
		|				И РегЗатраты.Подразделение = &Подр
		|		
		|			СГРУППИРОВАТЬ ПО
		|				РегЗатраты.СчетУчета,
		|				РегЗатраты.НалоговоеНазначение,
		|				РегЗатраты.Затрата,
		|				РегЗатраты.ХарактеристикаЗатраты,
		|				РегЗатраты.НоменклатурнаяГруппа,
		|				РегЗатраты.СтатьяЗатрат,
		|				РегЗатраты.Заказ
		|			) КАК РегЗатраты
		|
		|		ПО РегНЗП.НоменклатурнаяГруппа  = РегЗатраты.ГруппаТМЦ
		|		 И РегНЗП.Заказ                 = РегЗатраты.Заказ
		|		 И РегНЗП.Затрата               = РегЗатраты.Затрата
		|		 И РегНЗП.ХарактеристикаЗатраты = РегЗатраты.ХарактеристикаЗатраты
		|		 И РегНЗП.СтатьяЗатрат          = РегЗатраты.СтатьяЗатрат
		|		 И РегНЗП.НалоговоеНазначение   = РегЗатраты.НалоговоеНазначение
		|		 И РегНЗП.СчетУчета             = РегЗатраты.СчетУчета";
		
	Запрос = Новый Запрос;
	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "%Суффикс%", СуффиксИмениРегистра);
	Запрос.УстановитьПараметр("НачДата",    НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонДата",    Дата);
	Запрос.УстановитьПараметр("НачГраница", Новый Граница(НачалоМесяца(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонГраница", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Подр",       ПодразделениеОрганизации);
	Запрос.УстановитьПараметр("КодОперПрямЗатраты", Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ПрямыеЗатраты);
	
	ТабЗапроса = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры // СформироватьЗапросНезавершенноеПроизводствоРегл()

// Заполняет табличную часть "Материалы" расчетным остатком материалов в производстве (для традиционного режима).
// При расчете остатка учитываются:
// - переданные в производство, но не распределенные на выпуск, материалы
// - выпуск продукции
// - спецификации
Процедура РассчитатьОстатокМатериаловПоНормативамТрадиционныйРежим(ВидУчета)
	
	Если Материалы.Количество() > 0 Тогда
		Материалы.Очистить();
	КонецЕсли;
	
	ТекстЗапроса = "
		|ВЫБРАТЬ
		|	РегВыпуск.Продукция                         КАК Номенклатура,
		|	РегВыпуск.ХарактеристикаПродукции           КАК ХарактеристикаНоменклатуры,
		|	РегВыпуск.Продукция.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
		|	РегВыпуск.Спецификация      КАК Спецификация,
		|	СУММА(РегВыпуск.Количество) КАК Количество
		|ИЗ
		|	РегистрНакопления.ВыпускПродукции%Суффикс% КАК РегВыпуск
		|
		|ГДЕ
		|	РегВыпуск.Период МЕЖДУ &НачДата И &КонДата И
		|	РегВыпуск.КодОперации В (&КодыОпераций) И
		|	РегВыпуск.Подразделение = &Подразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	РегВыпуск.Продукция,
		|	РегВыпуск.Спецификация,
		|	РегВыпуск.ХарактеристикаПродукции";
	
	Если ВидУчета = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда	
		СуффиксИмениРегистра = "";
		Подр = Подразделение;
	Иначе
		СуффиксИмениРегистра = "БухгалтерскийУчет";
		Подр = ПодразделениеОрганизации;
	КонецЕсли;
	
	ЗапросВыпуск = Новый Запрос;
	ЗапросВыпуск.Текст = СтрЗаменить(ТекстЗапроса, "%Суффикс%", СуффиксИмениРегистра);
	ЗапросВыпуск.УстановитьПараметр("НачДата",       НачалоМесяца(Дата));
	ЗапросВыпуск.УстановитьПараметр("КонДата",       Дата);
	ЗапросВыпуск.УстановитьПараметр("Подразделение", Подр);
	
	МассивКодовОпераций = Новый Массив;
	МассивКодовОпераций.Добавить( Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнешниеУслуги);
	МассивКодовОпераций.Добавить( Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПостЗатраты);
	МассивКодовОпераций.Добавить( Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаПроизводство);
	МассивКодовОпераций.Добавить( Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксВнутрУслугиНаСчет);
	МассивКодовОпераций.Добавить( Перечисления.КодыОперацийВыпускПродукции.ВыпускПродукцииФиксНаСклад);
	
	ЗапросВыпуск.УстановитьПараметр("КодыОпераций", МассивКодовОпераций);
	
	ТабВыпуск = ЗапросВыпуск.Выполнить().Выгрузить();
	
	СтруктРезультат = Новый Структура;
	СтруктРезультат.Вставить( "Потребности");
				
	СтруктПараметры = Новый Структура;
	СтруктПараметры.Вставить( "ДатаСпецификации", Дата);
	СтруктПараметры.Вставить( "ПараметрыВыпуска", Неопределено);
					
	РазузлованиеНоменклатуры.ПолучитьПотребность(ТабВыпуск, СтруктРезультат);
				
	ТабПотребностей = СтруктРезультат["Потребности"];
	
	// Приведем потребности к единице хранения остатков и сгруппируем
	ЗапросГруппировкиПотребностей = Новый Запрос(
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	Потребности
	|ИЗ
	|	&Потребности КАК Потребности;
	|ВЫБРАТЬ
	|	Потребности.Материал КАК Материал,
	|	Потребности.ХарактеристикаМатериала КАК ХарактеристикаМатериала,
	|	Потребности.СтатьяЗатрат,
	|	СУММА(Потребности.КоличествоМатериала * Потребности.ЕдиницаИзмеренияМатериала.Коэффициент / Потребности.Материал.ЕдиницаХраненияОстатков.Коэффициент) КАК Количество
	|ИЗ
	|	Потребности КАК Потребности
	|СГРУППИРОВАТЬ ПО
	|	Потребности.Материал,
	|	Потребности.ХарактеристикаМатериала,
	|	Потребности.СтатьяЗатрат");
	
	ЗапросГруппировкиПотребностей.УстановитьПараметр("Потребности", ТабПотребностей);
	ТабПотребностей = ЗапросГруппировкиПотребностей.Выполнить().Выгрузить();
	
	ТабВыпуск = 0;
	
	ТабЗапроса = Новый ТаблицаЗначений;
	Если ВидУчета = Перечисления.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете Тогда
		СформироватьЗапросНезавершенноеПроизводствоУпр(ТабЗапроса);
	Иначе
		СформироватьЗапросНезавершенноеПроизводствоРегл(ТабЗапроса);
	КонецЕсли;
	
	СтруктПоиска = Новый Структура;
	Для Каждого СтрокаМат Из ТабПотребностей Цикл
		
		СтруктПоиска.Вставить("Материал",                СтрокаМат.Материал);
		СтруктПоиска.Вставить("ХарактеристикаМатериала", СтрокаМат.ХарактеристикаМатериала);
		
		НаборСтрок = ТабЗапроса.НайтиСтроки(СтруктПоиска);
		
		КолСписано = 0;
		КолОст     = 0;
		Для Каждого СтрокаНЗП Из НаборСтрок Цикл
			КолСписано = КолСписано + СтрокаНЗП.КолСписано;
			КолОст     = КолОст     + СтрокаНЗП.КолОст;
		КонецЦикла;
		
		Если КолСписано > СтрокаМат.Количество Тогда
			Продолжить;
		Иначе
			Потребность = Мин(СтрокаМат.Количество - КолСписано, КолОст);
			Для Каждого СтрокаНЗП Из НаборСтрок Цикл
				
				МожноСписать = Мин(Потребность, СтрокаНЗП.КолОст);
				КоличествоОстаток = Макс(СтрокаНЗП.КолОст - КолСписано - МожноСписать, 0);
				
				Если КоличествоОстаток = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = Материалы.Добавить();
				НоваяСтрока.Номенклатура               = СтрокаНЗП.Материал;
				НоваяСтрока.ХарактеристикаНоменклатуры = СтрокаНЗП.ХарактеристикаМатериала;
				НоваяСтрока.ЕдиницаИзмерения           = СтрокаМат.Материал.ЕдиницаХраненияОстатков;
				НоваяСтрока.Коэффициент 			   = НоваяСтрока.ЕдиницаИзмерения.Коэффициент; 
				НоваяСтрока.СтатьяЗатрат         = СтрокаМат.СтатьяЗатрат;
				НоваяСтрока.Заказ                = СтрокаНЗП.Заказ;
				НоваяСтрока.НоменклатурнаяГруппа = СтрокаНЗП.ГруппаТМЦ;
				
				Если ВидУчета = Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете Тогда
					НоваяСтрока.СчетЗатрат = СтрокаНЗП.СчетУчета;
					НоваяСтрока.НалоговоеНазначение = СтрокаНЗП.НалоговоеНазначение;
				КонецЕсли;
				
				НоваяСтрока.Количество = КоличествоОстаток;
				
				ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, ЭтотОбъект, Ложь);
				
				Потребность  = Потребность - НоваяСтрока.Количество;
				Если Потребность <= 0 Тогда
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// РАСШИРЕННАЯ АНАЛИТИКА

// Заполняет табличную часть "Материалы" расчетным остатком материалов в производстве.
// При расчете остатка учитываются:
// - переданные в производство, но не распределенные на выпуск, материалы
// - выпуск продукции
// - спецификации
Процедура РассчитатьОстатокМатериаловПоНормативам(ВидУчета) Экспорт
	
	Перем НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий;
	
	Если Материалы.Количество() > 0 Тогда
		Материалы.Очистить();
	КонецЕсли;
	
	// Структура описывает ключи и значения ключей аналитики, 
	// которые должны совпадать в выпуске и затратах,
	// чтобы можно было считать, что затраты относятся к этому выпуску
	СтруктураАналитикаРаспределенияЗатрат = Новый Структура();
	СтруктураАналитикаРаспределенияЗатрат.Вставить("АналитикаУчетаПартий");
	СтруктураАналитикаРаспределенияЗатрат.Вставить("АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа");
	СтруктураАналитикаРаспределенияЗатрат.Вставить("АналитикаВидаУчета_СчетУчета");
	СтруктураАналитикаРаспределенияЗатрат.Вставить("АналитикаВидаУчета_НалоговоеНазначение");
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	// Подготовим списки ключей аналитики, по которым нужно отбирать затраты и выпуск
	ПодготовитьВременныеТаблицыОтборАналитики(ВидУчета, Запрос, НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий);
	
	// Рассчитаем нормативное потребление материалов на выпуск
	НормативноеПотреблениеМатериалов = РассчитатьПотреблениеМатериалов(ВидУчета, Запрос, НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий, СтруктураАналитикаРаспределенияЗатрат);
	
	// Рассчитаем затраты (материалы) к распределению
	РезультатЗапросаЗатраты = ВыполнитьЗапросМатериалыКРаспределению(ВидУчета, Запрос, НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий);
	
	// Выполним распределение по нормативам, запишем в табличную часть нераспределенный остаток
	СтруктураОписаниеЗатраты = Новый Структура();
	СтруктураОписаниеЗатраты.Вставить("Номенклатура");
	СтруктураОписаниеЗатраты.Вставить("ХарактеристикаНоменклатуры");
	Для Каждого ЭлементАналитикиЗатрат Из СтруктураАналитикаРаспределенияЗатрат Цикл
		СтруктураОписаниеЗатраты.Вставить(ЭлементАналитикиЗатрат.Ключ);
	КонецЦикла;
	
	ВыборкаЗатраты = РезультатЗапросаЗатраты.Выбрать();
	Пока ВыборкаЗатраты.Следующий() Цикл
		
		ОстатокЗатраты = ВыборкаЗатраты.Количество;
		
		// Найдем, куда эта затрата могла расходоваться по нормативам 
		// и уменьшим остаток на нормативное потребление 
		ЗаполнитьЗначенияСвойств(СтруктураОписаниеЗатраты, ВыборкаЗатраты);
		ОстатокЗатраты = УменьшитьОстатокЗатратыНаНормативноеПотребление(ОстатокЗатраты, СтруктураОписаниеЗатраты, НормативноеПотреблениеМатериалов);
		
		// Затрата, отраженная с пустой номенклатурной группой, 
		// могла расходоваться на выпуск по непустой номенклатурной группе
		Если ОстатокЗатраты > 0 
		   И НЕ ЗначениеЗаполнено(СтруктураОписаниеЗатраты.АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа) Тогда
			СтруктураОписаниеЗатраты.Удалить("АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа");
			ОстатокЗатраты = УменьшитьОстатокЗатратыНаНормативноеПотребление(ОстатокЗатраты, СтруктураОписаниеЗатраты, НормативноеПотреблениеМатериалов);
			СтруктураОписаниеЗатраты.Вставить("АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа");
		КонецЕсли;
		
		Если ОстатокЗатраты > 0 Тогда
			// Добавим в табличную часть
			НоваяСтрока = Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаЗатраты);
			НоваяСтрока.Количество = ОстатокЗатраты;
			ОбработкаТабличныхЧастей.ЗаполнитьЕдиницуМестТабЧасти(НоваяСтрока, ЭтотОбъект, Ложь);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Подготавливает временные таблицы, используемые в РассчитатьОстатокМатериаловПоНормативам()
Процедура ПодготовитьВременныеТаблицыОтборАналитики(ВидУчета, Запрос, НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|ПОМЕСТИТЬ ОтборАналитикаВидаУчетаЗатрат
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Затраты)
	|	И ((НЕ &НуженОтборПодразделение)
	|			ИЛИ АналитикаВидаУчета.Подразделение = &Подразделение)
	|	И ((НЕ &НуженОтборОрганизация)
	|			ИЛИ АналитикаВидаУчета.Организация = &Организация)
	|	И ((НЕ &НуженОтборПодразделениеОрганизации)
	|			ИЛИ АналитикаВидаУчета.ПодразделениеОрганизации = &ПодразделениеОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаВидаУчета.Ссылка
	|ПОМЕСТИТЬ ОтборАналитикаВидаУчетаВыпуска
	|ИЗ
	|	РегистрСведений.АналитикаВидаУчета КАК АналитикаВидаУчета
	|ГДЕ
	|	АналитикаВидаУчета.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчета.Выпуск)
	|	И ((НЕ &НуженОтборПодразделение)
	|			ИЛИ АналитикаВидаУчета.Подразделение = &Подразделение)
	|	И ((НЕ &НуженОтборОрганизация)
	|			ИЛИ АналитикаВидаУчета.Организация = &Организация)
	|	И ((НЕ &НуженОтборПодразделениеОрганизации)
	|			ИЛИ АналитикаВидаУчета.ПодразделениеОрганизации = &ПодразделениеОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаЗатрат.Ссылка
	|ПОМЕСТИТЬ ОтборАналитикаУчетаЗатрат
	|ИЗ
	|	РегистрСведений.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат
	|ГДЕ
	|	АналитикаУчетаЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ПроизводственныеРасходы)
	|	И (НЕ АналитикаУчетаЗатрат.Затрата.Услуга)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаРаспределенияЗатрат.Ссылка
	|ПОМЕСТИТЬ ОтборАналитикаРаспределенияЗатрат
	|ИЗ
	|	РегистрСведений.АналитикаРаспределенияЗатрат КАК АналитикаРаспределенияЗатрат
	|ГДЕ
	|	&НуженОтборАналитикаРаспределенияЗатрат
	|	И АналитикаРаспределенияЗатрат.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АналитикаУчетаПартий.Ссылка
	|ПОМЕСТИТЬ ОтборАналитикаУчетаПартий
	|ИЗ
	|	РегистрСведений.АналитикаУчетаПартий КАК АналитикаУчетаПартий
	|ГДЕ
	|	&НуженОтборАналитикаУчетаПартий
	|	И АналитикаУчетаПартий.Заказ = &Заказ";
	
	Запрос.УстановитьПараметр("Организация",              Организация);
	Запрос.УстановитьПараметр("Подразделение",            Подразделение);
	Запрос.УстановитьПараметр("ПодразделениеОрганизации", ПодразделениеОрганизации);
	
	Если ВидУчета = Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете Тогда
		Запрос.УстановитьПараметр("НуженОтборПодразделение",            Ложь);
		Запрос.УстановитьПараметр("НуженОтборПодразделениеОрганизации", Истина);
		Запрос.УстановитьПараметр("НуженОтборОрганизация",              Истина);
		
		Если НЕ ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
			Запрос.УстановитьПараметр(
			"ПодразделениеОрганизации", 
			УправлениеЗатратами.ПолучитьПодразделениеОрганизации(Организация, Подразделение, Истина));
		КонецЕсли;
		
	Иначе
		Запрос.УстановитьПараметр("НуженОтборПодразделение",            Истина);
		Запрос.УстановитьПараметр("НуженОтборПодразделениеОрганизации", Ложь);
		Запрос.УстановитьПараметр("НуженОтборОрганизация",              Ложь);
	КонецЕсли;
	
	НуженОтборАналитикаРаспределенияЗатрат = НЕ ВводитьНоменклатурныеГруппыПоСтрокам;
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа",                   НоменклатурнаяГруппа);
	Запрос.УстановитьПараметр("НуженОтборАналитикаРаспределенияЗатрат", НуженОтборАналитикаРаспределенияЗатрат);
	
	НуженОтборАналитикаУчетаПартий         = НЕ ВводитьЗаказыПоСтрокам;
	Запрос.УстановитьПараметр("Заказ",                                  Заказ);
	Запрос.УстановитьПараметр("НуженОтборАналитикаУчетаПартий",         НуженОтборАналитикаУчетаПартий);

	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(Запрос.Текст, ВидУчета);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Подготавливает таблицу с данными о выпуске продукции (из подсистемы учета затрат).
// Используется в РассчитатьОстатокМатериаловПоНормативам()
Функция РассчитатьПотреблениеМатериалов(ВидУчета, Запрос, НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий, СтруктураАналитикаРаспределенияЗатрат)
	
	// Подготовим данные о выпуске продукции
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Выпуск.АналитикаВидаУчета,
	|	Выпуск.АналитикаУчетаЗатрат,
	|	Выпуск.АналитикаУчетаПартий,
	|	Выпуск.АналитикаРаспределенияЗатрат КАК АналитикаРаспределенияЗатрат,
	|	Выпуск.КоличествоПриход КАК Количество
	|ПОМЕСТИТЬ Выпуск
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Обороты(
	|			&ДатаНач,
	|			&ДатаКон,
	|			,
	|			АналитикаВидаУчета В
	|					(ВЫБРАТЬ
	|						ОтборАналитикаВидаУчетаВыпуска.Ссылка
	|					ИЗ
	|						ОтборАналитикаВидаУчетаВыпуска)
	|				И ((НЕ &НуженОтборАналитикаРаспределенияЗатрат)
	|					ИЛИ АналитикаРаспределенияЗатрат В
	|						(ВЫБРАТЬ
	|							ОтборАналитикаРаспределенияЗатрат.Ссылка
	|						ИЗ
	|							ОтборАналитикаРаспределенияЗатрат))
	|				И ((НЕ &НуженОтборАналитикаУчетаПартий)
	|					ИЛИ АналитикаУчетаПартий В
	|						(ВЫБРАТЬ
	|							ОтборАналитикаУчетаПартий.Ссылка
	|						ИЗ
	|							ОтборАналитикаУчетаПартий))) КАК Выпуск
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРаспределенияЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выпуск.АналитикаУчетаПартий,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	РегистрАналитикаРаспределенияЗатрат.Продукция КАК Номенклатура,
	|	РегистрАналитикаРаспределенияЗатрат.ХарактеристикаПродукции КАК ХарактеристикаНоменклатуры,
	|	РегистрАналитикаРаспределенияЗатрат.СерияПродукции,
	|	РегистрАналитикаРаспределенияЗатрат.Спецификация,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа КАК АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа,
	|	РегистрАналитикаВидаУчета.СчетУчета КАК АналитикаВидаУчета_СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение КАК АналитикаВидаУчета_НалоговоеНазначение,
	|	Выпуск.Количество
	|ИЗ
	|	Выпуск КАК Выпуск
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|		ПО Выпуск.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|		ПО Выпуск.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ Выпуск"
	;
	
	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(Запрос.Текст, ВидУчета);
	
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Дата));
	
	Запрос.УстановитьПараметр("НуженОтборАналитикаРаспределенияЗатрат", НуженОтборАналитикаРаспределенияЗатрат);
	Запрос.УстановитьПараметр("НуженОтборАналитикаУчетаПартий",         НуженОтборАналитикаУчетаПартий);
	
	Выпуск = Запрос.Выполнить().Выгрузить();
	
	// Проставим спецификации, если не заполнены
	Для Каждого СтрокаВыпуск Из Выпуск Цикл
		Если Не ЗначениеЗаполнено(СтрокаВыпуск.Спецификация) Тогда
			СтрокаВыпуск.Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(
				СтрокаВыпуск.Номенклатура, 
				СтрокаВыпуск.ХарактеристикаНоменклатуры, 
				КонецМесяца(Дата), 
				Подразделение);
		КонецЕсли;
	КонецЦикла;
	
	// Рассчитаем потребности
	РезультатРазузлования = Новый Структура;
	РезультатРазузлования.Вставить("Потребности");
	
	РазузлованиеНоменклатуры.ПолучитьПотребность(Выпуск, РезультатРазузлования);
	
	// Дополним таблицу нормативного потребления материалов дополнительными сведениями о распределении затрат
	ПереченьРеквизитовАналитики = "";
	Для Каждого ЭлементАналитикиРаспределенияЗатрат Из СтруктураАналитикаРаспределенияЗатрат Цикл
		ИмяКолонки = ЭлементАналитикиРаспределенияЗатрат.Ключ;
		// Добавим колонку. Колонка должна быть типизированной, так как таблица значений будет источником для временной таблицы
		КолонкаВыпуска = Выпуск.Колонки.Найти(ИмяКолонки);
		Если КолонкаВыпуска <> Неопределено Тогда
			РезультатРазузлования.Потребности.Колонки.Добавить(ИмяКолонки, КолонкаВыпуска.ТипЗначения);
		КонецЕсли;
		// Дополним строку с перечнем реквизитов
		Если ПустаяСтрока(ПереченьРеквизитовАналитики) Тогда
			ПереченьРеквизитовАналитики = ИмяКолонки;
		Иначе
			ПереченьРеквизитовАналитики = ПереченьРеквизитовАналитики + ", " + ИмяКолонки;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаТаблицыМатериалов Из РезультатРазузлования.Потребности Цикл
		СтрокаТаблицыВыпуска = Выпуск[СтрокаТаблицыМатериалов.ИндексСтрокиИсточника];
		ЗаполнитьЗначенияСвойств(
			СтрокаТаблицыМатериалов, 
			СтрокаТаблицыВыпуска, 
			ПереченьРеквизитовАналитики);
	КонецЦикла;
	
	// Приведем потребности к единице хранения остатков и сгруппируем
	ЗапросГруппировкиПотребностей = Новый Запрос(
	"ВЫБРАТЬ
	|	*
	|ПОМЕСТИТЬ
	|	Потребности
	|ИЗ
	|	&Потребности КАК Потребности;
	|ВЫБРАТЬ
	|	Потребности.Материал КАК Номенклатура,
	|	Потребности.ХарактеристикаМатериала КАК ХарактеристикаНоменклатуры,
	|	СУММА(Потребности.КоличествоМатериала * Потребности.ЕдиницаИзмеренияМатериала.Коэффициент / Потребности.Материал.ЕдиницаХраненияОстатков.Коэффициент) КАК Количество,
	|	Потребности.АналитикаВидаУчета_СчетУчета,
	|	Потребности.АналитикаВидаУчета_НалоговоеНазначение,
	|	Потребности.АналитикаУчетаПартий,
	|	Потребности.АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа
	|ИЗ
	|	Потребности КАК Потребности
	|
	|СГРУППИРОВАТЬ ПО
	|	Потребности.Материал,
	|	Потребности.ХарактеристикаМатериала,
	|	Потребности.АналитикаВидаУчета_СчетУчета,
	|	Потребности.АналитикаВидаУчета_НалоговоеНазначение,
	|	Потребности.АналитикаУчетаПартий,
	|	Потребности.АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа");
	
	ЗапросГруппировкиПотребностей.УстановитьПараметр("Потребности", РезультатРазузлования.Потребности);
	Возврат ЗапросГруппировкиПотребностей.Выполнить().Выгрузить();
	
КонецФункции

// Получает данные о материальных затратах к распределению
// Используется в РассчитатьОстатокМатериаловПоНормативам()
Функция ВыполнитьЗапросМатериалыКРаспределению(ВидУчета, Запрос, НуженОтборАналитикаРаспределенияЗатрат, НуженОтборАналитикаУчетаПартий)
	
	// Подготовим данные о материалах, переданных в производство, но не распределенных.
	// Исключим влияние расчета себестоимости.
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	МатериалыКРаспределению.АналитикаВидаУчета КАК АналитикаВидаУчета,
	|	МатериалыКРаспределению.АналитикаУчетаЗатрат КАК АналитикаУчетаЗатрат,
	|	МатериалыКРаспределению.АналитикаУчетаПартий,
	|	МатериалыКРаспределению.АналитикаРаспределенияЗатрат КАК АналитикаРаспределенияЗатрат,
	|	СУММА(МатериалыКРаспределению.КоличествоОстаток) КАК Количество
	|ПОМЕСТИТЬ ЗатратыКРаспределению
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл%.Остатки(
	|			&Граница,
	|			АналитикаВидаУчета В
	|					(ВЫБРАТЬ
	|						ОтборАналитикаВидаУчетаЗатрат.Ссылка
	|					ИЗ
	|						ОтборАналитикаВидаУчетаЗатрат)
	|				И АналитикаУчетаЗатрат В
	|					(ВЫБРАТЬ
	|						ОтборАналитикаУчетаЗатрат.Ссылка
	|					ИЗ
	|						ОтборАналитикаУчетаЗатрат)
	|				И ((НЕ &НуженОтборАналитикаРаспределенияЗатрат)
	|					ИЛИ АналитикаРаспределенияЗатрат В
	|						(ВЫБРАТЬ
	|							ОтборАналитикаРаспределенияЗатрат.Ссылка
	|						ИЗ
	|							ОтборАналитикаРаспределенияЗатрат))
	|				И ((НЕ &НуженОтборАналитикаУчетаПартий)
	|					ИЛИ АналитикаУчетаПартий В
	|						(ВЫБРАТЬ
	|							ОтборАналитикаУчетаПартий.Ссылка
	|						ИЗ
	|							ОтборАналитикаУчетаПартий))) КАК МатериалыКРаспределению
	|
	|СГРУППИРОВАТЬ ПО
	|	МатериалыКРаспределению.АналитикаВидаУчета,
	|	МатериалыКРаспределению.АналитикаУчетаПартий,
	|	МатериалыКРаспределению.АналитикаРаспределенияЗатрат,
	|	МатериалыКРаспределению.АналитикаУчетаЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СторноРасчетаСебестоимости.АналитикаВидаУчета,
	|	СторноРасчетаСебестоимости.АналитикаУчетаЗатрат,
	|	СторноРасчетаСебестоимости.АналитикаУчетаПартий,
	|	СторноРасчетаСебестоимости.АналитикаРаспределенияЗатрат,
	|	СУММА(ВЫБОР
	|			КОГДА СторноРасчетаСебестоимости.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				ТОГДА -СторноРасчетаСебестоимости.Количество
	|			ИНАЧЕ СторноРасчетаСебестоимости.Количество
	|		КОНЕЦ)
	|ИЗ
	|	РегистрНакопления.УчетЗатрат%СуффиксРегл% КАК СторноРасчетаСебестоимости
	|ГДЕ
	|	СторноРасчетаСебестоимости.Период МЕЖДУ &ДатаНач И &ДатаКон
	|	И СторноРасчетаСебестоимости.Активность
	|	И СторноРасчетаСебестоимости.Количество <> 0
	|	И СторноРасчетаСебестоимости.Регистратор ССЫЛКА Документ.РасчетСебестоимостиВыпуска
	|	И СторноРасчетаСебестоимости.АналитикаВидаУчета В
	|			(ВЫБРАТЬ
	|				ОтборАналитикаВидаУчетаЗатрат.Ссылка
	|			ИЗ
	|				ОтборАналитикаВидаУчетаЗатрат)
	|	И СторноРасчетаСебестоимости.АналитикаУчетаЗатрат В
	|			(ВЫБРАТЬ
	|				ОтборАналитикаУчетаЗатрат.Ссылка
	|			ИЗ
	|				ОтборАналитикаУчетаЗатрат)
	|	И ((НЕ &НуженОтборАналитикаРаспределенияЗатрат)
	|			ИЛИ СторноРасчетаСебестоимости.АналитикаРаспределенияЗатрат В
	|				(ВЫБРАТЬ
	|					ОтборАналитикаРаспределенияЗатрат.Ссылка
	|				ИЗ
	|					ОтборАналитикаРаспределенияЗатрат))
	|	И ((НЕ &НуженОтборАналитикаУчетаПартий)
	|			ИЛИ СторноРасчетаСебестоимости.АналитикаУчетаПартий В
	|				(ВЫБРАТЬ
	|					ОтборАналитикаУчетаПартий.Ссылка
	|				ИЗ
	|					ОтборАналитикаУчетаПартий))
	|
	|СГРУППИРОВАТЬ ПО
	|	СторноРасчетаСебестоимости.АналитикаВидаУчета,
	|	СторноРасчетаСебестоимости.АналитикаУчетаЗатрат,
	|	СторноРасчетаСебестоимости.АналитикаУчетаПартий,
	|	СторноРасчетаСебестоимости.АналитикаРаспределенияЗатрат
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаВидаУчета,
	|	АналитикаУчетаЗатрат,
	|	АналитикаРаспределенияЗатрат
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрАналитикаУчетаЗатрат.Затрата КАК Номенклатура,
	|	РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	РегистрАналитикаУчетаЗатрат.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
	|	РегистрАналитикаУчетаЗатрат.ХарактеристикаЗатраты КАК ХарактеристикаНоменклатуры,
	|	РегистрАналитикаУчетаЗатрат.СерияЗатраты КАК СерияНоменклатуры,
	|	РегистрАналитикаВидаУчета.СчетУчета КАК СчетЗатрат,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение КАК НалоговоеНазначение,
	|	ЗатратыКРаспределению.Количество,
	|	РегистрАналитикаУчетаЗатрат.СтатьяЗатрат,
	|	ЗатратыКРаспределению.АналитикаУчетаПартий,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа КАК АналитикаРаспределенияЗатрат_НоменклатурнаяГруппа,
	|	РегистрАналитикаВидаУчета.СчетУчета КАК АналитикаВидаУчета_СчетУчета,
	|	РегистрАналитикаВидаУчета.НалоговоеНазначение КАК АналитикаВидаУчета_НалоговоеНазначение,
	|	РегистрАналитикаУчетаПартий.Заказ,
	|	РегистрАналитикаРаспределенияЗатрат.НоменклатурнаяГруппа
	|ИЗ
	|	ЗатратыКРаспределению КАК ЗатратыКРаспределению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаВидаУчета КАК РегистрАналитикаВидаУчета
	|		ПО ЗатратыКРаспределению.АналитикаВидаУчета = РегистрАналитикаВидаУчета.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаРаспределенияЗатрат КАК РегистрАналитикаРаспределенияЗатрат
	|		ПО ЗатратыКРаспределению.АналитикаРаспределенияЗатрат = РегистрАналитикаРаспределенияЗатрат.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаЗатрат КАК РегистрАналитикаУчетаЗатрат
	|		ПО ЗатратыКРаспределению.АналитикаУчетаЗатрат = РегистрАналитикаУчетаЗатрат.Ссылка
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПартий КАК РегистрАналитикаУчетаПартий
	|		ПО ЗатратыКРаспределению.АналитикаУчетаПартий = РегистрАналитикаУчетаПартий.Ссылка
	|УПОРЯДОЧИТЬ ПО
	|	Номенклатура,
	|	ХарактеристикаНоменклатуры,
	|	СерияНоменклатуры,
	|	НоменклатурнаяГруппа,
	|	Заказ,
	|	СчетЗатрат,
	|	НалоговоеНазначение,
	|	СтатьяЗатрат
	|АВТОУПОРЯДОЧИВАНИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ЗатратыКРаспределению"
	;
	
	Запрос.УстановитьПараметр("Граница", Новый Граница(КонецМесяца(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(Дата));
	
	Запрос.УстановитьПараметр("НуженОтборАналитикаРаспределенияЗатрат", НуженОтборАналитикаРаспределенияЗатрат);
	Запрос.УстановитьПараметр("НуженОтборАналитикаУчетаПартий",         НуженОтборАналитикаУчетаПартий);
	
	Запрос.Текст = УправлениеЗатратами.ЗаменитьКомментарииВТекстеЗапроса(Запрос.Текст, ВидУчета);
	
	Возврат Запрос.Выполнить();
	
КонецФункции

Функция УменьшитьОстатокЗатратыНаНормативноеПотребление(Знач КоличествоЗатраты, ОписаниеЗатраты, НормативноеПотреблениеМатериалов)
	
	ПотреблениеЗатраты = НормативноеПотреблениеМатериалов.НайтиСтроки(ОписаниеЗатраты);
	Для Каждого СтрокаПотреблениеЗатраты Из ПотреблениеЗатраты Цикл
		КоличествоПотреблено                = Макс(0, Мин(КоличествоЗатраты, СтрокаПотреблениеЗатраты.Количество));
		КоличествоЗатраты                   = КоличествоЗатраты - КоличествоПотреблено;
		СтрокаПотреблениеЗатраты.Количество = СтрокаПотреблениеЗатраты.Количество - КоличествоПотреблено;
	КонецЦикла;
	
	Возврат КоличествоЗатраты;
	
КонецФункции


// Процедура проверяет правильность заполнения реквизитов документа
Процедура ПроверкаРеквизитов(Отказ, Заголовок) Экспорт
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета();
	
	РеквизитыШапки = "Организация, Подразделение, ПодразделениеОрганизации";
	РеквизитыТЧМатериалы = "Номенклатура, СтатьяЗатрат, СчетЗатрат, НалоговоеНазначение, ЕдиницаИзмерения"; 
	РеквизитыТЧПрочиеЗатраты = "СтатьяЗатрат, СчетЗатрат, НалоговоеНазначениеДоходовИЗатрат"; 
	
	УправлениеЗатратами.НепроверятьРеквизитыПоТипуУчета(ЭтотОбъект, РеквизитыШапки, СтруктураШапкиДокумента, мСтрокаРеквизитыУпрУчета, мСтрокаРеквизитыБухУчета);
	УправлениеЗатратами.НепроверятьРеквизитыПоТипуУчета(ЭтотОбъект, РеквизитыТЧМатериалы, СтруктураШапкиДокумента, мСтрокаРеквизитыУпрУчета, мСтрокаРеквизитыБухУчета, "Материалы");
	УправлениеЗатратами.НепроверятьРеквизитыПоТипуУчета(ЭтотОбъект, РеквизитыТЧПрочиеЗатраты, СтруктураШапкиДокумента, мСтрокаРеквизитыУпрУчета, мСтрокаРеквизитыБухУчета, "ПрочиеЗатраты");
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, Новый Структура(РеквизитыШапки), Отказ, Заголовок);
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Материалы", Новый Структура(РеквизитыТЧМатериалы), Отказ, Заголовок);
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "ПрочиеЗатраты", Новый Структура(РеквизитыТЧПрочиеЗатраты), Отказ, Заголовок);
	
	Для Каждого СтрокаТЧ Из ПрочиеЗатраты Цикл
		
		Если ОтражатьВУправленческомУчете И СтрокаТЧ.Сумма = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Укажите сумму по УУ в строке № " + СтрокаТЧ.НомерСтроки + " (таб. часть ""Прочие затраты"")", Отказ, Заголовок);
		КонецЕсли;	
		Если ОтражатьВБухгалтерскомУчете И СтрокаТЧ.СуммаРегл = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Укажите сумму по БУ в строке № " + СтрокаТЧ.НомерСтроки + " (таб. часть ""Прочие затраты"")", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЦикла;
	

	НалоговыйУчет.ПроверитьЗаполнениеНалоговыхНазначений(
		СтруктураШапкиДокумента, 
		Материалы.Выгрузить(), 
		"Материалы",
		Отказ, 
		Заголовок, 
		"Инвентаризация", // ВидОперации
		Ложь              // ЭтоЗатраты
	);
	
	НалоговыйУчет.ПроверитьЗаполнениеНалоговыхНазначений(
		СтруктураШапкиДокумента, 
		ПрочиеЗатраты.Выгрузить(),
		"Прочие затраты",
		Отказ, 
		Заголовок, 
		"Инвентаризация", // ВидОперации
		Ложь              // ЭтоЗатраты
	);

	
КонецПроцедуры // ПроверкаРеквизитов()



////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	Заголовок = "Запись документа: " + СокрЛП(Ссылка);
	
	Если Не ВводитьНоменклатурныеГруппыПоСтрокам ИЛИ Не ВводитьЗаказыПоСтрокам Тогда
		
		Для Каждого Строка Из Материалы Цикл
			Если Не ВводитьНоменклатурныеГруппыПоСтрокам И Строка.НоменклатурнаяГруппа <> НоменклатурнаяГруппа Тогда
				Строка.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
			КонецЕсли;
			Если Не ВводитьЗаказыПоСтрокам И Строка.Заказ <> Заказ Тогда
				Строка.Заказ = Заказ;
			КонецЕсли;
		КонецЦикла;
		Для Каждого Строка Из ПрочиеЗатраты Цикл
			Если Не ВводитьНоменклатурныеГруппыПоСтрокам И Строка.НоменклатурнаяГруппа <> НоменклатурнаяГруппа Тогда
				Строка.НоменклатурнаяГруппа = НоменклатурнаяГруппа;
			КонецЕсли;
			Если Не ВводитьЗаказыПоСтрокам И Строка.Заказ <> Заказ Тогда
				Строка.Заказ = Заказ;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	ПроверкаРеквизитов(Отказ, Заголовок);
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью()


Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект);
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("СправочникСсылка.НастройкиЗаполненияФорм") Тогда
		
		ХранилищаНастроек.ДанныеФорм.ЗаполнитьОбъектПоНастройке(ЭтотОбъект, ДанныеЗаполнения, Документы.ИнвентаризацияНЗП.СтруктураДополнительныхДанныхФормы());
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если НЕ ОтражатьВУправленческомУчете И НЕ ОтражатьВБухгалтерскомУчете Тогда
		СтрокаСообщения = Нстр("ru = 'Документ должен принадлежать хотя бы одному из видов учета: ""Управленческий"" и (или)  ""Бухгалтерский"".'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, ЭтотОбъект,,, Отказ);
	КонецЕсли;
		
	// Единица измерения мест должна быть заполнена, если указано количество мест
	ОбработкаТабличныхЧастейСервер.ПроверитьЗаполненаЕдиницаИзмеренияМест(Материалы, ЭтотОбъект, Отказ);
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект,,ОбъектКопирования.Ссылка);
КонецПроцедуры

