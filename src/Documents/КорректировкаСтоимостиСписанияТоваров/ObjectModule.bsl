Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Функция ПроверитьПринадлежностьКорректировкиКВидамУчета(ПроверятьОрганизацииюДляУУ = Ложь) Экспорт
	КоличествоВидовУчета = 0;
	Если ОтражатьВУправленческомУчете Тогда
		КоличествоВидовУчета = КоличествоВидовУчета + 1;
	КонецЕсли;	
	Если ОтражатьВБухгалтерскомУчете Тогда
		КоличествоВидовУчета = КоличествоВидовУчета + 1;
	КонецЕсли;
	Если ОтражатьВМеждународномУчете Тогда
		КоличествоВидовУчета = КоличествоВидовУчета + 1;
	КонецЕсли;
	
	Если КоличествоВидовУчета > 1 Тогда
		Возврат "Документ может принадлежать только одному виду учета";
	КонецЕсли;
	
	Если (ОтражатьВБухгалтерскомУчете ИЛИ ОтражатьВМеждународномУчете ИЛИ (ПроверятьОрганизацииюДляУУ И ОтражатьВУправленческомУчете)) И (НЕ ЗначениеЗаполнено(Организация)) Тогда
		Возврат "Не заполнена организация";
	КонецЕсли;
	Возврат Неопределено;
КонецФункции	

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	ТекстПроверкиПоВидамУчета = ПроверитьПринадлежностьКорректировкиКВидамУчета(Истина);
	Если НЕ ТекстПроверкиПоВидамУчета = Неопределено ТОгда
		Отказ = Истина;
		Сообщить(ТекстПроверкиПоВидамУчета);
	КонецЕсли;	
	
	Если НЕ НачалоМесяца(ПериодРегистрации) = НачалоМесяца(Дата) Тогда
		Сообщить("Период регистрации не совпадает с датой документа. Движения по регистрам и проводки будут сформированы в соответствии с периодом регистрации.");
	КонецЕсли;	
	
	СтруктураПараметров =  Новый Структура;
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("ОтражатьВБухгалтерскомУчете",  ОтражатьВБухгалтерскомУчете);
	СтруктураПараметров.Вставить("ОтражатьВУправленческомУчете", ОтражатьВУправленческомУчете);
	СтруктураПараметров.Вставить("ОтражатьВМеждународномУчете",  ОтражатьВМеждународномУчете);

	
	ДатаНач = НачалоМесяца(ПериодРегистрации);
	ДатаКон = КонецМесяца(ПериодРегистрации);
	
	Если глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") 
	  И (глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат") <= ДатаКон) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Документ ""Корректировка стоимости списания товаров"" не нужно вводить при использовании ""Расширенной аналитики учета затрат""",Отказ);
		Возврат;
	Иначе
		МетаданныеРегистров = Метаданные.РегистрыНакопления;
		
		// Распределение за месяц
		Если ОтражатьВУправленческомУчете Тогда
			
			УправлениеЗапасамиПартионныйУчет.ВыполнитьРаспределениеДопРасходов(ДатаНач, ДатаКон, , Ссылка, ДатаКон);
		
		КонецЕсли;
		
		// проводим корректировку по 4 видам учета
		МассивВидовУчета = Новый Массив();
		Если ОтражатьВУправленческомУчете тогда
			МассивВидовУчета.Добавить("");
		КонецЕсли;
		Если ОтражатьВБухгалтерскомУчете тогда
			МассивВидовУчета.Добавить("БухгалтерскийУчет");
		КонецЕсли;
		Если ОтражатьВМеждународномУчете тогда
			МассивВидовУчета.Добавить("МеждународныйУчет");
		КонецЕсли;
		
        КорректировкаСтоимости.ВыполнитьКорректировкуСтоимостиСписанияНаСервере(ДатаНач, ДатаКон, МассивВидовУчета, Ссылка, Организация);
		
		СтруктураПараметров.Вставить("ОтражатьВБухгалтерскомУчете",  ОтражатьВБухгалтерскомУчете);
		СтруктураПараметров.Вставить("ОтражатьВУправленческомУчете", ОтражатьВУправленческомУчете);
		СтруктураПараметров.Вставить("ОтражатьВМеждународномУчете",  ОтражатьВМеждународномУчете);
		
		Если ЗначениеЗаполнено(Организация) Тогда
			СпособВеденияПартионногоУчетаПоОрганизации = УправлениеЗапасами.ПолучитьСпособВеденияПартионногоУчетаПоОрганизации(Организация, Дата);
		Иначе
			СпособВеденияПартионногоУчетаПоОрганизации = Перечисления.СпособыВеденияПартионногоУчетаПоОрганизациям.ПоКомпанииВЦелом;
		КонецЕсли;
		УправлениеЗапасами.ЗарегистрироватьДокументВПоследовательностяхПартионногоУчета(ЭтотОбъект, Дата, Организация,ОтражатьВУправленческомУчете,ОтражатьВБухгалтерскомУчете,СпособВеденияПартионногоУчетаПоОрганизации);
	КонецЕсли;	
	
КонецПроцедуры//ОбработкаПроведения

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью


Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	
	// Удаление записей регистрации из всех последовательностей
		
КонецПроцедуры

