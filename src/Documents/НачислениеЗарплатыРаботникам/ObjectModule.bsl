////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
//

// Закрытие строк - ввод значения ДатаОкончания для тех строк у которых не нуоевое 
// значение Размер и удаление тех, у кого Размер = 0
// Параметры:
//  ТЗ - таблица значений
//  НезакрытыеСтроки - массив незакрытых строк таблицы значений ТЗ
//  ДатаОкончания - дата, которую нужно проставить в качестве "закрывающей"
//
// Возвращаемое зеначение:
//  нет
//
Процедура ЗакрытьСтроки(ТЗ, НезакрытыеСтроки, ДатаОкончания)
	
	Для Каждого Строка Из НезакрытыеСтроки Цикл
		Если Строка.ВидРасчета = Неопределено ИЛИ Строка.ДатаНачала > ДатаОкончания Тогда
			ТЗ.Удалить(Строка);
		ИначеЕсли Строка.ДатаОкончания = Дата('00010101') или Строка.ДатаОкончания > ДатаОкончания Тогда
			Строка.ДатаОкончания = ДатаОкончания;
		КонецЕсли;
	КонецЦикла;
	
	НезакрытыеСтроки.Очистить();
	
КонецПроцедуры // ЗакрытьСтроки

// Найти строку в массиве строк по переданному виду расчета или по признаку "Основное"
// Найденная строка и ее индекс возвращаются через переданные параметры Строка и ИндексСтроки
// Параметры:
//  НезакрытыеСтроки - массив строк таблицы значений
//	ПоискОсновного - признак поиска основного начисления
//  ВидРасчета - вид расчета ссылка
//  Строка - в этот параметр будет возвращена строка, начальное значение - Неопределено
//  ИндексСтроки - в этот параметр будет возвращен индекс строки, начальное значение - Неопределено
//
// Возвращаемое зеначение:
//  нет
//
Процедура НайтиСредиНезакрытых(НезакрытыеСтроки, ПоискОсновного, ВидРасчета, Строка, ИндексСтроки)
	
	Для Индекс  = 0 По НезакрытыеСтроки.ВГраница() Цикл
		Если (ПоискОсновного И НезакрытыеСтроки[Индекс].Основное) 
			ИЛИ (НЕ ПоискОсновного И НезакрытыеСтроки[Индекс].ВидРасчета = ВидРасчета) Тогда
			ИндексСтроки = Индекс;
			Строка = НезакрытыеСтроки[Индекс];
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры  // НайтиСредиНезакрытых

// Нйти строку в массиве строк по переданному виду расчета и основанию (ссылка на документ)
// Найденная строка и ее индекс возвращаются через переданные параметры Строка и ИндексСтроки
// Параметры:
//  НезакрытыеСтроки - массив строк таблицы значений
//  ВидРасчета - вид расчета ссылка
//  ДокументОснование - документ ссылка
//  Строка - в этот параметр будет возвращена строка, начальное значение - Неопределено
//  ИндексСтроки - в этот параметр будет возвращен индекс строки, начальное значение - Неопределено
//
// Возвращаемое зеначение:
//  нет
//
Процедура НайтиСредиНезакрытыхУдержаний(НезакрытыеСтроки, ВидРасчета, ДокументОснование, Строка, ИндексСтроки)
	
	Для Индекс = 0 По НезакрытыеСтроки.ВГраница() Цикл
		Если НезакрытыеСтроки[Индекс].ВидРасчета = ВидРасчета И НезакрытыеСтроки[Индекс].ДокументОснование = ДокументОснование Тогда
			ИндексСтроки = Индекс;
			Строка = НезакрытыеСтроки[Индекс];
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры  // НайтиСредиНезакрытыхУдержаний

// Выполняет формирование таблицы значений для загрузки ее в табличную часть Начисления
// Параметры:
// 	выборка результатат запроса
// Возвращаемое значение:
//  таблица значений
//
Функция СформироватьТаблицуНачислений(Начисления)
	
	ТЗНачисления = Новый ТаблицаЗначений();
	ТЗНачисления.Колонки.Добавить("Сотрудник");
	ТЗНачисления.Колонки.Добавить("Физлицо");
	ТЗНачисления.Колонки.Добавить("ГрафикРаботы");
	ТЗНачисления.Колонки.Добавить("СуммированныйУчетРабочегоВремени");
	ТЗНачисления.Колонки.Добавить("ВидРасчета");
	ТЗНачисления.Колонки.Добавить("Основное");// Признак основного начисления
	ТЗНачисления.Колонки.Добавить("СпособРасчета");
	ТЗНачисления.Колонки.Добавить("Показатель1");
	ТЗНачисления.Колонки.Добавить("Показатель2");
	ТЗНачисления.Колонки.Добавить("Показатель3");
	ТЗНачисления.Колонки.Добавить("Показатель4");
	ТЗНачисления.Колонки.Добавить("Показатель5");
	ТЗНачисления.Колонки.Добавить("Показатель6");
	ТЗНачисления.Колонки.Добавить("ДатаНачала", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗНачисления.Колонки.Добавить("ДатаОкончания", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗНачисления.Колонки.Добавить("Подразделение");
	ТЗНачисления.Колонки.Добавить("Авторасчет");
	
	// Массив незакрытых строк таблицы значений, т.е. тех, которым не проставлена дата окончания
	НезакрытыеСтроки = Новый Массив;
	ТекущийСотрудник = Справочники.СотрудникиОрганизаций.ПустаяСсылка();
	КонецМесяца = КонецМесяца(ПериодРегистрации);
	СтрокиНачисленийТекущегоНазначения = Новый Массив;
	
	Пока Начисления.Следующий() Цикл
		
		Если Начисления.КурсВалюты1 = NULL Тогда
			Сообщить("Для расчетного периода не задан курс валюты " + Начисления.Валюта1 + "!", СтатусСообщения.Важное);
		КонецЕсли;
		Если Начисления.КурсВалюты2 = NULL Тогда
			Сообщить("Для расчетного периода не задан курс валюты " + Начисления.Валюта2 + "!", СтатусСообщения.Важное);
		КонецЕсли;
		Если Начисления.КурсВалюты3 = NULL Тогда
			Сообщить("Для расчетного периода не задан курс валюты " + Начисления.Валюта3 + "!", СтатусСообщения.Важное);
		КонецЕсли;		
		Если Начисления.КурсВалюты4 = NULL Тогда
			Сообщить("Для расчетного периода не задан курс валюты " + Начисления.Валюта4 + "!", СтатусСообщения.Важное);
		КонецЕсли;		
		
		Если Начисления.Сотрудник <> ТекущийСотрудник Тогда
			
			// закрываем незакрытые строки начислений предыдущего работника концом месяца
			ЗакрытьСтроки(ТЗНачисления, НезакрытыеСтроки, КонецМесяца);
			
			// меняется текущий работник и дата его движения
			ТекущийСотрудник = Начисления.Сотрудник;
			ТекущаяДатаНазначения = Начисления.ПериодРаботники;
			СтрокиНачисленийТекущегоНазначения.Очистить();
			
		ИначеЕсли Начисления.ПериодРаботники <> ТекущаяДатаНазначения тогда
		
			// закрываем все строки предыдущего назначения датой предшествующей новому назначению
			ЗакрытьСтроки(ТЗНачисления, СтрокиНачисленийТекущегоНазначения, Начисления.ПериодРаботники - 1);
			НезакрытыеСтроки.Очистить();

			// меняется текущая дата движения работника
			ТекущаяДатаНазначения = Начисления.ПериодРаботники;
			
		КонецЕсли;
			
		Если НЕ Начисления.Подходит ИЛИ Начисления.УжеПроведен Тогда
			// пропускаем такие записи: они уже введены другими документами или соответствуют окончанию назначения работника
			Продолжить;
		КонецЕсли;
		
		// Найдем такой же вид расчета среди незакрытых строк с целью завершения его действия
		Строка = НеОпределено;
		ИндексСтроки = НеОпределено;
		НайтиСредиНезакрытых(НезакрытыеСтроки, Начисления.ОсновноеНачисление, Начисления.ВидРасчета, Строка, ИндексСтроки);
		Если Строка <> НеОпределено Тогда
			// нашли
			Если Строка.ДатаНачала = Начисления.Период Тогда
				Если Начисления.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
					НезакрытыеСтроки.Удалить(ИндексСтроки);
					ИндексСтроки = 0;
					Для каждого СтрокаМассива Из СтрокиНачисленийТекущегоНазначения Цикл
						Если СтрокаМассива = Строка Тогда
							СтрокиНачисленийТекущегоНазначения.Удалить(ИндексСтроки);
							Прервать;
						Иначе
							ИндексСтроки = ИндексСтроки + 1;
						КонецЕсли;
					КонецЦикла;
					ТЗНачисления.Удалить(Строка);
				Иначе
					// если дата та же - меняем данные 
					// не вводим новую строку в формируемую таблицу значений
					// и оставляем "незакрытой"
					Строка.Показатель1 = Начисления.Показатель1;
					Строка.Показатель2 = Начисления.Показатель2;
					Строка.Показатель3 = Начисления.Показатель3;
					Строка.Показатель4 = Начисления.Показатель4;
					Строка.Показатель5 = Начисления.Показатель5;
					Строка.Показатель6 = Начисления.Показатель6;
					Строка.Подразделение = Начисления.Подразделение;
					Строка.ГрафикРаботы = Начисления.ГрафикРаботы;
					Строка.СпособРасчета = Начисления.СпособРасчета;
					Строка.СуммированныйУчетРабочегоВремени = Начисления.СуммированныйУчетРабочегоВремени;
				КонецЕсли;
				Продолжить;
			Иначе
				// иначе - "закрываем" строку и удаляем из массива незакрытых
				Строка.ДатаОкончания = Начисления.Период-1;
				НезакрытыеСтроки.Удалить(ИндексСтроки);
			КонецЕсли;

		КонецЕсли;
		
		Если Начисления.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Продолжить;
		КонецЕсли;
		
		// Добавим новую строку начислений
		НоваяСтрока = ТЗНачисления.Добавить();
		НоваяСтрока.Сотрудник							= Начисления.Сотрудник;
		НоваяСтрока.Физлицо								= Начисления.Физлицо;
		НоваяСтрока.ГрафикРаботы						= Начисления.ГрафикРаботы;
		НоваяСтрока.СпособРасчета						= Начисления.СпособРасчета;
		НоваяСтрока.СуммированныйУчетРабочегоВремени	= Начисления.СуммированныйУчетРабочегоВремени;
		НоваяСтрока.ВидРасчета							= Начисления.ВидРасчета;
		НоваяСтрока.Основное							= Начисления.ОсновноеНачисление;
		НоваяСтрока.Показатель1							= Начисления.Показатель1;
		НоваяСтрока.Показатель2							= Начисления.Показатель2;
		НоваяСтрока.Показатель3							= Начисления.Показатель3;
		НоваяСтрока.Показатель4							= Начисления.Показатель4;
		НоваяСтрока.Показатель5 						= Начисления.Показатель5;
		НоваяСтрока.Показатель6 						= Начисления.Показатель6;
		НоваяСтрока.ДатаНачала							= Начисления.Период;
		НоваяСтрока.Подразделение						= Начисления.Подразделение;
		НоваяСтрока.Авторасчет							= Истина;
		НезакрытыеСтроки.Добавить(НоваяСтрока);
		СтрокиНачисленийТекущегоНазначения.Добавить(НоваяСтрока);
		
	КонецЦикла;
	// закрываем строки концом месяца
	ЗакрытьСтроки(ТЗНачисления, НезакрытыеСтроки, КонецМесяца);
	Возврат ТЗНачисления;
	
КонецФункции

// Выполняет формирование таблицы значений для загрузки ее в табличную часть Удержания
//
// Параметры:
//	выборка результатат запроса
//
// Возвращаемое значение:
//	таблица значений
//
Функция СформироватьТаблицуУдержаний(Удержания)
	
	ТЗУдержания = Новый ТаблицаЗначений();
	ТЗУдержания.Колонки.Добавить("ФизЛицо");
	ТЗУдержания.Колонки.Добавить("Подразделение");
	ТЗУдержания.Колонки.Добавить("ВидРасчета");
	ТЗУдержания.Колонки.Добавить("Показатель1");
	ТЗУдержания.Колонки.Добавить("Показатель2");
	ТЗУдержания.Колонки.Добавить("Показатель3");
	ТЗУдержания.Колонки.Добавить("Показатель4");
	ТЗУдержания.Колонки.Добавить("Показатель5");
	ТЗУдержания.Колонки.Добавить("Показатель6");
	ТЗУдержания.Колонки.Добавить("ДатаНачала", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗУдержания.Колонки.Добавить("ДатаОкончания", ОбщегоНазначения.ПолучитьОписаниеТиповДаты(ЧастиДаты.ДатаВремя));
	ТЗУдержания.Колонки.Добавить("ДокументОснование");
	ТЗУдержания.Колонки.Добавить("Авторасчет");

	// Массив незакрытых строк таблицы значений, т.е. тех, которым не проставлена дата окончания
	НезакрытыеСтроки = Новый Массив;
	ТекущееФизлицо = Справочники.ФизическиеЛица.ПустаяСсылка();
	КонецМесяца = КонецМесяца(ПериодРегистрации);
	
	Пока Удержания.Следующий() Цикл
		
		Если Удержания.ФизЛицо <> ТекущееФизлицо Тогда
			// закрываем строки концом месяца
			ЗакрытьСтроки(ТЗУдержания, НезакрытыеСтроки, КонецМесяца);
			ТекущееФизлицо = Удержания.ФизЛицо;
		Иначе
			// найдем такой же вид расчета по тому же основанию среди незакрытых строк
			Строка = Неопределено;
			ИндексСтроки = Неопределено;
			НайтиСредиНезакрытыхУдержаний(НезакрытыеСтроки, Удержания.ВидРасчета, Удержания.ДокументОснование, Строка, ИндексСтроки);
			Если Строка <> Неопределено Тогда
				// нашли
				Если Строка.ДатаНачала = Удержания.Период Тогда
					// если дата та же - меняем данные 
					// не вводим новую строку в формируемую таблицу значений
					// и оставляем "незакрытой"
					Строка.Показатель1 = Удержания.Показатель1;
					Строка.Показатель2 = Удержания.Показатель2;
					Строка.Показатель3 = Удержания.Показатель3;
					Строка.Показатель4 = Удержания.Показатель4;
					Строка.Показатель5 = Удержания.Показатель5;
					Строка.Показатель6 = Удержания.Показатель6;
					Продолжить;
				Иначе
					// иначе - "закрываем" строку и удаляем из массива незакрытых
					Строка.ДатаОкончания = Удержания.Период-1;
					НезакрытыеСтроки.Удалить(ИндексСтроки);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если Удержания.Действие = Перечисления.ВидыДействияСНачислением.Прекратить Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТЗУдержания.Добавить();
		НоваяСтрока.ФизЛицо				= Удержания.ФизЛицо;
		НоваяСтрока.Подразделение		= Удержания.Подразделение;
		НоваяСтрока.ВидРасчета			= Удержания.ВидРасчета;
		НоваяСтрока.Показатель1			= Удержания.Показатель1;
		НоваяСтрока.Показатель2			= Удержания.Показатель2;
		НоваяСтрока.Показатель3			= Удержания.Показатель3;
		НоваяСтрока.Показатель4			= Удержания.Показатель4;
		НоваяСтрока.Показатель5 		= Удержания.Показатель5;
		НоваяСтрока.Показатель6 		= Удержания.Показатель6;
		НоваяСтрока.ДатаНачала			= Удержания.Период;
		НоваяСтрока.ДокументОснование	= Удержания.ДокументОснование;
		НоваяСтрока.Авторасчет			= Истина;
		НезакрытыеСтроки.Добавить(НоваяСтрока);
		
	КонецЦикла;
	// закрываем строки концом месяца
	ЗакрытьСтроки(ТЗУдержания, НезакрытыеСтроки, КонецМесяца);
	Возврат ТЗУдержания;
	
КонецФункции

// Процедура рассчитывает проценты и сумму погашения займа
// и заполняет реквизиты табличной части
Процедура РассчитатьПогашениеЗаймов() 
	
	ВалютаУпрУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("парамРегистратор",Ссылка);
	Запрос.УстановитьПараметр("парамВалютаУпрУчета" , ВалютаУпрУчета);
	Запрос.УстановитьПараметр("парамКонецГода",КонецГода(ПериодРегистрации));
	Запрос.УстановитьПараметр("НачалоРасчетногоПериода",ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецРасчетногоПериода",КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("ДнейВГоду",(КонецГода(ПериодРегистрации) + 1 - НачалоГода(ПериодРегистрации)) / 86400);
	Если ВалютаУпрУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета") Тогда
		КурсУпрВалюты = 1;
	Иначе	
		Структура = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаУпрУчета, КонецМесяца(ПериодРегистрации));
		Если Структура.Курс = 0 или Структура.Кратность = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Не указан курс валюты управленческого учета.");
			Возврат;
		КонецЕсли;
		КурсУпрВалюты = Структура.Курс / Структура.Кратность;
	КонецЕсли;
	Запрос.УстановитьПараметр("КурсУпрВалюты",КурсУпрВалюты);
	
	// ТаблицаПериодыПогашения
	// Описание
	// 1.из таблицы остатков и оборотов рег-ра ПогашениеЗаймовРаботниками (выборка ПогашениеЗаймов)
	// выбираются дни, в которые были произведены какие-либо движения по займу - период движений определяет  
	// начало периода погашения (в течение которого остаток долга не изменяется) - поле ДатаС;  
	// рассчитывается остаток основного долга на конец месяца (поле ОсновнойДолгНаКонецМесяца)
	// 2.из основной таблицы того же рег-ра присоединяются даты окончания периодов погашения - поле ДатаПО  
	// 3.из договора займа выбираются его параметры: проценты, сумма займа (переведенная в валюту упр. учета) и пр.
	//
	
	ТаблицаПериодыПогашения = 
	"ВЫБРАТЬ
	|	ПогашениеЗаймов.Период КАК ДатаС,
	|	МИНИМУМ(НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботниками.Период, ДЕНЬ)) КАК ДатаПО,
	|	ПогашениеЗаймов.ФизЛицо КАК ФизЛицо,
	|	ПогашениеЗаймов.ДоговорЗайма КАК ДоговорЗайма,
	|	ПогашениеЗаймов.ДоговорЗайма.ПроцентЗаПользованиеЗаймом КАК ДоговорЗаймаПроцентЗаПользованиеЗаймом,
	|	ПогашениеЗаймов.ДоговорЗайма.ПорядокПогашенияЗайма КАК ПорядокПогашенияЗайма,
	|	ВЫБОР
	|		КОГДА ПогашениеЗаймов.ДоговорЗайма.НачалоПогашения < ПогашениеЗаймов.ДоговорЗайма.Дата
	|			ТОГДА ПогашениеЗаймов.ДоговорЗайма.Дата
	|		ИНАЧЕ ПогашениеЗаймов.ДоговорЗайма.НачалоПогашения
	|	КОНЕЦ КАК ДоговорЗаймаНачалоПогашения,
	|	ПогашениеЗаймов.ДоговорЗайма.СрокПогашения КАК ДоговорЗаймаСрокПогашения,
	|	ПогашениеЗаймов.ДоговорЗайма.СуммаЗайма * ВЫБОР
	|		КОГДА ПогашениеЗаймов.ДоговорЗайма.ВалютаДокумента = &парамВалютаУпрУчета
	|			ТОГДА 1
	|		ИНАЧЕ ПогашениеЗаймов.ДоговорЗайма.КурсДокумента / ПогашениеЗаймов.ДоговорЗайма.КратностьДокумента / &КурсУпрВалюты
	|	КОНЕЦ КАК СуммаЗайма,
	|	ПогашениеЗаймов.ОсновнойДолгКонечныйОстаток КАК ОсновнойДолгКонечныйОстаток,
	|	ВЫБОР
	|		КОГДА КОНЕЦПЕРИОДА(ПогашениеЗаймов.Период, ДЕНЬ) = &КонецРасчетногоПериода
	|			ТОГДА ПогашениеЗаймов.ОсновнойДолгКонечныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОсновнойДолгНаКонецМесяца,
	|	ПогашениеЗаймов.ПроцентыПриход КАК ПроцентыПриход,
	|	ПогашениеЗаймов.ПроцентыРасход КАК ПроцентыРасход,
	|	ПогашениеЗаймов.ПроцентыОборот КАК ПроцентыОборот,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПогашениеЗаймов.Период, ДЕНЬ) = &НачалоРасчетногоПериода
	|			ТОГДА ПогашениеЗаймов.ПроцентыНачальныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПроцентыНачальныйОстаток
	|ИЗ
	|	РегистрНакопления.ПогашениеЗаймовРаботниками.ОстаткиИОбороты(
	|		&НачалоРасчетногоПериода,
	|		&КонецРасчетногоПериода,
	|		День,
	|		ДвиженияИГраницыПериода,
	|		ФизЛицо В
	|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				Работники.ФизЛицо КАК Физлицо
	|			ИЗ
	|				Документ.НачислениеЗарплатыРаботникам.ПогашениеЗаймов КАК Работники
	|			ГДЕ
	|				Работники.Ссылка = &парамРегистратор)) КАК ПогашениеЗаймов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПогашениеЗаймовРаботниками КАК ПогашениеЗаймовРаботниками
	|		ПО ПогашениеЗаймов.ФизЛицо = ПогашениеЗаймовРаботниками.ФизЛицо
	|			И ПогашениеЗаймов.ДоговорЗайма = ПогашениеЗаймовРаботниками.ДоговорЗайма
	|			И (ПогашениеЗаймов.Период < НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботниками.Период, ДЕНЬ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПогашениеЗаймов.Период,
	|	ПогашениеЗаймов.ФизЛицо,
	|	ПогашениеЗаймов.ОсновнойДолгКонечныйОстаток,
	|	ПогашениеЗаймов.ПроцентыНачальныйОстаток,
	|	ПогашениеЗаймов.ПроцентыПриход,
	|	ПогашениеЗаймов.ДоговорЗайма,
	|	ПогашениеЗаймов.ПроцентыРасход,
	|	ПогашениеЗаймов.ПроцентыОборот";
	
	// Основной текст запроса
	// 1. Выборка ДанныеОПогашении
	//  поле ПогашатьЗаймВЭтомМесяце - Определяем, нужно ли погашать займ по условиям договора в текущем месяце
	//  поле ПогашеноЗайма - Рассчитывается сумма займа к погашению: как месячная доля займа или 
	//                       остаток по основному долгу на конец месяца - по условиям договора
	//  поля ПроцентыПриход и ПроцентыРасход - Суммируются начисленные и погашенные проценты по займу за месяц
	//  поле НачисленоПроцентов - Рассчитывается сумма процентов к начислению за месяц (по ежедневным 
	//		остаткам основного долга) как сумма по всем периодам из таблицы ПериодыПогашения начисленных по 
	//  	следующей формуле процентов: 
	//			%% к начислению за период = кадендарных дней в периоде / кадендарных дней в году * процент по займу
	// 2. В основной выборке рассчитываются все показатели т.ч. документа
	//  поле НачисленоПроцентов - доначисляются проценты за пользование займом
	//  поле ПогашеноПроцентов - если займ в текущем месяце погашается, предлагается остаток %% с учетом начисленных за месяц
	//  поле ПогашеноЗайма - если займ в текущем месяце погашается, предлагается рассчитанная ранее сумма к 
	//                       погашению основного долга + сумма погашаемых %%
	//

	ТекстОстаткиЗаймов = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачислениеЗарплатыРаботникамПогашениеЗаймов.ФизЛицо,
	|	НачислениеЗарплатыРаботникамПогашениеЗаймов.ДоговорЗайма,
	|	ВЫБОР
	|		КОГДА ДанныеОПогашении.НачисленоПроцентов > ДанныеОПогашении.ПроцентыПриход
	|			ТОГДА ДанныеОПогашении.НачисленоПроцентов - ДанныеОПогашении.ПроцентыПриход
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НачисленоПроцентов,
	|	ВЫБОР
	|		КОГДА ДанныеОПогашении.ПогашатьЗаймВЭтомМесяце
	|			ТОГДА ВЫБОР
	|					КОГДА ДанныеОПогашении.НачисленоПроцентов > ДанныеОПогашении.ПроцентыПриход + ДанныеОПогашении.ПроцентыРасход
	|						ТОГДА ДанныеОПогашении.НачисленоПроцентов - ДанныеОПогашении.ПроцентыПриход - ДанныеОПогашении.ПроцентыРасход
	|					ИНАЧЕ 0
	|				КОНЕЦ + ДанныеОПогашении.ПроцентыНачальныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПогашеноПроцентов,
	|	ВЫБОР
	|		КОГДА ДанныеОПогашении.ПогашатьЗаймВЭтомМесяце
	|			ТОГДА ДанныеОПогашении.ПогашеноЗайма + ВЫБОР
	|					КОГДА ДанныеОПогашении.НачисленоПроцентов > ДанныеОПогашении.ПроцентыПриход + ДанныеОПогашении.ПроцентыРасход
	|						ТОГДА ДанныеОПогашении.НачисленоПроцентов - ДанныеОПогашении.ПроцентыПриход - ДанныеОПогашении.ПроцентыРасход
	|					ИНАЧЕ 0
	|				КОНЕЦ + ДанныеОПогашении.ПроцентыНачальныйОстаток
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПогашеноЗайма
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникам.ПогашениеЗаймов КАК НачислениеЗарплатыРаботникамПогашениеЗаймов
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПериодыПогашения.ФизЛицо КАК ФизЛицо,
	|			ПериодыПогашения.ДоговорЗайма КАК ДоговорЗайма,
	|			ВЫБОР
	|				КОГДА ПериодыПогашения.ПорядокПогашенияЗайма = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияЗаймаПроцентов.ПоОкончанииСрока)
	|							И &КонецРасчетногоПериода >= ДОБАВИТЬКДАТЕ(ПериодыПогашения.ДоговорЗаймаНачалоПогашения, МЕСЯЦ, ПериодыПогашения.ДоговорЗаймаСрокПогашения)
	|					ТОГДА ИСТИНА
	|				КОГДА ПериодыПогашения.ПорядокПогашенияЗайма <> ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияЗаймаПроцентов.ПоОкончанииСрока)
	|							И &КонецРасчетногоПериода >= ПериодыПогашения.ДоговорЗаймаНачалоПогашения
	|					ТОГДА ИСТИНА
	|				ИНАЧЕ ЛОЖЬ
	|			КОНЕЦ КАК ПогашатьЗаймВЭтомМесяце,
	|			ВЫБОР
	|				КОГДА ПериодыПогашения.ПорядокПогашенияЗайма = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияЗаймаПроцентов.ПоОкончанииСрока)
	|					ТОГДА МАКСИМУМ(ПериодыПогашения.ОсновнойДолгНаКонецМесяца)
	|				КОГДА ПериодыПогашения.СуммаЗайма / ПериодыПогашения.ДоговорЗаймаСрокПогашения > МАКСИМУМ(ПериодыПогашения.ОсновнойДолгНаКонецМесяца)
	|					ТОГДА МАКСИМУМ(ПериодыПогашения.ОсновнойДолгНаКонецМесяца)
	|				ИНАЧЕ ПериодыПогашения.СуммаЗайма / ПериодыПогашения.ДоговорЗаймаСрокПогашения
	|			КОНЕЦ КАК ПогашеноЗайма,
	|			СУММА(ПериодыПогашения.ПроцентыПриход) КАК ПроцентыПриход,
	|			СУММА(ПериодыПогашения.ПроцентыРасход) КАК ПроцентыРасход,
	|			СУММА(ВЫРАЗИТЬ(ПериодыПогашения.ОсновнойДолгКонечныйОстаток * РАЗНОСТЬДАТ(ВЫБОР
	|							КОГДА ПериодыПогашения.ОсновнойДолгКонечныйОстаток > 0
	|									И ПериодыПогашения.ДатаС = &НачалоРасчетногоПериода
	|								ТОГДА ДОБАВИТЬКДАТЕ(ПериодыПогашения.ДатаС, ДЕНЬ, -1)
	|							ИНАЧЕ ПериодыПогашения.ДатаС
	|						КОНЕЦ, ВЫБОР
	|							КОГДА ЕСТЬNULL(ПериодыПогашения.ДатаПО, &КонецРасчетногоПериода) > &КонецРасчетногоПериода
	|								ТОГДА &КонецРасчетногоПериода
	|							ИНАЧЕ ЕСТЬNULL(ПериодыПогашения.ДатаПО, &КонецРасчетногоПериода)
	|						КОНЕЦ, ДЕНЬ) / &ДнейВГоду * ПериодыПогашения.ДоговорЗаймаПроцентЗаПользованиеЗаймом / 100 КАК ЧИСЛО(15, 2))) КАК НачисленоПроцентов,
	|			СУММА(ПериодыПогашения.ПроцентыНачальныйОстаток) КАК ПроцентыНачальныйОстаток
	|		ИЗ
	|			(" + ТаблицаПериодыПогашения + ") КАК ПериодыПогашения
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПериодыПогашения.ФизЛицо,
	|			ПериодыПогашения.ДоговорЗайма,
	|			ПериодыПогашения.ПорядокПогашенияЗайма,
	|			ПериодыПогашения.ДоговорЗаймаНачалоПогашения,
	|			ПериодыПогашения.ДоговорЗаймаСрокПогашения,
	|			ПериодыПогашения.СуммаЗайма) КАК ДанныеОПогашении
	|		ПО НачислениеЗарплатыРаботникамПогашениеЗаймов.ФизЛицо = ДанныеОПогашении.ФизЛицо
	|			И НачислениеЗарплатыРаботникамПогашениеЗаймов.ДоговорЗайма = ДанныеОПогашении.ДоговорЗайма
	|ГДЕ
	|	НачислениеЗарплатыРаботникамПогашениеЗаймов.Ссылка = &парамРегистратор";
	
	Запрос.Текст = ТекстОстаткиЗаймов;
	Выборка = Запрос.Выполнить().Выбрать();
	ПогашениеЗаймов.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры
	
#Если Клиент Тогда
	
// Расчерчивает разделы расчетного листка линиями
//
// Параметры
//  ВременныйТабличныйДокумент - Табличный документ с уже выведенными строками расчетного листка
//  СтрокПропустить - целое число уже обработанных ранее строк т.д.
//  СтрокРасчертить - целое число строк т.д., которым требуется указать границы
//
Процедура РасчертитьРасчетныйЛисток(ВременныйТабличныйДокумент,СтрокПропустить,СтрокРасчертить)

	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная, 1);
	
	Для Сч = 0 По СтрокРасчертить - 1 Цикл
		
		НомерСтроки = СтрокПропустить + Сч;
		
		Для Ссч = 2 По 15 Цикл
			
			Если Ссч = 4 ИЛИ Ссч = 8 ИЛИ Ссч = 10 ИЛИ Ссч = 11 ИЛИ Ссч = 13 ИЛИ Ссч = 15 Тогда
				Продолжить
			КонецЕсли; 
			
			ВременныйТабличныйДокумент.Область(НомерСтроки, Ссч).ГраницаСлева = Линия;
			
		КонецЦикла;
		
		ВременныйТабличныйДокумент.Область(НомерСтроки, 15).ГраницаСправа = Линия;
		ВременныйТабличныйДокумент.Область(НомерСтроки, 2, НомерСтроки, 15).ГраницаСнизу = Линия;
		
	КонецЦикла; 
	
КонецПроцедуры // РасчертитьРасчетныйЛисток()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет автоматическое заполнение документа по данным документа и переданным параметрам
// 
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Логическое - удалось ли выполнить автоматическое заполнение документа
//
Функция Автозаполнение(ПостроительЗапроса = НеОпределено) Экспорт
	
	Перем ВалютаУпрУчета;
	ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	КурсВалютыУпрУчета = 0;
	ПроведениеРасчетов.ПолучитьКурсВалютыУпрУчета(ПериодРегистрации, ВалютаУпрУчета, КурсВалютыУпрУчета, ВалютаРегламентированногоУчета);
	
	Если КурсВалютыУпрУчета = 0 Тогда
		Сообщить("Для расчетного периода не задан курс валюты управленческого учета (" + ВалютаУпрУчета + ") для расчетов с персоналом!", СтатусСообщения.Важное);
		Возврат Ложь;
	КонецЕсли;
	
	ОсновнойТекстЗапроса = "";
	
	УчетнаяПолитикаПоПерсоналу = глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналу");
	
	Если Подразделение.Пустая() И Ответственный.Пустая() Тогда
		УсловиеНаПодразделения = "";
		ВнутреннееУсловие = "";
	ИначеЕсли Подразделение.Пустая() Тогда
		Если УчетнаяПолитикаПоПерсоналу.РасчетЗарплатыПоОтветственным Тогда
			УсловиеНаПодразделения = " И Работники.Подразделение В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.Подразделение ИЗ РегистрСведений.РасчетчикиЗарплаты.СрезПоследних(&парамНачало) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь)";
			ВнутреннееУсловие = "Подразделение В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.Подразделение ИЗ РегистрСведений.РасчетчикиЗарплаты.СрезПоследних(&парамНачало) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь)";
		Иначе
			УсловиеНаПодразделения = "";
			ВнутреннееУсловие = "";
		КонецЕсли;		
	ИначеЕсли Ответственный.Пустая() Тогда
		УсловиеНаПодразделения = " И Работники.Подразделение В ИЕРАРХИИ (&парамПодразделение)";
		ВнутреннееУсловие = "Подразделение В ИЕРАРХИИ (&парамПодразделение)";
	Иначе
		Если УчетнаяПолитикаПоПерсоналу.РасчетЗарплатыПоОтветственным Тогда
			УсловиеНаПодразделения = " И Работники.Подразделение В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.Подразделение ИЗ РегистрСведений.РасчетчикиЗарплаты.СрезПоследних(&парамНачало) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь) И Работники.Подразделение В ИЕРАРХИИ (&парамПодразделение)";
			ВнутреннееУсловие = "Подразделение В ИЕРАРХИИ (ВЫБРАТЬ РАЗЛИЧНЫЕ Расчетчики.Подразделение ИЗ РегистрСведений.РасчетчикиЗарплаты.СрезПоследних(&парамНачало) Расчетчики ГДЕ Расчетчики.Пользователь = &парамПользователь) И Подразделение В ИЕРАРХИИ (&парамПодразделение)";
		Иначе
			УсловиеНаПодразделения = " И Работники.Подразделение В (&парамПодразделение)";
			ВнутреннееУсловие = "Подразделение В (&парамПодразделение)";
		КонецЕсли;
	КонецЕсли;
	
	Если ПостроительЗапроса = Неопределено Тогда
		
		// Установим параметры запроса
		Запрос.УстановитьПараметр("парамНачало",							ПериодРегистрации);
		Запрос.УстановитьПараметр("парамКонец",								КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамПользователь",						Ответственный);
		Запрос.УстановитьПараметр("парамПодразделение",						Подразделение);
		Запрос.УстановитьПараметр("парамРегистратор",						Ссылка);
		Запрос.УстановитьПараметр("парамВалютаРеглУчета",					ВалютаРегламентированногоУчета);
		Запрос.УстановитьПараметр("парамКурсВалютыУпрУчета",				КурсВалютыУпрУчета);
		Запрос.УстановитьПараметр("парамДатаВалютногоУчета",				НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("парамМассивСпособовРасчетовБезВалюты",	ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
		Запрос.УстановитьПараметр("парамВидСхемыМотивации",					ВидСхемыМотивации);
		
		// Проверим ответственного - является ли он расчетчиком вообще и для заданного 
		// подразделения (если оно задано)
		Если Не Ответственный.Пустая() Тогда
			Если УчетнаяПолитикаПоПерсоналу.РасчетЗарплатыПоОтветственным Тогда
				Если Подразделение.Пустая() Тогда
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	Расчетчики.Подразделение
					|ИЗ
					|	РегистрСведений.РасчетчикиЗарплаты.СрезПоследних(&парамНачало, ) КАК Расчетчики
					|ГДЕ
					|	Расчетчики.Пользователь = &парамПользователь";
					Если Запрос.Выполнить().Пустой() Тогда
						Сообщить("Ответственный за этот документ не является расчетчиком ни одного из подразделений компании");
						Возврат  Ложь;
					КонецЕсли;
				Иначе
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
					|	Подразделения.Ссылка
					|ИЗ
					|	Справочник.Подразделения КАК Подразделения
					|ГДЕ
					|	Подразделения.Ссылка В ИЕРАРХИИ(&парамПодразделение)
					|	И Подразделения.Ссылка В ИЕРАРХИИ
					|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
					|				Расчетчики.Подразделение
					|			ИЗ
					|				РегистрСведений.РасчетчикиЗарплаты.СрезПоследних(&парамНачало) КАК Расчетчики
					|			ГДЕ
					|				Расчетчики.Пользователь = &парамПользователь)";
					Если Запрос.Выполнить().Пустой() Тогда
						Сообщить("Ответственный за этот документ не является расчетчиком для выбранного подразделения");
						Возврат  Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	&парамНачало КАК Период,
		|	Работники.ФизЛицо КАК Физлицо,
		|	ИСТИНА КАК Подходит,
		|	Работники.Подразделение КАК Подразделение,
		|	Работники.ГрафикРаботы КАК ГрафикРаботы,
		|	Работники.Должность КАК Должность
		|ПОМЕСТИТЬ ВТСписокРаботников
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(&парамНачало, ) КАК Работники
		|ГДЕ
		|	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)" + УсловиеНаПодразделения + "
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Работники.Период,
		|	Работники.ФизЛицо,
		|	ВЫБОР
		|		КОГДА Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)" + УсловиеНаПодразделения + "
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ,
		|	Работники.Подразделение,
		|	Работники.ГрафикРаботы,
		|	Работники.Должность
		|ИЗ
		|	РегистрСведений.Работники КАК Работники
		|ГДЕ
		|	Работники.Период > &парамНачало
		|	И Работники.Период <= &парамКонец";
		Запрос.Выполнить();


		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Сотрудники.Сотрудник КАК Сотрудник,
		|	РаботникиОрганизации.Физлицо КАК Физлицо,
		|	РаботникиОрганизации.Период КАК Период,
		|	РаботникиОрганизации.Должность КАК Должность,
		|	РаботникиОрганизации.Подходит,
		|	РаботникиОрганизации.Подразделение,
		|	РаботникиОрганизации.ГрафикРаботы,
		|	ЕСТЬNULL(РаботникиОрганизации.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
		|	РаботникиОрганизации.Физлицо.Наименование КАК ФизлицоНаименование
		|ПОМЕСТИТЬ
		|	ВТДвиженияРаботников
		|ИЗ
		|	(ВЫБРАТЬ
		|		&парамНачало КАК Период,
		|		Работники.ФизЛицо КАК Физлицо,
		|		ИСТИНА КАК Подходит,
		|		Работники.Подразделение КАК Подразделение,
		|		Работники.ГрафикРаботы КАК ГрафикРаботы,
		|		Работники.Должность КАК Должность
		|	ИЗ
		|		РегистрСведений.Работники.СрезПоследних(&парамНачало, ) КАК Работники
		|	ГДЕ
		|		Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)"+УсловиеНаПодразделения+"
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Работники.Период,
		|		Работники.ФизЛицо,
		|		ВЫБОР
		|			КОГДА Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)"+УсловиеНаПодразделения+"
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ,
		|		Работники.Подразделение,
		|		Работники.ГрафикРаботы,
		|		Работники.Должность
		|	ИЗ
		|		РегистрСведений.Работники КАК Работники
		|	ГДЕ
		|		Работники.Период > &парамНачало
		|		И Работники.Период <= &парамКонец) КАК РаботникиОрганизации
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СписокСотрудников.Сотрудник КАК Сотрудник,
		|			СписокСотрудников.Физлицо КАК Физлицо
		|		ИЗ
		|			(ВЫБРАТЬ
		|				МАКСИМУМ(РаботникиОсновноеМесто.Сотрудник) КАК Сотрудник,
		|				РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|				1 КАК Приоритет
		|			ИЗ
		|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамКонец, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|			ГДЕ
		|				РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиОсновноеМесто.Сотрудник.Физлицо
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				МАКСИМУМ(РаботникиСовместительство.Сотрудник),
		|				РаботникиСовместительство.Сотрудник.Физлицо,
		|				2
		|			ИЗ
		|				РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамКонец, Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|			ГДЕ
		|				РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|			
		|			СГРУППИРОВАТЬ ПО
		|				РаботникиСовместительство.Сотрудник.Физлицо
		|			
		|			ОБЪЕДИНИТЬ
		|			
		|			ВЫБРАТЬ
		|				МАКСИМУМ(СотрудникиДУ.Ссылка),
		|				СотрудникиДУ.Физлицо,
		|				ВЫБОР
		|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|						ТОГДА 3
		|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|						ТОГДА 4
		|					ИНАЧЕ 5
		|				КОНЕЦ
		|			ИЗ
		|				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
		|			
		|			СГРУППИРОВАТЬ ПО
		|				СотрудникиДУ.Физлицо,
		|				ВЫБОР
		|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|						ТОГДА 3
		|					КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|						ТОГДА 4
		|					ИНАЧЕ 5
		|				КОНЕЦ) КАК СписокСотрудников
		|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|					СписокФизическихЛиц.Физлицо КАК Физлицо,
		|					МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет
		|				ИЗ
		|					(ВЫБРАТЬ
		|						РаботникиОсновноеМесто.Сотрудник.Физлицо КАК Физлицо,
		|						1 КАК Приоритет
		|					ИЗ
		|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|							&парамКонец,
		|							Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)) КАК РаботникиОсновноеМесто
		|					ГДЕ
		|						РаботникиОсновноеМесто.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						РаботникиСовместительство.Сотрудник.Физлицо,
		|						2
		|					ИЗ
		|						РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|							&парамКонец,
		|							Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								И Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)) КАК РаботникиСовместительство
		|					ГДЕ
		|						РаботникиСовместительство.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|					
		|					ОБЪЕДИНИТЬ
		|					
		|					ВЫБРАТЬ
		|						СотрудникиДУ.Физлицо,
		|						ВЫБОР
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
		|								ТОГДА 3
		|							КОГДА СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
		|								ТОГДА 4
		|							ИНАЧЕ 5
		|						КОНЕЦ
		|					ИЗ
		|						Справочник.СотрудникиОрганизаций КАК СотрудникиДУ) КАК СписокФизическихЛиц
		|				
		|				СГРУППИРОВАТЬ ПО
		|					СписокФизическихЛиц.Физлицо) КАК СписокФизическихЛиц
		|				ПО СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
		|					И СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет) КАК Сотрудники
		|		ПО РаботникиОрганизации.Физлицо = Сотрудники.Физлицо";
		Запрос.Выполнить();
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТДвиженияРаботников";		
		
	Иначе
		// Установим параметры запроса
		ПостроительЗапроса.Параметры.Вставить("парамНачало",							ПериодРегистрации);
		ПостроительЗапроса.Параметры.Вставить("парамКонец",								КонецМесяца(ПериодРегистрации));
		ПостроительЗапроса.Параметры.Вставить("парамПользователь",						Ответственный);
		ПостроительЗапроса.Параметры.Вставить("парамПодразделение",						Подразделение);
		ПостроительЗапроса.Параметры.Вставить("парамРегистратор",						Ссылка);
		ПостроительЗапроса.Параметры.Вставить("парамВалютаРеглУчета",					ВалютаРегламентированногоУчета);
		ПостроительЗапроса.Параметры.Вставить("парамКурсВалютыУпрУчета",				КурсВалютыУпрУчета);
		ПостроительЗапроса.Параметры.Вставить("парамДатаВалютногоУчета",				НачалоМесяца(ПериодРегистрации));
		ПостроительЗапроса.Параметры.Вставить("парамМассивСпособовРасчетовБезВалюты",	ПроведениеРасчетов.ПолучитьСписокСпособовРасчетаНеТребующихУказанияВалюты());
		ПостроительЗапроса.Параметры.Вставить("парамВидСхемыМотивации",					ВидСхемыМотивации);
		
		ИсходныйТекстПостроителя = ПостроительЗапроса.Текст;
		ТекстЗапросаПоСпискуРаботников = СтрЗаменить(ИсходныйТекстПостроителя,"РАЗРЕШЕННЫЕ","");
		ТекстЗапросаПоСпискуРаботников = Лев(ТекстЗапросаПоСпискуРаботников, Найти(ТекстЗапросаПоСпискуРаботников,"УПОРЯДОЧИТЬ") - 1);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СписокРаботников.Сотрудник КАК Сотрудник,
		|	СписокРаботников.Физлицо КАК Физлицо,
		|	РаботникиОрганизации.Период КАК Период,
		|	РаботникиОрганизации.Подходит,
		|	РаботникиОрганизации.Подразделение,
		|	РаботникиОрганизации.ГрафикРаботы,
		|	РаботникиОрганизации.Должность КАК Должность
		|ПОМЕСТИТЬ ВТДвиженияРаботников
		|ИЗ
		|	(" + ТекстЗапросаПоСпискуРаботников + ") КАК СписокРаботников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			&парамНачало КАК Период,
		|			Работники.Физлицо КАК Физлицо,
		|			ИСТИНА КАК Подходит,
		|			Работники.Подразделение КАК Подразделение,
		|			Работники.ГрафикРаботы,
		|			Работники.Должность КАК Должность
		|		ИЗ
		|			РегистрСведений.Работники.СрезПоследних(&парамНачало,) КАК Работники
		|		
		|		ГДЕ 
		|			Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			Работники.Период,
		|			Работники.Физлицо,
		|			ВЫБОР КОГДА Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение) ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ,
		|			Работники.Подразделение,
		|			Работники.ГрафикРаботы,
		|			Работники.Должность
		|		ИЗ
		|			РегистрСведений.Работники КАК Работники
		|		
		|		ГДЕ
		|			Работники.Период > &парамНачало И
		|			Работники.Период <= &парамКонец) КАК РаботникиОрганизации
		|		ПО СписокРаботников.Сотрудник.Физлицо = РаботникиОрганизации.Физлицо
		|		И СписокРаботников.Подразделение = РаботникиОрганизации.Подразделение";
		Запрос.Выполнить();
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТДвиженияРаботников";
				
	КонецЕсли;
	
		Запрос.Текст = 
	"ВЫБРАТЬ
	|	Работники.Сотрудник КАК Сотрудник,
	|	ЗначенияПоказателейСхемМотивации.Подразделение КАК Подразделение,
	|	ЗначенияПоказателейСхемМотивации.Показатель КАК Показатель,
	|	ЗначенияПоказателейСхемМотивации.Валюта,
	|	ЗначенияПоказателейСхемМотивации.Значение
	|ПОМЕСТИТЬ ВТЗначенияПоказателей
	|ИЗ
	|	ВТДвиженияРаботников КАК Работники
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Ежемесячно.Подразделение КАК Подразделение,
	|			Ежемесячно.Показатель КАК Показатель,
	|			Ежемесячно.Валюта КАК Валюта,
	|			Ежемесячно.Значение КАК Значение,
	|			Ежемесячно.Сотрудник КАК Сотрудник
	|		ИЗ
	|			РегистрСведений.ЗначенияПоказателейСхемМотивации КАК Ежемесячно
	|		ГДЕ
	|			Ежемесячно.Значение ЕСТЬ НЕ NULL 
	|			И Ежемесячно.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И Ежемесячно.ПериодДействия >= &парамНачало
	|			И Ежемесячно.ПериодДействия <= &парамКонец
	|		
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			ПериодическиеЗначенияПоказателейСхемМотивацииСрезПоследних.Подразделение,
	|			ПериодическиеЗначенияПоказателейСхемМотивацииСрезПоследних.Показатель,
	|			ПериодическиеЗначенияПоказателейСхемМотивацииСрезПоследних.Валюта,
	|			ПериодическиеЗначенияПоказателейСхемМотивацииСрезПоследних.Значение,
	|			NULL
	|		ИЗ
	|			РегистрСведений.ПериодическиеЗначенияПоказателейСхемМотивации.СрезПоследних(&парамКонец, Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК ПериодическиеЗначенияПоказателейСхемМотивацииСрезПоследних) КАК ЗначенияПоказателейСхемМотивации
	|		ПО (ВЫБОР
	|				КОГДА ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|						ИЛИ ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя ЕСТЬ NULL 
	|					ТОГДА Работники.Сотрудник = ЗначенияПоказателейСхемМотивации.Сотрудник
	|				КОГДА ЗначенияПоказателейСхемМотивации.Показатель.ВидПоказателя = ЗНАЧЕНИЕ(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|					ТОГДА Работники.Подразделение = ЗначенияПоказателейСхемМотивации.Подразделение
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ)
	|";

	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗначенияПоказателей";
		
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПоказателиНачислений.Ссылка КАК Ссылка,
	|	ВЫБОР 
	|		КОГДА ЗначенияПоказателей1.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|			ТОГДА ЗначенияПоказателей1.Сотрудник
	|		КОГДА ЗначенияПоказателей2.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|			ТОГДА ЗначенияПоказателей2.Сотрудник
	|		КОГДА ЗначенияПоказателей3.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|			ТОГДА ЗначенияПоказателей3.Сотрудник
	|		КОГДА ЗначенияПоказателей4.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|			ТОГДА ЗначенияПоказателей4.Сотрудник		
	|		КОГДА ЗначенияПоказателей5.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|			ТОГДА ЗначенияПоказателей5.Сотрудник		
	|		КОГДА ЗначенияПоказателей6.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
	|			ТОГДА ЗначенияПоказателей6.Сотрудник
	|	КОНЕЦ КАК Сотрудник,		
	|	ВЫБОР 
	|		КОГДА ЗначенияПоказателей1.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|			ТОГДА ЗначенияПоказателей1.Подразделение
	|		КОГДА ЗначенияПоказателей2.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|			ТОГДА ЗначенияПоказателей2.Подразделение
	|		КОГДА ЗначенияПоказателей3.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|			ТОГДА ЗначенияПоказателей3.Подразделение
	|		КОГДА ЗначенияПоказателей4.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|			ТОГДА ЗначенияПоказателей4.Подразделение
	|		КОГДА ЗначенияПоказателей5.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|			ТОГДА ЗначенияПоказателей5.Подразделение
	|		КОГДА ЗначенияПоказателей6.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
	|			ТОГДА ЗначенияПоказателей6.Подразделение
	|	КОНЕЦ КАК Подразделение,			
	|	ПоказателиНачислений.Показатель1.ВидПоказателя КАК ВидПоказателя1,
	|	ПоказателиНачислений.Показатель2.ВидПоказателя КАК ВидПоказателя2,
	|	ПоказателиНачислений.Показатель3.ВидПоказателя КАК ВидПоказателя3,
	|	ПоказателиНачислений.Показатель4.ВидПоказателя КАК ВидПоказателя4,
	|	ПоказателиНачислений.Показатель5.ВидПоказателя КАК ВидПоказателя5,
	|	ПоказателиНачислений.Показатель6.ВидПоказателя КАК ВидПоказателя6,		
	|	ПоказателиНачислений.Показатель1.ТипПоказателя КАК ТипПоказателя1,
	|	ПоказателиНачислений.Показатель2.ТипПоказателя КАК ТипПоказателя2,
	|	ПоказателиНачислений.Показатель3.ТипПоказателя КАК ТипПоказателя3,
	|	ПоказателиНачислений.Показатель4.ТипПоказателя КАК ТипПоказателя4,
	|	ПоказателиНачислений.Показатель5.ТипПоказателя КАК ТипПоказателя5,
	|	ПоказателиНачислений.Показатель6.ТипПоказателя КАК ТипПоказателя6,
	|	ЗначенияПоказателей1.Значение КАК Показатель1,
	|	ЗначенияПоказателей2.Значение КАК Показатель2,
	|	ЗначенияПоказателей3.Значение КАК Показатель3,
	|	ЗначенияПоказателей4.Значение КАК Показатель4,
	|	ЗначенияПоказателей5.Значение КАК Показатель5,
	|	ЗначенияПоказателей6.Значение КАК Показатель6,
	|	ВЫБОР 
	|		КОГДА ЗначенияПоказателей1.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей1.Валюта
	|		КОГДА ЗначенияПоказателей2.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей2.Валюта
	|		КОГДА ЗначенияПоказателей3.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей3.Валюта
	|		КОГДА ЗначенияПоказателей4.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей4.Валюта		
	|		КОГДА ЗначенияПоказателей5.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей5.Валюта		
	|		КОГДА ЗначенияПоказателей6.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
	|			ТОГДА ЗначенияПоказателей6.Валюта
	|	КОНЕЦ КАК Валюта		
	|ПОМЕСТИТЬ ВТПоказатели
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Показатели.Ссылка КАК Ссылка,
	|		Показатели1.Показатель КАК Показатель1,
	|		Показатели2.Показатель КАК Показатель2,
	|		Показатели3.Показатель КАК Показатель3,
	|		Показатели4.Показатель КАК Показатель4,
	|		Показатели5.Показатель КАК Показатель5,
	|		Показатели6.Показатель КАК Показатель6
	|	ИЗ
	|		ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели1
	|			ПО Показатели.Ссылка = Показатели1.Ссылка
	|				И (Показатели1.НомерСтроки = 1)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели2
	|			ПО Показатели.Ссылка = Показатели2.Ссылка
	|				И (Показатели2.НомерСтроки = 2)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели3
	|			ПО Показатели.Ссылка = Показатели3.Ссылка
	|				И (Показатели3.НомерСтроки = 3)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели4
	|			ПО Показатели.Ссылка = Показатели4.Ссылка
	|				И (Показатели4.НомерСтроки = 4)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели5
	|			ПО Показатели.Ссылка = Показатели5.Ссылка
	|				И (Показатели5.НомерСтроки = 5)
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели6
	|			ПО Показатели.Ссылка = Показатели6.Ссылка
	|				И (Показатели6.НомерСтроки = 6)) КАК ПоказателиНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей1
	|		ПО ПоказателиНачислений.Показатель1 = ЗначенияПоказателей1.Показатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей2
	|		ПО ПоказателиНачислений.Показатель2 = ЗначенияПоказателей2.Показатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей3
	|		ПО ПоказателиНачислений.Показатель3 = ЗначенияПоказателей3.Показатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей4
	|		ПО ПоказателиНачислений.Показатель4 = ЗначенияПоказателей4.Показатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей5
	|		ПО ПоказателиНачислений.Показатель5 = ЗначенияПоказателей5.Показатель
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей6
	|		ПО ПоказателиНачислений.Показатель6 = ЗначенияПоказателей6.Показатель
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|";
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПоказатели";
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	УправленческиеНачисленияПоказатели.Показатель КАК Показатель,
	|	УправленческиеНачисленияПоказатели.НомерСтроки КАК НомерСтроки,
	|	УправленческиеНачисленияПоказатели.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА УправленческиеНачисленияПоказатели.Показатель.ТарифнаяСтавка
	|			ТОГДА ИСТИНА
	|		КОГДА УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|			ТОГДА ИСТИНА
	|		КОГДА УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|			ТОГДА ИСТИНА
	|		КОГДА УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоТарифнаяСтавка
	|ПОМЕСТИТЬ ВТНеВводимыеПоказатели
	|ИЗ
	|	ПланВидовРасчета.УправленческиеНачисления.Показатели КАК УправленческиеНачисленияПоказатели
	|ГДЕ
	|	((НЕ УправленческиеНачисленияПоказатели.ЗапрашиватьПриКадровыхПеремещениях)
	|			ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
	|			ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
	|			ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
	|			ИЛИ УправленческиеНачисленияПоказатели.Показатель.ТарифнаяСтавка)";
	Запрос.Выполнить();
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТНеВводимыеПоказатели";

		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА (УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		|				ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		|				ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		|				ИЛИ УправленческиеНачисленияПоказатели.Показатель.ТарифнаяСтавка)
		|				И (НЕ УправленческиеНачисленияПоказатели.Ссылка.ЗачетОтработанногоВремени)
		|			ТОГДА НеВводимыеПоказатели.Ссылка
		|		ИНАЧЕ УправленческиеНачисленияПоказатели.Ссылка
		|	КОНЕЦ КАК Ссылка,
		|	УправленческиеНачисленияПоказатели.Показатель КАК Показатель,
		|	ВЫБОР
		|		КОГДА УправленческиеНачисленияПоказатели.Показатель ЕСТЬ NULL 
		|			ТОГДА 1
		|		ИНАЧЕ УправленческиеНачисленияПоказатели.НомерСтроки
		|	КОНЕЦ КАК НомерСтроки
		|ПОМЕСТИТЬ ВТВводимыеПоказатели
		|ИЗ
		|	ПланВидовРасчета.УправленческиеНачисления КАК УправленческиеНачисления
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК УправленческиеНачисленияПоказатели
		|		ПО УправленческиеНачисления.Ссылка = УправленческиеНачисленияПоказатели.Ссылка
		|			И (УправленческиеНачисленияПоказатели.ЗапрашиватьПриКадровыхПеремещениях
		|				ИЛИ (НЕ(УправленческиеНачисленияПоказатели.Ссылка.ЗачетОтработанногоВремени
		|						И УправленческиеНачисленияПоказатели.Показатель В
		|							(ВЫБРАТЬ
		|								ВТНеВводимыеПоказатели.Показатель
		|							ИЗ
		|								ВТНеВводимыеПоказатели)
		|						И (УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		|							ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		|							ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		|							ИЛИ УправленческиеНачисленияПоказатели.Показатель.ТарифнаяСтавка))))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНеВводимыеПоказатели КАК НеВводимыеПоказатели
		|		ПО (НеВводимыеПоказатели.Ссылка.ЗачетОтработанногоВремени)
		|			И (НеВводимыеПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		|				ИЛИ НеВводимыеПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		|				ИЛИ НеВводимыеПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		|				ИЛИ НеВводимыеПоказатели.Показатель.ТарифнаяСтавка)
		|ГДЕ
		|	(УправленческиеНачисленияПоказатели.Показатель ЕСТЬ НЕ NULL 
		|			ИЛИ НеВводимыеПоказатели.Показатель ЕСТЬ НЕ NULL )";
		Запрос.Выполнить();
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТВводимыеПоказатели";

		
		//запросы для заполнения начислений
		Если ПоВременнойСхемеМотивации Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.Период >= НачисленияРаботников.Период
			|			ТОГДА РаботникиОрганизации.Период
			|		ИНАЧЕ НачисленияРаботников.Период
			|	КОНЕЦ КАК Период,
			|	РаботникиОрганизации.Период КАК ПериодРаботники,
			|	НачисленияРаботников.Показатель КАК Показатель,
			|	НачисленияРаботников.Период КАК ПериодНачисления,
			|	НачисленияРаботников.Действие КАК Действие,
			|	НачисленияРаботников.ЗначениеПоказателя КАК ЗначениеПоказателя,
			|	НачисленияРаботников.ПоказательВозможностьИзменения
			|ПОМЕСТИТЬ ВТЗначенияВводимыхКадровыхПоказателей
			|ИЗ
			|	ВТДвиженияРаботников КАК РаботникиОрганизации
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель КАК Показатель,
			|			ВводимыеПоказатели.Показатель.ВозможностьИзменения КАК ПоказательВозможностьИзменения,
			|			&парамНачало КАК Период,
			|			СхемыМотивацииРаботников.Должность КАК Должность,
			|			СхемыМотивацииРаботников.Подразделение КАК Подразделение,
			|			ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА СхемыМотивацииРаботников.Показатель1
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА СхемыМотивацииРаботников.Показатель2
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА СхемыМотивацииРаботников.Показатель3
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА СхемыМотивацииРаботников.Показатель4
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА СхемыМотивацииРаботников.Показатель5
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА СхемыМотивацииРаботников.Показатель6
			|			КОНЕЦ КАК ЗначениеПоказателя
			|		ИЗ
			|			РегистрСведений.СхемыМотивацииРаботников КАК СхемыМотивацииРаботников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО СхемыМотивацииРаботников.ВидРасчета = ВводимыеПоказатели.Ссылка
			|		ГДЕ
			|			СхемыМотивацииРаботников.ВидСхемыМотивации = &парамВидСхемыМотивации
			|			И СхемыМотивацииРаботников.ВидРасчета ССЫЛКА ПланВидовРасчета.УправленческиеНачисления
			|			И (НЕ СхемыМотивацииРаботников.ВидРасчета ЕСТЬ NULL )) КАК НачисленияРаботников
			|		ПО (ВЫБОР
			|				КОГДА НачисленияРаботников.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
			|						И НачисленияРаботников.Подразделение <> НЕОПРЕДЕЛЕНО
			|					ТОГДА РаботникиОрганизации.Должность = НачисленияРаботников.Должность
			|							И РаботникиОрганизации.Подразделение = НачисленияРаботников.Подразделение
			|				ИНАЧЕ ВЫБОР
			|						КОГДА НачисленияРаботников.Подразделение = НЕОПРЕДЕЛЕНО
			|							ТОГДА РаботникиОрганизации.Должность = НачисленияРаботников.Должность
			|						ИНАЧЕ РаботникиОрганизации.Подразделение = НачисленияРаботников.Подразделение
			|					КОНЕЦ
			|			КОНЕЦ)
			|ГДЕ
			|	НачисленияРаботников.Показатель ЕСТЬ НЕ NULL 
			|	И НачисленияРаботников.ЗначениеПоказателя <> 0";
			Запрос.Выполнить();
			
			ОсновнойТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СписокНачислений.Сотрудник КАК Сотрудник,
			|	СписокНачислений.Физлицо КАК Физлицо,
			|	СписокНачислений.Период КАК Период,
			|	СписокНачислений.ПериодРаботники КАК ПериодРаботники,
			|	СписокНачислений.ПериодНачисления КАК ПериодНачисления,
			|	СписокНачислений.ВидРасчета КАК ВидРасчета,
			|	СписокНачислений.Действие КАК Действие,
			|	СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени КАК ОсновноеНачисление,
			|	СписокНачислений.Валюта1.Наименование КАК Валюта1,
			|	СписокНачислений.Валюта2.Наименование КАК Валюта2,
			|	СписокНачислений.Валюта3.Наименование КАК Валюта3,
			|	СписокНачислений.Валюта4.Наименование КАК Валюта4,
			|	СписокНачислений.Валюта5.Наименование КАК Валюта5,
			|	СписокНачислений.Валюта6.Наименование КАК Валюта6,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта1 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта1 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты1.Курс
			|	КОНЕЦ КАК КурсВалюты1,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта2 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта2 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты2.Курс
			|	КОНЕЦ КАК КурсВалюты2,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта3 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта3 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты3.Курс
			|	КОНЕЦ КАК КурсВалюты3,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта4 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта4 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты4.Курс
			|	КОНЕЦ КАК КурсВалюты4,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта5 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта5 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты5.Курс
			|	КОНЕЦ КАК КурсВалюты5,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта6 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта6 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты6.Курс
			|	КОНЕЦ КАК КурсВалюты6,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель1 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель1
			|		КОГДА СписокНачислений.Показатель1 ЕСТЬ NULL 
			|				ИЛИ СписокНачислений.Показатель1 = 0
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 1
			|				ИЛИ (СписокНачислений.Показатель1 = 0
			|					ИЛИ СписокНачислений.Показатель1 ЕСТЬ NULL )
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 1
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя1 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды1.Размер
			|				КОГДА Показатели.ТипПоказателя1 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель1
			|				ИНАЧЕ СписокНачислений.Показатель1 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта1 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель1,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель2 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель2
			|		КОГДА СписокНачислений.Показатель2 ЕСТЬ NULL 
			|				ИЛИ СписокНачислений.Показатель2 = 0
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 2
			|				ИЛИ СписокНачислений.Показатель2 = 0
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 2
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя2 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды2.Размер
			|				КОГДА Показатели.ТипПоказателя2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель2
			|				ИНАЧЕ СписокНачислений.Показатель2 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта2 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты2.Курс / Валюты2.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель2,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель3 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель3
			|		КОГДА СписокНачислений.Показатель3 ЕСТЬ NULL 
			|				ИЛИ СписокНачислений.Показатель3 = 0
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 3
			|				ИЛИ СписокНачислений.Показатель3 = 0
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 3
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя3 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды3.Размер
			|				КОГДА Показатели.ТипПоказателя3 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель3
			|				ИНАЧЕ СписокНачислений.Показатель3 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта3 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты3.Курс / Валюты3.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель3,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель4 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель4
			|		КОГДА СписокНачислений.Показатель4 ЕСТЬ NULL 
			|				ИЛИ СписокНачислений.Показатель4 = 0
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 4
			|				ИЛИ СписокНачислений.Показатель4 = 0
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 4
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя4 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды4.Размер
			|				КОГДА Показатели.ТипПоказателя4 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель4
			|				ИНАЧЕ СписокНачислений.Показатель4 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта4 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты4.Курс / Валюты4.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель4,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель5 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель5
			|		КОГДА СписокНачислений.Показатель5 ЕСТЬ NULL 
			|				ИЛИ СписокНачислений.Показатель5 = 0
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 5
			|				ИЛИ СписокНачислений.Показатель5 = 0
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 5
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя5 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды5.Размер
			|				КОГДА Показатели.ТипПоказателя5 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель5
			|				ИНАЧЕ СписокНачислений.Показатель5 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта5 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты5.Курс / Валюты5.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель5,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель6 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель6
			|		КОГДА СписокНачислений.Показатель6 ЕСТЬ NULL 
			|				ИЛИ СписокНачислений.Показатель6 = 0
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 6
			|				ИЛИ СписокНачислений.Показатель6 = 0
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 6
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя6 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды6.Размер
			|				КОГДА Показатели.ТипПоказателя6 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель6
			|				ИНАЧЕ СписокНачислений.Показатель6 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта6 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты6.Курс / Валюты6.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель6,
			|	СписокНачислений.Подходит,
			|	СписокНачислений.Подразделение,
			|	ВЫБОР
			|		КОГДА ОсновныеНачисления.Физлицо ЕСТЬ НЕ NULL 
			|				И ОсновныеНачисления.ВидСхемыМотивации = &парамВидСхемыМотивации
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК УжеПроведен,
			|	СписокНачислений.ГрафикРаботы,
			|	СписокНачислений.ВидРасчета.СпособРасчета КАК СпособРасчета,
			|	ЕСТЬNULL(СписокНачислений.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
			|	СписокНачислений.СотрудникНаименование КАК СотрудникНаименование
			|ИЗ
			|	(ВЫБРАТЬ
			|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|		РаботникиОрганизации.Сотрудник.Наименование КАК СотрудникНаименование,
			|		РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|		ВЫБОР
			|			КОГДА РаботникиОрганизации.Период >= НачисленияРаботников.Период
			|				ТОГДА РаботникиОрганизации.Период
			|			ИНАЧЕ НачисленияРаботников.Период
			|		КОНЕЦ КАК Период,
			|		РаботникиОрганизации.Период КАК ПериодРаботники,
			|		НачисленияРаботников.Период КАК ПериодНачисления,
			|		НачисленияРаботников.ВидРасчета КАК ВидРасчета,
			|		НачисленияРаботников.Действие КАК Действие,
			|		НачисленияРаботников.Показатель1 КАК Показатель1,
			|		НачисленияРаботников.Показатель2 КАК Показатель2,
			|		НачисленияРаботников.Показатель3 КАК Показатель3,
			|		НачисленияРаботников.Показатель4 КАК Показатель4,
			|		НачисленияРаботников.Показатель5 КАК Показатель5,
			|		НачисленияРаботников.Показатель6 КАК Показатель6,
			|		НачисленияРаботников.ТарифныйРазряд1 КАК ТарифныйРазряд1,
			|		НачисленияРаботников.ТарифныйРазряд2 КАК ТарифныйРазряд2,
			|		НачисленияРаботников.ТарифныйРазряд3 КАК ТарифныйРазряд3,
			|		НачисленияРаботников.ТарифныйРазряд4 КАК ТарифныйРазряд4,
			|		НачисленияРаботников.ТарифныйРазряд5 КАК ТарифныйРазряд5,
			|		НачисленияРаботников.ТарифныйРазряд6 КАК ТарифныйРазряд6,
			|		НачисленияРаботников.Валюта1 КАК Валюта1,
			|		НачисленияРаботников.Валюта2 КАК Валюта2,
			|		НачисленияРаботников.Валюта3 КАК Валюта3,
			|		НачисленияРаботников.Валюта4 КАК Валюта4,
			|		НачисленияРаботников.Валюта5 КАК Валюта5,
			|		НачисленияРаботников.Валюта6 КАК Валюта6,
			|		РаботникиОрганизации.Подходит КАК Подходит,
			|		РаботникиОрганизации.Подразделение КАК Подразделение,
			|		РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|		РаботникиОрганизации.ГрафикРаботы.СуммированныйУчетРабочегоВремени КАК СуммированныйУчетРабочегоВремени,
			|		РаботникиОрганизации.Должность КАК Должность
			|	ИЗ
			|		ВТДвиженияРаботников КАК РаботникиОрганизации
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				&парамНачало КАК Период,
			|				СхемыМотивацииРаботников.ВидРасчета КАК ВидРасчета,
			|				ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие,
			|				СхемыМотивацииРаботников.Показатель1 КАК Показатель1,
			|				СхемыМотивацииРаботников.Показатель2 КАК Показатель2,
			|				СхемыМотивацииРаботников.Показатель3 КАК Показатель3,
			|				СхемыМотивацииРаботников.Показатель4 КАК Показатель4,
			|				СхемыМотивацииРаботников.Показатель5 КАК Показатель5,
			|				СхемыМотивацииРаботников.Показатель6 КАК Показатель6,
			|				СхемыМотивацииРаботников.ТарифныйРазряд1 КАК ТарифныйРазряд1,
			|				СхемыМотивацииРаботников.ТарифныйРазряд2 КАК ТарифныйРазряд2,
			|				СхемыМотивацииРаботников.ТарифныйРазряд3 КАК ТарифныйРазряд3,
			|				СхемыМотивацииРаботников.ТарифныйРазряд4 КАК ТарифныйРазряд4,
			|				СхемыМотивацииРаботников.ТарифныйРазряд5 КАК ТарифныйРазряд5,
			|				СхемыМотивацииРаботников.ТарифныйРазряд6 КАК ТарифныйРазряд6,
			|				СхемыМотивацииРаботников.Валюта1 КАК Валюта1,
			|				СхемыМотивацииРаботников.Валюта2 КАК Валюта2,
			|				СхемыМотивацииРаботников.Валюта3 КАК Валюта3,
			|				СхемыМотивацииРаботников.Валюта4 КАК Валюта4,
			|				СхемыМотивацииРаботников.Валюта5 КАК Валюта5,
			|				СхемыМотивацииРаботников.Валюта6 КАК Валюта6,
			|				СхемыМотивацииРаботников.Подразделение КАК Подразделение,
			|				СхемыМотивацииРаботников.Должность КАК Должность
			|			ИЗ
			|				РегистрСведений.СхемыМотивацииРаботников КАК СхемыМотивацииРаботников
			|			ГДЕ
			|				СхемыМотивацииРаботников.ВидСхемыМотивации = &парамВидСхемыМотивации
			|				И СхемыМотивацииРаботников.ВидРасчета ССЫЛКА ПланВидовРасчета.УправленческиеНачисления
			|				И (НЕ СхемыМотивацииРаботников.ВидРасчета ЕСТЬ NULL )) КАК НачисленияРаботников
			|			ПО (ВЫБОР
			|					КОГДА НачисленияРаботников.Должность <> ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
			|							И НачисленияРаботников.Подразделение <> НЕОПРЕДЕЛЕНО
			|						ТОГДА РаботникиОрганизации.Должность = НачисленияРаботников.Должность
			|								И РаботникиОрганизации.Подразделение = НачисленияРаботников.Подразделение
			|					ИНАЧЕ ВЫБОР
			|							КОГДА НачисленияРаботников.Подразделение = НЕОПРЕДЕЛЕНО
			|								ТОГДА РаботникиОрганизации.Должность = НачисленияРаботников.Должность
			|							ИНАЧЕ РаботникиОрганизации.Подразделение = НачисленияРаботников.Подразделение
			|						КОНЕЦ
			|				КОНЕЦ)) КАК СписокНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
			|		ПО СписокНачислений.ВидРасчета = Показатели.Ссылка
			|			И (СписокНачислений.Сотрудник = Показатели.Сотрудник
			|				ИЛИ СписокНачислений.Подразделение = Показатели.Подразделение
			|				ИЛИ Показатели.ВидПоказателя1 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя2 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя3 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя4 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя5 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя6 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)			
			|				)
			
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			НеВводимыеПоказатели.Ссылка КАК Ссылка,
			|			НеВводимыеПоказатели.НомерСтроки КАК НомерСтроки,
			|			НеВводимыеПоказатели.Показатель КАК Показатель,
			|			НеВводимыеПоказатели.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
			|			СУММА(ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя) КАК ЗначениеПоказателя,
			|			ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
			|			ЗначенияВводимыхКадровыхПоказателей.Сотрудник КАК Сотрудник,
			|			ЗначенияВводимыхКадровыхПоказателей.Период КАК Период,
			|			ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники КАК ПериодРаботники
			|		ИЗ
			|			ВТНеВводимыеПоказатели КАК НеВводимыеПоказатели
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияВводимыхКадровыхПоказателей КАК ЗначенияВводимыхКадровыхПоказателей
			|				ПО НеВводимыеПоказатели.Показатель = ЗначенияВводимыхКадровыхПоказателей.Показатель
			|		ГДЕ
			|			ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя <> 0
			|		
			|		СГРУППИРОВАТЬ ПО
			|			НеВводимыеПоказатели.Ссылка,
			|			НеВводимыеПоказатели.НомерСтроки,
			|			НеВводимыеПоказатели.Показатель,
			|			НеВводимыеПоказатели.ЭтоТарифнаяСтавка,
			|			ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения,
			|			ЗначенияВводимыхКадровыхПоказателей.Сотрудник,
			|			ЗначенияВводимыхКадровыхПоказателей.Период,
			|			ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники) КАК ЗначенияВводимыхКадровыхПоказателей
			|		ПО СписокНачислений.Сотрудник = ЗначенияВводимыхКадровыхПоказателей.Сотрудник
			|			И СписокНачислений.Период = ЗначенияВводимыхКадровыхПоказателей.Период
			|			И СписокНачислений.ПериодРаботники = ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники
			|			И СписокНачислений.ВидРасчета = ЗначенияВводимыхКадровыхПоказателей.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды1
			|		ПО СписокНачислений.ТарифныйРазряд1 = ТарифныеРазряды1.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды2
			|		ПО СписокНачислений.ТарифныйРазряд2 = ТарифныеРазряды2.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды3
			|		ПО СписокНачислений.ТарифныйРазряд3 = ТарифныеРазряды3.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды4
			|		ПО СписокНачислений.ТарифныйРазряд4 = ТарифныеРазряды4.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды5
			|		ПО СписокНачислений.ТарифныйРазряд5 = ТарифныеРазряды5.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды6
			|		ПО СписокНачислений.ТарифныйРазряд6 = ТарифныеРазряды6.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты1
			|		ПО (Валюты1.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта1 = Валюты1.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты2
			|		ПО (Валюты2.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта2 = Валюты2.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты3
			|		ПО (Валюты3.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта3 = Валюты3.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты4
			|		ПО (Валюты4.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта4 = Валюты4.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты5
			|		ПО (Валюты5.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта5 = Валюты5.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты6
			|		ПО (Валюты6.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта6 = Валюты6.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ОсновныеНачисления.ФизЛицо КАК Физлицо,
			|			ОсновныеНачисления.ВидСхемыМотивации КАК ВидСхемыМотивации,
			|			ОсновныеНачисления.Подразделение КАК Подразделение
			|		ИЗ
			|			РегистрРасчета.УправленческиеНачисления КАК ОсновныеНачисления
			|		ГДЕ
			|			ОсновныеНачисления.ПериодРегистрации = &парамНачало
			|			И ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
			|			И ОсновныеНачисления.Регистратор <> &парамРегистратор) КАК ОсновныеНачисления
			|		ПО СписокНачислений.Физлицо = ОсновныеНачисления.Физлицо
			|			И СписокНачислений.Подразделение = ОсновныеНачисления.Подразделение
			|ГДЕ
			|	СписокНачислений.ВидРасчета ЕСТЬ НЕ NULL 
			|	И СписокНачислений.ВидРасчета <> ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	СотрудникНаименование,
			|	Сотрудник,
			|	ПериодРаботники,
			|	ПериодНачисления,
			|	ОсновноеНачисление УБЫВ,
			|	ВидРасчета";
			
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|	РаботникиОрганизации.Период КАК ПериодРаботники,
			|	ВЫБОР
			|		КОГДА РаботникиОрганизации.Период >= НачисленияРаботников.Период
			|			ТОГДА РаботникиОрганизации.Период
			|		ИНАЧЕ НачисленияРаботников.Период
			|	КОНЕЦ КАК Период,
			|	НачисленияРаботников.Показатель КАК Показатель,
			|	НачисленияРаботников.ПоказательВозможностьИзменения,
			|	НачисленияРаботников.Период КАК ПериодНачисления,
			|	НачисленияРаботников.Действие КАК Действие,
			|	НачисленияРаботников.ЗначениеПоказателя КАК ЗначениеПоказателя
			|ПОМЕСТИТЬ ВТЗначенияВводимыхКадровыхПоказателей
			|ИЗ
			|	ВТДвиженияРаботников КАК РаботникиОрганизации
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель КАК Показатель,
			|			ВводимыеПоказатели.Показатель.ВозможностьИзменения КАК ПоказательВозможностьИзменения,
			|			&парамНачало КАК Период,
			|			ВЫБОР
			|				КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|						И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА НачисленияРаботников.ДействиеЗавершения
			|				ИНАЧЕ НачисленияРаботников.Действие
			|			КОНЕЦ КАК Действие,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА ВЫБОР
			|							КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА НачисленияРаботников.Показатель1Завершения
			|							ИНАЧЕ НачисленияРаботников.Показатель1
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА ВЫБОР
			|							КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА НачисленияРаботников.Показатель2Завершения
			|							ИНАЧЕ НачисленияРаботников.Показатель2
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА ВЫБОР
			|							КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА НачисленияРаботников.Показатель3Завершения
			|							ИНАЧЕ НачисленияРаботников.Показатель3
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА ВЫБОР
			|							КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА НачисленияРаботников.Показатель4Завершения
			|							ИНАЧЕ НачисленияРаботников.Показатель4
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА ВЫБОР
			|							КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА НачисленияРаботников.Показатель5Завершения
			|							ИНАЧЕ НачисленияРаботников.Показатель5
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА ВЫБОР
			|							КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА НачисленияРаботников.Показатель6Завершения
			|							ИНАЧЕ НачисленияРаботников.Показатель6
			|						КОНЕЦ
			|			КОНЕЦ КАК ЗначениеПоказателя,
			|			НачисленияРаботников.ФизЛицо КАК Физлицо
			|		ИЗ
			|			РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(
			|					&парамНачало,
			|					Физлицо В
			|						(ВЫБРАТЬ
			|							СписокРаботников.Физлицо
			|						ИЗ
			|							ВТСписокРаботников КАК СписокРаботников)) КАК НачисленияРаботников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО НачисленияРаботников.ВидРасчета = ВводимыеПоказатели.Ссылка
			|		ГДЕ
			|			НачисленияРаботников.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель,
			|			ВводимыеПоказатели.Показатель.ВозможностьИзменения,
			|			НачисленияРаботников.Период,
			|			НачисленияРаботников.Действие,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА НачисленияРаботников.Показатель1
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА НачисленияРаботников.Показатель2
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА НачисленияРаботников.Показатель3
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА НачисленияРаботников.Показатель4
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА НачисленияРаботников.Показатель5
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА НачисленияРаботников.Показатель6
			|			КОНЕЦ,
			|			НачисленияРаботников.ФизЛицо
			|		ИЗ
			|			РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО (ВводимыеПоказатели.Ссылка = НачисленияРаботников.ВидРасчета)
			|		ГДЕ
			|			НачисленияРаботников.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И НачисленияРаботников.ВидРасчета В
			|					(ВЫБРАТЬ
			|						ВводимыеПоказатели.ССылка
			|					ИЗ
			|						ВТВводимыеПоказатели КАК ВводимыеПоказатели)
			|			И НачисленияРаботников.Период > &парамНачало
			|			И НачисленияРаботников.Период <= &парамКонец
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель,
			|			ВводимыеПоказатели.Показатель.ВозможностьИзменения,
			|			НачисленияРаботников.ПериодЗавершения,
			|			НачисленияРаботников.ДействиеЗавершения,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА НачисленияРаботников.Показатель1
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА НачисленияРаботников.Показатель2
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА НачисленияРаботников.Показатель3
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА НачисленияРаботников.Показатель4
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА НачисленияРаботников.Показатель5
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА НачисленияРаботников.Показатель6
			|			КОНЕЦ,
			|			НачисленияРаботников.ФизЛицо
			|		ИЗ
			|			РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботниковПроверка
			|				ПО НачисленияРаботников.ФизЛицо = НачисленияРаботниковПроверка.ФизЛицо
			|					И НачисленияРаботников.ВидРасчетаИзмерение = НачисленияРаботниковПроверка.ВидРасчетаИзмерение
			|					И (НачисленияРаботниковПроверка.Период > НачисленияРаботников.Период)
			|					И (НачисленияРаботниковПроверка.Период <= НачисленияРаботников.ПериодЗавершения)
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО НачисленияРаботников.ВидРасчета = ВводимыеПоказатели.Ссылка
			|		ГДЕ
			|			НачисленияРаботников.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И НачисленияРаботников.ВидРасчета В
			|					(ВЫБРАТЬ
			|						ВводимыеПоказатели.ССылка
			|					ИЗ
			|						ВТВводимыеПоказатели КАК ВводимыеПоказатели)
			|			И НачисленияРаботников.ПериодЗавершения >= &парамНачало
			|			И НачисленияРаботников.ПериодЗавершения <= &парамКонец
			|			И НачисленияРаботниковПроверка.ФизЛицо ЕСТЬ NULL ) КАК НачисленияРаботников
			|		ПО РаботникиОрганизации.Физлицо = НачисленияРаботников.Физлицо
			|ГДЕ
			|	НачисленияРаботников.Показатель ЕСТЬ НЕ NULL 
			|	И НачисленияРаботников.ЗначениеПоказателя <> 0";
			Запрос.Выполнить();
			ОсновнойТекстЗапроса =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	СписокНачислений.Сотрудник КАК Сотрудник,
			|	СписокНачислений.Физлицо КАК Физлицо,
			|	СписокНачислений.Период КАК Период,
			|	СписокНачислений.ПериодРаботники КАК ПериодРаботники,
			|	СписокНачислений.ПериодНачисления КАК ПериодНачисления,
			|	СписокНачислений.ВидРасчета КАК ВидРасчета,
			|	СписокНачислений.Действие КАК Действие,
			|	СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени КАК ОсновноеНачисление,
			|	СписокНачислений.Валюта1.Наименование КАК Валюта1,
			|	СписокНачислений.Валюта2.Наименование КАК Валюта2,
			|	СписокНачислений.Валюта3.Наименование КАК Валюта3,
			|	СписокНачислений.Валюта4.Наименование КАК Валюта4,
			|	СписокНачислений.Валюта5.Наименование КАК Валюта5,
			|	СписокНачислений.Валюта6.Наименование КАК Валюта6,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта1 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта1 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты1.Курс
			|	КОНЕЦ КАК КурсВалюты1,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта2 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта2 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты2.Курс
			|	КОНЕЦ КАК КурсВалюты2,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта3 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта3 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты3.Курс
			|	КОНЕЦ КАК КурсВалюты3,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта4 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта4 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты4.Курс
			|	КОНЕЦ КАК КурсВалюты4,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта5 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта5 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты5.Курс
			|	КОНЕЦ КАК КурсВалюты5,
			|	ВЫБОР
			|		КОГДА СписокНачислений.Валюта6 = &парамВалютаРеглУчета
			|				ИЛИ СписокНачислений.Валюта6 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты6.Курс
			|	КОНЕЦ КАК КурсВалюты6,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель1 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель1
			|		КОГДА (СписокНачислений.Показатель1 = 0
			|					ИЛИ СписокНачислений.Показатель1 ЕСТЬ NULL )
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 1
			|				ИЛИ (СписокНачислений.Показатель1 = 0
			|					ИЛИ СписокНачислений.Показатель1 ЕСТЬ NULL )
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя1 ЕСТЬ NULL 
			|						ИЛИ Показатели.ТипПоказателя1 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель1
			|				КОГДА Показатели.ТипПоказателя1 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды1.Размер
			|				ИНАЧЕ СписокНачислений.Показатель1 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта1 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель1,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель2 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель2
			|		КОГДА (СписокНачислений.Показатель2 = 0
			|					ИЛИ СписокНачислений.Показатель2 ЕСТЬ NULL )
			|					И ЗначенияВводимыхКадровыхПоказателей.Показатель <> ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ПустаяСсылка)
			|					И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 2
			|				ИЛИ СписокНачислений.Показатель2 = 0
			|					И (ЗначенияВводимыхКадровыхПоказателей.ЭтоТарифнаяСтавка
			|						И (НЕ СписокНачислений.ВидРасчета.ЗачетОтработанногоВремени))
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя2 ЕСТЬ NULL 
			|						ИЛИ Показатели.ТипПоказателя2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель2
			|				КОГДА Показатели.ТипПоказателя2 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды2.Размер
			|				ИНАЧЕ СписокНачислений.Показатель2 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта2 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты2.Курс / Валюты2.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель2,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель3 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель3
			|		КОГДА (СписокНачислений.Показатель3 = 0
			|				ИЛИ СписокНачислений.Показатель3 ЕСТЬ NULL )
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 3
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя3 ЕСТЬ NULL 
			|						ИЛИ Показатели.ТипПоказателя3 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель3
			|				КОГДА Показатели.ТипПоказателя3 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды3.Размер
			|				ИНАЧЕ СписокНачислений.Показатель3 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта3 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты3.Курс / Валюты3.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель3,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель4 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель4
			|		КОГДА (СписокНачислений.Показатель4 = 0
			|				ИЛИ СписокНачислений.Показатель4 ЕСТЬ NULL )
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 4
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя4 ЕСТЬ NULL 
			|						ИЛИ Показатели.ТипПоказателя4 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель4
			|				КОГДА Показатели.ТипПоказателя4 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды4.Размер
			|				ИНАЧЕ СписокНачислений.Показатель4 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта4 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты4.Курс / Валюты4.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель4,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель5 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель5
			|		КОГДА (СписокНачислений.Показатель5 = 0
			|				ИЛИ СписокНачислений.Показатель5 ЕСТЬ NULL )
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 5
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя5 ЕСТЬ NULL 
			|						ИЛИ Показатели.ТипПоказателя2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель5
			|				КОГДА Показатели.ТипПоказателя5 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды5.Размер
			|				ИНАЧЕ СписокНачислений.Показатель5 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта5 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты5.Курс / Валюты5.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель5,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
			|					И Показатели.Показатель6 <> 0
			|				ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = ЗНАЧЕНИЕ(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель6
			|		КОГДА (СписокНачислений.Показатель6 = 0
			|				ИЛИ СписокНачислений.Показатель6 ЕСТЬ NULL )
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 6
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя6 ЕСТЬ NULL 
			|						ИЛИ Показатели.ТипПоказателя2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА СписокНачислений.Показатель6
			|				КОГДА Показатели.ТипПоказателя6 = ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.ТарифныйРазряд)
			|					ТОГДА ТарифныеРазряды6.Размер
			|				ИНАЧЕ СписокНачислений.Показатель6 * ВЫБОР
			|						КОГДА СписокНачислений.Валюта6 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты6.Курс / Валюты6.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель6,
			|	СписокНачислений.Подходит,
			|	СписокНачислений.Подразделение,
			|	ВЫБОР
			|		КОГДА ОсновныеНачисления.Физлицо ЕСТЬ НЕ NULL 
			|				И ОсновныеНачисления.ВидСхемыМотивации = &парамВидСхемыМотивации
			|			ТОГДА ИСТИНА
			|		ИНАЧЕ ЛОЖЬ
			|	КОНЕЦ КАК УжеПроведен,
			|	СписокНачислений.ГрафикРаботы,
			|	СписокНачислений.ВидРасчета.СпособРасчета КАК СпособРасчета,
			|	ЕСТЬNULL(СписокНачислений.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
			|	СписокНачислений.СотрудникНаименование КАК СотрудникНаименование
			|ИЗ
			|	(ВЫБРАТЬ
			|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
			|		РаботникиОрганизации.Сотрудник.Наименование КАК СотрудникНаименование,
			|		РаботникиОрганизации.Сотрудник.Физлицо КАК Физлицо,
			|		ВЫБОР
			|			КОГДА РаботникиОрганизации.Период >= НачисленияРаботников.Период
			|				ТОГДА РаботникиОрганизации.Период
			|			ИНАЧЕ НачисленияРаботников.Период
			|		КОНЕЦ КАК Период,
			|		РаботникиОрганизации.Период КАК ПериодРаботники,
			|		НачисленияРаботников.Период КАК ПериодНачисления,
			|		НачисленияРаботников.ВидРасчета КАК ВидРасчета,
			|		НачисленияРаботников.Действие КАК Действие,
			|		НачисленияРаботников.Показатель1 КАК Показатель1,
			|		НачисленияРаботников.Показатель2 КАК Показатель2,
			|		НачисленияРаботников.Показатель3 КАК Показатель3,
			|		НачисленияРаботников.Показатель4 КАК Показатель4,
			|		НачисленияРаботников.Показатель5 КАК Показатель5,
			|		НачисленияРаботников.Показатель6 КАК Показатель6,
			|		НачисленияРаботников.ТарифныйРазряд1 КАК ТарифныйРазряд1,
			|		НачисленияРаботников.ТарифныйРазряд2 КАК ТарифныйРазряд2,
			|		НачисленияРаботников.ТарифныйРазряд3 КАК ТарифныйРазряд3,
			|		НачисленияРаботников.ТарифныйРазряд4 КАК ТарифныйРазряд4,
			|		НачисленияРаботников.ТарифныйРазряд5 КАК ТарифныйРазряд5,
			|		НачисленияРаботников.ТарифныйРазряд6 КАК ТарифныйРазряд6,
			|		НачисленияРаботников.Валюта1 КАК Валюта1,
			|		НачисленияРаботников.Валюта2 КАК Валюта2,
			|		НачисленияРаботников.Валюта3 КАК Валюта3,
			|		НачисленияРаботников.Валюта4 КАК Валюта4,
			|		НачисленияРаботников.Валюта5 КАК Валюта5,
			|		НачисленияРаботников.Валюта6 КАК Валюта6,
			|		РаботникиОрганизации.Подходит КАК Подходит,
			|		РаботникиОрганизации.Подразделение КАК Подразделение,
			|		РаботникиОрганизации.ГрафикРаботы КАК ГрафикРаботы,
			|		РаботникиОрганизации.ГрафикРаботы.СуммированныйУчетРабочегоВремени КАК СуммированныйУчетРабочегоВремени,
			|		РаботникиОрганизации.Должность КАК Должность
			|	ИЗ
			|		ВТДвиженияРаботников КАК РаботникиОрганизации
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|				&парамНачало КАК Период,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ВидРасчетаЗавершения
			|					ИНАЧЕ НачисленияРаботников.ВидРасчета
			|				КОНЕЦ КАК ВидРасчета,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ДействиеЗавершения
			|					ИНАЧЕ НачисленияРаботников.Действие
			|				КОНЕЦ КАК Действие,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Показатель1Завершения
			|					ИНАЧЕ НачисленияРаботников.Показатель1
			|				КОНЕЦ КАК Показатель1,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Показатель2Завершения
			|					ИНАЧЕ НачисленияРаботников.Показатель2
			|				КОНЕЦ КАК Показатель2,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Показатель3Завершения
			|					ИНАЧЕ НачисленияРаботников.Показатель3
			|				КОНЕЦ КАК Показатель3,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Показатель4Завершения
			|					ИНАЧЕ НачисленияРаботников.Показатель4
			|				КОНЕЦ КАК Показатель4,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Показатель5Завершения
			|					ИНАЧЕ НачисленияРаботников.Показатель5
			|				КОНЕЦ КАК Показатель5,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Показатель6Завершения
			|					ИНАЧЕ НачисленияРаботников.Показатель6
			|				КОНЕЦ КАК Показатель6,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ТарифныйРазряд1Завершения
			|					ИНАЧЕ НачисленияРаботников.ТарифныйРазряд1
			|				КОНЕЦ КАК ТарифныйРазряд1,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ТарифныйРазряд2Завершения
			|					ИНАЧЕ НачисленияРаботников.ТарифныйРазряд2
			|				КОНЕЦ КАК ТарифныйРазряд2,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ТарифныйРазряд3Завершения
			|					ИНАЧЕ НачисленияРаботников.ТарифныйРазряд3
			|				КОНЕЦ КАК ТарифныйРазряд3,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ТарифныйРазряд4Завершения
			|					ИНАЧЕ НачисленияРаботников.ТарифныйРазряд4
			|				КОНЕЦ КАК ТарифныйРазряд4,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ТарифныйРазряд5Завершения
			|					ИНАЧЕ НачисленияРаботников.ТарифныйРазряд5
			|				КОНЕЦ КАК ТарифныйРазряд5,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.ТарифныйРазряд6Завершения
			|					ИНАЧЕ НачисленияРаботников.ТарифныйРазряд6
			|				КОНЕЦ КАК ТарифныйРазряд6,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Валюта1Завершения
			|					ИНАЧЕ НачисленияРаботников.Валюта1
			|				КОНЕЦ КАК Валюта1,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Валюта2Завершения
			|					ИНАЧЕ НачисленияРаботников.Валюта2
			|				КОНЕЦ КАК Валюта2,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Валюта3Завершения
			|					ИНАЧЕ НачисленияРаботников.Валюта3
			|				КОНЕЦ КАК Валюта3,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Валюта4Завершения
			|					ИНАЧЕ НачисленияРаботников.Валюта4
			|				КОНЕЦ КАК Валюта4,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Валюта5Завершения
			|					ИНАЧЕ НачисленияРаботников.Валюта5
			|				КОНЕЦ КАК Валюта5,
			|				ВЫБОР
			|					КОГДА НачисленияРаботников.ПериодЗавершения <= &парамНачало
			|							И НачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|						ТОГДА НачисленияРаботников.Валюта6Завершения
			|					ИНАЧЕ НачисленияРаботников.Валюта6
			|				КОНЕЦ КАК Валюта6,
			|				НачисленияРаботников.ФизЛицо КАК Физлицо
			|			ИЗ
			|				РегистрСведений.ПлановыеНачисленияРаботников.СрезПоследних(
			|						&парамНачало,
			|						Физлицо В
			|							(ВЫБРАТЬ
			|								СписокРаботников.Физлицо
			|							ИЗ
			|								ВТСписокРаботников КАК СписокРаботников)) КАК НачисленияРаботников
			|			ГДЕ
			|				НачисленияРаботников.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
			|			
			|			ОБЪЕДИНИТЬ ВСЕ
			|			
			|			ВЫБРАТЬ
			|				НачисленияРаботников.Период,
			|				НачисленияРаботников.ВидРасчета,
			|				НачисленияРаботников.Действие,
			|				НачисленияРаботников.Показатель1,
			|				НачисленияРаботников.Показатель2,
			|				НачисленияРаботников.Показатель3,
			|				НачисленияРаботников.Показатель4,
			|				НачисленияРаботников.Показатель5,
			|				НачисленияРаботников.Показатель6,
			|				НачисленияРаботников.ТарифныйРазряд1,
			|				НачисленияРаботников.ТарифныйРазряд2,
			|				НачисленияРаботников.ТарифныйРазряд3,
			|				НачисленияРаботников.ТарифныйРазряд4,
			|				НачисленияРаботников.ТарифныйРазряд5,
			|				НачисленияРаботников.ТарифныйРазряд6,
			|				НачисленияРаботников.Валюта1,
			|				НачисленияРаботников.Валюта2,
			|				НачисленияРаботников.Валюта3,
			|				НачисленияРаботников.Валюта4,
			|				НачисленияРаботников.Валюта5,
			|				НачисленияРаботников.Валюта6,
			|				НачисленияРаботников.ФизЛицо
			|			ИЗ
			|				РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботников
			|			ГДЕ
			|				НачисленияРаботников.Период > &парамНачало
			|				И НачисленияРаботников.Период <= &парамКонец
			|				И НачисленияРаботников.ФизЛицо В
			|						(ВЫБРАТЬ
			|							СписокРаботников.Физлицо
			|						ИЗ
			|							ВТСписокРаботников КАК СписокРаботников)
			|			
			|			ОБЪЕДИНИТЬ ВСЕ
			|			
			|			ВЫБРАТЬ
			|				НачисленияРаботников.ПериодЗавершения,
			|				НачисленияРаботников.ВидРасчетаЗавершения,
			|				НачисленияРаботников.ДействиеЗавершения,
			|				НачисленияРаботников.Показатель1Завершения,
			|				НачисленияРаботников.Показатель2Завершения,
			|				НачисленияРаботников.Показатель3Завершения,
			|				НачисленияРаботников.Показатель4Завершения,
			|				НачисленияРаботников.Показатель5Завершения,
			|				НачисленияРаботников.Показатель6Завершения,
			|				НачисленияРаботников.ТарифныйРазряд1Завершения,
			|				НачисленияРаботников.ТарифныйРазряд2Завершения,
			|				НачисленияРаботников.ТарифныйРазряд3Завершения,
			|				НачисленияРаботников.ТарифныйРазряд4Завершения,
			|				НачисленияРаботников.ТарифныйРазряд5Завершения,
			|				НачисленияРаботников.ТарифныйРазряд6Завершения,
			|				НачисленияРаботников.Валюта1Завершения,
			|				НачисленияРаботников.Валюта2Завершения,
			|				НачисленияРаботников.Валюта3Завершения,
			|				НачисленияРаботников.Валюта4Завершения,
			|				НачисленияРаботников.Валюта5Завершения,
			|				НачисленияРаботников.Валюта6Завершения,
			|				НачисленияРаботников.ФизЛицо
			|			ИЗ
			|				РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботников
			|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботников КАК НачисленияРаботниковПроверка
			|					ПО НачисленияРаботников.ФизЛицо = НачисленияРаботниковПроверка.ФизЛицо
			|						И НачисленияРаботников.ВидРасчетаИзмерение = НачисленияРаботниковПроверка.ВидРасчетаИзмерение
			|						И (НачисленияРаботниковПроверка.Период > НачисленияРаботников.Период)
			|						И (НачисленияРаботниковПроверка.Период <= НачисленияРаботников.ПериодЗавершения)
			|			ГДЕ
			|				НачисленияРаботников.ПериодЗавершения >= &парамНачало
			|				И НачисленияРаботников.ПериодЗавершения <= &парамКонец
			|				И НачисленияРаботниковПроверка.ФизЛицо ЕСТЬ NULL ) КАК НачисленияРаботников
			|			ПО РаботникиОрганизации.Физлицо = НачисленияРаботников.Физлицо) КАК СписокНачислений
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказатели КАК Показатели
			|		ПО СписокНачислений.ВидРасчета = Показатели.Ссылка
			|			И (СписокНачислений.Сотрудник = Показатели.Сотрудник
			|				ИЛИ СписокНачислений.Подразделение = Показатели.Подразделение
			|				ИЛИ Показатели.ВидПоказателя1 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя2 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя3 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя4 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя5 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя6 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)			
			|				)			
			
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			НеВводимыеПоказатели.Ссылка КАК Ссылка,
			|			НеВводимыеПоказатели.НомерСтроки КАК НомерСтроки,
			|			НеВводимыеПоказатели.Показатель КАК Показатель,
			|			НеВводимыеПоказатели.ЭтоТарифнаяСтавка КАК ЭтоТарифнаяСтавка,
			|			СУММА(ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя) КАК ЗначениеПоказателя,
			|			ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения КАК ПоказательВозможностьИзменения,
			|			ЗначенияВводимыхКадровыхПоказателей.Сотрудник КАК Сотрудник,
			|			ЗначенияВводимыхКадровыхПоказателей.Период КАК Период,
			|			ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники КАК ПериодРаботники
			|		ИЗ
			|			ВТНеВводимыеПоказатели КАК НеВводимыеПоказатели
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияВводимыхКадровыхПоказателей КАК ЗначенияВводимыхКадровыхПоказателей
			|				ПО НеВводимыеПоказатели.Показатель = ЗначенияВводимыхКадровыхПоказателей.Показатель
			|		ГДЕ
			|			ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя <> 0
			|		
			|		СГРУППИРОВАТЬ ПО
			|			НеВводимыеПоказатели.Ссылка,
			|			НеВводимыеПоказатели.НомерСтроки,
			|			НеВводимыеПоказатели.Показатель,
			|			НеВводимыеПоказатели.ЭтоТарифнаяСтавка,
			|			ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения,
			|			ЗначенияВводимыхКадровыхПоказателей.Сотрудник,
			|			ЗначенияВводимыхКадровыхПоказателей.Период,
			|			ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники) КАК ЗначенияВводимыхКадровыхПоказателей
			|		ПО СписокНачислений.Сотрудник = ЗначенияВводимыхКадровыхПоказателей.Сотрудник
			|			И (КОНЕЦПЕРИОДА(ЗначенияВводимыхКадровыхПоказателей.Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(СписокНачислений.Период, МЕСЯЦ))
			|			И СписокНачислений.ПериодРаботники = ЗначенияВводимыхКадровыхПоказателей.ПериодРаботники
			|			И СписокНачислений.ВидРасчета = ЗначенияВводимыхКадровыхПоказателей.Ссылка
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды1
			|		ПО СписокНачислений.ТарифныйРазряд1 = ТарифныеРазряды1.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды2
			|		ПО СписокНачислений.ТарифныйРазряд2 = ТарифныеРазряды2.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды3
			|		ПО СписокНачислений.ТарифныйРазряд3 = ТарифныеРазряды3.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды4
			|		ПО СписокНачислений.ТарифныйРазряд4 = ТарифныеРазряды4.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды5
			|		ПО СписокНачислений.ТарифныйРазряд5 = ТарифныеРазряды5.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&парамКонец, ) КАК ТарифныеРазряды6
			|		ПО СписокНачислений.ТарифныйРазряд6 = ТарифныеРазряды6.ТарифныйРазряд
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты1
			|		ПО (Валюты1.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта1 = Валюты1.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты2
			|		ПО (Валюты2.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта2 = Валюты2.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты3
			|		ПО (Валюты3.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта3 = Валюты3.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты4
			|		ПО (Валюты4.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта4 = Валюты4.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты5
			|		ПО (Валюты5.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта5 = Валюты5.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты6
			|		ПО (Валюты6.Период = &парамДатаВалютногоУчета)
			|			И СписокНачислений.Валюта6 = Валюты6.Валюта
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			ОсновныеНачисления.ФизЛицо КАК Физлицо,
			|			ОсновныеНачисления.ВидСхемыМотивации КАК ВидСхемыМотивации,
			|			ОсновныеНачисления.Подразделение КАК Подразделение
			|		ИЗ
			|			РегистрРасчета.УправленческиеНачисления КАК ОсновныеНачисления
			|		ГДЕ
			|			ОсновныеНачисления.ПериодРегистрации = &парамНачало
			|			И ОсновныеНачисления.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И ОсновныеНачисления.ВидРасчета.ЗачетОтработанногоВремени
			|			И ОсновныеНачисления.Регистратор <> &парамРегистратор) КАК ОсновныеНачисления
			|		ПО СписокНачислений.Физлицо = ОсновныеНачисления.Физлицо
			|			И СписокНачислений.Подразделение = ОсновныеНачисления.Подразделение
			|ГДЕ
			|	СписокНачислений.ВидРасчета ЕСТЬ НЕ NULL 
			|	И СписокНачислений.ВидРасчета <> ЗНАЧЕНИЕ(ПланВидовРасчета.УправленческиеНачисления.ПустаяСсылка)
			|
			|УПОРЯДОЧИТЬ ПО
			|	СотрудникНаименование,
			|	Сотрудник,
			|	ПериодРаботники,
			|	ПериодНачисления,
			|	ОсновноеНачисление УБЫВ,
			|	ВидРасчета";
		КонецЕсли;
		
	
		
	Запрос.Текст = ОсновнойТекстЗапроса;
	НачисленияВыборка = Запрос.Выполнить().Выбрать();

	ТЗНачисления = СформироватьТаблицуНачислений(НачисленияВыборка);
	Начисления.Загрузить(ТЗНачисления);
 
	// проверим записи начислений на не пустой фактический период действия
	НаборЗаписейДляПроверки = РегистрыРасчета.УправленческиеНачисления.СоздатьНаборЗаписей();
	Если Ссылка.Пустая() Тогда
		СcылкаОбъекта = Документы.НачислениеЗарплатыРаботникам.ПолучитьСсылку();
		УстановитьСсылкуНового(СcылкаОбъекта);
	Иначе
		СcылкаОбъекта = Ссылка;
	КонецЕсли;
	НаборЗаписейДляПроверки.Отбор.Регистратор.Значение = СcылкаОбъекта;
	
	Для Каждого Строка Из ТЗНачисления Цикл
		Движение = НаборЗаписейДляПроверки.Добавить();
		
		// свойства
		Движение.ПериодРегистрации			= ПериодРегистрации;
		Движение.ПериодДействияНачало		= Строка.ДатаНачала;
		Движение.ПериодДействияКонец		= Строка.ДатаОкончания;
		Движение.ВидРасчета					= Строка.ВидРасчета;
		
		// измерения
		Движение.Физлицо					= Строка.Физлицо;
		
		// реквизиты поддержки графика
		Движение.ГрафикРаботы				= Строка.ГрафикРаботы;
		Движение.ВидУчетаВремени			= ПроведениеРасчетов.ПолучитьВидУчетаВремени(Строка.СпособРасчета, Неопределено, Строка.СуммированныйУчетРабочегоВремени);
	КонецЦикла;
	
	НаборЗаписейДляПроверки.Записать();
	
	// выполним удаление строк табличной части, которые соответствуют полностью вытесняемым видам расчета
	ЗапросПроверки = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	УправленческиеНачисления.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	РегистрРасчета.УправленческиеНачисления КАК УправленческиеНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.УправленческиеНачисления.ФактическийПериодДействия(Регистратор = &парамСсылка) КАК УправленческиеНачисленияФактическийПериодДействия
	|		ПО УправленческиеНачисления.НомерСтроки = УправленческиеНачисленияФактическийПериодДействия.НомерСтроки
	|			И УправленческиеНачисления.Регистратор = УправленческиеНачисленияФактическийПериодДействия.Регистратор
	|ГДЕ
	|	УправленческиеНачисления.Регистратор = &парамСсылка
	|	И УправленческиеНачисленияФактическийПериодДействия.Регистратор ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки УБЫВ");
	
	ЗапросПроверки.УстановитьПараметр("парамСсылка", Ссылка);
	СтрокиКУдалению = ЗапросПроверки.Выполнить().Выгрузить();
	
	Для Каждого Строка Из СтрокиКУдалению Цикл
		Начисления.Удалить(Строка.НомерСтроки - 1);
	КонецЦикла;
	
	// удалим проверочный набор записей
	НаборЗаписейДляПроверки.Очистить();
	НаборЗаписейДляПроверки.Записать();
	
	
	// ЗАПОЛНЕНИЕ УДЕРЖАНИЙ
	
	Запрос.УстановитьПараметр("парамПустоеПодразделение" , Справочники.Подразделения.ПустаяСсылка());
	Запрос.УстановитьПараметр("Прекратить" , Перечисления.ВидыДействияСНачислением.Прекратить);
	
 			Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ПоказателиНачислений.Ссылка КАК Ссылка,
		|	ВЫБОР 
		|		КОГДА ЗначенияПоказателей1.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|			ТОГДА ЗначенияПоказателей1.Сотрудник
		|		КОГДА ЗначенияПоказателей2.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|			ТОГДА ЗначенияПоказателей2.Сотрудник
		|		КОГДА ЗначенияПоказателей3.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|			ТОГДА ЗначенияПоказателей3.Сотрудник
		|		КОГДА ЗначенияПоказателей4.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|			ТОГДА ЗначенияПоказателей4.Сотрудник		
		|		КОГДА ЗначенияПоказателей5.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|			ТОГДА ЗначенияПоказателей5.Сотрудник		
		|		КОГДА ЗначенияПоказателей6.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.Индивидуальный)
		|			ТОГДА ЗначенияПоказателей6.Сотрудник
		|	КОНЕЦ КАК Сотрудник,
		|	ВЫБОР 
		|		КОГДА ЗначенияПоказателей1.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
		|			ТОГДА ЗначенияПоказателей1.Подразделение
		|		КОГДА ЗначенияПоказателей2.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
		|			ТОГДА ЗначенияПоказателей2.Подразделение
		|		КОГДА ЗначенияПоказателей3.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
		|			ТОГДА ЗначенияПоказателей3.Подразделение
		|		КОГДА ЗначенияПоказателей4.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
		|			ТОГДА ЗначенияПоказателей4.Подразделение
		|		КОГДА ЗначенияПоказателей5.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
		|			ТОГДА ЗначенияПоказателей5.Подразделение
		|		КОГДА ЗначенияПоказателей6.Показатель.ВидПоказателя = Значение(Перечисление.ВидыПоказателейСхемМотивации.ПоПодразделению)
		|			ТОГДА ЗначенияПоказателей6.Подразделение
		|	КОНЕЦ КАК Подразделение,		
		|	ПоказателиНачислений.Показатель1.ВидПоказателя КАК ВидПоказателя1,
		|	ПоказателиНачислений.Показатель2.ВидПоказателя КАК ВидПоказателя2,
		|	ПоказателиНачислений.Показатель3.ВидПоказателя КАК ВидПоказателя3,
		|	ПоказателиНачислений.Показатель4.ВидПоказателя КАК ВидПоказателя4,
		|	ПоказателиНачислений.Показатель5.ВидПоказателя КАК ВидПоказателя5,
		|	ПоказателиНачислений.Показатель6.ВидПоказателя КАК ВидПоказателя6,
		
		|	ПоказателиНачислений.Показатель1.ТипПоказателя КАК ТипПоказателя1,
		|	ПоказателиНачислений.Показатель2.ТипПоказателя КАК ТипПоказателя2,
		|	ПоказателиНачислений.Показатель3.ТипПоказателя КАК ТипПоказателя3,
		|	ПоказателиНачислений.Показатель4.ТипПоказателя КАК ТипПоказателя4,
		|	ПоказателиНачислений.Показатель5.ТипПоказателя КАК ТипПоказателя5,
		|	ПоказателиНачислений.Показатель6.ТипПоказателя КАК ТипПоказателя6,
		|	ЗначенияПоказателей1.Значение КАК Показатель1,
		|	ЗначенияПоказателей2.Значение КАК Показатель2,
		|	ЗначенияПоказателей3.Значение КАК Показатель3,
		|	ЗначенияПоказателей4.Значение КАК Показатель4,
		|	ЗначенияПоказателей5.Значение КАК Показатель5,
		|	ЗначенияПоказателей6.Значение КАК Показатель6,
		|	ВЫБОР 
		|		КОГДА ЗначенияПоказателей1.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|			ТОГДА ЗначенияПоказателей1.Валюта
		|		КОГДА ЗначенияПоказателей2.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|			ТОГДА ЗначенияПоказателей2.Валюта
		|		КОГДА ЗначенияПоказателей3.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|			ТОГДА ЗначенияПоказателей3.Валюта
		|		КОГДА ЗначенияПоказателей4.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|			ТОГДА ЗначенияПоказателей4.Валюта		
		|		КОГДА ЗначенияПоказателей5.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|			ТОГДА ЗначенияПоказателей5.Валюта		
		|		КОГДА ЗначенияПоказателей6.Показатель.ТипПоказателя = Значение(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
		|			ТОГДА ЗначенияПоказателей6.Валюта
		|	КОНЕЦ КАК Валюта		
		|ПОМЕСТИТЬ ВТПоказателиУдержаний
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		Показатели.Ссылка КАК Ссылка,
		|		Показатели1.Показатель КАК Показатель1,
		|		Показатели2.Показатель КАК Показатель2,
		|		Показатели3.Показатель КАК Показатель3,
		|		Показатели4.Показатель КАК Показатель4,
		|		Показатели5.Показатель КАК Показатель5,
		|		Показатели6.Показатель КАК Показатель6
		|	ИЗ
		|		ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели1
		|			ПО Показатели.Ссылка = Показатели1.Ссылка
		|				И (Показатели1.НомерСтроки = 1)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели2
		|			ПО Показатели.Ссылка = Показатели2.Ссылка
		|				И (Показатели2.НомерСтроки = 2)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели3
		|			ПО Показатели.Ссылка = Показатели3.Ссылка
		|				И (Показатели3.НомерСтроки = 3)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели4
		|			ПО Показатели.Ссылка = Показатели4.Ссылка
		|				И (Показатели4.НомерСтроки = 4)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели5
		|			ПО Показатели.Ссылка = Показатели5.Ссылка
		|				И (Показатели5.НомерСтроки = 5)
		|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели6
		|			ПО Показатели.Ссылка = Показатели6.Ссылка
		|				И (Показатели6.НомерСтроки = 6)) КАК ПоказателиНачислений
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей1
		|		ПО ПоказателиНачислений.Показатель1 = ЗначенияПоказателей1.Показатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей2
		|		ПО ПоказателиНачислений.Показатель2 = ЗначенияПоказателей2.Показатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей3
		|		ПО ПоказателиНачислений.Показатель3 = ЗначенияПоказателей3.Показатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей4
		|		ПО ПоказателиНачислений.Показатель4 = ЗначенияПоказателей4.Показатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей5
		|		ПО ПоказателиНачислений.Показатель5 = ЗначенияПоказателей5.Показатель
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияПоказателей КАК ЗначенияПоказателей6
		|		ПО ПоказателиНачислений.Показатель6 = ЗначенияПоказателей6.Показатель
		|ГДЕ
		|	ПоказателиНачислений.Ссылка ЕСТЬ НЕ NULL 
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка";
		Запрос.Выполнить();
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПоказателиУдержаний";
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УправленческиеУдержанияПоказатели.Показатель,
		|	УправленческиеУдержанияПоказатели.НомерСтроки,
		|	УправленческиеУдержанияПоказатели.Ссылка
		|ПОМЕСТИТЬ ВТУдержанияНеВводимыеПоказатели
		|ИЗ
		|	ПланВидовРасчета.УправленческиеУдержания.Показатели КАК УправленческиеУдержанияПоказатели
		|ГДЕ
		|	((НЕ УправленческиеУдержанияПоказатели.ЗапрашиватьПриКадровыхПеремещениях)
		|			ИЛИ УправленческиеУдержанияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		|			ИЛИ УправленческиеУдержанияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		|			ИЛИ УправленческиеУдержанияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		|			ИЛИ УправленческиеУдержанияПоказатели.Показатель.ТарифнаяСтавка)";
		Запрос.Выполнить();
		
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТУдержанияНеВводимыеПоказатели";
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	УправленческиеНачисленияПоказатели.Показатель,
		|	УправленческиеНачисленияПоказатели.НомерСтроки,
		|	УправленческиеНачисленияПоказатели.Ссылка
		|ПОМЕСТИТЬ ВТУдержанияВводимыеПоказатели
		|ИЗ
		|	ПланВидовРасчета.УправленческиеНачисления.Показатели КАК УправленческиеНачисленияПоказатели
		|ГДЕ
		|	УправленческиеНачисленияПоказатели.Показатель В
		|			(ВЫБРАТЬ
		|				ВТУдержанияНеВводимыеПоказатели.Показатель
		|			ИЗ
		|				ВТУдержанияНеВводимыеПоказатели)
		|	И УправленческиеНачисленияПоказатели.ЗапрашиватьПриКадровыхПеремещениях
		|	И ВЫБОР
		|			КОГДА УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная)
		|					ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная)
		|					ИЛИ УправленческиеНачисленияПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая)
		|					ИЛИ УправленческиеНачисленияПоказатели.Показатель.ТарифнаяСтавка
		|				ТОГДА УправленческиеНачисленияПоказатели.Ссылка.ЗачетОтработанногоВремени
		|			ИНАЧЕ ИСТИНА
		|		КОНЕЦ
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	УправленческиеУдержанияПоказатели.Показатель,
		|	УправленческиеУдержанияПоказатели.НомерСтроки,
		|	УправленческиеУдержанияПоказатели.Ссылка
		|ИЗ
		|	ПланВидовРасчета.УправленческиеУдержания.Показатели КАК УправленческиеУдержанияПоказатели
		|ГДЕ
		|	УправленческиеУдержанияПоказатели.Показатель В
		|			(ВЫБРАТЬ
		|				ВТУдержанияНеВводимыеПоказатели.Показатель
		|			ИЗ
		|				ВТУдержанияНеВводимыеПоказатели)
		|	И УправленческиеУдержанияПоказатели.ЗапрашиватьПриКадровыхПеремещениях";

		Запрос.Выполнить();
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТУдержанияВводимыеПоказатели";
		
		Если ПоВременнойСхемеМотивации Тогда
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	УдержанияРаботников.Показатель,
			|	РаботникиОрганизации.Физлицо КАК Физлицо,
			|	УдержанияРаботников.Период КАК Период,
			|	УдержанияРаботников.ВидРасчета КАК ВидРасчета,
			|	УдержанияРаботников.Действие КАК Действие,
			|	УдержанияРаботников.ДокументОснование КАК ДокументОснование,
			|	УдержанияРаботников.ЗначениеПоказателя
			|ПОМЕСТИТЬ ВТЗначенияВводимыхКадровыхУдержаний
			|ИЗ
			|	ВТДвиженияРаботников КАК РаботникиОрганизации
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель КАК Показатель,
			|			&парамНачало КАК Период,
			|			СхемыМотивацииРаботников.ВидРасчета КАК ВидРасчета,
			|			ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА СхемыМотивацииРаботников.Показатель1
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА СхемыМотивацииРаботников.Показатель2
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА СхемыМотивацииРаботников.Показатель3
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА СхемыМотивацииРаботников.Показатель4
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА СхемыМотивацииРаботников.Показатель5
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА СхемыМотивацииРаботников.Показатель6
			|			КОНЕЦ КАК ЗначениеПоказателя,
			|			NULL КАК ДокументОснование,
			|			СхемыМотивацииРаботников.Подразделение КАК Подразделение,
			|			СхемыМотивацииРаботников.Должность КАК Должность
			|		ИЗ
			|			РегистрСведений.СхемыМотивацииРаботников КАК СхемыМотивацииРаботников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержанияВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО (ВводимыеПоказатели.Ссылка = СхемыМотивацииРаботников.ВидРасчета)
			|		ГДЕ
			|			СхемыМотивацииРаботников.ВидСхемыМотивации = &парамВидСхемыМотивации
			|			И СхемыМотивацииРаботников.ВидРасчета ССЫЛКА ПланВидовРасчета.УправленческиеУдержания) КАК УдержанияРаботников
			|		ПО (УдержанияРаботников.Должность = РаботникиОрганизации.Должность)
			|			И (УдержанияРаботников.Подразделение = РаботникиОрганизации.Подразделение)";
			Запрос.Выполнить();
			Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗначенияВводимыхКадровыхУдержаний";		
			
			ТекстЗапросаУдержаний = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РаботникиОрганизации.Физлицо КАК Физлицо,
			|	РаботникиОрганизации.Подразделение КАК Подразделение,
			|	УдержанияРаботников.Период КАК Период,
			|	УдержанияРаботников.ВидРасчета КАК ВидРасчета,
			|	УдержанияРаботников.Действие КАК Действие,
			|	УдержанияРаботников.ДокументОснование КАК ДокументОснование,
			|	УдержанияРаботников.Валюта1 КАК Валюта1,
			|	УдержанияРаботников.Валюта2 КАК Валюта2,
			|	УдержанияРаботников.Валюта3 КАК Валюта3,
			|	УдержанияРаботников.Валюта4 КАК Валюта4,
			|	УдержанияРаботников.Валюта5 КАК Валюта5,
			|	УдержанияРаботников.Валюта6 КАК Валюта6,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта1 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта1 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты1.Курс
			|	КОНЕЦ КАК КурсВалюты1,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта2 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта2 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты2.Курс
			|	КОНЕЦ КАК КурсВалюты2,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта3 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта3 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты3.Курс
			|	КОНЕЦ КАК КурсВалюты3,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта4 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта4 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты4.Курс
			|	КОНЕЦ КАК КурсВалюты4,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта5 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта5 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты5.Курс
			|	КОНЕЦ КАК КурсВалюты5,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта6 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта6 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты6.Курс
			|	КОНЕЦ КАК КурсВалюты6,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL И Показатели.Показатель1 <> 0
			|			ТОГДА Показатели.Показатель1
			|		КОГДА (УдержанияРаботников.Показатель1 ЕСТЬ NULL ИЛИ Показатели.Показатель1 = 0)
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 1
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя1 ЕСТЬ NULL ИЛИ Показатели.ТипПоказателя1 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель1
			|				ИНАЧЕ УдержанияРаботников.Показатель1 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта1 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель1,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL И Показатели.Показатель2 <> 0
			|			ТОГДА Показатели.Показатель2
			|		КОГДА (УдержанияРаботников.Показатель2 ЕСТЬ NULL ИЛИ Показатели.Показатель2 = 0)
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 2
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя2 ЕСТЬ NULL ИЛИ Показатели.ТипПоказателя2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель2
			|				ИНАЧЕ УдержанияРаботников.Показатель2 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта2 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты2.Курс / Валюты2.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель2,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL И Показатели.Показатель3 <> 0
			|			ТОГДА Показатели.Показатель3
			|		КОГДА (УдержанияРаботников.Показатель3 ЕСТЬ NULL ИЛИ Показатели.Показатель3 = 0)
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 3
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя3 ЕСТЬ NULL ИЛИ Показатели.ТипПоказателя3 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель3
			|				ИНАЧЕ УдержанияРаботников.Показатель3 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта3 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты3.Курс / Валюты3.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель3,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL И Показатели.Показатель4 <> 0
			|			ТОГДА Показатели.Показатель4
			|		КОГДА (УдержанияРаботников.Показатель4 ЕСТЬ NULL ИЛИ Показатели.Показатель4 = 0)
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 4
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя4 ЕСТЬ NULL ИЛИ Показатели.ТипПоказателя4 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель4
			|				ИНАЧЕ УдержанияРаботников.Показатель4 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта4 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты4.Курс / Валюты4.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель4,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL И Показатели.Показатель5 <> 0
			|			ТОГДА Показатели.Показатель5
			|		КОГДА (УдержанияРаботников.Показатель5 ЕСТЬ NULL ИЛИ Показатели.Показатель5 = 0)
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 5
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя5 ЕСТЬ NULL ИЛИ Показатели.ТипПоказателя5 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель5
			|				ИНАЧЕ УдержанияРаботников.Показатель5 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта5 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты5.Курс / Валюты5.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель5,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL И Показатели.Показатель6 <> 0
			|			ТОГДА Показатели.Показатель6
			|		КОГДА (УдержанияРаботников.Показатель6 ЕСТЬ NULL ИЛИ Показатели.Показатель6 = 0)
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 6
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя6 ЕСТЬ NULL ИЛИ Показатели.ТипПоказателя6 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель6
			|				ИНАЧЕ УдержанияРаботников.Показатель6 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта6 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты6.Курс / Валюты6.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель6,
			|	РаботникиОрганизации.Физлицо.Наименование КАК ФизлицоНаименование
			|ИЗ
			|	ВТДвиженияРаботников КАК РаботникиОрганизации
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			&парамНачало КАК Период,
			|			СхемыМотивацииРаботников.ВидРасчета КАК ВидРасчета,
			|			ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.НеИзменять) КАК Действие,
			|			СхемыМотивацииРаботников.Показатель1 КАК Показатель1,
			|			СхемыМотивацииРаботников.Показатель2 КАК Показатель2,
			|			СхемыМотивацииРаботников.Показатель3 КАК Показатель3,
			|			СхемыМотивацииРаботников.Показатель4 КАК Показатель4,
			|			СхемыМотивацииРаботников.Показатель5 КАК Показатель5,
			|			СхемыМотивацииРаботников.Показатель6 КАК Показатель6,
			|			СхемыМотивацииРаботников.ТарифныйРазряд1 КАК ТарифныйРазряд1,
			|			СхемыМотивацииРаботников.ТарифныйРазряд2 КАК ТарифныйРазряд2,
			|			СхемыМотивацииРаботников.ТарифныйРазряд3 КАК ТарифныйРазряд3,
			|			СхемыМотивацииРаботников.ТарифныйРазряд4 КАК ТарифныйРазряд4,
			|			СхемыМотивацииРаботников.ТарифныйРазряд5 КАК ТарифныйРазряд5,
			|			СхемыМотивацииРаботников.ТарифныйРазряд6 КАК ТарифныйРазряд6,
			|			СхемыМотивацииРаботников.Валюта1 КАК Валюта1,
			|			СхемыМотивацииРаботников.Валюта2 КАК Валюта2,
			|			СхемыМотивацииРаботников.Валюта3 КАК Валюта3,
			|			СхемыМотивацииРаботников.Валюта4 КАК Валюта4,
			|			СхемыМотивацииРаботников.Валюта5 КАК Валюта5,
			|			СхемыМотивацииРаботников.Валюта6 КАК Валюта6,
			|			NULL КАК ДокументОснование,
			|			СхемыМотивацииРаботников.Подразделение КАК Подразделение,
			|			СхемыМотивацииРаботников.Должность КАК Должность
			|		ИЗ
			|			РегистрСведений.СхемыМотивацииРаботников КАК СхемыМотивацииРаботников
			|		ГДЕ
			|			СхемыМотивацииРаботников.ВидСхемыМотивации = &парамВидСхемыМотивации
			|			И СхемыМотивацииРаботников.ВидРасчета ССЫЛКА ПланВидовРасчета.УправленческиеУдержания) КАК УдержанияРаботников
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты1
			|			ПО (Валюты1.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта1 = Валюты1.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты2
			|			ПО (Валюты2.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта2 = Валюты2.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты3
			|			ПО (Валюты3.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта3 = Валюты3.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты4
			|			ПО (Валюты4.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта4 = Валюты4.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты5
			|			ПО (Валюты5.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта5 = Валюты5.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты6
			|			ПО (Валюты6.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта6 = Валюты6.Валюта
			|		ПО РаботникиОрганизации.Должность = УдержанияРаботников.Должность
			|			И РаботникиОрганизации.Подразделение = УдержанияРаботников.Подразделение
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
			|		ПО УдержанияРаботников.ВидРасчета = Показатели.Ссылка
			|			И (РаботникиОрганизации.Физлицо = Показатели.Сотрудник.ФизЛицо
			|				ИЛИ РаботникиОрганизации.Подразделение = Показатели.Подразделение
			|				ИЛИ Показатели.ВидПоказателя1 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя2 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя3 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя4 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя5 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя6 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				)
			
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			НеВводимыеПоказатели.Ссылка КАК Ссылка,
			|			НеВводимыеПоказатели.НомерСтроки КАК НомерСтроки,
			|			НеВводимыеПоказатели.Показатель КАК Показатель,
			|			ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя,
			|			ЗначенияВводимыхКадровыхПоказателей.ФизЛицо КАК ФизЛицо,
			|			ЗначенияВводимыхКадровыхПоказателей.Период КАК Период,
			|			ЗначенияВводимыхКадровыхПоказателей.Действие КАК Действие
			|		ИЗ
			|			ВТУдержанияНеВводимыеПоказатели КАК НеВводимыеПоказатели
			|				ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияВводимыхКадровыхУдержаний КАК ЗначенияВводимыхКадровыхПоказателей
			|				ПО НеВводимыеПоказатели.Показатель = ЗначенияВводимыхКадровыхПоказателей.Показатель) КАК ЗначенияВводимыхКадровыхПоказателей
			|		ПО (ЗначенияВводимыхКадровыхПоказателей.ФизЛицо = РаботникиОрганизации.Физлицо)
			|			И (КОНЕЦПЕРИОДА(УдержанияРаботников.Период, Месяц) = КОНЕЦПЕРИОДА(ЗначенияВводимыхКадровыхПоказателей.Период, Месяц))
			|			И (УдержанияРаботников.Действие = ЗначенияВводимыхКадровыхПоказателей.Действие)
			|			И (УдержанияРаботников.ВидРасчета = ЗначенияВводимыхКадровыхПоказателей.Ссылка)
			
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			УправленческиеУдержания.ФизЛицо КАК Физлицо,
			|			УправленческиеУдержания.ВидСхемыМотивации КАК ВидСхемыМотивации,
			|			УправленческиеУдержания.Подразделение КАК Подразделение
			|		ИЗ
			|			РегистрРасчета.УправленческиеУдержания КАК УправленческиеУдержания
			|		ГДЕ
			|			УправленческиеУдержания.ПериодРегистрации = &парамНачало
			|			И УправленческиеУдержания.Регистратор <> &парамРегистратор) КАК УправленческиеУдержания
			|		ПО УправленческиеУдержания.Физлицо = УправленческиеУдержания.Физлицо
			|
			|ГДЕ
			|	УправленческиеУдержания.ФизЛицо ЕСТЬ NULL И
			|	УдержанияРаботников.ВидРасчета ЕСТЬ НЕ NULL 
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизлицоНаименование,
			|	Физлицо,
			|	ДокументОснование,
			|	ВидРасчета,
			|	Период";
		Иначе
			
			Запрос.Текст =
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НачисленияРаботников.Показатель,
			|	РаботникиОрганизации.Физлицо КАК Физлицо,
			|	НачисленияРаботников.Период КАК Период,
			|	НачисленияРаботников.ВидРасчета КАК ВидРасчета,
			|	НачисленияРаботников.Действие КАК Действие,
			|	НачисленияРаботников.ЗначениеПоказателя
			|ПОМЕСТИТЬ ВТЗначенияВводимыхКадровыхУдержаний
			|ИЗ
			|	ВТДвиженияРаботников КАК РаботникиОрганизации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель КАК Показатель,
			|			&парамНачало КАК Период,
			|			ВЫБОР
			|				КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|						И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА ПлановыеНачисленияРаботников.ДействиеЗавершения
			|				ИНАЧЕ ПлановыеНачисленияРаботников.Действие
			|			КОНЕЦ КАК Действие,
			|			ПлановыеНачисленияРаботников.ВидРасчета КАК ВидРасчета,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА ВЫБОР
			|							КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА ПлановыеНачисленияРаботников.Показатель1Завершения
			|							ИНАЧЕ ПлановыеНачисленияРаботников.Показатель1
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА ВЫБОР
			|							КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА ПлановыеНачисленияРаботников.Показатель2Завершения
			|							ИНАЧЕ ПлановыеНачисленияРаботников.Показатель2
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА ВЫБОР
			|							КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА ПлановыеНачисленияРаботников.Показатель3Завершения
			|							ИНАЧЕ ПлановыеНачисленияРаботников.Показатель3
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА ВЫБОР
			|							КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА ПлановыеНачисленияРаботников.Показатель4Завершения
			|							ИНАЧЕ ПлановыеНачисленияРаботников.Показатель4
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА ВЫБОР
			|							КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА ПлановыеНачисленияРаботников.Показатель5Завершения
			|							ИНАЧЕ ПлановыеНачисленияРаботников.Показатель5
			|						КОНЕЦ
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА ВЫБОР
			|							КОГДА ПлановыеНачисленияРаботников.ПериодЗавершения <= &парамНачало
			|									И ПлановыеНачисленияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|								ТОГДА ПлановыеНачисленияРаботников.Показатель6Завершения
			|							ИНАЧЕ ПлановыеНачисленияРаботников.Показатель6
			|						КОНЕЦ
			|			КОНЕЦ КАК ЗначениеПоказателя,
			|			ПлановыеНачисленияРаботников.ФизЛицо КАК Физлицо
			|		ИЗ
			|			РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисленияРаботников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержанияВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО (ВводимыеПоказатели.Ссылка = ПлановыеНачисленияРаботников.ВидРасчета)
			|		ГДЕ
			|			ПлановыеНачисленияРаботников.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель,
			|			ПлановыеНачисленияРаботников.Период,
			|			ПлановыеНачисленияРаботников.ВидРасчета,
			|			ПлановыеНачисленияРаботников.Действие,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель1
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель2
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель3
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель4
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель5
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель6
			|			КОНЕЦ,
			|			ПлановыеНачисленияРаботников.ФизЛицо
			|		ИЗ
			|			РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисленияРаботников
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержанияВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО (ВводимыеПоказатели.Ссылка = ПлановыеНачисленияРаботников.ВидРасчета)
			|		ГДЕ
			|			ПлановыеНачисленияРаботников.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И ПлановыеНачисленияРаботников.Период > &парамНачало
			|			И ПлановыеНачисленияРаботников.Период <= &парамКонец
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			ВводимыеПоказатели.Показатель,
			|			ПлановыеНачисленияРаботников.ПериодЗавершения,
			|			ПлановыеНачисленияРаботников.ВидРасчета,
			|			ПлановыеНачисленияРаботников.ДействиеЗавершения,
			|			ВЫБОР
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 1
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель1
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 2
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель2
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 3
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель3
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 4
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель4
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 5
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель5
			|				КОГДА ВводимыеПоказатели.НомерСтроки = 6
			|					ТОГДА ПлановыеНачисленияРаботников.Показатель6
			|			КОНЕЦ,
			|			ПлановыеНачисленияРаботников.ФизЛицо
			|		ИЗ
			|			РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисленияРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботников КАК ПлановыеНачисленияПроверка
			|				ПО (ПлановыеНачисленияПроверка.ФизЛицо = ПлановыеНачисленияРаботников.ФизЛицо)
			|					И (ПлановыеНачисленияПроверка.ВидРасчета = ПлановыеНачисленияРаботников.ВидРасчета)
			|					И (ПлановыеНачисленияПроверка.Период > ПлановыеНачисленияРаботников.Период)
			|					И (ПлановыеНачисленияПроверка.Период <= ПлановыеНачисленияРаботников.ПериодЗавершения)
			|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТУдержанияВводимыеПоказатели КАК ВводимыеПоказатели
			|				ПО (ВводимыеПоказатели.Ссылка = ПлановыеНачисленияРаботников.ВидРасчета)
			|		ГДЕ
			|			ПлановыеНачисленияРаботников.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И ПлановыеНачисленияРаботников.ПериодЗавершения МЕЖДУ &парамНачало И &парамКонец
			|			И ПлановыеНачисленияРаботников.ФизЛицо ЕСТЬ NULL ) КАК НачисленияРаботников
			|		ПО РаботникиОрганизации.Физлицо = НачисленияРаботников.Физлицо";
			Запрос.Выполнить();
			
			Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТЗначенияВВодимыхКадровыхПоказателей";
			
			ТекстЗапросаУдержаний = 
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	РаботникиОрганизации.Физлицо КАК Физлицо,
			|	РаботникиОрганизации.Подразделение КАК Подразделение,
			|	УдержанияРаботников.Период КАК Период,
			|	УдержанияРаботников.ВидРасчета КАК ВидРасчета,
			|	УдержанияРаботников.Действие КАК Действие,
			|	УдержанияРаботников.ДокументОснование КАК ДокументОснование,
			|	УдержанияРаботников.Валюта1 КАК Валюта1,
			|	УдержанияРаботников.Валюта2 КАК Валюта2,
			|	УдержанияРаботников.Валюта3 КАК Валюта3,
			|	УдержанияРаботников.Валюта4 КАК Валюта4,
			|	УдержанияРаботников.Валюта5 КАК Валюта5,
			|	УдержанияРаботников.Валюта6 КАК Валюта6,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта1 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта1 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты1.Курс
			|	КОНЕЦ КАК КурсВалюты1,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта2 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта2 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты2.Курс
			|	КОНЕЦ КАК КурсВалюты2,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта3 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта3 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты3.Курс
			|	КОНЕЦ КАК КурсВалюты3,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта4 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта4 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты4.Курс
			|	КОНЕЦ КАК КурсВалюты4,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта5 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта5 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты5.Курс
			|	КОНЕЦ КАК КурсВалюты5,
			|	ВЫБОР
			|		КОГДА УдержанияРаботников.Валюта6 = &парамВалютаРеглУчета
			|				ИЛИ УдержанияРаботников.Валюта6 = ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)
			|			ТОГДА 1
			|		ИНАЧЕ Валюты6.Курс
			|	КОНЕЦ КАК КурсВалюты6,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL И Показатели.Показатель1 <> 0 ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = Значение(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель1
			|		КОГДА УдержанияРаботников.Показатель1 ЕСТЬ NULL ИЛИ УдержанияРаботников.Показатель1 = 0
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 1
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя1 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель1
			|				ИНАЧЕ УдержанияРаботников.Показатель1 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта1 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты1.Курс / Валюты1.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель1,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL И Показатели.Показатель2 <> 0 ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = Значение(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель2
			|		КОГДА УдержанияРаботников.Показатель2 ЕСТЬ NULL ИЛИ УдержанияРаботников.Показатель2 = 0
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 2
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя2 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель2
			|				ИНАЧЕ УдержанияРаботников.Показатель2 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта2 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты2.Курс / Валюты2.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель2,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL И Показатели.Показатель3 <> 0 ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = Значение(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель3
			|		КОГДА УдержанияРаботников.Показатель3 ЕСТЬ NULL ИЛИ УдержанияРаботников.Показатель3 = 0
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 3
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя3 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель3
			|				ИНАЧЕ УдержанияРаботников.Показатель3 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта3 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты3.Курс / Валюты3.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель3,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL И Показатели.Показатель4 <> 0 ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = Значение(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель4
			|		КОГДА УдержанияРаботников.Показатель4 ЕСТЬ NULL ИЛИ УдержанияРаботников.Показатель4 = 0
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 4
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя4 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель4
			|				ИНАЧЕ УдержанияРаботников.Показатель4 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта4 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты4.Курс / Валюты4.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель4,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL И Показатели.Показатель5 <> 0 ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = Значение(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель5
			|		КОГДА УдержанияРаботников.Показатель5 ЕСТЬ NULL ИЛИ УдержанияРаботников.Показатель5 = 0
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 5
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя5 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель5
			|				ИНАЧЕ УдержанияРаботников.Показатель5 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта5 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты5.Курс / Валюты5.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель5,
			|	ВЫБОР
			|		КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL И Показатели.Показатель6 <> 0 ИЛИ ЗначенияВводимыхКадровыхПоказателей.ПоказательВозможностьИзменения = Значение(Перечисление.ИзменениеПоказателейСхемМотивации.ВиденНоНеРедактируетсяПриРасчете)
			|			ТОГДА Показатели.Показатель6
			|		КОГДА УдержанияРаботников.Показатель6 ЕСТЬ NULL ИЛИ УдержанияРаботников.Показатель6 = 0
			|				И ЗначенияВводимыхКадровыхПоказателей.Показатель ЕСТЬ НЕ NULL 
			|				И ЗначенияВводимыхКадровыхПоказателей.НомерСтроки = 6
			|			ТОГДА ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя
			|		ИНАЧЕ ВЫБОР
			|				КОГДА Показатели.ТипПоказателя6 <> ЗНАЧЕНИЕ(Перечисление.ТипыПоказателейСхемМотивации.Денежный)
			|					ТОГДА УдержанияРаботников.Показатель6
			|				ИНАЧЕ УдержанияРаботников.Показатель6 * ВЫБОР
			|						КОГДА УдержанияРаботников.Валюта6 = &парамВалютаРеглУчета
			|							ТОГДА 1
			|						ИНАЧЕ ЕСТЬNULL(Валюты6.Курс / Валюты6.Кратность, 0)
			|					КОНЕЦ / &парамКурсВалютыУпрУчета
			|			КОНЕЦ
			|	КОНЕЦ КАК Показатель6,
			|	УдержанияРаботников.Физлицо.Наименование КАК ФизлицоНаименование
			|ИЗ
			|	ВТДвиженияРаботников КАК РаботникиОрганизации
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
			|			&парамНачало КАК Период,
			|			УдержанияРаботников.ВидРасчета КАК ВидРасчета,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.ДействиеЗавершения
			|				ИНАЧЕ УдержанияРаботников.Действие
			|			КОНЕЦ КАК Действие,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Показатель1Завершения
			|				ИНАЧЕ УдержанияРаботников.Показатель1
			|			КОНЕЦ КАК Показатель1,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Показатель2Завершения
			|				ИНАЧЕ УдержанияРаботников.Показатель2
			|			КОНЕЦ КАК Показатель2,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Показатель3Завершения
			|				ИНАЧЕ УдержанияРаботников.Показатель3
			|			КОНЕЦ КАК Показатель3,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Показатель4Завершения
			|				ИНАЧЕ УдержанияРаботников.Показатель4
			|			КОНЕЦ КАК Показатель4,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Показатель5Завершения
			|				ИНАЧЕ УдержанияРаботников.Показатель5
			|			КОНЕЦ КАК Показатель5,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Показатель6Завершения
			|				ИНАЧЕ УдержанияРаботников.Показатель6
			|			КОНЕЦ КАК Показатель6,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Валюта1Завершения
			|				ИНАЧЕ УдержанияРаботников.Валюта1
			|			КОНЕЦ КАК Валюта1,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Валюта2Завершения
			|				ИНАЧЕ УдержанияРаботников.Валюта2
			|			КОНЕЦ КАК Валюта2,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Валюта3Завершения
			|				ИНАЧЕ УдержанияРаботников.Валюта3
			|			КОНЕЦ КАК Валюта3,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Валюта4Завершения
			|				ИНАЧЕ УдержанияРаботников.Валюта4
			|			КОНЕЦ КАК Валюта4,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Валюта5Завершения
			|				ИНАЧЕ УдержанияРаботников.Валюта5
			|			КОНЕЦ КАК Валюта5,
			|			ВЫБОР
			|				КОГДА УдержанияРаботников.ПериодЗавершения <= &парамНачало
			|						И УдержанияРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|					ТОГДА УдержанияРаботников.Валюта6Завершения
			|				ИНАЧЕ УдержанияРаботников.Валюта6
			|			КОНЕЦ КАК Валюта6,
			|			УдержанияРаботников.ДокументОснование КАК ДокументОснование,
			|			УдержанияРаботников.ФизЛицо КАК Физлицо
			|		ИЗ
			|			РегистрСведений.ПлановыеУдержанияРаботников.СрезПоследних(
			|					&парамНачало,
			|					Физлицо В
			|						(ВЫБРАТЬ
			|							СписокРаботников.Физлицо
			|						ИЗ
			|							ВТСписокРаботников КАК СписокРаботников)) КАК УдержанияРаботников
			|		ГДЕ
			|			УдержанияРаботников.Действие <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			УдержанияРаботников.Период,
			|			УдержанияРаботников.ВидРасчета,
			|			УдержанияРаботников.Действие,
			|			УдержанияРаботников.Показатель1,
			|			УдержанияРаботников.Показатель2,
			|			УдержанияРаботников.Показатель3,
			|			УдержанияРаботников.Показатель4,
			|			УдержанияРаботников.Показатель5,
			|			УдержанияРаботников.Показатель6,
			|			УдержанияРаботников.Валюта1,
			|			УдержанияРаботников.Валюта2,
			|			УдержанияРаботников.Валюта3,
			|			УдержанияРаботников.Валюта4,
			|			УдержанияРаботников.Валюта5,
			|			УдержанияРаботников.Валюта6,
			|			УдержанияРаботников.ДокументОснование,
			|			УдержанияРаботников.ФизЛицо
			|		ИЗ
			|			РегистрСведений.ПлановыеУдержанияРаботников КАК УдержанияРаботников
			|		ГДЕ
			|			УдержанияРаботников.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И УдержанияРаботников.Период > &парамНачало
			|			И УдержанияРаботников.Период <= &парамКонец
			|		
			|		ОБЪЕДИНИТЬ ВСЕ
			|		
			|		ВЫБРАТЬ
			|			УдержанияРаботников.ПериодЗавершения,
			|			УдержанияРаботников.ВидРасчета,
			|			УдержанияРаботников.ДействиеЗавершения,
			|			УдержанияРаботников.Показатель1Завершения,
			|			УдержанияРаботников.Показатель2Завершения,
			|			УдержанияРаботников.Показатель3Завершения,
			|			УдержанияРаботников.Показатель4Завершения,
			|			УдержанияРаботников.Показатель5Завершения,
			|			УдержанияРаботников.Показатель6Завершения,
			|			УдержанияРаботников.Валюта1Завершения,
			|			УдержанияРаботников.Валюта2Завершения,
			|			УдержанияРаботников.Валюта3Завершения,
			|			УдержанияРаботников.Валюта4Завершения,
			|			УдержанияРаботников.Валюта5Завершения,
			|			УдержанияРаботников.Валюта6Завершения,
			|			УдержанияРаботников.ДокументОснование,
			|			УдержанияРаботников.ФизЛицо
			|		ИЗ
			|			РегистрСведений.ПлановыеУдержанияРаботников КАК УдержанияРаботников
			|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботников КАК УдержанияРаботниковПроверка
			|				ПО УдержанияРаботников.ФизЛицо = УдержанияРаботниковПроверка.ФизЛицо
			|					И УдержанияРаботников.ВидРасчета = УдержанияРаботниковПроверка.ВидРасчета
			|					И УдержанияРаботников.ДокументОснование = УдержанияРаботниковПроверка.ДокументОснование
			|					И УдержанияРаботников.Период < УдержанияРаботниковПроверка.Период
			|					И УдержанияРаботников.Период >= УдержанияРаботниковПроверка.ПериодЗавершения
			|		ГДЕ
			|			УдержанияРаботников.ФизЛицо В
			|					(ВЫБРАТЬ
			|						СписокРаботников.Физлицо
			|					ИЗ
			|						ВТСписокРаботников КАК СписокРаботников)
			|			И УдержанияРаботников.ПериодЗавершения МЕЖДУ &парамНачало И &парамКонец
			|			И УдержанияРаботников.ФизЛицо ЕСТЬ NULL ) КАК УдержанияРаботников
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты1
			|			ПО (Валюты1.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта1 = Валюты1.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты2
			|			ПО (Валюты2.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта2 = Валюты2.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты3
			|			ПО (Валюты3.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта3 = Валюты3.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты4
			|			ПО (Валюты4.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта4 = Валюты4.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты5
			|			ПО (Валюты5.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта5 = Валюты5.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК Валюты6
			|			ПО (Валюты6.Период = &парамДатаВалютногоУчета)
			|				И УдержанияРаботников.Валюта6 = Валюты6.Валюта
			|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|				НеВводимыеПоказатели.Ссылка КАК Ссылка,
			|				НеВводимыеПоказатели.НомерСтроки КАК НомерСтроки,
			|				НеВводимыеПоказатели.Показатель КАК Показатель,
			|				НеВводимыеПоказатели.Показатель.ВозможностьИзменения КАК ПоказательВозможностьИзменения,
			|				ЗначенияВводимыхКадровыхПоказателей.ЗначениеПоказателя КАК ЗначениеПоказателя,
			|				ЗначенияВводимыхКадровыхПоказателей.ФизЛицо КАК ФизЛицо,
			|				ЗначенияВводимыхКадровыхПоказателей.Период КАК Период,
			|				ЗначенияВводимыхКадровыхПоказателей.Действие КАК Действие
			|			ИЗ
			|				ВТУдержанияНеВводимыеПоказатели КАК НеВводимыеПоказатели
			|					ЛЕВОЕ СОЕДИНЕНИЕ ВТЗначенияВводимыхКадровыхУдержаний КАК ЗначенияВводимыхКадровыхПоказателей
			|					ПО НеВводимыеПоказатели.Показатель = ЗначенияВводимыхКадровыхПоказателей.Показатель) КАК ЗначенияВводимыхКадровыхПоказателей
			|			ПО УдержанияРаботников.Физлицо = ЗначенияВводимыхКадровыхПоказателей.ФизЛицо
			|				И УдержанияРаботников.Период = ЗначенияВводимыхКадровыхПоказателей.Период
			|				И УдержанияРаботников.Действие = ЗначенияВводимыхКадровыхПоказателей.Действие
			|				И УдержанияРаботников.ВидРасчета = ЗначенияВводимыхКадровыхПоказателей.Ссылка
			|		ПО РаботникиОрганизации.Физлицо = УдержанияРаботников.Физлицо
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоказателиУдержаний КАК Показатели
			
			|		ПО УдержанияРаботников.ВидРасчета = Показатели.Ссылка
			|			И (РаботникиОрганизации.Физлицо = Показатели.Сотрудник.ФизЛицо
			|				ИЛИ РаботникиОрганизации.Подразделение = Показатели.Подразделение
			|				ИЛИ Показатели.ВидПоказателя1 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя2 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя3 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя4 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя5 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			|				ИЛИ Показатели.ВидПоказателя6 = Значение(Перечисление.ВидыПоказателейСхемМотивации.Общий)
			
			|				)
			|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
			|			УправленческиеУдержания.ФизЛицо КАК Физлицо,
			|			УправленческиеУдержания.ВидСхемыМотивации КАК ВидСхемыМотивации,
			|			УправленческиеУдержания.Подразделение КАК Подразделение
			|		ИЗ
			|			РегистрРасчета.УправленческиеУдержания КАК УправленческиеУдержания
			|		ГДЕ
			|			УправленческиеУдержания.ПериодРегистрации = &парамНачало
			|			И УправленческиеУдержания.Регистратор <> &парамРегистратор) КАК УправленческиеУдержания
			|		ПО УправленческиеУдержания.Физлицо = УдержанияРаботников.Физлицо
			|
			|ГДЕ
			|	УправленческиеУдержания.ФизЛицо ЕСТЬ NULL И
			|	УдержанияРаботников.ВидРасчета ЕСТЬ НЕ NULL 
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизлицоНаименование,
			|	Физлицо,
			|	ДокументОснование,
			|	ВидРасчета,
			|	Период";
		КонецЕсли;
		

		Запрос.Текст = ТекстЗапросаУдержаний;
				
		УдержанияВыборка = Запрос.Выполнить().Выбрать();
		
		ТЗУдержания = СформироватьТаблицуУдержаний(УдержанияВыборка);
		
		Удержания.Загрузить(ТЗУдержания);
		
		
	// заполнение  ПогашениеЗаймов
	// ограничивающее условие на работников
	Если ПостроительЗапроса = Неопределено Тогда
		
		СписокРаботниковТекст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Работники.Физлицо КАК Физлицо
		|ИЗ
		|	РегистрСведений.Работники.СрезПоследних(&парамНачало) КАК Работники
		|ГДЕ 
		|	ИСТИНА " + УсловиеНаПодразделения + "
		|		
		|ОБЪЕДИНИТЬ
		|		
		|ВЫБРАТЬ
		|	Работники.Физлицо
		|ИЗ
		|	РегистрСведений.Работники КАК Работники
		|		
		|ГДЕ
		|	Работники.Период МЕЖДУ &парамНачало И &парамКонец " + УсловиеНаПодразделения;
	
	Иначе 
		//Основной текст запроса
		ПостроительЗапроса.Текст = ИсходныйТекстПостроителя;
		ПостроительЗапроса.Выполнить();
		
		// Установим параметры запроса
		СписокРаботниковТекст = "&СписокРаботников";
		СписокРаботников = ПостроительЗапроса.Результат.Выгрузить().ВыгрузитьКолонку("Сотрудник");
		Запрос.УстановитьПараметр("СписокРаботников", СписокРаботников);
		
	КонецЕсли;
	// заполняем погашение займов
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПогашениеЗаймовРаботникамиОстатки.ФизЛицо,
	|	ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма,
	|	ПогашениеЗаймовРаботникамиОстатки.ФизЛицо.Наименование КАК ФизЛицоНаименование
	|ИЗ
	|	РегистрНакопления.ПогашениеЗаймовРаботниками.Остатки(
	|		&парамКонец,
	|		(ДоговорЗайма.НачалоПогашения <= &парамНачало
	|			ИЛИ ДоговорЗайма.ПроцентЗаПользованиеЗаймом > 0)
	|			И Физлицо В
	|				(" + СписокРаботниковТекст + ")) КАК ПогашениеЗаймовРаботникамиОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ПогашениеЗаймовРаботниками КАК ПогашениеЗаймовРаботникамиОбороты
	|		ПО ПогашениеЗаймовРаботникамиОстатки.ФизЛицо = ПогашениеЗаймовРаботникамиОбороты.ФизЛицо
	|			И ПогашениеЗаймовРаботникамиОстатки.ДоговорЗайма = ПогашениеЗаймовРаботникамиОбороты.ДоговорЗайма
	|			И (ПогашениеЗаймовРаботникамиОбороты.Период МЕЖДУ &парамНачало И &парамКонец)
	|			И (ПогашениеЗаймовРаботникамиОбороты.УдержаноИзЗарплаты)
	|ГДЕ
	|	ПогашениеЗаймовРаботникамиОбороты.ФизЛицо ЕСТЬ NULL 
	|	И (ПогашениеЗаймовРаботникамиОстатки.ОсновнойДолгОстаток <> 0
	|			ИЛИ ПогашениеЗаймовРаботникамиОстатки.ПроцентыОстаток <> 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицоНаименование";
	Запрос.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход);
	Если ПостроительЗапроса <> Неопределено Тогда
		// Установим параметры запроса
		Запрос.УстановитьПараметр("парамНачало" , ПериодРегистрации);
		Запрос.УстановитьПараметр("парамКонец" , КонецМесяца(ПериодРегистрации));
	КонецЕсли;
	ПогашениеЗаймов.Загрузить(Запрос.Выполнить().Выгрузить());
	
	Возврат Истина;

КонецФункции

// Процедура рассчитывает ресурсы всех наборов записей и заполняет 
// реквизиты Результат всех табличных частей документа
Процедура РассчитатьВсе() Экспорт
	
	Отказ = Ложь;
	
	//Перед вызов процедуры документ должнен быть записан, движения должны быть удалены 
	
	// Перечитаем объект и соберем данные для заполнения наборов записей регистров
	НачатьТранзакцию();
	Прочитать();
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоНачислениям = СформироватьЗапросПоНачисления().Выбрать();
	ВыборкаПоУдержаниям = СформироватьЗапросПоУдержания().Выбрать();
	ЗафиксироватьТранзакцию();
	
	// позиционируем выборку
	ВыборкаПоШапкеДокумента.Следующий();
	
	// Создадим наборы записей используемых регистров 
	НаборНачисления = РегистрыРасчета.УправленческиеНачисления.СоздатьНаборЗаписей();
	НаборНачисления.Отбор.Регистратор.Значение = Ссылка;
	
	НаборУдержания = РегистрыРасчета.УправленческиеУдержания.СоздатьНаборЗаписей();
	НаборУдержания.Отбор.Регистратор.Значение = Ссылка;
		
	// заполним набор начислений
	Пока ВыборкаПоНачислениям.Следующий() Цикл 
		// проверим очередную строку табличной части
		ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоНачислениям, Отказ);
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуНачислений(ВыборкаПоНачислениям, ВыборкаПоШапкеДокумента, НаборНачисления);
		КонецЕсли;
	КонецЦикла;

	// заполним набор удержаний
	Пока ВыборкаПоУдержаниям.Следующий() Цикл 
		// проверим очередную строку табличной части
		ПроверитьЗаполнениеСтрокиУдержания(ВыборкаПоУдержаниям, Отказ);
		Если НЕ Отказ Тогда
			// Заполним записи в наборах записей регистров
			ДобавитьСтрокуУдержаний(ВыборкаПоУдержаниям, ВыборкаПоШапкеДокумента, НаборУдержания);
		КонецЕсли;
	КонецЦикла;

	Если Отказ Тогда
		Возврат;
	КонецЕсли; 
	НаборНачисления.Записать(Истина);
	НаборУдержания.Записать(Истина);
	
	// рассчитываем записи
	// при этом передаем не только набор записей регистра расчета, но и набор записей регисра 
	// накопления со сведениями об отработанном времени
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("УправленческиеНачисления", НаборНачисления, Начисления,,,, Начисления.ВыгрузитьКолонку("ФизЛицо"));

	// запишем рассчитанный набор перед расчетом удержаний
	НаборНачисления.Записать(Истина);
	
	// удержания - в последнюю очередь
	ПроведениеРасчетов.РассчитатьЗаписиРегистраРасчета("УправленческиеУдержания", НаборУдержания, Удержания,,,, Удержания.ВыгрузитьКолонку("ФизЛицо"));
	
	// Удаляем движения
	Для Каждого Набор Из Движения Цикл
		Если ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.УправленческиеНачисления") 
			или ТипЗнч(Набор)=Тип("РегистрРасчетаНаборЗаписей.УправленческиеУдержания") Тогда
			
			// Удаляем движения
			Набор.Очистить();
			Набор.Записать();
		КонецЕсли;
	КонецЦикла;
	
	// и наконец, погашения займов
	РассчитатьПогашениеЗаймов();

КонецПроцедуры  // Рассчитать

#Если Клиент Тогда
	
// Функция заполняет табличное поле "РасчетныйЛисток"
//
// Параметры: 
//  ФизЛицо - элемент справочника "ФизическиеЛица"
//  Приказ - приказ
//
// Возвращаемое значение:
//  Табличное поле с запаленным расчетным листком
//
Функция ЗаполнитьТаблицуРасчетногоЛистка(ФизЛицо, Сотрудник) Экспорт
	ЗапросРЛ = Новый Запрос;
	ЗапросРЛ.УстановитьПараметр("Расход", ВидДвиженияНакопления.Расход); 
	
	// Дополнительный запрос по фактически отработанному времени регистра расчетов "Начисления работников".
	Запрос = Новый Запрос();		
	
	ЗапросРЛ.УстановитьПараметр("ПериодРегистрации", 	   ПериодРегистрации);
	ЗапросРЛ.УстановитьПараметр("КонецПериодаРегистрации", КонецМесяца(ПериодРегистрации));
	ЗапросРЛ.УстановитьПараметр("ПрошлыйПериодРегистрации", 	   НачалоМесяца(ПериодРегистрации)-1);
	ЗапросРЛ.УстановитьПараметр("КонецПрошлогоПериодаРегистрации", КонецМесяца(НачалоМесяца(ПериодРегистрации)-1));
	ЗапросРЛ.УстановитьПараметр("Ссылка", Ссылка);
	ЗапросРЛ.УстановитьПараметр("Работник", ФизЛицо); 
	
	Запрос.УстановитьПараметр("ПериодРегистрации",			ПериодРегистрации);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации",	КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Работник", 	   ФизЛицо);		
	
	Модифицированность = Модифицированность();
	
	Если Модифицированность или Не Проведен Тогда
		ВзаиморасчетыПоДокументу =
		"ВЫБРАТЬ
		|	Доходы.Физлицо КАК ФизЛицо,
		|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода
		|ИЗ
		|	(ВЫБРАТЬ
		|		НачисленияРаботников.Сотрудник.Физлицо КАК Физлицо,
		|		НачисленияРаботников.Результат КАК СуммаДохода
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникам.Начисления КАК НачисленияРаботников
		|	
		|	ГДЕ";
		Если Не Проведен Тогда
			ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
			|		НачисленияРаботников.Ссылка = &Ссылка И";
		Иначе
			ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
			|		НачисленияРаботников.Ссылка <> &Ссылка И
			|		НачисленияРаботников.Ссылка.ПериодРегистрации = &ПериодРегистрации И";
		КонецЕсли;
		ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
		|		(НачисленияРаботников.Результат <> 0) И
		|		НачисленияРаботников.Сотрудник.Физлицо = &Работник
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗплУдержания.Физлицо,
		|		-(ЗплУдержания.Результат)
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникам.Удержания КАК ЗплУдержания
		|	
		|	ГДЕ";
		Если Не Проведен Тогда
			ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
			|		ЗплУдержания.Ссылка = &Ссылка И";
		Иначе
			ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
			|		ЗплУдержания.Ссылка <> &Ссылка И
			|		ЗплУдержания.Ссылка.ПериодРегистрации = &ПериодРегистрации И";
		КонецЕсли;
		ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
		|		(ЗплУдержания.Результат <> 0) И
		|		ЗплУдержания.Физлицо = &Работник
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗплЗаймы.ФизЛицо,
		|		-(ЗплЗаймы.ПогашеноЗайма)
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникам.ПогашениеЗаймов КАК ЗплЗаймы
		|	
		|	ГДЕ";
		Если Не Проведен Тогда
			ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
			|		ЗплЗаймы.Ссылка = &Ссылка И";
		Иначе
			ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
			|		ЗплЗаймы.Ссылка <> &Ссылка И
			|		ЗплЗаймы.Ссылка.ПериодРегистрации = &ПериодРегистрации И";
		КонецЕсли;
		ВзаиморасчетыПоДокументу = ВзаиморасчетыПоДокументу + "
		|		(ЗплЗаймы.ПогашеноЗайма <> 0) И
		|		ЗплЗаймы.Физлицо = &Работник) КАК Доходы
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.Физлицо";
	КонецЕсли;
	
	// документ записан и проведен, построим отчет по регистрам
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачисленияУдержания.ВидДвижения,
	|	НачисленияУдержания.Регистратор КАК Регистратор,
	|	НачисленияУдержания.ФизЛицо КАК ФизЛицо,
	|	НачисленияУдержания.ВидРасчета,
	|	НачисленияУдержания.ПорядокВидаРасчета,
	|	НачисленияУдержания.НомерСтроки КАК НомерСтроки,
	|	НачисленияУдержания.ПериодДействияНачало,
	|	НачисленияУдержания.ПериодДействияКонец,
	|	НачисленияУдержания.ОтработаноДней КАК ОтработаноДней,
	|	НачисленияУдержания.ОтработаноЧасов КАК ОтработаноЧасов,
	|	ЕСТЬNULL(НачисленияУдержания.Начисления,0) КАК Начисления,
	|	ЕСТЬNULL(НачисленияУдержания.Удержания,0) КАК Удержания,
	|	ЕСТЬNULL(НачисленияУдержания.СуммаУпрНачальныйОстаток,0) КАК СуммаУпрНачальныйОстаток,
	|	ЕСТЬNULL(НачисленияУдержания.СуммаУпрКонечныйОстаток,0) КАК СуммаУпрКонечныйОстаток
	|ИЗ
	|	(ВЫБРАТЬ
	|		""Начисления"" КАК ВидДвижения,
	|		УправленческиеНачисления.ПериодРегистрации КАК ПериодРегистрации,
	|		УправленческиеНачисления.Регистратор КАК Регистратор,
	|		УправленческиеНачисления.ФизЛицо КАК ФизЛицо,
	|		УправленческиеНачисления.ВидРасчета.Наименование КАК ВидРасчета,
	|		УправленческиеНачисления.ВидРасчета.Код КАК ПорядокВидаРасчета,
	|		УправленческиеНачисления.НомерСтроки КАК НомерСтроки,
	|		УправленческиеНачисления.ПериодДействияНачало КАК ПериодДействияНачало,
	|		УправленческиеНачисления.ПериодДействияКонец КАК ПериодДействияКонец,
	|		УправленческиеНачисления.ОтработаноДней КАК ОтработаноДней,
	|		УправленческиеНачисления.ОтработаноЧасов КАК ОтработаноЧасов,
	|		УправленческиеНачисления.Результат КАК Начисления,
	|		NULL КАК Удержания,
	|		NULL КАК СуммаУпрНачальныйОстаток,
	|		NULL КАК СуммаУпрКонечныйОстаток
	|	ИЗ
	|		РегистрРасчета.УправленческиеНачисления КАК УправленческиеНачисления
	|	
	|ГДЕ
	|		УправленческиеНачисления.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И УправленческиеНачисления.ФизЛицо = &Работник";
	Если Модифицированность Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|		И УправленческиеНачисления.Регистратор <> &Ссылка";
	ИначеЕсли Не Проведен Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|			
		|	ОБЪЕДИНИТЬ
		|
		|	ВЫБРАТЬ
		|		""Начисления"",
		|		&ПериодРегистрации,
		|		&Ссылка КАК Регистратор,
		|		НачислениеЗарплатыРаботникамНачисления.Сотрудник.ФизЛицо,
		|		НачислениеЗарплатыРаботникамНачисления.ВидРасчета.Наименование,
		|		НачислениеЗарплатыРаботникамНачисления.ВидРасчета.Код,
		|		НачислениеЗарплатыРаботникамНачисления.НомерСтроки,
		|		НачислениеЗарплатыРаботникамНачисления.ДатаНачала,
		|		НачислениеЗарплатыРаботникамНачисления.ДатаОкончания,
		|		НачислениеЗарплатыРаботникамНачисления.ОтработаноДней,
		|		НачислениеЗарплатыРаботникамНачисления.ОтработаноЧасов,
		|		НачислениеЗарплатыРаботникамНачисления.Результат,
		|		NULL,
		|		NULL,
		|		NULL
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникам.Начисления КАК НачислениеЗарплатыРаботникамНачисления
		|	
		|ГДЕ
		|		НачислениеЗарплатыРаботникамНачисления.Сотрудник.ФизЛицо = &Работник
		|		И НачислениеЗарплатыРаботникамНачисления.Ссылка = &Ссылка";		
		
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Удержания"",
	|		УправленческиеУдержания.ПериодРегистрации,
	|		УправленческиеУдержания.Регистратор,
	|		УправленческиеУдержания.ФизЛицо,
	|		УправленческиеУдержания.ВидРасчета.Наименование,
	|		УправленческиеУдержания.ВидРасчета.Код КАК ПорядокВидаРасчета,
	|		УправленческиеУдержания.НомерСтроки КАК НомерСтроки,
	|		УправленческиеУдержания.БазовыйПериодНачало,
	|		УправленческиеУдержания.БазовыйПериодКонец,
	|		NULL,
	|		NULL,
	|		NULL,
	|		УправленческиеУдержания.Результат,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрРасчета.УправленческиеУдержания КАК УправленческиеУдержания
	|	
	|	ГДЕ
	|		УправленческиеУдержания.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И УправленческиеУдержания.ФизЛицо = &Работник";
	Если Модифицированность Тогда 
		ТекстЗапроса = ТекстЗапроса + "
		|		И УправленческиеУдержания.Регистратор <> &Ссылка";
	ИначеЕсли Не Проведен Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		""Удержания"",
		|		&ПериодРегистрации,
		|		&Ссылка,
		|		НачислениеЗарплатыРаботникамУдержания.ФизЛицо,
		|		НачислениеЗарплатыРаботникамУдержания.ВидРасчета.Наименование,
		|		НачислениеЗарплатыРаботникамУдержания.ВидРасчета.Код КАК ПорядокВидаРасчета,
		|		НачислениеЗарплатыРаботникамУдержания.НомерСтроки КАК НомерСтроки,
		|		НачислениеЗарплатыРаботникамУдержания.ДатаНачала,
		|		НачислениеЗарплатыРаботникамУдержания.ДатаОкончания,
		|		NULL,
		|		NULL,
		|		NULL,
		|		НачислениеЗарплатыРаботникамУдержания.Результат,
		|		NULL,
		|		NULL
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникам.Удержания КАК НачислениеЗарплатыРаботникамУдержания				
		|	
		|	ГДЕ
		|		НачислениеЗарплатыРаботникамУдержания.ФизЛицо = &Работник
		|		И НачислениеЗарплатыРаботникамУдержания.Ссылка = &Ссылка";	
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		""Удержания"",
	|		НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботниками.Период, МЕСЯЦ),
	|		ПогашениеЗаймовРаботниками.Регистратор,
	|		ПогашениеЗаймовРаботниками.ФизЛицо,
	|		""Погашение займа"",
	|		NULL,
	|		ПогашениеЗаймовРаботниками.НомерСтроки,
	|		НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботниками.Период, МЕСЯЦ),
	|		КОНЕЦПЕРИОДА(ПогашениеЗаймовРаботниками.Период, МЕСЯЦ),
	|		NULL,
	|		NULL,
	|		NULL,
	|		ПогашениеЗаймовРаботниками.ОсновнойДолг + ПогашениеЗаймовРаботниками.Проценты,
	|		NULL,
	|		NULL
	|	ИЗ
	|		РегистрНакопления.ПогашениеЗаймовРаботниками КАК ПогашениеЗаймовРаботниками
	|	
	|	ГДЕ
	|		ПогашениеЗаймовРаботниками.ВидДвижения = &Расход 	
	|		И ПогашениеЗаймовРаботниками.Период МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации
	|		И ПогашениеЗаймовРаботниками.УдержаноИзЗарплаты		
	|		И ПогашениеЗаймовРаботниками.ФизЛицо = &Работник";
	Если Модифицированность Тогда 
		ТекстЗапроса = ТекстЗапроса +  "
		|		И ПогашениеЗаймовРаботниками.Регистратор <> &Ссылка";
	ИначеЕсли Не Проведен Тогда
		ТекстЗапроса = ТекстЗапроса + "			
		|	
		|	ОБЪЕДИНИТЬ
		|	
		|	ВЫБРАТЬ
		|		""Удержания"",
		|		НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		&Ссылка,
		|		НачислениеЗарплатыРаботникамПогашениеЗаймов.ФизЛицо,
		|		""Погашение займа"",
		|		NULL,
		|		НачислениеЗарплатыРаботникамПогашениеЗаймов.НомерСтроки,
		|		НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		НачислениеЗарплатыРаботникамПогашениеЗаймов.ПогашеноЗайма,
		|		NULL,
		|		NULL
		|	ИЗ
		|		Документ.НачислениеЗарплатыРаботникам.ПогашениеЗаймов КАК НачислениеЗарплатыРаботникамПогашениеЗаймов
		|	
		|	ГДЕ
		|		НачислениеЗарплатыРаботникамПогашениеЗаймов.ФизЛицо = &Работник
		|		И НачислениеЗарплатыРаботникамПогашениеЗаймов.Ссылка = &Ссылка";			
	КонецЕсли;
	ТекстЗапроса = ТекстЗапроса + "
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|";	
	Если Модифицированность Тогда 
		
		ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБРАТЬ
		|		""Взаиморасчеты"",
		|		НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		NULL,
		|		Взаиморасчеты.Физлицо,
		|		""Выплата"",
		|		NULL,
		|		NULL,
		|		НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		СУММА(Взаиморасчеты.СуммаУпрРасход),
		|		СУММА(Взаиморасчеты.СуммаУпрНачальныйОстаток),
		|		СУММА(Взаиморасчеты.СуммаУпрКонечныйОстаток)
		|	ИЗ
		|		(ВЫБРАТЬ
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.Физлицо,
		|			NULL КАК СуммаУпрРасход,
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаУпрНачальныйОстаток,
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаУпрКонечныйОстаток					
		|		ИЗ 			
		|			РегистрНакопления.ВзаиморасчетыСРаботниками.ОстаткиИОбороты(&ПрошлыйПериодРегистрации, &КонецПрошлогоПериодаРегистрации, Месяц, , Физлицо = &Работник) КАК ВзаиморасчетыСРаботникамиОстаткиИОбороты
		|
		|		ОБЪЕДИНИТЬ ВСЕ		
		|
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ			
		|			ВзаиморасчетыПоДокументу.Физлицо,
		|			NULL,
		|			NULL,
		|			ВзаиморасчетыПоДокументу.СуммаДохода
		|		ИЗ 						
		|			(" + ВзаиморасчетыПоДокументу + ") КАК ВзаиморасчетыПоДокументу
		|			
		|		ОБЪЕДИНИТЬ ВСЕ
		|
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВзаиморасчетыСРаботникамиОстаткиИОборотыТекПериода.Физлицо,
		|			ВзаиморасчетыСРаботникамиОстаткиИОборотыТекПериода.СуммаУпрРасход,
		|			NULL,
		|			NULL
		|		ИЗ
		|			РегистрНакопления.ВзаиморасчетыСРаботниками.ОстаткиИОбороты(&ПериодРегистрации, &КонецПериодаРегистрации, Месяц, , Физлицо = &Работник)КАК ВзаиморасчетыСРаботникамиОстаткиИОборотыТекПериода
		|) КАК Взаиморасчеты
		|	СГРУППИРОВАТЬ ПО Взаиморасчеты.Физлицо) КАК НачисленияУдержания";
	ИначеЕсли Не Проведен Тогда
		ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		""Взаиморасчеты"",
		|		НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		NULL,
		|		Взаиморасчеты.Физлицо,
		|		""Выплата"",
		|		NULL,
		|		NULL,
		|		НАЧАЛОПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(&ПериодРегистрации, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		СУММА(Взаиморасчеты.СуммаУпрРасход),
		|		СУММА(Взаиморасчеты.СуммаУпрНачальныйОстаток),
		|		СУММА(Взаиморасчеты.СуммаУпрКонечныйОстаток)
		|	ИЗ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.Физлицо,
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрРасход КАК СуммаУпрРасход,
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрНачальныйОстаток КАК СуммаУпрНачальныйОстаток,
		|			ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрКонечныйОстаток КАК СуммаУпрКонечныйОстаток
		|		ИЗ 			
		|			РегистрНакопления.ВзаиморасчетыСРаботниками.ОстаткиИОбороты(&ПериодРегистрации, &КонецПериодаРегистрации, Месяц, , Физлицо = &Работник) КАК ВзаиморасчетыСРаботникамиОстаткиИОбороты
		|
		|		ОБЪЕДИНИТЬ ВСЕ		
		|
		|		ВЫБРАТЬ РАЗЛИЧНЫЕ			
		|			ВзаиморасчетыПоДокументу.Физлицо,
		|			NULL,
		|			NULL,
		|			ВзаиморасчетыПоДокументу.СуммаДохода
		|		ИЗ 						
		|			(" + ВзаиморасчетыПоДокументу + ") КАК ВзаиморасчетыПоДокументу) КАК Взаиморасчеты
		|	СГРУППИРОВАТЬ ПО Взаиморасчеты.Физлицо) КАК НачисленияУдержания";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "
		|	ВЫБРАТЬ
		|		""Взаиморасчеты"",
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОстаткиИОбороты.Период, МЕСЯЦ),
		|		NULL,
		|		ВзаиморасчетыСРаботникамиОстаткиИОбороты.Физлицо,
		|		""Выплата"",
		|		NULL,
		|		NULL,
		|		НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОстаткиИОбороты.Период, МЕСЯЦ),
		|		КОНЕЦПЕРИОДА(ВзаиморасчетыСРаботникамиОстаткиИОбороты.Период, МЕСЯЦ),
		|		NULL,
		|		NULL,
		|		NULL,
		|		ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрРасход,
		|		ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрНачальныйОстаток,
		|		ВзаиморасчетыСРаботникамиОстаткиИОбороты.СуммаУпрКонечныйОстаток
		|	ИЗ
		|		РегистрНакопления.ВзаиморасчетыСРаботниками.ОстаткиИОбороты(&ПериодРегистрации, &КонецПериодаРегистрации, Месяц, , Физлицо = &Работник) КАК ВзаиморасчетыСРаботникамиОстаткиИОбороты) КАК НачисленияУдержания";			
	КонецЕсли;
	
	
	ТекстЗапроса = ТекстЗапроса + "
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	НачисленияУдержания.ПорядокВидаРасчета,
	|	НачисленияУдержания.ПериодДействияНачало
	|
	|ИТОГИ 	МАКСИМУМ(ОтработаноДней), 
	|		МАКСИМУМ(ОтработаноЧасов), 
	|		СУММА(Начисления), 
	|		СУММА(Удержания), 
	|		СУММА(СуммаУпрНачальныйОстаток), 
	|		СУММА(СуммаУпрКонечныйОстаток),
	|	    МИНИМУМ(ПериодДействияНачало),
	|	    МАКСИМУМ(ПериодДействияКонец)
	|	ПО
	|		ФизЛицо";
	
	ЗапросРЛ.Текст = ТекстЗапроса;		
	
	РезультатЗапроса = ЗапросРЛ.Выполнить();
	
	Если Сотрудник = Неопределено Тогда
		Запрос = Новый Запрос(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	СотрудникиОрганизаций.Ссылка КАК Сотрудник
		|ИЗ
		|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		|ГДЕ
		|	СотрудникиОрганизаций.Физлицо = &Физлицо");
		Запрос.УстановитьПараметр("Физлицо", ФизЛицо);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтруктураПоискаПоРаботнику = Новый Структура("Сотрудник", Выборка.Сотрудник);
		КонецЕсли;
	Иначе
		СтруктураПоискаПоРаботнику = Новый Структура("Сотрудник", Сотрудник);
	КонецЕсли;
	СтруктураПоискаПоФизЛицу = Новый Структура("ФизЛицо",ФизЛицо);
	
	Макет = ПолучитьМакет("РасчетныйЛисток");
	
	ОбластьШапка 	  		= Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТЧ		= Макет.ПолучитьОбласть("Заголовок");
	ОбластьНачисленоУдержано= Макет.ПолучитьОбласть("НачисленоУдержано");
	ОбластьВсего            = Макет.ПолучитьОбласть("Всего");
	ОбластьПодвал			= Макет.ПолучитьОбласть("Подвал");
	
	КолонкаНачислено = 2;
	КолонкаПериодНачислено = 3;
	КолонкаОтработаноДней = 5;
	КолонкаОтработаноЧасов = 6;
	КолонкаСуммаНачислено = 7;
	КолонкаУдержано = 9;
	КолонкаПериодУдержано = 12;
	КолонкаСуммаУдержано = 14;
	
	ВсегоНачисления = 0; КоличествоНачислений = 0;
	ВсегоУдержания = 0; КоличествоУдержаний  = 0;
		
	НеНайденыЗаписиВЗапросе	= Истина;
	
	// В этот табличный документ будет собираться данные для РЛ до проверки на возвможность его вывода (по количеству строк)
	ВременныйТабличныйДокумент = Новый ТабличныйДокумент;		
	
	ВыборкаПоФЛ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаПоФЛ.Следующий() Цикл
		
		НеНайденыЗаписиВЗапросе	= Ложь;
		
		ТекстПериода  	   = Формат(ПериодРегистрации, "ДФ = 'ММММ гггг ''г.'''");
		
		// Очистим временный табличный документ
		ВременныйТабличныйДокумент.Очистить();
		
		КоличествоНачислений = 0;
		КоличествоУдержаний  = 0;
		
		ОбластьШапка.Параметры.Работник 	 = "Работник: " + ВыборкаПоФЛ.ФизЛицо;
		
		ВсегоНачисления                      = ВыборкаПоФЛ.Начисления;
		ВсегоУдержания                       = ВыборкаПоФЛ.Удержания;
		
		// Данные для подвала
		СуммаНаНачалоПериода = ВыборкаПоФЛ.СуммаУпрНачальныйОстаток;
		СуммаНаКонецПериода  = ВыборкаПоФЛ.СуммаУпрКонечныйОстаток;			
		
		ОбластьВсего.Параметры.ВсегоНачисления = ВыборкаПоФЛ.Начисления;
		ОбластьВсего.Параметры.ВсегоУдержания  = ВыборкаПоФЛ.Удержания;
		
		Если СуммаНаНачалоПериода = NULL Тогда
			
			ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = "Долг за предприятием на начало месяца: ";
			ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = 0;
			
		Иначе
			
			Если СуммаНаНачалоПериода >= 0  Тогда
				ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = "Долг за предприятием на начало месяца: ";
				ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = СуммаНаНачалоПериода;
			Иначе
				ОбластьПодвал.Параметры.ТекстДолгНаНачалоПериода = "Долг за работником на начало месяца: ";
				ОбластьПодвал.Параметры.СуммаДолгНаНачалоПериода = 0 - СуммаНаНачалоПериода;
			КонецЕсли;
			
		КонецЕсли;
		
		Если СуммаНаКонецПериода = NULL Тогда
			
			ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за работником на конец месяца: ";
			ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0;
			
		Иначе
			
			Если СуммаНаКонецПериода >= 0  Тогда
				ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за предприятием на конец месяца: ";
				ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = СуммаНаКонецПериода;
			Иначе
				ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за работником на конец месяца: ";
				ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0 - СуммаНаКонецПериода;
			КонецЕсли;
			
		КонецЕсли; 
		
		
		ВременныйТабличныйДокумент.Вывести(ОбластьШапка);
		ВременныйТабличныйДокумент.Вывести(ОбластьЗаголовокТЧ);
		ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
		
		ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
		
		ВыборкаПоНС = ВыборкаПоФЛ.Выбрать();
		Пока ВыборкаПоНС.Следующий() Цикл
			Если ВыборкаПоНС.ВидРасчета = "Выплата"  и ВыборкаПоНС.Удержания = 0 Тогда
				Продолжить
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ВыборкаПоНС.ПериодДействияКонец) Тогда
				ДатаОкончанияПериода = ВыборкаПоНС.ПериодДействияКонец
			Иначе
				ДатаОкончанияПериода = КонецМесяца(ВыборкаПоНС.ПериодДействияНачало);
			КонецЕсли; 
			
			Если ВыборкаПоНС.Начисления = NULL Или (ВыборкаПоНС.ВидДвижения = "Удержания") Тогда
				
				НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).Текст = ВыборкаПоНС.ВидРасчета;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаПериодУдержано - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).Текст = ОбщегоНазначения.ОписаниеПериода(ВыборкаПоНС.ПериодДействияНачало,ДатаОкончанияПериода);
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаСуммаУдержано - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).Текст = Формат(ВыборкаПоНС.Удержания,"ЧЦ=15; ЧДЦ=2");
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано + 1).Объединить();
				КоличествоУдержаний = КоличествоУдержаний + 1;
				
			Иначе
				
				НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаНачислено).Текст = ВыборкаПоНС.ВидРасчета;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаНачислено).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).Текст = ОбщегоНазначения.ОписаниеПериода(ВыборкаПоНС.ПериодДействияНачало,ДатаОкончанияПериода);
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаОтработаноДней - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаОтработаноДней).Текст = ВыборкаПоНС.ОтработаноДней;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаОтработаноЧасов).Текст = ВыборкаПоНС.ОтработаноЧасов;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаСуммаНачислено).Текст = Формат(ВыборкаПоНС.Начисления,"ЧЦ=15; ЧДЦ=2");
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаСуммаНачислено).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаУдержано - 1).Объединить();
				КоличествоНачислений = КоличествоНачислений + 1;
			КонецЕсли; 
			
		КонецЦикла;
		
		// если документ модифицирован, то обойдем все табличные части
		Если Модифицированность  Тогда
			// выведем начисления
			Строки = Начисления.НайтиСтроки(СтруктураПоискаПоРаботнику);
			Для Каждого СтрокаНачислений Из Строки Цикл
				НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаНачислено).Текст = СтрокаНачислений.ВидРасчета;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаНачислено).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).Текст = ОбщегоНазначения.ОписаниеПериода(СтрокаНачислений.ДатаНачала,СтрокаНачислений.ДатаОкончания);
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаОтработаноДней - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаОтработаноДней).Текст = СтрокаНачислений.ОтработаноДней;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаОтработаноЧасов).Текст = СтрокаНачислений.ОтработаноЧасов;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаСуммаНачислено).Текст = Формат(СтрокаНачислений.Результат,"ЧЦ=15; ЧДЦ=2");
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаСуммаНачислено).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаУдержано - 1).Объединить();
				КоличествоНачислений = КоличествоНачислений + 1;
				ВсегоНачисления = ВсегоНачисления + СтрокаНачислений.Результат;
				
				ОбластьВсего.Параметры.ВсегоНачисления = ВсегоНачисления;
				
			КонецЦикла;
			
			// выведем удержания
			СтрокиУдержано = Удержания.НайтиСтроки(СтруктураПоискаПоФизЛицу);
			Для Каждого СтрокаУдержано Из СтрокиУдержано Цикл
				НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).Текст = СтрокаУдержано.ВидРасчета;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаПериодУдержано - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).Текст = ОбщегоНазначения.ОписаниеПериода(СтрокаУдержано.ДатаНачала,СтрокаУдержано.ДатаОкончания);
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаСуммаУдержано - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).Текст = Формат(СтрокаУдержано.Результат,"ЧЦ=15; ЧДЦ=2");
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано + 1).Объединить();
				КоличествоУдержаний = КоличествоУдержаний + 1;					
				ВсегоУдержания = ВсегоУдержания + СтрокаУдержано.Результат;
				
				ОбластьВсего.Параметры.ВсегоУдержания = ВсегоУдержания;
				
			КонецЦикла;
			
			// выведем займы
			СтрокиЗаймы = ПогашениеЗаймов.НайтиСтроки(СтруктураПоискаПоФизЛицу);
			Для Каждого СтрокаЗайма Из СтрокиЗаймы Цикл
				НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).Текст = "Погашение займа";
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаПериодУдержано - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).Текст = ОбщегоНазначения.ОписаниеПериода(НачалоМесяца(ПериодРегистрации),КонецМесяца(ПериодРегистрации));
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаСуммаУдержано - 1).Объединить();
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).Текст = Формат(СтрокаЗайма.ПогашеноЗайма,"ЧЦ=15; ЧДЦ=2");
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
				ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано + 1).Объединить();
				КоличествоУдержаний = КоличествоУдержаний + 1;					
				
				ВсегоУдержания = ВсегоУдержания + СтрокаЗайма.ПогашеноЗайма;
				
				ОбластьВсего.Параметры.ВсегоУдержания = ВсегоУдержания;
				
			КонецЦикла;
			
			СуммаНаКонецПериода  = СуммаНаНачалоПериода + ВсегоНачисления - ВсегоУдержания;
			
			Если СуммаНаКонецПериода >= 0  Тогда
				ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за предприятием на конец месяца: ";
				ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = СуммаНаКонецПериода;
			Иначе
				ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за работником на конец месяца: ";
				ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0 - СуммаНаКонецПериода;
			КонецЕсли;					
			
		КонецЕсли;
		
		КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
		
		Если КолвоРасчетов > 0 Тогда
			РасчертитьРасчетныйЛисток(ВременныйТабличныйДокумент,ВысотаТаблицы,КолвоРасчетов)
		КонецЕсли; 
		
		ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
		ВременныйТабличныйДокумент.Вывести(ОбластьПодвал);			
		
	КонецЦикла;			
	
	// документ модифицирован и по запросу ничего не получили
	// обойдем табличные части по данному физлицу
	Если НеНайденыЗаписиВЗапросе и Модифицированность Тогда
		
		
		ТекстПериода  	   = Формат(ПериодРегистрации, "ДФ = 'ММММ гггг ''г.'''");
		
		// Очистим временный табличный документ
		ВременныйТабличныйДокумент.Очистить();
		
		КоличествоНачислений = 0;
		КоличествоУдержаний  = 0;
		
		
		ОбластьШапка.Параметры.Работник 	 = "Работник: " + ФизЛицо;
		
		// Данные для подвала
		СуммаНаНачалоПериода = 0;
		СуммаНаКонецПериода  = 0;				
		
		ВременныйТабличныйДокумент.Вывести(ОбластьШапка);
		ВременныйТабличныйДокумент.Вывести(ОбластьЗаголовокТЧ);
		ВременныйТабличныйДокумент.Вывести(ОбластьНачисленоУдержано);
		
		ВысотаТаблицы = ВременныйТабличныйДокумент.ВысотаТаблицы + 1;
		
		
		// обнулим итоги
		ВсегоНачисления	= 0;
		ВсегоУдержания	= 0;
		
		// выведем начисления
		Строки = Начисления.НайтиСтроки(СтруктураПоискаПоРаботнику);
		Для Каждого СтрокаНачислений Из Строки Цикл
			НомерСтроки = ВысотаТаблицы + КоличествоНачислений;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаНачислено).Текст = СтрокаНачислений.ВидРасчета;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).Текст = ОбщегоНазначения.ОписаниеПериода(СтрокаНачислений.ДатаНачала,СтрокаНачислений.ДатаОкончания);
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаПериодНачислено).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодНачислено, НомерСтроки, КолонкаОтработаноДней - 1).Объединить();
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаОтработаноДней).Текст = СтрокаНачислений.ОтработаноДней;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаОтработаноЧасов).Текст = СтрокаНачислений.ОтработаноЧасов;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаСуммаНачислено).Текст = Формат(СтрокаНачислений.Результат,"ЧЦ=15; ЧДЦ=2");
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаСуммаНачислено).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаНачислено, НомерСтроки, КолонкаУдержано - 1).Объединить();
			КоличествоНачислений = КоличествоНачислений + 1;
			Если ЗначениеЗаполнено(ОбластьВсего.Параметры.ВсегоНачисления) Тогда
				ОбластьВсего.Параметры.ВсегоНачисления = ОбластьВсего.Параметры.ВсегоНачисления + СтрокаНачислений.Результат;
			Иначе
				ОбластьВсего.Параметры.ВсегоНачисления = СтрокаНачислений.Результат;
			КонецЕсли;
			ВсегоНачисления = ВсегоНачисления + СтрокаНачислений.Результат;
			
		КонецЦикла;
		
		// выведем начисления
		СтрокиУдержано = Удержания.НайтиСтроки(СтруктураПоискаПоФизЛицу);
		Для Каждого СтрокаУдержано Из СтрокиУдержано Цикл
			НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).Текст = СтрокаУдержано.ВидРасчета;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаПериодУдержано - 1).Объединить();
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).Текст = ОбщегоНазначения.ОписаниеПериода(СтрокаУдержано.ДатаНачала,СтрокаУдержано.ДатаОкончания);
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаСуммаУдержано - 1).Объединить();
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).Текст = Формат(СтрокаУдержано.Результат,"ЧЦ=15; ЧДЦ=2");
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано + 1).Объединить();
			КоличествоУдержаний = КоличествоУдержаний + 1;					
			ВсегоУдержания = ВсегоУдержания + СтрокаУдержано.Результат;
			
			Если ЗначениеЗаполнено(ОбластьВсего.Параметры.ВсегоУдержания) Тогда
				ОбластьВсего.Параметры.ВсегоУдержания = ОбластьВсего.Параметры.ВсегоУдержания + СтрокаУдержано.Результат;
			Иначе
				ОбластьВсего.Параметры.ВсегоУдержания = СтрокаУдержано.Результат;
			КонецЕсли;									
			
		КонецЦикла;
		
		СтрокиЗаймы = ПогашениеЗаймов.НайтиСтроки(СтруктураПоискаПоФизЛицу);
		Для Каждого СтрокаЗайма Из СтрокиЗаймы Цикл
			НомерСтроки = ВысотаТаблицы + КоличествоУдержаний;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).Текст = "Погашение займа";
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаУдержано , НомерСтроки, КолонкаПериодУдержано - 1).Объединить();
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).Текст = ОбщегоНазначения.ОписаниеПериода(НачалоМесяца(ПериодРегистрации),КонецМесяца(ПериодРегистрации));
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаПериодУдержано).РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаПериодУдержано, НомерСтроки, КолонкаСуммаУдержано - 1).Объединить();
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).Текст = Формат(СтрокаЗайма.ПогашеноЗайма,"ЧЦ=15; ЧДЦ=2");
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Право;
			ВременныйТабличныйДокумент.Область(НомерСтроки, КолонкаСуммаУдержано, НомерСтроки, КолонкаСуммаУдержано + 1).Объединить();
			КоличествоУдержаний = КоличествоУдержаний + 1;					
			ВсегоУдержания = ВсегоУдержания + СтрокаЗайма.ПогашеноЗайма;
			
			Если ЗначениеЗаполнено(ОбластьВсего.Параметры.ВсегоУдержания) Тогда
				ОбластьВсего.Параметры.ВсегоУдержания = ОбластьВсего.Параметры.ВсегоУдержания + СтрокаЗайма.ПогашеноЗайма;
			Иначе
				ОбластьВсего.Параметры.ВсегоУдержания = СтрокаЗайма.ПогашеноЗайма;
			КонецЕсли;									
			
		КонецЦикла;
		
		СуммаНаКонецПериода  = ВсегоНачисления - ВсегоУдержания;
		
		Если СуммаНаКонецПериода >= 0  Тогда
			ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за предприятием на конец месяца: ";
			ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = СуммаНаКонецПериода;
		Иначе
			ОбластьПодвал.Параметры.ТекстДолгНаКонецПериода = "Долг за работником на конец месяца: ";
			ОбластьПодвал.Параметры.СуммаДолгНаКонецПериода  = 0 - СуммаНаКонецПериода;
		КонецЕсли;					
		
		КолвоРасчетов = Макс(КоличествоНачислений,КоличествоУдержаний);
		
		Если КолвоРасчетов > 0 Тогда
			РасчертитьРасчетныйЛисток(ВременныйТабличныйДокумент,ВысотаТаблицы,КолвоРасчетов)
		КонецЕсли; 
		
		ВременныйТабличныйДокумент.Вывести(ОбластьВсего);
		ВременныйТабличныйДокумент.Вывести(ОбластьПодвал);
		
	КонецЕсли;
	
	Возврат ВременныйТабличныйДокумент;
	
КонецФункции //ЗаполнитьТаблицуРасчетногоЛистка

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке()

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НачислениеЗарплатыРаботникам.Дата,
	|	НачислениеЗарплатыРаботникам.ПериодРегистрации,
	|	НачислениеЗарплатыРаботникам.ПоВременнойСхемеМотивации,
	|	НачислениеЗарплатыРаботникам.ВидСхемыМотивации,
	|	НачислениеЗарплатыРаботникам.ПоВременнойСхемеМотивации,
	|	НачислениеЗарплатыРаботникам.Ссылка
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникам КАК НачислениеЗарплатыРаботникам
	|ГДЕ
	|	НачислениеЗарплатыРаботникам.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по таблице "Начисления" документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоНачисления()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиНачисления.ВидРасчета,
	|	СтрокиНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
	|	СтрокиНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	СтрокиНачисления.ДатаНачала КАК ПериодДействияНачало,
	|	ВЫБОР
	|		КОГДА СтрокиНачисления.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиНачисления.ДатаОкончания, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ПериодДействияКонец,
	|	СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|	СтрокиНачисления.Подразделение,
	|	СтрокиНачисления.Результат,
	|	СтрокиНачисления.Сотрудник,
	|	СтрокиНачисления.Сотрудник.Физлицо КАК Физлицо,
	|	СтрокиНачисления.ОтработаноДней КАК ОтработаноДней,
	|	СтрокиНачисления.ОтработаноЧасов КАК ОтработаноЧасов,
	|	Работники.ГрафикРаботы,
	|	ЕСТЬNULL(Работники.ГрафикРаботы.СуммированныйУчетРабочегоВремени, ЛОЖЬ) КАК СуммированныйУчетРабочегоВремени,
	|	СтрокиНачисления.Показатель1,
	|	СтрокиНачисления.Показатель2,
	|	СтрокиНачисления.Показатель3,
	|	СтрокиНачисления.Показатель4,
	|	СтрокиНачисления.Показатель5,
	|	СтрокиНачисления.Показатель6,
	|	СтрокиНачисления.Авторасчет КАК Авторасчет
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтрокиНачисления.ВидРасчета КАК ВидРасчета,
	|		СтрокиНачисления.ВидРасчета.ЗачетОтработанногоВремени КАК ЗачетОтработанногоВремени,
	|		СтрокиНачисления.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|		СтрокиНачисления.ДатаНачала КАК ДатаНачала,
	|		СтрокиНачисления.ДатаОкончания КАК ДатаОкончания,
	|		СтрокиНачисления.НомерСтроки КАК НомерСтроки,
	|		СтрокиНачисления.Подразделение КАК Подразделение,
	|		СтрокиНачисления.Результат КАК Результат,
	|		СтрокиНачисления.Сотрудник КАК Сотрудник,
	|		СтрокиНачисления.ОтработаноДней КАК ОтработаноДней,
	|		СтрокиНачисления.ОтработаноЧасов КАК ОтработаноЧасов,
	|		ПоследниеДаты.МаксПериод КАК МаксПериод,
	|		СтрокиНачисления.Показатель1 КАК Показатель1,
	|		СтрокиНачисления.Показатель2 КАК Показатель2,
	|		СтрокиНачисления.Показатель3 КАК Показатель3,
	|		СтрокиНачисления.Показатель4 КАК Показатель4,
	|		СтрокиНачисления.Показатель5 КАК Показатель5,
	|		СтрокиНачисления.Показатель6 КАК Показатель6,
	|		СтрокиНачисления.Авторасчет КАК Авторасчет
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникам.Начисления КАК СтрокиНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				МАКСИМУМ(Работники.Период) КАК МаксПериод,
	|				СтрокиНачисления.Сотрудник КАК Сотрудник
	|			ИЗ
	|				Документ.НачислениеЗарплатыРаботникам.Начисления КАК СтрокиНачисления
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
	|					ПО Работники.Период <= СтрокиНачисления.ДатаНачала
	|						И СтрокиНачисления.Сотрудник.Физлицо = Работники.ФизЛицо
	|			ГДЕ
	|				СтрокиНачисления.Ссылка = &ДокументСсылка
	|			
	|			СГРУППИРОВАТЬ ПО
	|				СтрокиНачисления.Сотрудник) КАК ПоследниеДаты
	|			ПО СтрокиНачисления.Сотрудник = ПоследниеДаты.Сотрудник
	|	ГДЕ
	|		СтрокиНачисления.Ссылка = &ДокументСсылка) КАК СтрокиНачисления
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.Работники КАК Работники
	|		ПО Работники.Период = СтрокиНачисления.МаксПериод
	|			И СтрокиНачисления.Сотрудник.Физлицо = Работники.ФизЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачисления()

// Формирует запрос по таблице "Удержания" документа
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоУдержания()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиУдержания.ВидРасчета,
	|	СтрокиУдержания.ДатаНачала,
	|	ВЫБОР
	|		КОГДА СтрокиУдержания.ДатаОкончания <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА КОНЕЦПЕРИОДА(СтрокиУдержания.ДатаОкончания, ДЕНЬ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|	КОНЕЦ КАК ДатаОкончания,
	|	СтрокиУдержания.ДатаНачала КАК БазовыйПериодНачало,
	|	ВЫБОР
	|		КОГДА СтрокиУдержания.ДатаОкончания = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА СтрокиУдержания.ДатаОкончания
	|		ИНАЧЕ КОНЕЦПЕРИОДА(СтрокиУдержания.ДатаОкончания, ДЕНЬ)
	|	КОНЕЦ КАК БазовыйПериодКонец,
	|	СтрокиУдержания.НомерСтроки КАК НомерСтроки,
	|	СтрокиУдержания.Результат,
	|	СтрокиУдержания.Подразделение,
	|	СтрокиУдержания.Физлицо,
	|	СтрокиУдержания.Показатель1,
	|	СтрокиУдержания.Показатель2,
	|	СтрокиУдержания.Показатель3,
	|	СтрокиУдержания.Показатель4,
	|	СтрокиУдержания.Показатель5,
	|	СтрокиУдержания.Показатель6,
	|	СтрокиУдержания.Авторасчет КАК Авторасчет
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникам.Удержания КАК СтрокиУдержания
	|ГДЕ
	|	СтрокиУдержания.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоУдержания()

// Формирует запрос по таблице "ПогашениеЗайма" документа
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоПогашениеЗайма()

	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("ПустаяДата", Дата('00010101'));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтрокиПогашениеЗайма.НомерСтроки,
	|	СтрокиПогашениеЗайма.ДоговорЗайма,
	|	СтрокиПогашениеЗайма.НачисленоПроцентов,
	|	СтрокиПогашениеЗайма.ПогашеноПроцентов,
	|	СтрокиПогашениеЗайма.ПогашеноЗайма,
	|	СтрокиПогашениеЗайма.ФизЛицо
	|ИЗ
	|	Документ.НачислениеЗарплатыРаботникам.ПогашениеЗаймов КАК СтрокиПогашениеЗайма
	|
	|ГДЕ
	|	СтрокиПогашениеЗайма.Ссылка = &ДокументСсылка";
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоПогашениеЗайма()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//	Заголовок				- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	//  ПериодРегистрации
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ПериодРегистрации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не задан период начисления зарплаты!", Отказ, Заголовок);
	КонецЕсли;
	
	Если ПоВременнойСхемеМотивации и ВидСхемыМотивации.Пустая() Тогда
		ОбщегоНазначения.СообщитьОбОшибке("По временному расчету должен указываться вид схемы мотивации!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Начисления" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоСтрокамДокумента, Отказ, Заголовок = "")

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Начисления"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;

	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодДействияНачало) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала начисления!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ПериодДействияКонец) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания начисления!", Отказ, Заголовок);
	КонецЕсли;
	
	// Дата начала больше даты окончания
	Если ВыборкаПоСтрокамДокумента.ПериодДействияНачало > ВыборкаПоСтрокамДокумента.ПериодДействияКонец Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "дата начала начисления не может быть больше даты окончания!", Отказ, Заголовок);	
	КонецЕсли;


КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

// Проверяет правильность заполнения реквизитов в строке ТЧ "Удержания" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиУдержания(ВыборкаПоСтрокамДокумента, Отказ, Заголовок = "")

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Удержания"": ";
	
	// Физлицо
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Физлицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;

	// ВидРасчета
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчета) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;

	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаНачала) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала удержания!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаОкончания) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания удержания!", Отказ, Заголовок);
	КонецЕсли;

	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиУдержания()

// Проверяет правильность заполнения реквизитов в строке ТЧ "ПогашениеЗайма" документа.
// Если какой-то из реквизтов, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса к ТЧ документа,
// все проверяемые реквизиты должны быть включены в выборку.
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента	- спозиционированная на определеной строке выборка 
//  							  из результата запроса к ТЧ документа, 
//  Отказ 						- флаг отказа в проведении.
//	Заголовок					- Заголовок для сообщений об ошибках проведения
//
Процедура ПроверитьЗаполнениеСтрокиПогашениеЗайма(ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Погашение займов"": ";
	
	// ФизЛицо
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбрано физическое лицо!", Отказ, Заголовок);
	КонецЕсли;

	// ДоговорЗайма
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДоговорЗайма) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не задан договор займа погашение которого выполняется!", Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиПогашениеЗайма()

// По строке выборок из результатов запроса по документу формируем движения по регистру
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуНачислений(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборНачисления)	
	
	Движение = НаборНачисления.Добавить();

	// Свойства
	Движение.ПериодРегистрации			= ПериодРегистрации;
	Движение.ПериодДействияНачало		= ВыборкаПоСтрокамДокумента.ПериодДействияНачало;
	Движение.ПериодДействияКонец		= ВыборкаПоСтрокамДокумента.ПериодДействияКонец;
	Движение.ВидРасчета					= ВыборкаПоСтрокамДокумента.ВидРасчета;

	// Измерения
	Движение.Физлицо					= ВыборкаПоСтрокамДокумента.Физлицо;
	Движение.ВидСхемыМотивации			= ВыборкаПоШапкеДокумента.ВидСхемыМотивации;

	// Ресурсы
	Движение.Результат					= ВыборкаПоСтрокамДокумента.Результат;
	// ресурсы по отработанному времени
	Если ВыборкаПоСтрокамДокумента.ЗачетОтработанногоВремени Тогда
		Движение.ОтработаноДней			= ВыборкаПоСтрокамДокумента.ОтработаноДней;
		Движение.ОтработаноЧасов		= ВыборкаПоСтрокамДокумента.ОтработаноЧасов;
	КонецЕсли;

	// Реквизиты
	Движение.ГрафикРаботы				= ВыборкаПоСтрокамДокумента.ГрафикРаботы;
	Движение.ВидУчетаВремени			= ПроведениеРасчетов.ПолучитьВидУчетаВремени(ВыборкаПоСтрокамДокумента.СпособРасчета, Неопределено, ВыборкаПоСтрокамДокумента.СуммированныйУчетРабочегоВремени);
	Движение.Подразделение				= ВыборкаПоСтрокамДокумента.Подразделение;
	Движение.Показатель1				= ВыборкаПоСтрокамДокумента.Показатель1;
	Движение.Показатель2				= ВыборкаПоСтрокамДокумента.Показатель2;
	Движение.Показатель3				= ВыборкаПоСтрокамДокумента.Показатель3;
	Движение.Показатель4				= ВыборкаПоСтрокамДокумента.Показатель4;
	Движение.Показатель5				= ВыборкаПоСтрокамДокумента.Показатель5;
	Движение.Показатель6				= ВыборкаПоСтрокамДокумента.Показатель6;
	Движение.Авторасчет					= ВыборкаПоСтрокамДокумента.Авторасчет;
	Движение.ПоВременнойСхемеМотивации	= ВыборкаПоШапкеДокумента.ПоВременнойСхемеМотивации;
	
КонецПроцедуры // ДобавитьСтрокуНачислений

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуУдержаний(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборУдержания)	

	Движение = НаборУдержания.Добавить();

	// Свойства
	Движение.ПериодРегистрации			= ПериодРегистрации;
	Движение.БазовыйПериодНачало		= ВыборкаПоСтрокамДокумента.ДатаНачала;
	Движение.БазовыйПериодКонец			= ВыборкаПоСтрокамДокумента.ДатаОкончания;
	Движение.ВидРасчета					= ВыборкаПоСтрокамДокумента.ВидРасчета;

	// Измерения
	Движение.Физлицо					= ВыборкаПоСтрокамДокумента.Физлицо;
	Движение.ВидСхемыМотивации			= ВыборкаПоШапкеДокумента.ВидСхемыМотивации;	
	

	// Ресурсы
	Движение.Результат					= ВыборкаПоСтрокамДокумента.Результат;

	// Реквизиты
	Движение.Показатель1				= ВыборкаПоСтрокамДокумента.Показатель1;
	Движение.Показатель2				= ВыборкаПоСтрокамДокумента.Показатель2;
	Движение.Показатель3				= ВыборкаПоСтрокамДокумента.Показатель3;
	Движение.Показатель4				= ВыборкаПоСтрокамДокумента.Показатель4;
	Движение.Авторасчет					= ВыборкаПоСтрокамДокумента.Авторасчет;
	Движение.ПоВременнойСхемеМотивации	= ВыборкаПоШапкеДокумента.ПоВременнойСхемеМотивации;

КонецПроцедуры // ДобавитьСтрокуУдержаний

// По строке выборок из результатов запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоСтрокамДокумента				- спозиционированная на определеной строке выборка 
//				  							  из результата запроса к ТЧ документа, 
//	ВыборкаПоШапкеДокумента
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуПогашениеЗайма(ВыборкаПоСтрокамДокумента, ВыборкаПоШапкеДокумента, НаборПогашениеЗайма)

	// начислено процентов
	Движение = НаборПогашениеЗайма.Добавить();

	// Свойства
	Движение.Период					= КонецМесяца(ПериодРегистрации);
	Движение.ВидДвижения			= ВидДвиженияНакопления.Приход;

	// Измерения
	Движение.ФизЛицо				= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.ДоговорЗайма			= ВыборкаПоСтрокамДокумента.ДоговорЗайма;

	// Ресурсы
	Движение.Проценты				= ВыборкаПоСтрокамДокумента.НачисленоПроцентов;
	// Реквизиты
	Движение.УдержаноИзЗарплаты		= Истина;
	
	// погашено процентов и основного долга
	Движение = НаборПогашениеЗайма.Добавить();

	// Свойства
	Движение.Период					= КонецМесяца(ПериодРегистрации);
	Движение.ВидДвижения			= ВидДвиженияНакопления.Расход;

	// Измерения

	Движение.ФизЛицо				= ВыборкаПоСтрокамДокумента.ФизЛицо;
	Движение.ДоговорЗайма			= ВыборкаПоСтрокамДокумента.ДоговорЗайма;

	// Ресурсы
	Движение.Проценты = ВыборкаПоСтрокамДокумента.ПогашеноПроцентов;
	// даже если начисленные проценты не погашены не увеличиваем основной долг - ограничиваем снизу 
	// размер погашения основного долга нулем
	Движение.ОсновнойДолг = Макс(0, ВыборкаПоСтрокамДокумента.ПогашеноЗайма - ВыборкаПоСтрокамДокумента.ПогашеноПроцентов);

	// Реквизиты
	Движение.УдержаноИзЗарплаты	= Истина;
	
КонецПроцедуры // ДобавитьСтрокуПогашениеЗайма

// Вычисляет разницу между начислениями и удержаниями работника и формирует
// движения по взаиморасчетам с работниками
//
// Параметры:
//		ВыборкаПоШапкеДокумента - спозиционированная выборка по шапке документа
//		НаборЗаписей - набор записей 
//
// Возвращаемое значение:
//  Нет.
//		
Процедура ДобавитьСтрокуВзаиморасчетов(ВыборкаПоШапкеДокумента, НаборЗаписей)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Доходы.Физлицо,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияРаботников.Сотрудник.Физлицо КАК Физлицо,
	|		НачисленияРаботников.Результат КАК СуммаДохода
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникам.Начисления КАК НачисленияРаботников
	|	
	|	ГДЕ
	|		НачисленияРаботников.Ссылка = &парамСсылка И
	|		(НачисленияРаботников.Результат <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗплУдержания.Физлицо,
	|		-(ЗплУдержания.Результат)
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникам.Удержания КАК ЗплУдержания
	|	
	|	ГДЕ
	|		ЗплУдержания.Ссылка = &парамСсылка И
	|		(ЗплУдержания.Результат <> 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЗплЗаймы.ФизЛицо,
	|		-(ЗплЗаймы.ПогашеноЗайма)
	|	ИЗ
	|		Документ.НачислениеЗарплатыРаботникам.ПогашениеЗаймов КАК ЗплЗаймы
	|	
	|	ГДЕ
	|		ЗплЗаймы.Ссылка = &парамСсылка И
	|		(ЗплЗаймы.ПогашеноЗайма <> 0)) КАК Доходы
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.Физлицо");
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("парамСсылка" , Ссылка);
	
	Доходы = Запрос.Выполнить().Выбрать();
	// сформируем движения ВзаиморасчетыСРаботниками
	Пока Доходы.Следующий() Цикл
		Движение = НаборЗаписей.Добавить();
		
		// свойства
		Движение.Период 	 = КонецМесяца(ПериодРегистрации);
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		
		// измерения 
		Движение.Физлицо 	 = Доходы.Физлицо;
		
		// ресурсы
		Движение.СуммаУпр 	 = Доходы.СуммаДохода;
		
	КонецЦикла;
	
КонецПроцедуры  // ДобавитьСтрокуВзаиморасчетов


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	КраткийСоставДокумента =	ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(Начисления) +
								ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(Удержания, , "Физлицо");
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ =ложь)
		Если НЕ Отказ Тогда

			// Начисления
			//
			// получим реквизиты табличной части
			ВыборкаПоНачислениям = СформироватьЗапросПоНачисления().Выбрать();

			Пока ВыборкаПоНачислениям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоНачислениям, Отказ, Заголовок);
			
				Если НЕ Отказ Тогда
					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуНачислений(ВыборкаПоНачислениям, ВыборкаПоШапкеДокумента, Движения.УправленческиеНачисления);
				КонецЕсли;
			КонецЦикла;

			// Удержания
			//
			// получим реквизиты табличной части
			ВыборкаПоУдержаниям = СформироватьЗапросПоУдержания().Выбрать();

			Пока ВыборкаПоУдержаниям.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиУдержания(ВыборкаПоУдержаниям, Отказ, Заголовок);
				Если НЕ Отказ Тогда
					// Заполним записи в наборах записей регистров
					ДобавитьСтрокуУдержаний(ВыборкаПоУдержаниям, ВыборкаПоШапкеДокумента, Движения.УправленческиеУдержания);
				КонецЕсли;
			КонецЦикла;
			
			Если Не ВыборкаПоШапкеДокумента.ПоВременнойСхемеМотивации Тогда			
				
				// ПогашениеЗайма
				//
				// получим реквизиты табличной части
				ВыборкаПоПогашениеЗайма = СформироватьЗапросПоПогашениеЗайма().Выбрать();
				
				Пока ВыборкаПоПогашениеЗайма.Следующий() Цикл 
					
					// проверим очередную строку табличной части
					ПроверитьЗаполнениеСтрокиПогашениеЗайма(ВыборкаПоПогашениеЗайма, Отказ, Заголовок);
					Если НЕ Отказ Тогда
						// Заполним записи в наборах записей регистров
						ДобавитьСтрокуПогашениеЗайма(ВыборкаПоПогашениеЗайма, ВыборкаПоШапкеДокумента, Движения.ПогашениеЗаймовРаботниками);
					КонецЕсли;
				КонецЦикла;
				
				// сформируем начисления к выплате по начислениям документа
				ДобавитьСтрокуВзаиморасчетов(ВыборкаПоШапкеДокумента, Движения.ВзаиморасчетыСРаботниками);
				
			КонецЕсли; 
		КонецЕсли; 

	КонецЕсли;

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
		Набор.Записать();
	КонецЦикла;
	
КонецПроцедуры

