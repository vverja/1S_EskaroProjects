Перем мУдалятьДвижения;
Перем мСписокНормируемыхСтатей Экспорт;
Перем мСписокНередактируемыхСтатей Экспорт;

#Если Клиент Тогда
	
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать()

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт

	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов, влияющих на проведение, не заполнен или
// заполнен некорректно, то устанавливается флаг отказа в проведении.
//
// Параметры:
//  ВыборкаПоШапкеДокумента - выборка из результата запроса по шапке документа.
//  Отказ - флаг отказа в проведении.
//  Заголовок - заголовок сообщения об ошибках.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить.
	СтруктураОбязательныхПолей = Новый Структура;
	СтруктураОбязательныхПолей.Вставить("Организация");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Выполняет движения по регистрам.
//
Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоСтатьям, Отказ, Заголовок)
	
	// получим сумму текущих отличий в затратах по счет КЗ
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаНач", НачалоГода(Дата));
	Запрос.УстановитьПараметр("ДатаКон", МоментВремени());
	
	Запрос.УстановитьПараметр("НормируемыеСтатьи", ТаблицаПоСтатьям.ВыгрузитьКолонку("Статья"));
	Запрос.УстановитьПараметр("СчетКЗ", ПланыСчетов.Хозрасчетный.КорректировкиНормируемыхЗатратНУ);
		
	Запрос.УстановитьПараметр("СтатьиНалоговыхДеклараций", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиНалоговыхДеклараций);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.НалоговоеНазначение КАК НалоговоеНазначениеДоходовИЗатрат,
	               |	ХозрасчетныйОбороты.СуммаНУОборотДт КАК СуммаПревышения,
	               |	ХозрасчетныйОбороты.Субконто1 КАК Статья
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&ДатаНач,
	               |			&ДатаКон,
	               |			Период,
	               |			Счет = &СчетКЗ,
	               |			&СтатьиНалоговыхДеклараций,
	               |			Организация = &Организация
	               |				И Субконто1 В (&НормируемыеСтатьи),
	               |			,
	               |			) КАК ХозрасчетныйОбороты";
	
	ТекДанные = Запрос.Выполнить().Выгрузить();				   
	
	СтруктураОтбора = Новый Структура("Статья, НалоговоеНазначениеДоходовИЗатрат");
	Для каждого СтрокаТаблицы Из ТаблицаПоСтатьям Цикл
	    Если СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат = Справочники.НалоговыеНазначенияАктивовИЗатрат.НКУ_НеХозДеятельность Тогда
			// суммы по этому НН всегда должны быть равны 0
			Продолжить;
		КонецЕсли;
		
		СтруктураОтбора.Статья = СтрокаТаблицы.Статья;
		СтруктураОтбора.НалоговоеНазначениеДоходовИЗатрат = СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат;
		
		ТекДанныеПоСтатье_НН = ТекДанные.НайтиСтроки(СтруктураОтбора);
		Если ТекДанныеПоСтатье_НН.Количество() = 0 Тогда
			ТекСумма = 0;
		Иначе	
		    ТекСумма = ТекДанныеПоСтатье_НН[0].СуммаПревышения;
		КонецЕсли;
		
		// При построении декларации итоговая сумма затрат это сумма по статье по счетам затрат + сумма отличий по счету КЗ
		СуммаПроводки = СтрокаТаблицы.СуммаВПределелахНорм - СтрокаТаблицы.СуммаОборот - ТекСумма;
		
		Если СуммаПроводки = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// делаем "оборотные движения" чтобы не закрывать остатки
		Проводка = Движения.Хозрасчетный.Добавить();
		Проводка.Активность  = Истина;
		Проводка.Период		 = Дата;
		Проводка.Организация  = Организация;
		Проводка.Регистратор = Ссылка;
		
		Проводка.СуммаНУДт = СуммаПроводки;
		Проводка.СуммаНУКт = СуммаПроводки;
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.КорректировкиНормируемыхЗатратНУ;
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.КорректировкиНормируемыхЗатратНУ;
		
		Проводка.НалоговоеНазначениеДт = СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат;
		Проводка.НалоговоеНазначениеКт = СтрокаТаблицы.НалоговоеНазначениеДоходовИЗатрат;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТаблицы.Статья);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, СтрокаТаблицы.Статья);
		
	КонецЦикла;

КонецПроцедуры // ДвиженияПоРегистрам()

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТоварам - результат запроса по табличной части "Товары",
//  СтруктураШапкиДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблиица значений.
//
Функция ПодготовитьТаблицуСтатей(РезультатЗапросаПоСтатьям, СтруктураШапкиДокумента, ПогрешностиОкругления)

	ТаблицаСтатей = РезультатЗапросаПоСтатьям.Выгрузить();
	
	Возврат ТаблицаСтатей;

КонецФункции // ПодготовитьТаблицуСтатей()
  
// Проверяет правильность заполнения строк табличной части "Товары".
//
// Параметры:
// Параметры: 
//  ТаблицаПоТоварам        - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиСтатьи(ТаблицаПоСтатьям, СтруктураШапкиДокумента, Отказ, Заголовок)

	ИмяТабличнойЧасти = "Статьи";

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Статья, НалоговоеНазначениеДоходовИЗатрат");
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Статьи", СтруктураОбязательныхПолей, Отказ, Заголовок);

	// Проверим на отсутствие дублей
	// и правильность указания сумм
	Если Не Отказ Тогда
		
		КоличествоСтрокВТЧ = Статьи.Количество();
		
		Для Уровень1 = 1 По КоличествоСтрокВТЧ Цикл
			
			Если Статьи[Уровень1- 1].СуммаОборот < Статьи[Уровень1- 1].СуммаВПределелахНорм Тогда
			
				ОбщегоНазначения.СообщитьОбОшибке(Локализация.СтрШаблон(НСтр("ru = 'В строке ""¤1¤"" сумма в пределах норм превышает сумму зарегистрированных затрат!'; uk = 'У рядку ""¤1¤"" сума у межах норми перевищує суму зареєстрованих витрат!'"), Уровень1), Отказ, Заголовок);		
			
			КонецЕсли;
			
			Для Уровень2 = Уровень1 + 1 По КоличествоСтрокВТЧ Цикл
				
				Если  Статьи[Уровень1- 1].Статья = Статьи[Уровень2- 1].Статья 
					И Статьи[Уровень1- 1].НалоговоеНазначениеДоходовИЗатрат = Статьи[Уровень2- 1].НалоговоеНазначениеДоходовИЗатрат  Тогда
				
					ОбщегоНазначения.СообщитьОбОшибке(Локализация.СтрШаблон(НСтр("ru = 'В строках ""¤1¤"" и  ""¤2¤"" указаны одинаковые статьи и налоговые назначения затрат!'; uk = 'У рядках ""¤1¤"" та  ""¤2¤"" зазначені однакові статті та податкові призначення витрат!'"), Уровень1, Уровень2), Отказ, Заголовок);	
				
				КонецЕсли;
				
			
			КонецЦикла;
		
		КонецЦикла; 
		
	КонецЕсли;
		
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиТовары()

// Процедура формирует таблицы документа.
//
Процедура ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоСтатьям, Отказ, Заголовок) Экспорт
	
	ПогрешностиОкругления     = Новый Соответствие;

	// Получим необходимые данные для проведения и проверки заполенения данные по табличной части "Товары".
	СтруктураПолей = Новый Структура();
	СтруктураПростыхПолей = Новый Структура;
	СтруктураСложныхПолей = Новый Структура;
	
	СтруктураПолей.Вставить("Статья",        		  "Статья");
	СтруктураПолей.Вставить("НалоговоеНазначениеДоходовИЗатрат",   "НалоговоеНазначениеДоходовИЗатрат");
	СтруктураПолей.Вставить("СуммаОборот",   		  "СуммаОборот");
	СтруктураПолей.Вставить("СуммаВПределелахНорм",   "СуммаВПределелахНорм");
	
	РезультатЗапросаПоСтатьям = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Статьи", СтруктураПолей, СтруктураПростыхПолей, СтруктураСложныхПолей);
	
	// Подготовим таблицу товаров для проведения.
	ТаблицаПоСтатьям = ПодготовитьТаблицуСтатей(РезультатЗапросаПоСтатьям, СтруктураШапкиДокумента, ПогрешностиОкругления);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаПроведения".
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Перем ТаблицаПоСтатьям;
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Сформируем структуру реквизитов шапки документа.
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);

	ПодготовитьТаблицыДокумента(СтруктураШапкиДокумента, ТаблицаПоСтатьям, Отказ, Заголовок);

	ПроверитьЗаполнениеТабличнойЧастиСтатьи(ТаблицаПоСтатьям, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, ТаблицаПоСтатьям, Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	мУдалятьДвижения = НЕ ЭтоНовый();

КонецПроцедуры // ПередЗаписью

Процедура ОбработкаУдаленияПроведения(Отказ)

	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);

КонецПроцедуры // ОбработкаУдаленияПроведения

мСписокНормируемыхСтатей = Новый СписокЗначений;
мСписокНормируемыхСтатей.Добавить("НПНК_ВЗ_Реклама_Нерезиденты","витрати, понесені (нараховані) у зв'язку із придбанням у нерезидента послуг (робіт) з маркетингу, реклами в обсязі, що не перевищує 4 % доходу (виручки) від реалізації продукції (товарів, робіт, послуг) за рік, що передує звітному");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_БезоплатноБюджет","Суми коштів або вартість товарів, виконаних робіт, наданих послуг, добровільно перераховані (передані) протягом звітного року до Державного бюджету України або бюджетів місцевого самоврядування, до неприбуткових організацій у розмірі, що не перевищує 4 % оподатковуваного прибутку попереднього звітного року");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_БезоплатноПрофсоюзы","Суми коштів, перераховані роботодавцями первинним профспілковим організаціям на культурно-масову, фізкультурну та оздоровчу роботу, передбачені колективними договорами (угодами) відповідно до Закону України ""Про професійні спілки, їх права та гарантії діяльності"", в межах 4 % оподатковуваного прибутку за попередній звітний рік з урахуванням положень абзацу ""а"" підпункту 138.10.6 пункту 138.10 статті 138 розділу III Податкового кодексу України");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_БезоплатноЧернобыльские","Суми коштів, перераховані підприємствами всеукраїнських об'єднань осіб, які постраждали внаслідок Чорнобильської катастрофи, на яких працює за основним місцем роботи не менш як 75 % таких осіб цим об'єднанням для ведення благодійної діяльності, але не більше 10 % оподатковуваного прибутку попереднього звітного року");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_БезоплатноКультура","Суми коштів або вартість майна, добровільно перераховані/передані для цільового використання з метою охорони культурної спадщини установам науки, освіти, культури, заповідникам, музеям, музеям-заповідникам у розмірі, що не перевищує 10 % оподатковуваного прибутку за попередній звітний рік");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_БезоплатноКинематограф","Суми коштів або вартість майна, добровільно перераховані/передані на користь резидентів для цільового використання з метою виробництва національних фільмів (у тому числі анімаційних) та аудіовізуальних творів, але не більше 10 % оподатковуваного прибутку за попередній податковий рік");
мСписокНормируемыхСтатей.Добавить("НПНК_ПЗ_Роялти_Нерезиденты","роялті, нараховані на користь нерезидента в обсязі, що не перевищує 4 % доходу (виручки) від реалізації продукції (товарів, робіт, послуг) за рік, що передує звітному");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_Роялти_Нерезиденты","роялті, нараховані на користь нерезидента в обсязі, що не перевищує 4 % доходу (виручки) від реалізації продукції (товарів, робіт, послуг) за рік, що передує звітному");
мСписокНормируемыхСтатей.Добавить("НПНК_ПЗ_Консалтинг_Нерезиденты","витрати, понесенні (нараховані) у зв'язку із придбанням у нерезидента послуг (робіт) з консалтингу в обсязі, що не перевищує 4 % доходу (виручки) від реалізації продукції (товарів, робіт, послуг) за рік, що передує звітному");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_Консалтинг_Нерезиденты","витрати, понесенні (нараховані) у зв'язку із придбанням у нерезидента послуг (робіт) з консалтингу в обсязі, що не перевищує 4 % доходу (виручки) від реалізації продукції (товарів, робіт, послуг) за рік, що передує звітному");
мСписокНормируемыхСтатей.Добавить("НПНК_ПЗ_Инжиниринг_Нерезиденты","витрати, понесенні (нараховані) у зв'язку із придбанням у нерезидента послуг (робіт) з інжинірингу в обсязі, що не перевищує 5 % митної вартості обладнання, імпортованого згідно з відповідним контрактом");
мСписокНормируемыхСтатей.Добавить("НПНК_ИВ_Инжиниринг_Нерезиденты","витрати, понесенні (нараховані) у зв'язку із придбанням у нерезидента послуг (робіт) з інжинірингу в обсязі, що не перевищує 5 % митної вартості обладнання, імпортованого згідно з відповідним контрактом");

мСписокНередактируемыхСтатей = Новый СписокЗначений; 
мСписокНередактируемыхСтатей.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_ПЗ_Роялти_Нерезиденты);
мСписокНередактируемыхСтатей.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_ПЗ_Консалтинг_Нерезиденты);
мСписокНередактируемыхСтатей.Добавить(Справочники.СтатьиНалоговыхДеклараций.НПНК_ПЗ_Инжиниринг_Нерезиденты);