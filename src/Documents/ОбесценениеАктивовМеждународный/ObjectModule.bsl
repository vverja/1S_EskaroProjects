Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Бухгалтерские итоги
	БухИтогиРС = Обработки.БухгалтерскиеИтоги.Создать();
	Итоги = "КонечныйОстатокДт,
	        |КонечныйОстатокКт";
    // 
	СС = РегистрыСведений.УчетнаяПолитикаМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("Организация", Организация));
	СтратегияСписанияПартий = СС.СпособОценкиМПЗ;
	Для Каждого ТекСтрокаСостав Из Состав Цикл
		Если (СтратегияСписанияПартий = Перечисления.СпособыОценки.ФИФО) и (ВидАктива = Перечисления.ВидыАктивов.Запасы) Тогда
			// надо, чтобы еденица товара стоила ТекСтрокаСостав.Сумма
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПартииТоваров.Склад,
			|	ПартииТоваров.ДокументОприходования КАК ДокументОприходования,
			|	ПартииТоваров.ХарактеристикаНоменклатуры,
			|	ПартииТоваров.СерияНоменклатуры,
			|	ПартииТоваров.Заказ,
			|	ПартииТоваров.КоличествоОстаток КАК КоличествоОстаток,
			|	ПартииТоваров.СтоимостьОстаток КАК СтоимостьОстаток,
			|	ПартииТоваров.Качество,
			|	ПартииТоваров.Номенклатура,
			|	ПартииТоваров.СчетУчета,
			|	ПартииТоваров.Организация
			|ИЗ
			|	РегистрНакопления.ПартииТоваровНаСкладахМеждународныйУчет.Остатки(&Дата, Номенклатура = &Номенклатура И Организация = &Организация И СчетУчета = &СчетУчета) КАК ПартииТоваров
			|
			|УПОРЯДОЧИТЬ ПО
			|	ДокументОприходования
			|
			|ИТОГИ СУММА(КоличествоОстаток), СУММА(СтоимостьОстаток) ПО
			|	ОБЩИЕ";
			
			Запрос.УстановитьПараметр("Дата", Дата);
			Запрос.УстановитьПараметр("Номенклатура", ТекСтрокаСостав.Субконто1);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("СчетУчета", ТекСтрокаСостав.СчетУчета);
			
			Результат = Запрос.Выполнить();
			Выборка = Результат.Выбрать(ОбходРезультатаЗапроса.Прямой);
			
			ВыборкаОбщийИтог = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Общие");
			Если НЕ ВыборкаОбщийИтог.Следующий() Тогда
				Продолжить;
			КонецЕсли;
			
			Если ВыборкаОбщийИтог.СтоимостьОстаток<= ТекСтрокаСостав.Сумма Тогда
				Сообщить("Нет изменения стоимости товара " + ТекСтрокаСостав.Субконто1);
				Продолжить;
			КонецЕсли;
			
			Пока Выборка.Следующий() Цикл
				Если Выборка.КоличествоОстаток <> 0 
					И Выборка.ТипЗаписи() = ТипЗаписиЗапроса.ДетальнаяЗапись Тогда
					
					Если Выборка.СтоимостьОстаток <= ТекСтрокаСостав.Сумма * Выборка.КоличествоОстаток/ВыборкаОбщийИтог.КоличествоОстаток Тогда
						Сообщить("Нет изменения стоимости партии " + Выборка.ДокументОприходования);
						Продолжить;
					КонецЕсли;
					
					// регистр ПартииТоваровНаСкладахМеждународныйУчет Расход
					Движение = Движения.ПартииТоваровНаСкладахМеждународныйУчет.Добавить();
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Номенклатура = ТекСтрокаСостав.Субконто1;
					Движение.СчетУчета = ТекСтрокаСостав.СчетУчета;
					Движение.Организация = Организация;
					Движение.Склад = Выборка.Склад;
					Движение.ДокументОприходования = Выборка.ДокументОприходования;
					Движение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатуры;
					Движение.СерияНоменклатуры = Выборка.СерияНоменклатуры;
					Движение.Заказ = Выборка.Заказ;
					Движение.Качество = Выборка.Качество;
					Движение.Количество = 0;
					Движение.Стоимость = Выборка.СтоимостьОстаток - ТекСтрокаСостав.Сумма * Выборка.КоличествоОстаток/ВыборкаОбщийИтог.КоличествоОстаток;
				КонецЕсли
			КонецЦикла;
		КонецЕсли;
				
		СчетАмортизации = Неопределено;
		СчетОбъекта = Неопределено;
		СчетСниженияСтоимости = Неопределено;

		СчетОбъекта = ТекСтрокаСостав.СчетУчета;
		СчетУчета = СчетОбъекта.Родитель; // общая группа
		
		Если ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			СрезСведенийМежд = РегистрыСведений.ОсновныеСредстваМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("ОсновноеСредство", ТекСтрокаСостав.Субконто1));
			СчетАмортизации = СрезСведенийМежд.СчетНачисленияАмортизации;
			СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;
			
			Если НЕ ЗначениеЗаполнено(СчетСниженияСтоимости) Тогда
				Сообщить("Для ОС " + ТекСтрокаСостав.Субконто1 + " не заполнен счет снижения стоимости в регистре сведений");
				Отказ = Истина;
			КонецЕсли;
			
		ИначеЕсли ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
			СрезСведенийМежд = РегистрыСведений.НематериальныеАктивыМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("НематериальныйАктив", ТекСтрокаСостав.Субконто1));
			СчетАмортизации = СрезСведенийМежд.СчетНачисленияАмортизации;
			СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;
			
			Если НЕ ЗначениеЗаполнено(СчетСниженияСтоимости) Тогда
				ОбщегоНазначения.СообщитьОбОшибке("Для НМА " + ТекСтрокаСостав.Субконто1 + " не заполнен счет снижения стоимости в регистре сведений", Отказ, Заголовок);
				Возврат;
			КонецЕсли;
		Иначе
			СчетУчета = СчетОбъекта;
			Выборка = ПланыСчетов.Международный.Выбрать(СчетУчета);
			Пока Выборка.Следующий() Цикл
				Если Выборка.Вид = ВидСчета.Пассивный Тогда
					СчетАмортизации = Выборка.Ссылка;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		СчетУчетаКолвоСубконто = СчетУчета.ВидыСубконто.НайтиСтроки(Новый Структура("Суммовой",Истина)).Количество();
		
		Если (СчетУчетаКолвоСубконто > 1) и (ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2)) Тогда
            ВидСубконто1 = СчетУчета.ВидыСубконто[0].ВидСубконто;
			ВидСубконто2 = СчетУчета.ВидыСубконто[1].ВидСубконто;

            МассивСубконто = Новый Массив();
			МассивСубконто.Добавить(ВидСубконто1);
			МассивСубконто.Добавить(ВидСубконто2);
			
			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2", Дата, Дата, , СчетУчета, МассивСубконто, , , "Организация", Организация);
			ОстаточнаяСтоимость = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2);

		ИначеЕсли (СчетУчетаКолвоСубконто > 0) и (ЗначениеЗаполнено(ТекСтрокаСостав.Субконто1)) Тогда
            ВидСубконто = СчетУчета.ВидыСубконто[0].ВидСубконто;
			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1", Дата, Дата, , СчетУчета, ВидСубконто, , , "Организация", Организация);
			ОстаточнаяСтоимость = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Субконто1", ТекСтрокаСостав.Субконто1) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1", ТекСтрокаСостав.Субконто1);

		ИначеЕсли СчетУчетаКолвоСубконто = 0 Тогда
			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет", Дата, Дата, , СчетУчета, , , , "Организация", Организация);
			ОстаточнаяСтоимость = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Счет", СчетУчета) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет", СчетУчета);

		Иначе
			ОстаточнаяСтоимость = 0;
		КонецЕсли;

		Если (СчетУчетаКолвоСубконто > 1) и (ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2)) Тогда
            ВидСубконто1 = СчетОбъекта.ВидыСубконто[0].ВидСубконто;
			ВидСубконто2 = СчетОбъекта.ВидыСубконто[1].ВидСубконто;

			МассивСубконто = Новый Массив();
			МассивСубконто.Добавить(ВидСубконто1);
			МассивСубконто.Добавить(ВидСубконто2);
			
			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2", Дата, Дата, , СчетОбъекта, МассивСубконто, , , "Организация", Организация);
			ПервоначальнаяСтоимость1 = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2);
			
			Если СчетСниженияСтоимости = Неопределено Тогда
				ПервоначальнаяСтоимость2 = 0;
			Иначе
				БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2", Дата, Дата, , СчетСниженияСтоимости, МассивСубконто, , , "Организация", Организация);
				ПервоначальнаяСтоимость2 = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2);
			КонецЕсли;
			
			ПервоначальнаяСтоимость = ПервоначальнаяСтоимость1 - ПервоначальнаяСтоимость2;

		ИначеЕсли (СчетУчетаКолвоСубконто > 0) и (ЗначениеЗаполнено(ТекСтрокаСостав.Субконто1)) Тогда
            ВидСубконто = СчетОбъекта.ВидыСубконто[0].ВидСубконто;
			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1", Дата, Дата, , СчетОбъекта, ВидСубконто, , , "Организация", Организация);
			ПервоначальнаяСтоимость1 = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Субконто1", ТекСтрокаСостав.Субконто1) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1", ТекСтрокаСостав.Субконто1);

			Если СчетСниженияСтоимости = Неопределено Тогда
				ПервоначальнаяСтоимость2 = 0;
			Иначе
				БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1", Дата, Дата, , СчетСниженияСтоимости, ВидСубконто, , , "Организация", Организация);
				ПервоначальнаяСтоимость2 = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1", ТекСтрокаСостав.Субконто1) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Субконто1", ТекСтрокаСостав.Субконто1);
			КонецЕсли;
			
			ПервоначальнаяСтоимость = ПервоначальнаяСтоимость1 - ПервоначальнаяСтоимость2;
			
		ИначеЕсли СчетУчетаКолвоСубконто = 0 Тогда
			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет", Дата, Дата, , СчетОбъекта, , , , "Организация", Организация);
			ПервоначальнаяСтоимость1 = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Счет", СчетОбъекта) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет", СчетОбъекта);

			Если СчетСниженияСтоимости = Неопределено Тогда
				ПервоначальнаяСтоимость2 = 0;
			Иначе
				БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет", Дата, Дата, , СчетСниженияСтоимости, , , , "Организация", Организация);
				ПервоначальнаяСтоимость2 = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет", СчетСниженияСтоимости) - БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокДт", "Счет", СчетСниженияСтоимости);
			КонецЕсли;
			
			ПервоначальнаяСтоимость = ПервоначальнаяСтоимость1 - ПервоначальнаяСтоимость2;
			
		Иначе
			ПервоначальнаяСтоимость = 0;
		КонецЕсли;

		Дельта = ТекСтрокаСостав.Сумма - ОстаточнаяСтоимость; // <0
		
        Если Дельта > 0 Тогда
			
			ОбщегоНазначения.СообщитьОбОшибке("Для актива " + ТекСтрокаСостав.Субконто1 + " (Номер строки: " + ТекСтрокаСостав.НомерСтроки + ") стоимость после обесценения превышает остаточную стоимость.
											  |Остаточная стоимость: " + Формат(ОстаточнаяСтоимость, "ЧДЦ=2") + "; Стоимость после обесценения: " + Формат(ТекСтрокаСостав.Сумма, "ЧДЦ=2") + "
											  | Обесценение не может быть проведено.", Отказ, Заголовок);
			Возврат;
			
		КонецЕсли;
		
		Если ОстаточнаяСтоимость = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке("Для " + ТекСтрокаСостав.Субконто1 + " не найдена остаточная стоимость. Обесценения не произошло.", Отказ, Заголовок);
			Возврат;
		КонецЕсли;  
		
		СчетРезервыНаПереоценку = Неопределено;
		Резервы = Справочники.ВидыФинРезервов.РезервыНаПереоценку;
		Итоги = "КонечныйОстатокДт,
		        |КонечныйОстатокКт";
		Если ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
            МассивСубконто = Новый Массив();
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства);
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Резервы);
			СчетРезервыНаПереоценку = ПланыСчетов.Международный.РезервыНаПереоценкуОСиИС;

			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2", Дата, Дата, , ПланыСчетов.Международный.РезервыНаПереоценкуОСиИС, МассивСубконто, , , "Организация", Организация);
			СальдоПоРезервам = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, Резервы);
			
		ИначеЕсли ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
            МассивСубконто = Новый Массив();
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НематериальныеАктивы);
			МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Резервы);
			СчетРезервыНаПереоценку = ПланыСчетов.Международный.РезервыНаПереоценкуНМА;

			БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2", Дата, Дата, , ПланыСчетов.Международный.РезервыНаПереоценкуНМА, МассивСубконто, , , "Организация", Организация);
			СальдоПоРезервам = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, Резервы);

		ИначеЕсли ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.Контрагенты") Тогда
			СчетРезервыНаПереоценку = ПланыСчетов.Международный.РезервыНаПереоценкуФА;

			Если НЕ ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2) Тогда
	            МассивСубконто = Новый Массив();
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты);
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Резервы);
				
				БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2", Дата, Дата, , ПланыСчетов.Международный.РезервыНаПереоценкуФА, МассивСубконто, , , "Организация", Организация);
				СальдоПоРезервам = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2", ТекСтрокаСостав.Субконто1, Резервы);
			Иначе
	            МассивСубконто = Новый Массив();
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Контрагенты);
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Договоры);
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Резервы);
				
				БухИтогиРС.РассчитатьИтоги("Международный", Итоги, "Сумма", "Счет, Субконто1, Субконто2, Субконто3", Дата, Дата, , ПланыСчетов.Международный.РезервыНаПереоценкуФА, МассивСубконто, , , "Организация", Организация);
				СальдоПоРезервам = БухИтогиРС.ПолучитьИтог("СуммаКонечныйОстатокКт", "Субконто1, Субконто2, Субконто3", ТекСтрокаСостав.Субконто1, ТекСтрокаСостав.Субконто2, Резервы);
			КонецЕсли;

		Иначе
			СальдоПоРезервам = 0;
		КонецЕсли;
		
		//"Берем" из резерва только сумму обесценения
		СальдоПоРезервам = Мин(-Дельта, СальдоПоРезервам);

		//Если есть сальдо по кредиту 3027 по данному объекту, то в пределах этого сальдо списать по Дт 3027
		Если СальдоПоРезервам <> 0 Тогда
			Движение = Движения.Международный.Добавить();
			Движение.Период = Дата;
			
			Если СчетСниженияСтоимости = Неопределено Тогда
				Сч = СчетОбъекта;
			Иначе
				Сч = СчетСниженияСтоимости;
			КонецЕсли;
			
			Если СчетРезервыНаПереоценку = Неопределено Тогда
				Движение.СчетДт = Сч;
			Иначе
				Движение.СчетДт = СчетРезервыНаПереоценку;
				
				Попытка
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Резервы] = Справочники.ВидыФинРезервов.РезервыНаПереоценку;
				Исключение
				КонецПопытки;
				
			КонецЕсли;
			
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства] = ТекСтрокаСостав.Субконто1;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства] = ТекСтрокаСостав.Субконто1;
			Движение.СчетКт = Сч;
			Движение.Организация = Организация;
			Движение.Сумма = СальдоПоРезервам;
			Движение.Содержание = "Сальдо по резервам";
			Движение.НомерЖурнала = "Рег";
		КонецЕсли;
		
		//+
		Если ВидАктива = Перечисления.ВидыАктивов.Запасы Тогда
			СчетДтДоп = ПланыСчетов.Международный.СебестоимостьПродаж;
		Иначе
 			СчетДтДоп = ПланыСчетов.Международный.ПрочиеНеоперационныеРасходы;
		КонецЕсли;
		СчетКтДоп = ТекСтрокаСостав.СчетРезерва;
		Если НЕ ЗначениеЗаполнено(СчетКтДоп) Тогда
			Если СчетСниженияСтоимости = Неопределено Тогда
				СчетКтДоп = СчетОбъекта;
			Иначе
				СчетКтДоп = СчетСниженияСтоимости;
			КонецЕсли;
		КонецЕсли;
		//-
		
		УбытокОтОбесценения = - Дельта - СальдоПоРезервам;
		
		//На сумму остатка на Дт 8022(ПрочиеНеоперационныеРасходы)
		Если УбытокОтОбесценения <> 0 Тогда
			Если НЕ ((ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.ОсновныеСредства")) ИЛИ
					ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.НематериальныеАктивы")) Тогда
				Движение = Движения.Международный.Добавить();
				Движение.Период = Дата;
				Движение.СчетДт = СчетДтДоп;
				
 				Если НЕ (СчетДтДоп.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиНеоперационныхРасходов ,"ВидСубконто") = Неопределено) Тогда
 					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиНеоперационныхРасходов] = ТекСтрокаСостав.СтатьяЗатрат;
				КонецЕсли;

				Движение.СчетКт = СчетКтДоп;
				
				Если СчетКтДоп.ВидыСубконто[0].ВидСубконто.ТипЗначения.Типы()[0] = ТипЗнч(ТекСтрокаСостав.Субконто1) Тогда
					Движение.СубконтоКт[СчетКтДоп.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
				КонецЕсли;
				
				Движение.Организация = Организация;
				Движение.Сумма = УбытокОтОбесценения;
				Движение.Содержание = "Убыток от обесценения";
				Движение.НомерЖурнала = "Рег";
			КонецЕсли;
			Если ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
				СрезСведенийМежд = РегистрыСведений.ОсновныеСредстваМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("ОсновноеСредство", ТекСтрокаСостав.Субконто1));
				Движение = Движения.ОсновныеСредстваМеждународныйУчет.Добавить();
				Движение.Период = Дата;
				Движение.ОсновноеСредство = ТекСтрокаСостав.Субконто1;
				Движение.Организация = Организация;
				Движение.ДатаПринятияКУчету = СрезСведенийМежд.ДатаПринятияКУчету;
				Движение.МестонахождениеОбъекта = СрезСведенийМежд.МестонахождениеОбъекта;
				Движение.МОЛ = СрезСведенийМежд.МОЛ;
				Движение.Состояние = СрезСведенийМежд.Состояние;
				Движение.СчетУчета = СрезСведенийМежд.СчетУчета;
				Движение.СрокПолезногоИспользования = СрезСведенийМежд.СрокПолезногоИспользования;
				Движение.НачислятьАмортизацию = СрезСведенийМежд.НачислятьАмортизацию;
				Движение.МетодНачисленияАмортизации = СрезСведенийМежд.МетодНачисленияАмортизации;
				Движение.СчетНачисленияАмортизации = СрезСведенийМежд.СчетНачисленияАмортизации;
				Движение.ПервоначальнаяСтоимость = СрезСведенийМежд.ПервоначальнаяСтоимость;
				СправедливаяСтоимость = СрезСведенийМежд.СправедливаяСтоимость;
				Движение.СправедливаяСтоимость = ТекСтрокаСостав.Сумма;
				Движение.ЛиквидационнаяСтоимость = СрезСведенийМежд.ЛиквидационнаяСтоимость;
				Движение.СчетЗатрат = СрезСведенийМежд.СчетЗатрат;
				Движение.Субконто1 = СрезСведенийМежд.Субконто1;
				Движение.Субконто2 = СрезСведенийМежд.Субконто2;
				Движение.Субконто3 = СрезСведенийМежд.Субконто3;
				Движение.ПредполагаемыйОбъемПродукции = СрезСведенийМежд.ПредполагаемыйОбъемПродукции;
				Движение.СуммаНачисленнойАмортизации = СрезСведенийМежд.СуммаНачисленнойАмортизации;
				Движение.УбытокОтОбесценения = СрезСведенийМежд.УбытокОтОбесценения + УбытокОтОбесценения;
				Движение.КоэффициентУскорения = СрезСведенийМежд.КоэффициентУскорения;
				Движение.СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;

			ИначеЕсли ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
				СрезСведенийМежд = РегистрыСведений.НематериальныеАктивыМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("НематериальныйАктив", ТекСтрокаСостав.Субконто1));
				Движение = Движения.НематериальныеАктивыМеждународныйУчет.Добавить();
				Движение.Период = Дата;
				Движение.НематериальныйАктив = ТекСтрокаСостав.Субконто1;
				Движение.СчетУчета = СрезСведенийМежд.СчетУчета;
				Движение.СрокПолезногоИспользования = СрезСведенийМежд.СрокПолезногоИспользования;
				Движение.НачислятьАмортизацию = СрезСведенийМежд.НачислятьАмортизацию;
				Движение.МетодНачисленияАмортизации = СрезСведенийМежд.МетодНачисленияАмортизации;
				Движение.СчетНачисленияАмортизации = СрезСведенийМежд.СчетНачисленияАмортизации;
				Движение.СчетЗатрат = СрезСведенийМежд.СчетЗатрат;
				Движение.Субконто1 = СрезСведенийМежд.Субконто1;
				Движение.Субконто2 = СрезСведенийМежд.Субконто2;
				Движение.Субконто3 = СрезСведенийМежд.Субконто3;
				Движение.ПредполагаемыйОбъемПродукции = СрезСведенийМежд.ПредполагаемыйОбъемПродукции;
				Движение.ФактическийОбъемПродукции = СрезСведенийМежд.ФактическийОбъемПродукции;
				Движение.СуммаНачисленнойАмортизации = СрезСведенийМежд.СуммаНачисленнойАмортизации;
				Движение.ПервоначальнаяСтоимость = СрезСведенийМежд.ПервоначальнаяСтоимость;
				СправедливаяСтоимость = СрезСведенийМежд.СправедливаяСтоимость;
				Движение.СправедливаяСтоимость = ТекСтрокаСостав.Сумма;
				Движение.ЛиквидационнаяСтоимость = СрезСведенийМежд.ЛиквидационнаяСтоимость;
				Движение.ДатаПринятияКУчету = СрезСведенийМежд.ДатаПринятияКУчету;
				Движение.СчетСниженияСтоимости = СрезСведенийМежд.СчетСниженияСтоимости;
				Движение.УбытокОтОбесценения = СрезСведенийМежд.УбытокОтОбесценения + УбытокОтОбесценения;
				Движение.КоэффициентУскорения = СрезСведенийМежд.КоэффициентУскорения;
			КонецЕсли;
			
		КонецЕсли;

		СрезСведенийУП = РегистрыСведений.УчетнаяПолитикаМеждународныйУчет.ПолучитьПоследнее(Дата, Новый Структура("Организация", Организация));
		Если СрезСведенийУП.МетодПереоценкиОС = Перечисления.МетодыПереоценкиОС.ПропорциональнаяПереоценкаНакопленнойАмортизации Тогда
			Если (ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.ОсновныеСредства") или
				ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.НематериальныеАктивы")) и
				(СчетАмортизации <> Неопределено) Тогда
				//Кт.10121 (для примера) -Дельта*Первонач.стоим/Остат.стоим
				Если ОстаточнаяСтоимость <> 0 Тогда
					Движение = Движения.Международный.Добавить();
					Движение.Период = Дата;
					Движение.СчетДт = СчетДтДоп;
 					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиНеоперационныхРасходов] = ТекСтрокаСостав.СтатьяЗатрат;
					
					Движение.СчетКт = СчетКтДоп;
					
					Если СчетКтДоп.ВидыСубконто[0].ВидСубконто.ТипЗначения.Типы()[0] = ТипЗнч(ТекСтрокаСостав.Субконто1) Тогда
						Движение.СубконтоКт[СчетКтДоп.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
					КонецЕсли;
					
					Движение.Организация = Организация;
					СуммаПроводки = -(Дельта - СальдоПоРезервам)*ПервоначальнаяСтоимость/ОстаточнаяСтоимость;
					Движение.Сумма = СуммаПроводки;
					Движение.Содержание = "Обесценение актива";
					Движение.НомерЖурнала = "Рег";
					
					Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто1) Тогда
						Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
					КонецЕсли;
					Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2) Тогда
						Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = ТекСтрокаСостав.Субконто2;
					КонецЕсли;
					
					//Дт 10122 (для примера) Сумма 2й проводки+Дельта
					Если СуммаПроводки+Дельта <> 0 Тогда
						Движение = Движения.Международный.Добавить();
						Движение.Период = Дата;
						Движение.СчетДт = СчетАмортизации;
 						Движение.СчетКт = ПланыСчетов.Международный.ПрочиеНеоперационныеРасходы;
 						Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиНеоперационныхРасходов] = ТекСтрокаСостав.СтатьяЗатрат;
						Движение.Организация = Организация;
						Движение.Сумма = СуммаПроводки+Дельта-СальдоПоРезервам;
						Движение.Содержание = "Амортизация актива при обесценении";
						Движение.НомерЖурнала = "Рег";

						Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто1) Тогда
							Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
						КонецЕсли;
						Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2) Тогда
							Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = ТекСтрокаСостав.Субконто2;
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли СрезСведенийУП.МетодПереоценкиОС = Перечисления.МетодыПереоценкиОС.СписаниеАмортизацииПриПереоценки Тогда
			Если (ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.ОсновныеСредства") или
				ТипЗнч(ТекСтрокаСостав.Субконто1) = Тип("СправочникСсылка.НематериальныеАктивы")) и
				(СчетАмортизации <> Неопределено) Тогда
				//Кт.10121 (для примера) -Дельта
				Если ОстаточнаяСтоимость <> 0 Тогда
					Движение = Движения.Международный.Добавить();
					Движение.Период = Дата;
					Движение.СчетДт = СчетДтДоп;
 					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиНеоперационныхРасходов] = ТекСтрокаСостав.СтатьяЗатрат;
					Движение.СчетКт = СчетКтДоп;
					
					Если СчетКтДоп.ВидыСубконто[0].ВидСубконто.ТипЗначения.Типы()[0] = ТипЗнч(ТекСтрокаСостав.Субконто1) Тогда
						Движение.СубконтоКт[СчетКтДоп.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
					КонецЕсли;
					
					Движение.Организация = Организация;
					СуммаПроводки = -Дельта-СальдоПоРезервам;
					Движение.Сумма = СуммаПроводки;
					Движение.Содержание = "Обесценение актива";
					Движение.НомерЖурнала = "Рег";
					
					Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто1) Тогда
						Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
					КонецЕсли;
					Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2) Тогда
						Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = ТекСтрокаСостав.Субконто2;
					КонецЕсли;
					
					//Списание накопленной амортизации
					Если (ПервоначальнаяСтоимость - ОстаточнаяСтоимость) <> 0 Тогда
						Движение = Движения.Международный.Добавить();
						Движение.Период = Дата;
						Движение.СчетДт = СчетАмортизации;
						Движение.СчетКт = СрезСведенийМежд.СчетУчета;
						Движение.Организация = Организация;
						Движение.Сумма = ПервоначальнаяСтоимость - ОстаточнаяСтоимость;
						Движение.Содержание = "Амортизация актива при обесценении";
						Движение.НомерЖурнала = "Рег";

						Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто1) Тогда
							Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
							Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[0].ВидСубконто] = ТекСтрокаСостав.Субконто1;
						КонецЕсли;
						Если ЗначениеЗаполнено(ТекСтрокаСостав.Субконто2) Тогда
							Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[1].ВидСубконто] = ТекСтрокаСостав.Субконто2;
							Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[1].ВидСубконто] = ТекСтрокаСостав.Субконто2;
						КонецЕсли;
						
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		Иначе
			Сообщить("В учетной политике (международный учет) не указано, как отражать переоценку амортизируемого имущества:");
			Сообщить(" пропорционально переоценивать накопленную амортизацию либо списывать ее при переоценке");
		КонецЕсли;
	КонецЦикла;
	// записываем движения регистров
	Движения.Международный.Записать();
	Движения.ПартииТоваровНаСкладахМеждународныйУчет.Записать();
	Движения.ОсновныеСредстваМеждународныйУчет.Записать();
	Движения.НематериальныеАктивыМеждународныйУчет.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью
