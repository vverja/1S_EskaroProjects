// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Накладная на оприходование материалов", ПечатьОприходованияМатериалов(МассивОбъектов, ОбъектыПечати, "Накладная"));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяУпр") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяУпр", "Накладная на оприходование материалов (упр.)", ПечатьОприходованияМатериалов(МассивОбъектов, ОбъектыПечати, "НакладнаяУпр"));
	КонецЕсли;

	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НакладнаяРегл") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "НакладнаяРегл", "Накладная на оприходование материалов (регл.)", ПечатьОприходованияМатериалов(МассивОбъектов, ОбъектыПечати, "НакладнаяРегл"));
	КонецЕсли;
	

КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьОприходованияМатериалов(МассивОбъектов, ОбъектыПечати, ИмяМакета = "Накладная")
    мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	мВалютаУправленческогоУчета = Константы.ВалютаУправленческогоУчета.Получить();

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Артикул";
		ТекстКодАртикул = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		ВыводитьКоды    = Истина;
		Колонка         = "Код";
		ТекстКодАртикул = "Код";
	Иначе
		ВыводитьКоды    = Ложь;
		Колонка         = "";
		ТекстКодАртикул = "Код";
	КонецЕсли;

	Если ВыводитьКоды Тогда
		ОбластьШапки  = "ШапкаСКодом";
		ОбластьСтроки = "СтрокаСКодом";
	Иначе
		ОбластьШапки  = "ШапкаТаблицы";
		ОбластьСтроки = "Строка";
	Конецесли;
	
	ТекстЗапроса = 
 	"ВЫБРАТЬ
	|	Док.Номер,
	|	Док.Дата,
	|	Док.Организация,
	|	Док.Подразделение.Представление КАК Подразделение,
	|	Док.Склад.Представление КАК Склад,
	|	Док.Материалы.(
	|		НомерСтроки,
	|		Номенклатура,
	|		Номенклатура."+ ТекстКодАртикул + " КАК КодАртикул,
	|		Номенклатура.НаименованиеПолное КАК Товар,
	|		КоличествоМест,
	|		Количество,
	|		ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|		ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
	|		Цена,
	|		Сумма,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		СерияНоменклатуры КАК Серия,
	|		СуммаРегл,
	|		ТипСтоимости
	|	)
	|ИЗ
	|	Документ.ОприходованиеМатериаловИзПроизводства КАК Док
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент";

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ОприходованиеМатериаловИзПроизводства_Накладная";
	Макет       = ПолучитьМакет("Накладная");
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		Запрос.Текст = ТекстЗапроса;

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		ВыборкаСтрокТовары = Шапка.Материалы.Выбрать();

		// Выводим шапку накладной
		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "Оприходование материалов");
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПредставлениеПолучателя    = ПредставлениеОрганизации;
		ОбластьМакета.Параметры.Получатель                 = Шапка.Организация;
		ОбластьМакета.Параметры.ПредставлениеСклада        = Шапка.Склад;
		ОбластьМакета.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести табличную часть
		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьШапки);
		Если ВыводитьКоды Тогда
			ОбластьМакета.Параметры.Колонка = Колонка;
		КонецЕсли;

		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть(ОбластьСтроки);
		ВсегоСумма = 0;

		СуммыУпр = Ложь;
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьМакета.Параметры.Материал = ВыборкаСтрокТовары.Товар + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);

			Если ВыводитьКоды Тогда
				ОбластьМакета.Параметры.КодАртикул = ВыборкаСтрокТовары.КодАртикул;
			КонецЕсли;
			
			СуммыУпр    = Истина;
			СуммаОтчета = 0;
			Если ВыборкаСтрокТовары.ТипСтоимости = Перечисления.ВидыНормативнойСтоимостиПроизводства.Фиксированная Тогда
				Если ИмяМакета = "Накладная" И Ссылка.ОтражатьВУправленческомУчете ИЛИ ИмяМакета = "НакладнаяУпр" Тогда
					// Суммы в валюте упр. учета
					СуммаОтчета = ВыборкаСтрокТовары.Сумма;
				ИначеЕсли ИмяМакета = "Накладная" И Ссылка.ОтражатьВБухгалтерскомУчете ИЛИ ИмяМакета = "НакладнаяРегл" Тогда
					// Суммы в валюте регл. учета
					СуммаОтчета = ВыборкаСтрокТовары.СуммаРегл;
					СуммыУпр = Ложь;
					Если Ссылка.ОтражатьВУправленческомУчете Тогда
						ОбластьМакета.Параметры.Цена = ?( ВыборкаСтрокТовары.Количество = 0, СуммаОтчета, Окр(СуммаОтчета / ВыборкаСтрокТовары.Количество, 2, 1));
					Иначе
						ОбластьМакета.Параметры.Цена = ВыборкаСтрокТовары.Цена;
					КонецЕсли;
				КонецЕсли;
				ОбластьМакета.Параметры.Сумма = СуммаОтчета;
			Иначе
				ОбластьМакета.Параметры.Сумма = "";
				ОбластьМакета.Параметры.Цена  = "";
			КонецЕсли;

			ТабДокумент.Вывести(ОбластьМакета);
			ВсегоСумма = ВсегоСумма + СуммаОтчета;
		КонецЦикла;

		// Вывести Итого
		ОбластьМакета                 = Макет.ПолучитьОбласть("Итого");
		ОбластьМакета.Параметры.Всего = ОбщегоНазначения.ФорматСумм(ВсегоСумма);
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести Сумму прописью
		ОбластьМакета                          = Макет.ПолучитьОбласть("СуммаПрописью");
		Если СуммыУпр Тогда
			ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ВыборкаСтрокТовары.Количество()
			                                       + ", на сумму " + ОбщегоНазначения.ФорматСумм(ВсегоСумма, мВалютаУправленческогоУчета);
			ОбластьМакета.Параметры.СуммаПрописью  = ОбщегоНазначения.СформироватьСуммуПрописью(ВсегоСумма, мВалютаУправленческогоУчета);
		Иначе
			ОбластьМакета.Параметры.ИтоговаяСтрока = "Всего наименований " + ВыборкаСтрокТовары.Количество()
			                                       + ", на сумму " + ОбщегоНазначения.ФорматСумм(ВсегоСумма, мВалютаРегламентированногоУчета);
			ОбластьМакета.Параметры.СуммаПрописью  = ОбщегоНазначения.СформироватьСуммуПрописью(ВсегоСумма, мВалютаРегламентированногоУчета);
		КонецЕсли;
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);
		
		МестВсего = Шапка.Материалы.Выгрузить().Итог("КоличествоМест");
	    Если МестВсего = 0 Тогда
			УниверсальныеМеханизмы.СкрытьКолонкиВТабличномДокументе(ТабДокумент, "Мест",6, ОбластьШапки);
	    КонецЕсли;
        УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла; 

	Возврат ТабДокумент;

КонецФункции // ПечатьОприходованияМатериалов()



// В функции описано, какие данные следует сохранять в шаблоне
Функция СтруктураДополнительныхДанныхФормы() Экспорт
	
	Возврат ХранилищаНастроек.ДанныеФорм.СформироватьСтруктуруДополнительныхДанных("Материалы");
	
КонецФункции
