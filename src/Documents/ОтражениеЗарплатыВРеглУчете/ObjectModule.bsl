Перем мУдалятьДвижения;

Перем мСведенияОСчетах;
Перем мСведенияОСтатьяхЗатрат;
Перем мПустойСчет;


////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ
Функция ПолучитьДокументыРасчетаЗаВесьМесяц() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Запрос.УстановитьПараметр("ПериодРегистрации",ПериодРегистрации);
	Запрос.УстановитьПараметр("Сотрудники",РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник"));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументНачисление.Ссылка,
	|	ПРЕДСТАВЛЕНИЕ(ДокументНачисление.Ссылка) КАК Представление
	|ИЗ Документ."+Ссылка.Метаданные().Имя+".Начисления КАК ДокументНачисление
	|ГДЕ	ДокументНачисление.Ссылка.ПериодРегистрации = &ПериодРегистрации
	|	И	ДокументНачисление.Ссылка <> &Ссылка
	|	И	ДокументНачисление.Ссылка.Проведен
	|	И	ДокументНачисление.Сотрудник в (&Сотрудники)
	|";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Формирует запрос по шапке документа
//
// Параметры: 
//  нет
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке() Экспорт
	
	Запрос = Новый Запрос;
	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	Запрос.УстановитьПараметр("парамПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
	Запрос.Текст = "
	|ВЫБРАТЬ 
	|	Дата                                               	КАК Дата, 
	|	ПериодРегистрации                                  	КАК ПериодРегистрации, 
	|	ВЫБОР КОГДА Организация.ГоловнаяОрганизация = &парамПустаяОрганизация 
	|			ТОГДА Организация 
	|			ИНАЧЕ Организация.ГоловнаяОрганизация 
	|		  КОНЕЦ                                         КАК ГоловнаяОрганизация, 
	|	Организация											КАК Организация, 
	|	Организация											КАК ОбособленноеПодразделение, 
	| 	Ссылка                                              КАК Ссылка
	| 
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете
	| 
	|ГДЕ	Ссылка = &ДокументСсылка
	|";
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапросПоШапке()

                        
// проверяет должен ли быть указан или нет счет учета по НУ
//
// Параметры
//  СчетДт,СчетКт - счета хозрасчетного плана счетов
//  СчетДтНУ	  - счет налогового плана счетов - будущий счет дебета
//
// Возвращаемое значение:
//   булево   – если сочетание корректно, то истина
//
Функция КорректноеСочетаниеСчетов(Выборка,Сообщение)
	
	Сообщение = "";
	
	СчетКт = Выборка.СчетКт;
	СчетДт = Выборка.СчетДт;
	
	Если (СчетДт = ПланыСчетов.Хозрасчетный.РасчетыПоОплатеТруда 
		или СчетДт = ПланыСчетов.Хозрасчетный.ПрочиеФинансовыеДоходы) Тогда
		Сообщение = "Проводки в дебет "+Выборка.НаименованиеСчетДт +" не должны отражаться в налоговом учете!";
	КонецЕсли;
	
	Возврат НЕ ЗначениеЗаполнено(Сообщение)
	
КонецФункции // КорректноеСочетаниеСчетов()


////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура АвтозаполнениеПроводок() Экспорт
	
	ОтражениеВУчете.Очистить();
	
	Записать();  // запишем документ
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("парамПериодРегистрации", ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("парамСотрудник", РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник"));
	
	ТекстПараметрыНачисления = "
	|	Основной.НалоговоеНазначениеДоходовИЗатрат,
	|	Основной.СпособРаспределенияЗатрат,
	|
	|	Основной.СчетДт,
	|	Основной.СубконтоДт1,
	|	Основной.СубконтоДт2,
	|	Основной.СубконтоДт3,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3    
	|";
	
	//	ВТВсеДвижения
	Если Истина Тогда
		//	Описание:
		// 		РеглУчетПлановыхНачисленийРаботниковОрганизаций
		//		
		
		ТекстПараметрыУдержания = "
		|		NULL				КАК НалоговоеНазначениеДоходовИЗатрат,
		|		NULL				КАК СпособРаспределенияЗатрат,
		|
		|		Основной.СчетДт,
		|		Основной.СубконтоДт1,
		|		Основной.СубконтоДт2,
		|		Основной.СубконтоДт3,
		|		Основной.СчетКт,
		|		Основной.СубконтоКт1,
		|		Основной.СубконтоКт2,
		|		Основной.СубконтоКт3    
		|";
		
		ТекстЗапросаВТ = "
		|	ВЫБРАТЬ
		|		"+ТекстПараметрыНачисления+",
		|		1 КАК Порядок,
		|		Основной.Результат
		|ПОМЕСТИТЬ ВТВсеДвижения	
		|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.Начисления КАК Основной
		|	ГДЕ Основной.Ссылка = &парамРегистратор
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		"+ТекстПараметрыНачисления+",
		|		2 КАК Порядок,
		|		Основной.Результат
		|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.ВзносыФОТ КАК Основной
		|	ГДЕ Основной.Ссылка = &парамРегистратор
		|
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		"+ТекстПараметрыУдержания+",
		|		3 КАК Порядок,
		|		Основной.Результат
		|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.Взносы КАК Основной
		|	ГДЕ Основной.Ссылка = &парамРегистратор
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		"+ТекстПараметрыУдержания+",
		|		5 КАК Порядок,
		|		Основной.Результат
		|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.Удержания КАК Основной
		|	ГДЕ Основной.Ссылка = &парамРегистратор
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		"+ТекстПараметрыУдержания+",
		|		4 КАК Порядок,
		|		Основной.Результат
		|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.НДФЛ КАК Основной
		|	ГДЕ Основной.Ссылка = &парамРегистратор
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	ВЫБРАТЬ
		|		"+ТекстПараметрыУдержания+",
		|		6 КАК Порядок,
		|		Основной.Результат
		|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.ПогашениеЗаймов КАК Основной
		|	ГДЕ Основной.Ссылка = &парамРегистратор
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТВсеДвижения = "ВТВсеДвижения";
	КонецЕсли;
	
	ТекстЗапроса  = "
	|ВЫБРАТЬ
	|	"+ТекстПараметрыНачисления+",
	|	Основной.Порядок,
	|	СУММА( Основной.Результат )			КАК Сумма
	|	
	|ИЗ	" + ТекстЗапросаВТВсеДвижения + " КАК Основной
	|
	|СГРУППИРОВАТЬ ПО
	|	"+ТекстПараметрыНачисления+",
	|	Основной.Порядок
	|
	|УПОРЯДОЧИТЬ ПО Порядок, СчетДт.Код, СчетКт.Код, Сумма Убыв";
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СтрокаДанных = ОтражениеВУчете.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
	КонецЦикла;
	
КонецПроцедуры  // АвтозаполнениеПроводок

// Заполняет табличную часть РаботникиОрганизации, всеми физ лицами, которые числятся на конец периода по указанным координатам, 
// их дыижения и внутреннее совместительство 
// Всех не уволенных на конец ПериодаРасчета документа
//

Функция ЗаполнитьРаботникиОрганизации() экспорт
	
    РаботникиОрганизации.Загрузить(ПроведениеРасчетов.АвтозаполнениеРаботникиОрганизации( Ссылка ).Выгрузить());
	Записать();

КонецФункции // АвтозаполнениеРаботникиОрганизации()

Процедура АвтозаполнениеСубконто(ДанныеУчета, СтрокаДанных, тДтКт, тВидСубконто)
	
	Если тВидСубконто = "Сотрудники" Тогда
		тРеквизит = "ФизЛицо";
	ИначеЕсли тВидСубконто = "Подразделения" Тогда
		тРеквизит = "ПодразделениеОрганизации";//"ПодразделениеОрганизации"
	ИначеЕсли тВидСубконто = "Налоги" Тогда
		тРеквизит = "Налог";
	ИначеЕсли тВидСубконто = "СтатьиНалоговыхДеклараций" Тогда
		тРеквизит = "СтатьяНалоговойДекларации";
	ИначеЕсли тВидСубконто = "ИсполнительныеДокументы" Тогда
		тРеквизит = "ИсполнительныеДокументы";
	ИначеЕсли тВидСубконто = "СтатьяЗатрат" Тогда
		тРеквизит = "СтатьяЗатрат";
	КонецЕсли;
	
	
	Если ДанныеУчета[ "Счет" + тДтКт ] <> мПустойСчет Тогда
		// если не пустой счет - заполним "автозаполняемые" субконто
		
		тНомерСубконто = "НомерСубконто" + тВидСубконто + тДтКт;
		Если ДанныеУчета[ тНомерСубконто ] <> 0 И ДанныеУчета[ тНомерСубконто ] <> NULL Тогда
			
			тСубконто = "Субконто" + тДтКт + ДанныеУчета[ тНомерСубконто ];
			Субконто = ДанныеУчета[ тСубконто ];
			Если НЕ ЗначениеЗаполнено(Субконто) ИЛИ тРеквизит = "СтатьяЗатрат" Тогда
				Если тРеквизит = "ФизЛицо" Тогда
					СтрокаДанных[ тСубконто ] = ДанныеУчета.Сотрудник.ФизЛицо;
				Иначе	
					СтрокаДанных[ тСубконто ] = ДанныеУчета[ тРеквизит ];
				КонецЕсли;	
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры  // АвтозаполнениеСубконто()


///////////////////////////////////////////////////////////////////////////
// Автозаполнения

Процедура РассчитатьНачисления( Сотрудники ) Экспорт
	
	// создадим наборы
	НаборНачисления = РегистрыРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете.СоздатьНаборЗаписей();
	НаборНачисления.Отбор.Регистратор.Значение = Ссылка;
	НаборНачисления.Записать();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("парамСотрудники", Сотрудники);
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РР.ВидРасчета.КатегорияРасчета КАК КатегорияРасчета	
	|ИЗ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК РР
	|ГДЕ РР.Сотрудник В (&парамСотрудники)
	|УПОРЯДОЧИТЬ ПО
	|РР.ВидРасчета.КатегорияРасчета.Порядок
	|";
	
	Запрос.Текст = ТекстЗапроса;
	ВыборкаКатегорий = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаКатегорий.Следующий() Цикл
		
		РассчитатьНачисленияПокатегории( Сотрудники, ВыборкаКатегорий.КатегорияРасчета, НаборНачисления );
		
	КонецЦикла;
	
	// Удаляем движения
	НаборНачисления.Очистить();
	НаборНачисления.Записать();
	
	Начисления.Сортировать("Сотрудник");
	Записать(); 
	
КонецПроцедуры  // РассчитатьНачисления()

Процедура РассчитатьНачисленияПоКатегории( Сотрудники, Категория, НаборНачисления )
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("парамРегистратор"			, Ссылка);
	Запрос.УстановитьПараметр("парамПериодРегистрации"		, ПериодРегистрации);
	Запрос.УстановитьПараметр("парамОрганизация"			, Организация);
	Запрос.УстановитьПараметр("парамСотрудники"				, Сотрудники);
	Запрос.УстановитьПараметр("парамКатегория"				, Категория);
	Дата378 = ПроведениеРасчетов.ВариантыАлгоритмовРасчетаЗарплаты().ДатаВводаСчета378;
	Если Дата < Дата378 Тогда
		ТекстСпособОтраженияФСС ="ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.УстарелоОтражениеБольничныхЗаСчетФСС)";
	Иначе
		ТекстСпособОтраженияФСС ="ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеБольничныхЗаСчетФСС)";
	КонецЕсли;
	
	//	ВТОсновнаяТаблица
	Если Истина Тогда
		//	Описание:
		//		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ
		|	Основной.Регистратор,
		|	Основной.НомерСтроки,
		|	Основной.ПериодРегистрации,
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|	Основной.ПодразделениеОрганизации,
		|	Основной.ВидРасчета,
		|	Основной.ДокументОснование,
		|	Основной.БазовыйПериодНачало,
		|	Основной.БазовыйПериодКонец,
		|	Основной.ПериодДействия,
		|	Основной.ПериодДействияНачало,
		|	Основной.ПериодДействияКонец,
		|	Основной.Результат
		|ПОМЕСТИТЬ ВТОсновнаяТаблица
		|ИЗ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Основной
		|
		|ГДЕ Основной.Сотрудник в ( &парамСотрудники )
		|	 И	Основной.ВидРасчета.КатегорияРасчета = &парамКатегория
		|	И	НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации
		|
		|ИНДЕКСИРОВАТЬ ПО
		| Регистратор,ПериодРегистрации,Сотрудник,Назначение,ПодразделениеОрганизации,ВидРасчета,ДокументОснование
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
		
	
	//	ВТПлановыеНачисления
	Если Истина Тогда
		//	Описание:
		// 		РеглУчетПлановыхНачисленийРаботниковОрганизаций
		//		
		ТекстЗапросаВТ = "
		|		ВЫБРАТЬ
		|			ОсновнойПериод.Регистратор,
		|			ОсновнойПериод.НомерСтроки,
		|			ОсновнойПериод.Сотрудник,
		|			ОсновнойПериод.Назначение,
		|			ОсновнойПериод.ВидРасчета,
		|			ПлановыеНачисления.СпособОтраженияВБухучете
		|ПОМЕСТИТЬ ВТПлановыеНачисления	
		|		ИЗ(
		|			ВЫБРАТЬ
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.Назначение,
		|				Основной.ВидРасчета,
		|				Основной.ДокументОснование,
		|				МАКСИМУМ(ПлановыеНачисления.Период)	КАК Период
		|			ИЗ ВТОсновнаяТаблица КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетПлановыхНачисленийРаботниковОрганизаций КАК ПлановыеНачисления
		|			ПО		Основной.Назначение = ПлановыеНачисления.Сотрудник 
		|				И	Основной.ВидРасчета = ПлановыеНачисления.ВидРасчета 
		|				И	((Основной.ДокументОснование = ПлановыеНачисления.ДокументОснование) ИЛИ (ПлановыеНачисления.ДокументОснование = ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка))) 
		|				И	ПлановыеНачисления.Период <= Основной.ПериодДействияНачало
		|			СГРУППИРОВАТЬ ПО
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.Назначение,
		|				Основной.ВидРасчета,
		|				Основной.ДокументОснование
		|		) КАК ОсновнойПериод
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетПлановыхНачисленийРаботниковОрганизаций КАК ПлановыеНачисления
		|		ПО		ОсновнойПериод.Назначение = ПлановыеНачисления.Сотрудник 
		|			И	ОсновнойПериод.ВидРасчета = ПлановыеНачисления.ВидРасчета 
		|			И	((ОсновнойПериод.ДокументОснование = ПлановыеНачисления.ДокументОснование) ИЛИ (ПлановыеНачисления.ДокументОснование = ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка))) 
		|			И	ОсновнойПериод.Период = ПлановыеНачисления.Период
		|
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПлановыеНачисления";
	
	// ВТУчетОсновногоЗаработка
	Если Истина Тогда
		//	Описание:
		// 		УчетОсновногоЗаработкаРаботниковОрганизацийВРегламентированномУчете
		//		
		ТекстЗапросаВТ = "
		|		ВЫБРАТЬ
		|			ОсновнойПериод.Регистратор,
		|			ОсновнойПериод.НомерСтроки,
		|			ОсновнойПериод.Сотрудник,
		|			ОсновнойПериод.Назначение,
		|			УчетОсновногоЗаработка.СпособОтраженияВБухучете
		|ПОМЕСТИТЬ ВТУчетОсновногоЗаработка	
		|		ИЗ(
		|			ВЫБРАТЬ
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.Назначение,
		|				МАКСИМУМ( УчетОсновногоЗаработка.Период ) КАК Период
		|			ИЗ	ВТОсновнаяТаблица КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизаций КАК УчетОсновногоЗаработка
		|			ПО		Основной.Назначение = УчетОсновногоЗаработка.Сотрудник 
		|				И	УчетОсновногоЗаработка.Период <= Основной.ПериодДействияНачало
		|				
		|			СГРУППИРОВАТЬ ПО
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.Назначение
		|		) КАК ОсновнойПериод
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизаций КАК УчетОсновногоЗаработка
		|		ПО		ОсновнойПериод.Назначение = УчетОсновногоЗаработка.Сотрудник 
		|			И	ОсновнойПериод.Период = УчетОсновногоЗаработка.Период
		|
		|
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТУчетОсновногоЗаработка";
	
	// ВТСдельныйНаряд
	Если Истина Тогда
		//	Описание:
		// 		Суммы начислений, которые, возможно, надо рпспределить пропорционально сдельному наряду
		//		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяССылка) КАК Ссылка,
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|   Основной.НалоговоеНазначениеДоходовИЗатрат		КАК НалоговоеНазначениеДоходовИЗатрат,
		|   Основной.СпособРаспределенияЗатрат	КАК СпособРаспределенияЗатрат,
		|   Основной.СчетДт						КАК СчетДт,
		|   Основной.СубконтоДт1				КАК СубконтоДт1,
		|   Основной.СубконтоДт2				КАК СубконтоДт2,
		|   Основной.СубконтоДт3				КАК СубконтоДт3,
		|   Основной.СчетКт						КАК СчетКт,
		|   Основной.СубконтоКт1				КАК СубконтоКт1,
		|   Основной.СубконтоКт2				КАК СубконтоКт2,
		|   Основной.СубконтоКт3				КАК СубконтоКт3,
		|   Основной.ВзносыОсновногоНачисления	КАК ВзносыОсновногоНачисления,
		|	СУММА( Основной.Результат ) 		КАК Результат
		|ПОМЕСТИТЬ ВТСдельныйНаряд	
		|ИЗ	РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК Основной
		|ГДЕ	Основной.Сотрудник в (&парамСотрудники)
		|	И	НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации 
		|	И	Основной.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.НачислениеСдельно) 
		|				
		|СГРУППИРОВАТЬ ПО
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|   Основной.НалоговоеНазначениеДоходовИЗатрат,
		|   Основной.СпособРаспределенияЗатрат,
		|   Основной.СчетДт,
		|   Основной.СубконтоДт1,
		|   Основной.СубконтоДт2,
		|   Основной.СубконтоДт3,
		|   Основной.СчетКт,
		|   Основной.СубконтоКт1,
		|   Основной.СубконтоКт2,
		|   Основной.СубконтоКт3,
		|   Основной.ВзносыОсновногоНачисления
		|
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТСдельныйНаряд";
	
	// ВТБаза
	Если Истина Тогда
		//	Описание:
		// 		Суммы начислений, которые, возможно, надо рпспределить пропорционально сдельному наряду
		//		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ
		|   Основной.Регистратор КАК Регистратор, 
		|	Основной.НомерСтроки КАК НомерСтроки, 
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|	Основной.ВидРасчета,
		|	Основной.ВидРасчета.БазаПоНазначению КАК БазаПоНазначению,
		|	Основной.БазовыйПериодНачало,
		|   Основной.Результат
		|ПОМЕСТИТЬ ВТОсновнаяТаблицаСОтбором
		|ИЗ ВТОсновнаяТаблица КАК Основной
		|ГДЕ Основной.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|;
		|ВЫБРАТЬ 
		|	Основной.Регистратор КАК Регистратор, 
		|	Основной.НомерСтроки КАК НомерСтроки, 
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|	Основной.ВидРасчета,
		|	БазаИзНачислений.ВидРасчетаБазы				КАК ВидРасчетаБазы,
		|   БазаИзНачислений.НалоговоеНазначениеДоходовИЗатрат	КАК НалоговоеНазначениеДоходовИЗатрат,
		|   БазаИзНачислений.СпособРаспределенияЗатрат	КАК СпособРаспределенияЗатрат,
		|   БазаИзНачислений.СчетДт						КАК СчетДт,
		|   БазаИзНачислений.СубконтоДт1				КАК СубконтоДт1,
		|   БазаИзНачислений.СубконтоДт2				КАК СубконтоДт2,
		|   БазаИзНачислений.СубконтоДт3				КАК СубконтоДт3,
		|   БазаИзНачислений.СчетКт						КАК СчетКт,
		|   БазаИзНачислений.СубконтоКт1				КАК СубконтоКт1,
		|   БазаИзНачислений.СубконтоКт2				КАК СубконтоКт2,
		|   БазаИзНачислений.СубконтоКт3				КАК СубконтоКт3,
		|   БазаИзНачислений.ВзносыОсновногоНачисления	КАК ВзносыОсновногоНачисления,
		|	МАКСИМУМ(Основной.Результат) 				КАК Результат,
		|	СУММА(БазаИзНачислений.Результат)			КАК РезультатБаза 
		|ПОМЕСТИТЬ ВТБазы	
		|		ИЗ ВТОсновнаяТаблицаСОтбором КАК Основной
		| 
		|ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК БазаИзНачислений
		|ПО		Основной.Сотрудник = БазаИзНачислений.Сотрудник  
		|	И	(Основной.Назначение = БазаИзНачислений.Назначение ИЛИ НЕ Основной.БазаПоНазначению)  
        |	И	БазаИзНачислений.ПериодРегистрации = НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
		|	И	БазаИзНачислений.ПериодРегистрации <= &парамПериодРегистрации
		|ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|ПО		Основной.ВидРасчета = БазовыеВидыРасчета.Ссылка  
		|	И	БазаИзНачислений.ВидРасчетаБазы = БазовыеВидыРасчета.ВидРасчета
		|	И   БазаИзНачислений.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.Начисление)
		| 
		|СГРУППИРОВАТЬ ПО 
		|	Основной.Регистратор, 
		|	Основной.НомерСтроки, 
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|	Основной.ВидРасчета,
		|	БазаИзНачислений.ВидРасчетаБазы,
		|   БазаИзНачислений.НалоговоеНазначениеДоходовИЗатрат,
		|   БазаИзНачислений.СпособРаспределенияЗатрат,
		|   БазаИзНачислений.СчетДт,
		|   БазаИзНачислений.СубконтоДт1,
		|   БазаИзНачислений.СубконтоДт2,
		|   БазаИзНачислений.СубконтоДт3,
		|   БазаИзНачислений.СчетКт,
		|   БазаИзНачислений.СубконтоКт1,
		|   БазаИзНачислений.СубконтоКт2,
		|   БазаИзНачислений.СубконтоКт3,
		|   БазаИзНачислений.ВзносыОсновногоНачисления
		| ";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТБазы";
	
	// ВТОсновныеНачисления
	Если Истина Тогда
		//	Описание:
		// 		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
		//		
		ТекстПараметра = "
		|		ВЫБОР	КОГДА		ПлановыеНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|					ТОГДА	СдельныеНаряды.ИмяПараметра 		 
		|				КОГДА		ПлановыеНачисления.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	ПлановыеНачисления.СпособОтраженияВБухучете.ИмяПараметра 		 
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|					ТОГДА	ПропорциональноБазе.ИмяПараметра 		 
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|						И	СдельныеНаряды.СчетДт ЕСТЬ НЕ NULL
		|					ТОГДА	СдельныеНаряды.ИмяПараметра
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеБольничныхЗаСчетФСС)
		|					ТОГДА	СпособОтраженияФСС.ИмяПараметра
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И	ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|					ТОГДА	ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете.ИмяПараметра 		 
		|				КОГДА		Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	Распределение.СпособОтраженияВБухучете.ИмяПараметра
		|				КОГДА		УчетОсновногоЗаработка.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	УчетОсновногоЗаработка.СпособОтраженияВБухучете.ИмяПараметра 		   
		|				КОГДА		ЕСТЬNULL(ОтражениеПоПодразделению.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	ОтражениеПоПодразделению.СпособОтраженияВБухучете.ИмяПараметра 		   
		|				КОГДА		ЕСТЬNULL(ОтражениеПоОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	ОтражениеПоОрганизации.СпособОтраженияВБухучете.ИмяПараметра 		   
		|				ИНАЧЕ ОтражениеНачисленийПоУмолчанию.ИмяПараметра 	           
		|		КОНЕЦ ";
		
		ТекстЗапросаВТ = "
		|	ВЫБРАТЬ
		|		ОсновныеНачисления.Регистратор					КАК Регистратор,
		|		ОсновныеНачисления.НомерСтроки					КАК НомерСтроки,
		|		ОсновныеНачисления.Сотрудник					КАК Сотрудник,
		|		ОсновныеНачисления.Назначение					КАК Назначение,
		|		ОсновныеНачисления.ПодразделениеОрганизации		КАК ПодразделениеОрганизации,
		|		           
		|		           
		|		ВЫБОР	КОГДА		ПлановыеНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|					ТОГДА	""1 СдельныеНаряды"" 		 
		|				КОГДА		ПлановыеНачисления.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	""2 ПлановыеНачисления.СпособОтраженияВБухучете"" 		 
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|					ТОГДА	""3 ПропорциональноБазе"" 		 
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|						И	СдельныеНаряды.СчетДт ЕСТЬ НЕ NULL
		|					ТОГДА	""4 СдельныеНаряды"" 		 
		|				КОГДА		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|						И	ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|					ТОГДА	""5 ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете"" 		 
		|				КОГДА		Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	""6 Распределение.СпособОтраженияВБухучете""
		|				КОГДА		УчетОсновногоЗаработка.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	""7 УчетОсновногоЗаработка.СпособОтраженияВБухучете"" 		   
		|				КОГДА		ЕСТЬNULL(ОтражениеПоПодразделению.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	""8 ОтражениеПоПодразделению.СпособОтраженияВБухучете"" 		   
		|				КОГДА		ЕСТЬNULL(ОтражениеПоОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА	""9 ОтражениеПоОрганизации.СпособОтраженияВБухучете"" 		   
		|				ИНАЧЕ		""10 ОтражениеНачисленийПоУмолчанию"" 	           
		|		КОНЕЦ КАК Порядок,
		|		           
		|		           
		|		           
		|		           
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","НалоговоеНазначениеДоходовИЗатрат")+"			КАК НалоговоеНазначениеДоходовИЗатрат,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СпособРаспределенияЗатрат")+"	КАК СпособРаспределенияЗатрат,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СчетДт")+"						КАК СчетДт,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоДт1")+"					КАК СубконтоДт1,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоДт2")+"					КАК СубконтоДт2,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоДт3")+"					КАК СубконтоДт3,
		|   	ВЫБОР КОГДА ОсновныеНачисления.ВидРасчета.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|				ТОГДА ОсновныеНачисления.ВидРасчета.СчетУчета
		|   			ИНАЧЕ (" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СчетКт")+")						
		|		КОНЕЦ                                                                                 КАК СчетКт,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт1")+"					КАК СубконтоКт1,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт2")+"					КАК СубконтоКт2,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт3")+"					КАК СубконтоКт3,
		|   	" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","ВзносыОсновногоНачисления")+"	КАК ВзносыОсновногоНачисления,
		|		
		|		ОсновныеНачисления.ВидРасчета				КАК ВидРасчета,
		|		ОсновныеНачисления.Результат				КАК Результат,
		|		ЕСТЬNULL(СдельныеНаряды.Результат,0)+ЕСТЬNULL(Распределение.ДоляСпособаОтражения,0)+ЕСТЬNULL(ПропорциональноБазе.РезультатБаза,0)		КАК РезультатБазы,
		|		ОсновныеНачисления.ПериодДействияНачало		КАК ПериодДействияНачало,
		|		ОсновныеНачисления.ПериодДействияКонец		КАК ПериодДействияКонец,
		|		ОсновныеНачисления.БазовыйПериодКонец		КАК КонецБазовогоПериода
		|	
		|ПОМЕСТИТЬ ВТОсновныеНачисления	
		|	ИЗ	ВТОсновнаяТаблица КАК ОсновныеНачисления
		|				
		|	//начисления у которых прописана своя проводка		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисления КАК ПлановыеНачисления
		|	ПО		ОсновныеНачисления.Регистратор = ПлановыеНачисления.Регистратор	
		|		И	ОсновныеНачисления.НомерСтроки = ПлановыеНачисления.НомерСтроки	
		|				
		|	// начисленя у которых проводка такая же как и основных начислений		
		|	// берем последнюю актуальную на период проводку		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТУчетОсновногоЗаработка КАК УчетОсновногоЗаработка
		|	ПО		ОсновныеНачисления.Регистратор = УчетОсновногоЗаработка.Регистратор	
		|		И	ОсновныеНачисления.НомерСтроки = УчетОсновногоЗаработка.НомерСтроки	
		|				
		|	// способ отражения организации	
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации.СрезПоследних(КОНЕЦПЕРИОДА(&парамПериодРегистрации,МЕСЯЦ), Организация = &парамОрганизация) КАК ОтражениеПоОрганизации
		|	ПО ИСТИНА			
		|				
		|	// способ отражения подразделения		
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаПодразделенияОрганизации.СрезПоследних(КОНЕЦПЕРИОДА(&парамПериодРегистрации,МЕСЯЦ), Организация = &парамОрганизация) КАК ОтражениеПоПодразделению
		|	ПО ОтражениеПоПодразделению.ПодразделениеОрганизации = ОсновныеНачисления.ПодразделениеОрганизации			
		|				
		|	// способ отражения по умолчанию		
		|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ * ИЗ Справочник.СпособыОтраженияЗарплатыВРеглУчете 
		|						ГДЕ Ссылка = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию)
		|					) КАК ОтражениеНачисленийПоУмолчанию
		|	ПО ИСТИНА			
		|				
		|	// сдельный наряд		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТСдельныйНаряд КАК СдельныеНаряды
		|	ПО		ОсновныеНачисления.Сотрудник = СдельныеНаряды.Сотрудник	
		|		И	ОсновныеНачисления.Назначение = СдельныеНаряды.Назначение	
		|		И	ВЫБОР КОГДА	ПлановыеНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|					ИЛИ		ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		|					ТОГДА	ИСТИНА 		 
		|			ИНАЧЕ	ЛОЖЬ КОНЕЦ 		 
		|				
		|	// пропорционально базе		
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТБазы КАК ПропорциональноБазе
		|	ПО		ОсновныеНачисления.Регистратор = ПропорциональноБазе.Регистратор	
		|		И	ОсновныеНачисления.НомерСтроки = ПропорциональноБазе.НомерСтроки	
		|		И	ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоБазовымНачислениям)
		|				
		|	// распределение основного начисления по документу		
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|	ПО		ОсновныеНачисления.Сотрудник = Распределение.Сотрудник
		|		И	ОсновныеНачисления.Назначение = Распределение.Назначение
		|		И	(НАЧАЛОПЕРИОДА(ОсновныеНачисления.ПериодДействия, МЕСЯЦ) = Распределение.ПериодРегистрации)
		|		И	ПлановыеНачисления.СпособОтраженияВБухучете ЕСТЬ NULL 
		|		И	ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		////|		И	((НЕ ОсновныеНачисления.Сторно))
		|
		|	// способ отражения больничных ФСС		
		|	ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ * ИЗ Справочник.СпособыОтраженияЗарплатыВРеглУчете 
		|						ГДЕ Ссылка = "+ТекстСпособОтраженияФСС+"
		|					) КАК СпособОтраженияФСС
		|	ПО ИСТИНА
		|				
		|ГДЕ	ОсновныеНачисления.Сотрудник В (&парамСотрудники) 		
		|	И	ОсновныеНачисления.ВидРасчета.КатегорияРасчета = &парамКатегория
		|	И	НАЧАЛОПЕРИОДА(ОсновныеНачисления.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации 
		|	И	ОсновныеНачисления.ВидРасчета.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТОсновныеНачисления = "ВТОсновныеНачисления";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТОсновныеНачисления";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ      
	|	ДанныеУчета.Регистратор			КАК Регистратор,
	|	ДанныеУчета.НомерСтроки			КАК НомерСтроки,
	|	ДанныеУчета.Сотрудник.ФизЛицо	КАК ФизЛицо,
	|	ДанныеУчета.Сотрудник,
	|	ДанныеУчета.Назначение,
	|
	|	ДанныеУчета.ПериодДействияНачало	КАК ДатаНачала,
	|	ДанныеУчета.ПериодДействияКонец		КАК ДатаОкончания,
	|
	|	ДанныеУчета.ВидРасчета,
	|	ДанныеУчета.ПодразделениеОрганизации,
	|	ДанныеУчета.Результат,
	|	ДанныеУчета.РезультатБазы,
	|
	|	ДанныеУчета.НалоговоеНазначениеДоходовИЗатрат,
	|	ДанныеУчета.СпособРаспределенияЗатрат,
	|	ДанныеУчета.СчетДт,
	|	ДанныеУчета.СубконтоДт1,
	|	ДанныеУчета.СубконтоДт2,
	|	ДанныеУчета.СубконтоДт3,
	|	ДанныеУчета.СчетКт,
	|	ДанныеУчета.СубконтоКт1,
	|	ДанныеУчета.СубконтоКт2,
	|	ДанныеУчета.СубконтоКт3,
	|	ДанныеУчета.ВзносыОсновногоНачисления,
	|	
	|// --- ДЕБЕТ	
	|	ЕСТЬNULL(ВидыСубконтоСотрудникиДт.НомерСтроки, 0) КАК НомерСубконтоСотрудникиДт,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияДт,
	|	
	|// --- КРЕДИТ	
	|	ЕСТЬNULL(ВидыСубконтоСотрудникиКт.НомерСтроки, 0) КАК НомерСубконтоСотрудникиКт
	|	
	|
	|ИЗ	" + ТекстЗапросаВТОсновныеНачисления + " КАК ДанныеУчета
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСотрудникиДт
	|ПО   ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И ДанныеУчета.СчетДт = ВидыСубконтоСотрудникиДт.Ссылка 
	|	И ВидыСубконтоСотрудникиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
	|ПО   ДанныеУчета.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И ДанныеУчета.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка 
	|	И ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСотрудникиКт
	|ПО   ДанныеУчета.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И ДанныеУчета.СчетКт = ВидыСубконтоСотрудникиКт.Ссылка 
	|	И ВидыСубконтоСотрудникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
	|                                            
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	Назначение,
	|	ВидРасчета
	|                                            
	|ИТОГИ
	|	МАКСИМУМ(Результат),
	|	СУММА(РезультатБазы)
	|ПО Регистратор, НомерСтроки
	|";
	
	Запрос.Текст = ТекстЗапроса;

	// основная выборка - по ней ведем обход и вводим записи движений
	//ВыборкаРегистратор = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Регистратор,НомерСтроки");
	ВыборкаРегистратор = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаРегистратор.Следующий() Цикл
		ВыборкаНомерСтроки = ВыборкаРегистратор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНомерСтроки.Следующий() Цикл
			
			СуммаРезультат		= ВыборкаНомерСтроки.Результат;
			СуммаРезультатБазы	= ВыборкаНомерСтроки.РезультатБазы;
			
			ОстатокРезультат	= ВыборкаНомерСтроки.Результат;
			
			Выборка = ВыборкаНомерСтроки.Выбрать(ОбходРезультатаЗапроса.Прямой);
			
			Пока Выборка.Следующий() Цикл
				
				Если СуммаРезультатБазы = 0 Тогда
					Результат = Выборка.Результат;
					ОстатокРезультат = 0;
				Иначе
					Результат = Окр(СуммаРезультат * Выборка.РезультатБазы / СуммаРезультатБазы, 2);
					ОстатокРезультат = ОстатокРезультат - Результат;
				КонецЕсли;
				СтрокаДанных = Начисления.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
				СтрокаДанных.Результат = Результат;
				
				АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Дт", "Сотрудники");
				АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Дт", "Подразделения");
				АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт", "Сотрудники");
				
				Движение = НаборНачисления.Добавить();
				ЗаполнитьЗначенияСвойств(Движение, СтрокаДанных);
				Движение.Организация = Организация;
				Движение.ВидРасчета = ПланыВидовРасчета.ОтражениеЗарплатыОрганизаций.Начисление;
				Движение.ПериодДействияНачало = СтрокаДанных.ДатаНачала;
				Движение.ПериодДействияКонец = СтрокаДанных.ДатаОкончания;
				Движение.ПериодРегистрации = ПериодРегистрации;
				
			КонецЦикла;
			
			//Проверим осталась ли копейка после распределения
			Если ОстатокРезультат <> 0 Тогда
				СтрокаДанных.Результат = Результат + ОстатокРезультат;
				Движение.Результат = Результат + ОстатокРезультат;
				НаборНачисления.Записать(Истина);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	НаборНачисления.Записать(Истина);
	
КонецПроцедуры  // РассчитатьНачисления()


Процедура РассчитатьВзносы( Сотрудники ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамПериодРегистрации"		, ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники"				, Сотрудники);
	Запрос.УстановитьПараметр("парамОрганизация"			, Организация);
	
	Если НЕ ПроведениеРасчетов.ИспользуетсяЕСВ(ПериодРегистрации) Тогда
		
		//	ВТПроводки
		Если Истина Тогда
			//	Описание:
			// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
			//		
			
			ТекстПараметраСчетКт = "
			|			ВЫБОР	КОГДА		ЕстьNUll(ПроводкиВзносовПордразделение.СчетКт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|						ТОГДА	ПроводкиВзносовПордразделение.ИмяПараметра 		 
			|					КОГДА		ЕстьNUll(ПроводкиВзносовОрганизация.СчетКт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|						ТОГДА	ПроводкиВзносовОрганизация.ИмяПараметра 		 
			|					ИНАЧЕ		ПроводкиВзносов.ИмяПараметра		 
			|			КОНЕЦ ";
			
			ТекстЗапросаВТ = " 
			|		ВЫБРАТЬ
			|			ВзносыВФонды.Сотрудник.ФизЛицо КАК ФизЛицо,
			|			ВзносыВФонды.Сотрудник,
			|			ВзносыВФонды.Налог,
			|			ВзносыВФонды.СтатьяНалоговойДекларации,
			|			НАЧАЛОПЕРИОДА(ВзносыВФонды.БазовыйПериодНачало, МЕСЯЦ) КАК НалоговыйПериод,
			|			NULL КАК СчетДт,
			|    
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетКт")+"						КАК СчетКт,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт1")+"					КАК СубконтоКт1,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт2")+"					КАК СубконтоКт2,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт3")+"					КАК СубконтоКт3,
			|			СУММА(ВзносыВФонды.Результат)           КАК Результат
			|
			|ПОМЕСТИТЬ ВТПроводки	
			|		ИЗ	РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
			|						Налог,
			|						СпособОтраженияВРеглУчете
			|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
			|					ГДЕ		Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|						И	ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|		) КАК СпособОтражения
			|		ПО   ВзносыВФонды.Налог = СпособОтражения.Налог 
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
			|							Налог,
			|							СпособОтраженияВРеглУчете
			|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
			|					ГДЕ		Организация = &парамОрганизация
			|					И	ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|		) КАК СпособОтраженияОрганизация
			|		ПО   ВзносыВФонды.Налог = СпособОтраженияОрганизация.Налог 
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
			|							ПодразделениеОрганизации,
			|							Налог,
			|							СпособОтраженияВРеглУчете
			|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
			|					ГДЕ		Организация = &парамОрганизация
			|						И	ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|					) КАК СпособОтраженияПодразделение
			|		ПО   	ВзносыВФонды.Налог = СпособОтраженияПодразделение.Налог 
			|			И   ВзносыВФонды.ПодразделениеОрганизации = СпособОтраженияПодразделение.ПодразделениеОрганизации 
			|	
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносов
			|		ПО		СпособОтражения.СпособОтраженияВРеглУчете = ПроводкиВзносов.Ссылка 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносовОрганизация
			|		ПО		СпособОтраженияОрганизация.СпособОтраженияВРеглУчете = ПроводкиВзносовОрганизация.Ссылка 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносовПордразделение
			|		ПО		СпособОтраженияПодразделение.СпособОтраженияВРеглУчете = ПроводкиВзносовПордразделение.Ссылка 
			|	
			|	
			|
			|		ГДЕ		ВзносыВФонды.ПериодРегистрации = &парамПериодРегистрации
			|			И 	ВзносыВФонды.Сотрудник в ( &парамСотрудники )
			|			И	ВзносыВФонды.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Взносы)
			|    
			|		СГРУППИРОВАТЬ ПО
			|			ВзносыВФонды.Сотрудник,
			|			ВзносыВФонды.Налог,
			|			ВзносыВФонды.СтатьяНалоговойДекларации,
			|			НАЧАЛОПЕРИОДА(ВзносыВФонды.БазовыйПериодНачало, МЕСЯЦ),
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетКт")+"	,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт1")+",
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт2")+",
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт3")+"
			|
			|       ОБЪЕДИНИТЬ ВСЕ
			|		ВЫБРАТЬ
			|			Взаиморасчеты.Сотрудник.ФизЛицо КАК ФизЛицо,
			|			Взаиморасчеты.Сотрудник,
			|			NULL КАК Налог,
			|			NULL КАК СтатьяНалоговойДекларации,
			|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ) КАК НалоговыйПериод,
			|			Взаиморасчеты.СчетУчета КАК СчетДт,
			|			NULL КАК СчетКт,
			|			NULL КАК СубконтоКт1,
			|			NULL КАК СубконтоКт2,
			|			NULL КАК СубконтоКт3,
			|			СУММА( ВЫБОР	КОГДА Взаиморасчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
			|								ТОГДА	Взаиморасчеты.СуммаВзаиморасчетов
			|							ИНАЧЕ		- Взаиморасчеты.СуммаВзаиморасчетов
			|                  КОНЕЦ )           КАК Результат
			|
			|		ИЗ	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
			|	
			|		ГДЕ		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ) = &парамПериодРегистрации
			|			И 	Взаиморасчеты.Сотрудник в ( &парамСотрудники )
			|			И	Взаиморасчеты.КодОперации= ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Взносы)
			|    
			|		СГРУППИРОВАТЬ ПО
			|			Взаиморасчеты.Сотрудник,
			|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ),
			|			Взаиморасчеты.СчетУчета
			|";
			Запрос.Текст = ТекстЗапросаВТ;
			Запрос.Выполнить();
			ТекстЗапросаВТПроводки = "ВТПроводки";
		КонецЕсли;
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПроводки";
		
		ТекстЗапроса = " 
		|ВЫБРАТЬ
		|	ВзносыВФонды.Сотрудник					КАК Сотрудник,
		|	ВзносыВФонды.Налог						КАК Налог,
		|	ВзносыВФонды.СтатьяНалоговойДекларации	КАК СтатьяНалоговойДекларации,
		|	ВзносыВФонды.НалоговыйПериод			КАК НалоговыйПериод,
		|
		|	ВзносыВФонды.СчетДт КАК СчетДт,
		|	ВзносыВФонды.Сотрудник.ФизЛицо 			КАК СубконтоДт1,
		|	ВзносыВФонды.СчетКт,
		|	ВзносыВФонды.СубконтоКт1,
		|	ВзносыВФонды.СубконтоКт2,
		|	ВзносыВФонды.СубконтоКт3,
		|    
		|	// --- КРЕДИТ	
		|	ЕСТЬNULL(ВидыСубконтоСтатьиНалоговыхДекларацийКт.НомерСтроки, 0) КАК НомерСубконтоСтатьиНалоговыхДекларацийКт,
		|	ЕСТЬNULL(ВидыСубконтоНалогиКт.НомерСтроки,0) КАК НомерСубконтоНалогиКт,
		|    
		|	ВзносыВФонды.Результат           КАК Результат
		|
		|ИЗ	ВТПроводки КАК ВзносыВФонды
		|	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиНалоговыхДекларацийКт
		|ПО   ВзносыВФонды.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
		|	И ВзносыВФонды.СчетКт = ВидыСубконтоСтатьиНалоговыхДекларацийКт.Ссылка 
		|	И ВидыСубконтоСтатьиНалоговыхДекларацийКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиНалоговыхДеклараций)
		|	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоНалогиКт
		|ПО		ВзносыВФонды.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
		|	И	ВзносыВФонды.СчетКт = ВидыСубконтоНалогиКт.Ссылка 
		|	И	ВидыСубконтоНалогиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Налоги)
		|    
		|    
		|ИТОГИ    
		|	СУММА(Результат) 
		|ПО
		|	Сотрудник,  
		|	СчетДт
		|";
		
		Запрос.Текст = ТекстЗапроса;
		
		СчетУчетаПоУмолчанию = ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате;
		
		тбНачисления = Новый ТаблицаЗначений;
		тбНачисления.Колонки.Добавить("СчетДт");
		тбНачисления.Колонки.Добавить("Сумма");
		
		ВыборкаСотрудники = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСотрудники.Следующий() Цикл
			мСотрудник = ВыборкаСотрудники.Сотрудник;
			тбНачисления.Очистить();
			
			// 1. В этом цикле сформируем таблицу для определения счетов учета других удержаний
			ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСчетУчета.Следующий() Цикл
				Если ВыборкаСчетУчета.СчетДт <> NULL Тогда
					СтрокаТб = тбНачисления.Добавить();
					СтрокаТб.СчетДт	= ВыборкаСчетУчета.СчетДт;
					СтрокаТб.Сумма	= ВыборкаСчетУчета.Результат;
				КонецЕсли;
			КонецЦикла;
			
			// 2. В этом цикле сделаем движения с учетом остатков в разре счетов учета по начислениям
			тбНачисления.Сортировать("СчетДт");
			ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСчетУчета.Следующий() Цикл
				
				Если ВыборкаСчетУчета.СчетДт = NULL Тогда
					
					Выборка = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.Прямой);
					Пока Выборка.Следующий() Цикл
						
						СуммаДокумента = Выборка.Результат;
						
						Для каждого СтрокаТб Из тбНачисления Цикл
							
							Если СтрокаТб.Сумма<0 И СуммаДокумента<0 Тогда
								// в месяце были только отрицательные суммы
								СуммаДвижения = Макс(СуммаДокумента, СтрокаТб.Сумма);
							Иначе
								СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
							КонецЕсли;
							
							Если  СуммаДвижения = 0 Тогда
								Продолжить;
							КонецЕсли;
							СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
							СуммаДокумента = СуммаДокумента - СуммаДвижения;
							
							// Добавим строку
							СтрокаДанных = Взносы.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
							СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
							СтрокаДанных.Результат = СуммаДвижения;
							
							АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Налоги");
							АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "СтатьиНалоговыхДеклараций");
							
							
							Если  СуммаДокумента = 0 Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
						
						Если СуммаДокумента <> 0 Тогда
							// каким-то администратиінім жлкументо по регистру 
							// расчета Взносы в фонды провели больше сем по взаиморасчетам, 
							// тогда бросаем сумму на 661
							// Добавим строку
							СтрокаДанных = Взносы.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
							
							СтрокаДанных.СчетДт = СчетУчетаПоУмолчанию;
							СтрокаДанных.Результат = СуммаДокумента;
							
							АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Налоги");
							АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "СтатьиНалоговыхДеклараций");
							
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		//	ВТПроводки
		Если Истина Тогда
			//	Описание:
			// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
			//		
			
			ТекстПараметраСчетКт = "
			|			ВЫБОР	КОГДА		ЕстьNUll(ПроводкиВзносовПордразделение.СчетКт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|						ТОГДА	ПроводкиВзносовПордразделение.ИмяПараметра 		 
			|					КОГДА		ЕстьNUll(ПроводкиВзносовОрганизация.СчетКт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
			|						ТОГДА	ПроводкиВзносовОрганизация.ИмяПараметра 		 
			|					ИНАЧЕ		ПроводкиВзносов.ИмяПараметра		 
			|			КОНЕЦ ";
			
			ТекстЗапросаВТ = " 
			|		ВЫБРАТЬ
			|			ЛОЖЬ КАК Взаиморасчеты,
			|			ВзносыВФонды.Сотрудник.ФизЛицо КАК ФизЛицо,
			|			ВзносыВФонды.Сотрудник,
			|			ВзносыВФонды.Налог,
			|			ВзносыВФонды.СтатьяНалоговойДекларации,
			|			НАЧАЛОПЕРИОДА(ВзносыВФонды.БазовыйПериодНачало, МЕСЯЦ) КАК НалоговыйПериод,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетДт")+"						КАК СчетДт,   
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетКт")+"						КАК СчетКт,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт1")+"					КАК СубконтоКт1,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт2")+"					КАК СубконтоКт2,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт3")+"					КАК СубконтоКт3,
			|			СУММА(ВзносыВФонды.Результат)           КАК Результат
			|
			|ПОМЕСТИТЬ ВТПроводки	
			|		ИЗ	РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
			|						Налог,
			|						СпособОтраженияВРеглУчете
			|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
			|					ГДЕ		Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
			|						И	ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|		) КАК СпособОтражения
			|		ПО   ВзносыВФонды.Налог = СпособОтражения.Налог 
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
			|							Налог,
			|							СпособОтраженияВРеглУчете
			|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
			|					ГДЕ		Организация = &парамОрганизация
			|					И	ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|		) КАК СпособОтраженияОрганизация
			|		ПО   ВзносыВФонды.Налог = СпособОтраженияОрганизация.Налог 
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
			|							ПодразделениеОрганизации,
			|							Налог,
			|							СпособОтраженияВРеглУчете
			|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
			|					ГДЕ		Организация = &парамОрганизация
			|						И	ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
			|					) КАК СпособОтраженияПодразделение
			|		ПО   	ВзносыВФонды.Налог = СпособОтраженияПодразделение.Налог 
			|			И   ВзносыВФонды.ПодразделениеОрганизации = СпособОтраженияПодразделение.ПодразделениеОрганизации 
			|	
			|	
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносов
			|		ПО		СпособОтражения.СпособОтраженияВРеглУчете = ПроводкиВзносов.Ссылка 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносовОрганизация
			|		ПО		СпособОтраженияОрганизация.СпособОтраженияВРеглУчете = ПроводкиВзносовОрганизация.Ссылка 
			|
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносовПордразделение
			|		ПО		СпособОтраженияПодразделение.СпособОтраженияВРеглУчете = ПроводкиВзносовПордразделение.Ссылка 
			|	
			|	
			|
			|		ГДЕ		ВзносыВФонды.ПериодРегистрации = &парамПериодРегистрации
			|			И 	ВзносыВФонды.Сотрудник в ( &парамСотрудники )
			|			И	ВзносыВФонды.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.Взносы)
			|    
			|		СГРУППИРОВАТЬ ПО
			|			ВзносыВФонды.Сотрудник,
			|			ВзносыВФонды.Налог,
			|			ВзносыВФонды.СтатьяНалоговойДекларации,
			|			НАЧАЛОПЕРИОДА(ВзносыВФонды.БазовыйПериодНачало, МЕСЯЦ),
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетДт")+"	,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетКт")+"	,
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт1")+",
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт2")+",
			|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт3")+"
			|
			|       ОБЪЕДИНИТЬ ВСЕ
			|		ВЫБРАТЬ
			|			ИСТИНА КАК Взаиморасчеты,
			|			Взаиморасчеты.Сотрудник.ФизЛицо КАК ФизЛицо,
			|			Взаиморасчеты.Сотрудник,
			|			NULL КАК Налог,
			|			NULL КАК СтатьяНалоговойДекларации,
			|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ) КАК НалоговыйПериод,
			|			Взаиморасчеты.СчетУчета КАК СчетДт,
			|			NULL КАК СчетКт,
			|			NULL КАК СубконтоКт1,
			|			NULL КАК СубконтоКт2,
			|			NULL КАК СубконтоКт3,
			|			СУММА( ВЫБОР	КОГДА Взаиморасчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
			|								ТОГДА	Взаиморасчеты.СуммаВзаиморасчетов
			|							ИНАЧЕ		- Взаиморасчеты.СуммаВзаиморасчетов
			|                  КОНЕЦ )           КАК Результат
			|
			|		ИЗ	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
			|	
			|		ГДЕ		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ) = &парамПериодРегистрации
			|			И 	Взаиморасчеты.Сотрудник в ( &парамСотрудники )
			|			И	Взаиморасчеты.КодОперации= ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Взносы)
			|    
			|		СГРУППИРОВАТЬ ПО
			|			Взаиморасчеты.Сотрудник,
			|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ),
			|			Взаиморасчеты.СчетУчета
			|";
			Запрос.Текст = ТекстЗапросаВТ;
			Запрос.Выполнить();
			ТекстЗапросаВТПроводки = "ВТПроводки";
		КонецЕсли;
		Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПроводки";
		
		ТекстЗапроса = " 
		|ВЫБРАТЬ
		|	ВзносыВФонды.Взаиморасчеты				КАК Взаиморасчеты,
		|	ВзносыВФонды.Сотрудник					КАК Сотрудник,
		|	ВзносыВФонды.Налог						КАК Налог,
		|	ВзносыВФонды.СтатьяНалоговойДекларации	КАК СтатьяНалоговойДекларации,
		|	ВзносыВФонды.НалоговыйПериод			КАК НалоговыйПериод,
		|
		|	ВзносыВФонды.СчетДт КАК СчетДт,
		|	ВзносыВФонды.Сотрудник.ФизЛицо 			КАК СубконтоДт1,
		|	ВзносыВФонды.СчетКт,
		|	ВзносыВФонды.СубконтоКт1,
		|	ВзносыВФонды.СубконтоКт2,
		|	ВзносыВФонды.СубконтоКт3,
		|    
		|	// --- КРЕДИТ	
		|	ЕСТЬNULL(ВидыСубконтоСтатьиНалоговыхДекларацийКт.НомерСтроки, 0) КАК НомерСубконтоСтатьиНалоговыхДекларацийКт,
		|	ЕСТЬNULL(ВидыСубконтоНалогиКт.НомерСтроки,0) КАК НомерСубконтоНалогиКт,
		|    
		|	ВзносыВФонды.Результат           КАК Результат
		|
		|ИЗ	ВТПроводки КАК ВзносыВФонды
		|	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиНалоговыхДекларацийКт
		|ПО   ВзносыВФонды.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
		|	И ВзносыВФонды.СчетКт = ВидыСубконтоСтатьиНалоговыхДекларацийКт.Ссылка 
		|	И ВидыСубконтоСтатьиНалоговыхДекларацийКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиНалоговыхДеклараций)
		|	
		|
		|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоНалогиКт
		|ПО		ВзносыВФонды.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
		|	И	ВзносыВФонды.СчетКт = ВидыСубконтоНалогиКт.Ссылка 
		|	И	ВидыСубконтоНалогиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Налоги)
		|    
		|    
		|ИТОГИ    
		|	СУММА(Результат) 
		|ПО
		|	Сотрудник,
		|	СчетДт,
		|	Взаиморасчеты
		|";
		
		Запрос.Текст = ТекстЗапроса;
		
		СчетУчетаПоУмолчанию = ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате;
		
		тбНачисления = Новый ТаблицаЗначений;
		тбНачисления.Колонки.Добавить("СчетДт");
		тбНачисления.Колонки.Добавить("Сумма");
		
		ВыборкаСотрудники = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСотрудники.Следующий() Цикл
			мСотрудник = ВыборкаСотрудники.Сотрудник;
			тбНачисления.Очистить();
			
			// 1. В этом цикле сформируем таблицу для определения счетов учета других удержаний
			ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСчетУчета.Следующий() Цикл
				ВыборкаВзаиморасчеты = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаВзаиморасчеты.Следующий() Цикл
					Если ВыборкаВзаиморасчеты.Взаиморасчеты Тогда
						СтрокаТб = тбНачисления.Добавить();
						СтрокаТб.СчетДт	= ВыборкаСчетУчета.СчетДт;
						СтрокаТб.Сумма	= ВыборкаСчетУчета.Результат;
					КонецЕсли;
				КонецЦикла;	
			КонецЦикла;
			
			// 2. В этом цикле сделаем движения с учетом остатков в разре счетов учета по начислениям
			тбНачисления.Сортировать("СчетДт");
			ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСчетУчета.Следующий() Цикл
				
				ВыборкаВзаиморасчеты = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаВзаиморасчеты.Следующий() Цикл

					Если НЕ ВыборкаВзаиморасчеты.Взаиморасчеты Тогда
						
						Выборка = ВыборкаВзаиморасчеты.Выбрать(ОбходРезультатаЗапроса.Прямой);
						Пока Выборка.Следующий() Цикл
							
							СуммаДокумента = Выборка.Результат;
							
							//Первый проход - сначала ищем по счету учета
							Для каждого СтрокаТб Из тбНачисления Цикл
								
								Если  СуммаДокумента = 0 Тогда
									Прервать;
								КонецЕсли;
								
								Если СтрокаТб.СчетДт <> Выборка.СчетДт Тогда
									Продолжить;
								КонецЕсли;	
								
								Если СтрокаТб.Сумма<0 И СуммаДокумента<0 Тогда
									// в месяце были только отрицательные суммы
									СуммаДвижения = Макс(СуммаДокумента, СтрокаТб.Сумма);
								Иначе
									СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
								КонецЕсли;
								
								Если  СуммаДвижения = 0 Тогда
									Продолжить;
								КонецЕсли;
								СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
								СуммаДокумента = СуммаДокумента - СуммаДвижения;
								
								// Добавим строку
								СтрокаДанных = Взносы.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
								СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
								СтрокаДанных.Результат = СуммаДвижения;
								
								АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Налоги");
								АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "СтатьиНалоговыхДеклараций");
								
							КонецЦикла;
							
							//второй проход - списываем с любого доступного счета
							Для каждого СтрокаТб Из тбНачисления Цикл
								
								Если  СуммаДокумента = 0 Тогда
									Прервать;
								КонецЕсли;
								
								Если СтрокаТб.Сумма<0 И СуммаДокумента<0 Тогда
									// в месяце были только отрицательные суммы
									СуммаДвижения = Макс(СуммаДокумента, СтрокаТб.Сумма);
								Иначе
									СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
								КонецЕсли;
								
								Если  СуммаДвижения = 0 Тогда
									Продолжить;
								КонецЕсли;
								СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
								СуммаДокумента = СуммаДокумента - СуммаДвижения;
								
								// Добавим строку
								СтрокаДанных = Взносы.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
								СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
								СтрокаДанных.Результат = СуммаДвижения;
								
								АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Налоги");
								АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "СтатьиНалоговыхДеклараций");
								
							КонецЦикла;

							
							Если СуммаДокумента <> 0 Тогда
								// каким-то образом по регистру 
								// расчета Взносы в фонды провели больше чем по взаиморасчетам, 
								// тогда бросаем сумму на 661
								СтрокаДанных = Взносы.Добавить();
								ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
								
								СтрокаДанных.СчетДт = СчетУчетаПоУмолчанию;
								СтрокаДанных.Результат = СуммаДокумента;
								
								АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Налоги");
								АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "СтатьиНалоговыхДеклараций");
								
							КонецЕсли;
							
						КонецЦикла;
					КонецЕсли;
				Конеццикла	
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры  // РассчитатьВзносы()

Процедура РассчитатьНДФЛ( Сотрудники ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамПериодРегистрации"		, ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники"				, Сотрудники);
	
	//	ВТПроводки
	Если Истина Тогда
		//	Описание:
		// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
		//		
		ТекстЗапросаВТ = " 
		|		ВЫБРАТЬ
		|			Основной.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ДоходНДФЛ,
		|			НАЧАЛОПЕРИОДА(Основной.НалоговыйПериод, МЕСЯЦ) КАК НалоговыйПериод,// должны всегда совпадать с .Период
		|			NULL КАК СчетДт,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СчетДт			КАК НДФЛСчетДт,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СчетКт			КАК СчетКт,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СубконтоКт1	КАК СубконтоКт1,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СубконтоКт2	КАК СубконтоКт2,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СубконтоКт3	КАК СубконтоКт3,
		|
		|			СУММА(Основной.Налог)	КАК Результат
		|
		|ПОМЕСТИТЬ ВТПроводки	
		|		ИЗ	РегистрНакопления.ВзаиморасчетыПоНДФЛ КАК Основной
		|
		|		ГДЕ		НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ) = &парамПериодРегистрации
		|			И 	Основной.Сотрудник в ( &парамСотрудники )
		|			И 	Основной.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|			И 	Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Основной.Сотрудник.ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ДоходНДФЛ,
		|			НАЧАЛОПЕРИОДА(Основной.НалоговыйПериод, МЕСЯЦ),
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СчетДт,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СчетКт,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СубконтоКт1,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СубконтоКт2,
		|			Основной.ДоходНДФЛ.СпособОтраженияВРеглУчете.СубконтоКт3
		|
		|
		|       ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			Взаиморасчеты.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Взаиморасчеты.Сотрудник,
		|			NULL КАК ДоходНДФЛ,
		|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ) КАК НалоговыйПериод,
		|			Взаиморасчеты.СчетУчета КАК СчетДт,
		|			NULL КАК НДФЛСчетДт,
		|			NULL КАК СчетКт,
		|			NULL КАК СубконтоКт1,
		|			NULL КАК СубконтоКт2,
		|			NULL КАК СубконтоКт3,
		|			СУММА( ВЫБОР	КОГДА Взаиморасчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
		|								ТОГДА	Взаиморасчеты.СуммаВзаиморасчетов
		|							ИНАЧЕ		- Взаиморасчеты.СуммаВзаиморасчетов
		|                  КОНЕЦ )           КАК Результат
		|
		|		ИЗ	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
		|	
		|		ГДЕ		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ) = &парамПериодРегистрации
		|			И 	Взаиморасчеты.Сотрудник в ( &парамСотрудники )
		|			И	Взаиморасчеты.КодОперации= ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.НДФЛ)
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Взаиморасчеты.Сотрудник,
		|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ),
		|			Взаиморасчеты.СчетУчета
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТПроводки = "ВТПроводки";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПроводки";
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	Основной.Сотрудник					КАК Сотрудник,
	|	Основной.ДоходНДФЛ					КАК ДоходНДФЛ,
	|	Основной.НалоговыйПериод			КАК НалоговыйПериод,
	|
	|	Основной.СчетДт КАК СчетДт,
	|	Основной.Сотрудник.ФизЛицо 			КАК СубконтоДт1,
	|	Основной.НДФЛСчетДт,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3,
	|    
	|	СУММА(Основной.Результат)	КАК Результат
	|
	|ИЗ	ВТПроводки КАК Основной
	|    
	|СГРУППИРОВАТЬ ПО
	|	Основной.Сотрудник,
	|	Основной.ДоходНДФЛ,
	|	Основной.НалоговыйПериод,
	|
	|	Основной.СчетДт,
	|	Основной.Сотрудник.ФизЛицо,
	|	Основной.НДФЛСчетДт,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3
	|
	|ИТОГИ    
	|	СУММА(Результат) 
	|ПО
	|	Сотрудник,  
	|	СчетДт
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	СчетУчетаПоУмолчанию = ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате;
	
	тбНачисления = Новый ТаблицаЗначений;
	тбНачисления.Колонки.Добавить("СчетДт");
	тбНачисления.Колонки.Добавить("Сумма");
	
	ВыборкаСотрудники = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСотрудники.Следующий() Цикл
		мСотрудник = ВыборкаСотрудники.Сотрудник;
		тбНачисления.Очистить();
		
		// 1. В этом цикле сформируем таблицу для определения счетов учета других удержаний
		ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетУчета.Следующий() Цикл
			Если ВыборкаСчетУчета.СчетДт <> NULL Тогда
				СтрокаТб = тбНачисления.Добавить();
				СтрокаТб.СчетДт	= ВыборкаСчетУчета.СчетДт;
				СтрокаТб.Сумма	= ВыборкаСчетУчета.Результат;
			КонецЕсли;
		КонецЦикла;
		
		// 2. В этом цикле сделаем движения с учетом остатков в разре счетов учета по начислениям
		тбНачисления.Сортировать("СчетДт");
		ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетУчета.Следующий() Цикл
			
			Если ВыборкаСчетУчета.СчетДт = NULL Тогда
				
				Выборка = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					
					СуммаДокумента = Выборка.Результат;
					
					Для каждого СтрокаТб Из тбНачисления Цикл
						СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
						Если  СуммаДвижения = 0
							ИЛИ (ЗначениеЗаполнено(Выборка.НДФЛСчетДт) И Выборка.НДФЛСчетДт <> СтрокаТб.СчетДт)
							Тогда
							Продолжить;
						КонецЕсли;
						СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
						СуммаДокумента = СуммаДокумента - СуммаДвижения;
						
						// Добавим строку
						СтрокаДанных = НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
						СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
						СтрокаДанных.Результат = СуммаДвижения;
						
						Если  СуммаДокумента = 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если СуммаДокумента <> 0 Тогда
						Для каждого СтрокаТб Из тбНачисления Цикл
							СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
							Если  СуммаДвижения = 0
								Тогда
								Продолжить;
							КонецЕсли;
							СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
							СуммаДокумента = СуммаДокумента - СуммаДвижения;
							
							// Добавим строку
							СтрокаДанных = НДФЛ.Добавить();
							ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
							СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
							СтрокаДанных.Результат = СуммаДвижения;
							
							Если  СуммаДокумента = 0 Тогда
								Прервать;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
					
					Если СуммаДокумента <> 0 Тогда
						// каким-то административным документом по регистру 
						// расчета НДФЛ провели больше чем по взаиморасчетам, 
						// тогда бросаем сумму на 661
						// Добавим строку
						СтрокаДанных = НДФЛ.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
						
						СтрокаДанных.СчетДт = СчетУчетаПоУмолчанию;
						СтрокаДанных.Результат = СуммаДокумента;
						
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры  // РассчитатьВзносы()

Процедура РассчитатьУдержания( Сотрудники ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамПериодРегистрации"		, ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники"				, Сотрудники);
	
	//	ВТПлановыеУдержания
	Если Истина Тогда
		//	Описание:
		// 		РеглУчетПлановыхНачисленийРаботниковОрганизаций
		//		
		ТекстЗапросаВТ = "
		|		ВЫБРАТЬ
		|			ОсновнойПериод.Регистратор,
		|			ОсновнойПериод.НомерСтроки,
		|			ОсновнойПериод.Сотрудник,
		|			ОсновнойПериод.ВидРасчета,
		|			ПлановыеУдержания.СпособОтраженияВБухучете
		|ПОМЕСТИТЬ ВТПлановыеУдержания
		|		ИЗ(
		|			ВЫБРАТЬ
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.ВидРасчета,
		|				Основной.ДокументОснование,
		|				МАКСИМУМ(ПлановыеУдержания.Период)	КАК Период
		|			ИЗ РегистрРасчета.УдержанияРаботниковОрганизаций КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|			ПО		Основной.Сотрудник = ПлановыеУдержания.Сотрудник 
		|				И	Основной.ВидРасчета = ПлановыеУдержания.ВидРасчета 
		|				И	ПлановыеУдержания.Период <= Основной.ПериодРегистрации
		|			ГДЕ		Основной.Сотрудник в ( &парамСотрудники )
		|				И	НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации 
		|			СГРУППИРОВАТЬ ПО
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.ВидРасчета,
		|				Основной.ДокументОснование
		|		) КАК ОсновнойПериод
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций КАК ПлановыеУдержания
		|		ПО		ОсновнойПериод.Сотрудник = ПлановыеУдержания.Сотрудник 
		|			И	ОсновнойПериод.ВидРасчета = ПлановыеУдержания.ВидРасчета 
		|			И	(ОсновнойПериод.ДокументОснование = ПлановыеУдержания.ДокументОснование
		|				    ИЛИ ПлановыеУдержания.ДокументОснование = НЕОПРЕДЕЛЕНО) 
		|			И	ОсновнойПериод.Период = ПлановыеУдержания.Период
		|
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТПлановыеУдержания = "ВТПлановыеУдержания";
	КонецЕсли;
	
	//	ВТПроводки
	Если Истина Тогда
		//	Описание:
		// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
		//		
		ТекстПараметра = "
		|		ВЫБОР	КОГДА     УчетПлановыхУдержаний.СпособОтраженияВБухучете    <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|					ТОГДА УчетПлановыхУдержаний.СпособОтраженияВБухучете.ИмяПараметра 		 
		|				КОГДА     Основной.ВидРасчета.СпособОтраженияВБухучете 	<> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)	
		|					ТОГДА Основной.ВидРасчета.СпособОтраженияВБухучете.ИмяПараметра 		
		|				ИНАЧЕ ОтражениеПоУмолчанию.ИмяПараметра 	           
		|		КОНЕЦ ";
		ТекстЗапросаВТ = " 
		|		ВЫБРАТЬ
		|			Основной.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ВидРасчета,
		|			Основной.ДокументОснование,
		|			НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ) КАК НалоговыйПериод,
		|			NULL КАК СчетДт,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СчетКт")+"		КАК СчетКт,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт1")+"	КАК СубконтоКт1,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт2")+"	КАК СубконтоКт2,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт3")+"	КАК СубконтоКт3,
		|			СУММА(Основной.Результат)           КАК Результат
		|
		|ПОМЕСТИТЬ ВТПроводки	
		|		ИЗ	РегистрРасчета.УдержанияРаботниковОрганизаций КАК Основной
		|	
		|				
		|		//удержания у которых прописана своя проводка		
		|		ЛЕВОЕ СОЕДИНЕНИЕ "+ТекстЗапросаВТПлановыеУдержания+" КАК УчетПлановыхУдержаний
		|		ПО		УчетПлановыхУдержаний.Регистратор = Основной.Регистратор 
		|			И	УчетПлановыхУдержаний.НомерСтроки = Основной.НомерСтроки 
		|	
		|		// способ отражения по умолчанию		
		|		ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ * ИЗ Справочник.СпособыОтраженияЗарплатыВРеглУчете 
		|						ГДЕ Ссылка = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеУдержанийПоУмолчанию)
		|					) КАК ОтражениеПоУмолчанию
		|		ПО ИСТИНА			
		|
		|		ГДЕ		Основной.ПериодРегистрации = &парамПериодРегистрации
		|			И 	Основной.Сотрудник в ( &парамСотрудники )
		|			И	"+СтрЗаменить(ТекстПараметра,"ИмяПараметра","Ссылка")+" <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.НеОтражатьВБухучете)
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Основной.Сотрудник.ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ВидРасчета,
		|			Основной.ДокументОснование,
		|			НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ),
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СчетКт")+",
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт1")+",
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт2")+",
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоКт3")+"
		|
		|       ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			Взаиморасчеты.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Взаиморасчеты.Сотрудник,
		|			NULL КАК ВидРасчета,
		|			NULL КАК ДокументОснование,
		|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ) КАК НалоговыйПериод,
		|			Взаиморасчеты.СчетУчета КАК СчетДт,
		|			NULL КАК СчетКт,
		|			NULL КАК СубконтоКт1,
		|			NULL КАК СубконтоКт2,
		|			NULL КАК СубконтоКт3,
		|			СУММА( ВЫБОР	КОГДА Взаиморасчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
		|								ТОГДА	Взаиморасчеты.СуммаВзаиморасчетов
		|							ИНАЧЕ		- Взаиморасчеты.СуммаВзаиморасчетов
		|                  КОНЕЦ )           КАК Результат
		|
		|		ИЗ	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
		|	
		|		ГДЕ		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ) = &парамПериодРегистрации
		|			И 	Взаиморасчеты.Сотрудник в ( &парамСотрудники )
		|			И	Взаиморасчеты.КодОперации= ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Удержания)
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Взаиморасчеты.Сотрудник,
		|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ),
		|			Взаиморасчеты.СчетУчета
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТПроводки = "ВТПроводки";
	КонецЕсли;
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	Основной.Сотрудник					КАК Сотрудник,
	|	Основной.ВидРасчета,
	|	Основной.НалоговыйПериод			КАК НалоговыйПериод,
	|
	|	Основной.СчетДт КАК СчетДт,
	|	Основной.Сотрудник.ФизЛицо 			КАК СубконтоДт1,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3,
	|	Основной.ДокументОснование КАК ИсполнительныеДокументы,
	|    
	|// --- КРЕДИТ	
	|	ЕСТЬNULL(ВидыСубконтоСотрудникиКт.НомерСтроки, 0) КАК НомерСубконтоСотрудникиКт,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияКт.НомерСтроки, 0) КАК НомерСубконтоПодразделенияКт,
	|	ЕСТЬNULL(ВидыСубконтоИсполнительныеДокументыКт.НомерСтроки, 0) КАК НомерСубконтоИсполнительныеДокументыКт,
	|    
	|	Основной.Результат           КАК Результат
	|
	|ИЗ	ВТПроводки КАК Основной
	|
	|	
	|// --- КРЕДИТ	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСотрудникиКт
	|ПО   Основной.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И Основной.СчетКт = ВидыСубконтоСотрудникиКт.Ссылка 
	|	И ВидыСубконтоСотрудникиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации)
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияКт
	|ПО   Основной.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И Основной.СчетКт = ВидыСубконтоПодразделенияКт.Ссылка 
	|	И ВидыСубконтоПодразделенияКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоИсполнительныеДокументыКт
	|ПО   Основной.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И Основной.СчетКт = ВидыСубконтоИсполнительныеДокументыКт.Ссылка 
	|	И ВидыСубконтоИсполнительныеДокументыКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ИсполнительныеДокументы)
	|    
	|    
	|ИТОГИ    
	|	СУММА(Результат) 
	|ПО
	|	Сотрудник,  
	|	СчетДт
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	СчетУчетаПоУмолчанию = ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате;
	
	тбНачисления = Новый ТаблицаЗначений;
	тбНачисления.Колонки.Добавить("СчетДт");
	тбНачисления.Колонки.Добавить("Сумма");
	
	ВыборкаСотрудники = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСотрудники.Следующий() Цикл
		мСотрудник = ВыборкаСотрудники.Сотрудник;
		тбНачисления.Очистить();
		
		// 1. В этом цикле сформируем таблицу для определения счетов учета других удержаний
		ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетУчета.Следующий() Цикл
			Если ВыборкаСчетУчета.СчетДт <> NULL Тогда
				СтрокаТб = тбНачисления.Добавить();
				СтрокаТб.СчетДт	= ВыборкаСчетУчета.СчетДт;
				СтрокаТб.Сумма	= ВыборкаСчетУчета.Результат;
			КонецЕсли;
		КонецЦикла;
		
		// 2. В этом цикле сделаем движения с учетом остатков в разре счетов учета по начислениям
		тбНачисления.Сортировать("СчетДт");
		ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетУчета.Следующий() Цикл
			
			Если ВыборкаСчетУчета.СчетДт = NULL Тогда
				
				Выборка = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					
					СуммаДокумента = Выборка.Результат;
					
					Для каждого СтрокаТб Из тбНачисления Цикл
						СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
						Если  СуммаДвижения = 0 Тогда
							Продолжить;
						КонецЕсли;
						СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
						СуммаДокумента = СуммаДокумента - СуммаДвижения;
						
						// Добавим строку
						СтрокаДанных = Удержания.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
						СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
						СтрокаДанных.Результат = СуммаДвижения;
						
						АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Сотрудники");
						АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Подразделения");
						АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "ИсполнительныеДокументы");
						
						Если  СуммаДокумента = 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если СуммаДокумента <> 0 Тогда
						// каким-то администратиінім жлкументо по регистру 
						// расчета Взносы в фонды провели больше сем по взаиморасчетам, 
						// тогда бросаем сумму на 661
						// Добавим строку
						СтрокаДанных = Удержания.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
						
						СтрокаДанных.СчетДт = СчетУчетаПоУмолчанию;
						СтрокаДанных.Результат = СуммаДокумента;
						
						АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Сотрудники");
						АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Подразделения");
						АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "ИсполнительныеДокументы");
						
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры  // РассчитатьВзносы()

Процедура РассчитатьПогашениеЗаймов( Сотрудники ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамПериодРегистрации"		, ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники"				, Сотрудники);
	
	//	ВТПроводки
	Если Истина Тогда
		//	Описание:
		// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
		//		
		ТекстЗапросаВТ = " 
		|		ВЫБРАТЬ
		|			Основной.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ДоговорЗайма,
		|			НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ) КАК НалоговыйПериод,
		|			NULL КАК СчетДт,
		|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСРабочимиИСлужащимиПоДругимОперациям)	КАК СчетКт,
		|			NULL	КАК СубконтоКт1,
		|			NULL	КАК СубконтоКт2,
		|			NULL	КАК СубконтоКт3,
		|			СУММА(Основной.ОсновнойДолг)	КАК Результат
		|
		|ПОМЕСТИТЬ ВТПроводки	
		|		ИЗ	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК Основной
		|
		|		ГДЕ		НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ) = &парамПериодРегистрации
		|			И	Основной.Регистратор ССЫЛКА Документ.НачислениеЗарплатыРаботникамОрганизаций
		|			И	Основной.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И 	Основной.Сотрудник в ( &парамСотрудники )
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Основной.Сотрудник.ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ДоговорЗайма,
		|			НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ)
		|
		|
		|       ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			Основной.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ДоговорЗайма,
		|			НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ) КАК НалоговыйПериод,
		|			NULL КАК СчетДт,
		|			Основной.ДоговорЗайма.СчетУчетаПроцентовПоЗайму	КАК СчетКт,
		|			Основной.ДоговорЗайма.Субконто1	КАК СубконтоКт1,
		|			Основной.ДоговорЗайма.Субконто2	КАК СубконтоКт2,
		|			Основной.ДоговорЗайма.Субконто3	КАК СубконтоКт3,
		|			СУММА(Основной.Проценты)	КАК Результат
		|
		|		ИЗ	РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК Основной
		|
		|		ГДЕ		НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ) = &парамПериодРегистрации
		|			И	Основной.Регистратор ССЫЛКА Документ.НачислениеЗарплатыРаботникамОрганизаций
		|			И	Основной.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|			И 	Основной.Сотрудник в ( &парамСотрудники )
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Основной.Сотрудник.ФизЛицо,
		|			Основной.Сотрудник,
		|			Основной.ДоговорЗайма,
		|			НАЧАЛОПЕРИОДА(Основной.Период, МЕСЯЦ),
		|			Основной.ДоговорЗайма.СчетУчетаПроцентовПоЗайму,
		|			Основной.ДоговорЗайма.Субконто1,
		|			Основной.ДоговорЗайма.Субконто2,
		|			Основной.ДоговорЗайма.Субконто3
		|
		|
		|       ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			Взаиморасчеты.Сотрудник.ФизЛицо КАК ФизЛицо,
		|			Взаиморасчеты.Сотрудник,
		|			NULL КАК ДоговорЗайма,
		|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ) КАК НалоговыйПериод,
		|			Взаиморасчеты.СчетУчета КАК СчетДт,
		|			NULL КАК СчетКт,
		|			NULL КАК СубконтоКт1,
		|			NULL КАК СубконтоКт2,
		|			NULL КАК СубконтоКт3,
		|			СУММА( ВЫБОР	КОГДА Взаиморасчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) 
		|								ТОГДА	Взаиморасчеты.СуммаВзаиморасчетов
		|							ИНАЧЕ		- Взаиморасчеты.СуммаВзаиморасчетов
		|                  КОНЕЦ )           КАК Результат
		|
		|		ИЗ	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК Взаиморасчеты
		|	
		|		ГДЕ		НАЧАЛОПЕРИОДА(Взаиморасчеты.Период, МЕСЯЦ) = &парамПериодРегистрации
		|			И 	Взаиморасчеты.Сотрудник в ( &парамСотрудники )
		|			И	Взаиморасчеты.КодОперации= ЗНАЧЕНИЕ(Перечисление.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Займы)
		|    
		|		СГРУППИРОВАТЬ ПО
		|			Взаиморасчеты.Сотрудник,
		|			НАЧАЛОПЕРИОДА(Взаиморасчеты.ПериодВзаиморасчетов, МЕСЯЦ),
		|			Взаиморасчеты.СчетУчета
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТПроводки = "ВТПроводки";
	КонецЕсли;
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	Основной.Сотрудник					КАК Сотрудник,
	|	Основной.ДоговорЗайма				КАК ДоговорЗайма,
	|	Основной.НалоговыйПериод			КАК НалоговыйПериод,
	|
	|	Основной.СчетДт						КАК СчетДт,
	|	Основной.Сотрудник.ФизЛицо 			КАК СубконтоДт1,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3,
	|    
	|	Основной.Результат           КАК Результат
	|
	|ИЗ	ВТПроводки КАК Основной
	|    
	|ИТОГИ    
	|	СУММА(Результат) 
	|ПО
	|	Сотрудник,  
	|	СчетДт
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	СчетУчетаПоУмолчанию = ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате;
	
	тбНачисления = Новый ТаблицаЗначений;
	тбНачисления.Колонки.Добавить("СчетДт");
	тбНачисления.Колонки.Добавить("Сумма");
	
	ВыборкаСотрудники = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСотрудники.Следующий() Цикл
		мСотрудник = ВыборкаСотрудники.Сотрудник;
		тбНачисления.Очистить();
		
		// 1. В этом цикле сформируем таблицу для определения счетов учета других удержаний
		ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетУчета.Следующий() Цикл
			Если ВыборкаСчетУчета.СчетДт <> NULL Тогда
				СтрокаТб = тбНачисления.Добавить();
				СтрокаТб.СчетДт	= ВыборкаСчетУчета.СчетДт;
				СтрокаТб.Сумма	= ВыборкаСчетУчета.Результат;
			КонецЕсли;
		КонецЦикла;
		
		// 2. В этом цикле сделаем движения с учетом остатков в разре счетов учета по начислениям
		тбНачисления.Сортировать("СчетДт");
		ВыборкаСчетУчета = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСчетУчета.Следующий() Цикл
			
			Если ВыборкаСчетУчета.СчетДт = NULL Тогда
				
				Выборка = ВыборкаСчетУчета.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					
					СуммаДокумента = Выборка.Результат;
					
					Для каждого СтрокаТб Из тбНачисления Цикл
						СуммаДвижения = Мин(СуммаДокумента, СтрокаТб.Сумма);
						Если  СуммаДвижения = 0 Тогда
							Продолжить;
						КонецЕсли;
						СтрокаТб.Сумма = СтрокаТб.Сумма - СуммаДвижения;
						СуммаДокумента = СуммаДокумента - СуммаДвижения;
						
						// Добавим строку
						СтрокаДанных = ПогашениеЗаймов.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
						СтрокаДанных.СчетДт = СтрокаТб.СчетДт;
						СтрокаДанных.Результат = СуммаДвижения;
						
						Если  СуммаДокумента = 0 Тогда
							Прервать;
						КонецЕсли;
					КонецЦикла;
					
					Если СуммаДокумента <> 0 Тогда
						// каким-то администратиінім жлкументо по регистру 
						// расчета НДФЛ провели больше сем по взаиморасчетам, 
						// тогда бросаем сумму на 661
						// Добавим строку
						СтрокаДанных = ПогашениеЗаймов.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
						
						СтрокаДанных.СчетДт = СчетУчетаПоУмолчанию;
						СтрокаДанных.Результат = СуммаДокумента;
						
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры  // РассчитатьВзносы()


Процедура РассчитатьВзносыФОТ( Сотрудники ) Экспорт
	
	Отказ = Ложь;
	МассивИндексыСтрокВзносыВФонды = Новый Массив();
	
	// Перечитаем объект и соберем данные для заполнения наборов записей регистров
	НачатьТранзакцию();
	Прочитать();
	ВыборкаПоНачислениям = СформироватьЗапросПоНачисления( Сотрудники).Выбрать();
	ЗафиксироватьТранзакцию();
	
	// создадим наборы
	НаборНачисления = РегистрыРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете.СоздатьНаборЗаписей();
	НаборНачисления.Отбор.Регистратор.Значение = Ссылка;
	Пока ВыборкаПоНачислениям.Следующий() Цикл 
		ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоНачислениям, Отказ);
		Если НЕ Отказ Тогда
			ДобавитьСтрокуНачислений(ВыборкаПоНачислениям, НаборНачисления);
		Иначе
			ОбщегоНазначения.СообщитьОбОшибке("Отражение взносов ФОТ по сотруднику "+ВыборкаПоНачислениям.Сотрудник.Наименование+" может быть выполнено не верно.");
			Отказ = Ложь;
		КонецЕсли;
	КонецЦикла;
	НаборНачисления.Записать();
	
	// если что-то не так, то очистим созданные наборы
	Если Отказ Тогда
		
		НаборНачисления.Очистить();
		НаборНачисления.Записать();
		
		Возврат;
	КонецЕсли;
	
	РассчитатьВзносыФОТЗаписи( Сотрудники );
	
	
	// Удаляем движения
	НаборНачисления.Очистить();
	НаборНачисления.Записать();
	
	Записать();
	
КонецПроцедуры  // РассчитатьУдержания()

Процедура РассчитатьВзносыФОТЗаписи( Сотрудники ) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамПериодРегистрации"		, ПериодРегистрации);
	Запрос.УстановитьПараметр("парамСотрудники"				, Сотрудники);
	Запрос.УстановитьПараметр("парамОрганизация"			, Организация);
	
	ИспользуетсяЕСВ = ПроведениеРасчетов.ИспользуетсяЕСВ(ПериодРегистрации);
	
	// ВТБазы
	Если Истина Тогда
		
		Если ИспользуетсяЕСВ Тогда
			
			Запрос.УстановитьПараметр("СписокГПХПоЕСВ",ПроведениеРасчетов.СписокГПХПоЕСВ());
			
			ТекстФильтрПоПериодам = "				И	ВЫБОР КОГДА БазаИзНачислений.ВидРасчетаБазы.ЭтоБольничные //Больничные
										|			ИЛИ  БазаИзНачислений.ВидРасчетаБазы В (&СписокГПХПоЕСВ) //Оплата по договору ГПХ
										|			ИЛИ  НЕ Основной.ВидРасчета.ЕСВ //Это старый взнос
										|			ТОГДА	НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
										|			    И   БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации
										|           КОГДА БазаИзНачислений.ВидРасчетаБазы.ЭтоОтпуск //Отпускные
										|               И НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) = &парамПериодРегистрации
										|			ТОГДА НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
										|			    И   БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации
										|           КОГДА БазаИзНачислений.ВидРасчетаБазы.ЭтоОтпуск //Отпускные
										|               И БазаИзНачислений.Результат >= 0
										|			ТОГДА НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
										|			    И   БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации
										|			ИНАЧЕ	((НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
										|			    И   БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации
										|               И   НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ) = &парамПериодРегистрации) //Начислено в текущем месяце за этот месяц
										|               ИЛИ (НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) < НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
										|			    И   БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации
										|               И   НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ) = &парамПериодРегистрации) //Начислено в текущем месяце за предыдущий месяц
										|               ИЛИ (НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) > НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
										|			    И   БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации
										|               И   НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ) = &парамПериодРегистрации)) //Начислено в текущем месяце за следующий месяц
										|
										|           КОНЕЦ
										|";
			
		Иначе
			ТекстФильтрПоПериодам = "			И	НАЧАЛОПЕРИОДА(БазаИзНачислений.БазовыйПериодНачало, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)
									|			И	БазаИзНачислений.ПериодРегистрации = &парамПериодРегистрации";	
									
		КонецЕсли;
		
		//	Описание:
		// 		Альтернатива таблице РегистрРасчета.ВзносыВФонды.БазаОсновныеНачисленияРаботниковОрганизаций(
		//      так как в этом регистре нет периода действия, или он не работает
		//
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ 
		|			Основной.Налог,
		|			Основной.ВидРасчета,
		|			Основной.СтатьяНалоговойДекларации,
		|			Основной.Сотрудник, 
		|			Основной.ПериодРегистрации,
		|			Основной.БазовыйПериодНачало,
		|			Основной.ДатаНачала,
		|			Основной.База,
		|			Основной.БазаВзноса,
		|			Основной.Результат
		|ПОМЕСТИТЬ ВТОсновнаяТаблица	
		|		ИЗ РегистрРасчета.ВзносыВФонды КАК Основной
        |		ГДЕ		Основной.ВидРасчета.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ВзносыФОТ)
		|			И	Основной.ПериодРегистрации = &парамПериодРегистрации
		|			И	Основной.Сотрудник В (&парамСотрудники)
        |;
		|		ВЫБРАТЬ 
		|			Основной.Налог, 
		|			Основной.СтатьяНалоговойДекларации, 
		|			БазаИзНачислений.Регистратор, 
		|			БазаИзНачислений.НомерСтроки, 
		|			Основной.Сотрудник, 
		|			БазаИзНачислений.Назначение, 
		|			НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)	КАК БазовыйПериодНачало, 
		|			Основной.ДатаНачала	КАК ПериодСтавки, 
		|			Основной.ВидРасчета,
		|			ВЫБОР КОГДА Основной.Результат >= 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ	КАК ЗнакСуммы, 
		|			Основной.База,
		|			Основной.БазаВзноса,
		|			Основной.Результат,
		|			БазаИзНачислений.ВидРасчетаБазы						КАК ВидРасчетаБазы, 
		|			БазаИзНачислений.ПодразделениеОрганизации, 
		|			БазаИзНачислений.ВзносыОсновногоНачисления, 
		|   		БазаИзНачислений.НалоговоеНазначениеДоходовИЗатрат КАК НалоговоеНазначениеДоходовИЗатрат,
		|   		БазаИзНачислений.СпособРаспределенияЗатрат,
		|   		БазаИзНачислений.СчетДт,
		|   		БазаИзНачислений.СубконтоДт1,
		|   		БазаИзНачислений.СубконтоДт2,
		|   		БазаИзНачислений.СубконтоДт3,
		|			СУММА(БазаИзНачислений.Результат)		КАК РезультатБаза 
		|ПОМЕСТИТЬ ВТБазы	
		|		ИЗ ВТОсновнаяТаблица КАК Основной
		| 
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК БазаИзНачислений
		|		ПО		Основной.Сотрудник = БазаИзНачислений.Сотрудник  
		|"+ТекстФильтрПоПериодам+"
		|  	
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК БазовыеВидыРасчета
		|		ПО		Основной.ВидРасчета = БазовыеВидыРасчета.Ссылка  
		|			И	БазаИзНачислений.ВидРасчетаБазы = БазовыеВидыРасчета.ВидРасчета
		| 
		|		СГРУППИРОВАТЬ ПО 
		|			Основной.Налог, 
		|			Основной.СтатьяНалоговойДекларации, 
		|			БазаИзНачислений.Регистратор, 
		|			БазаИзНачислений.НомерСтроки, 
		|			Основной.Сотрудник, 
		|			БазаИзНачислений.Назначение, 
		|			НАЧАЛОПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ), 
		|			Основной.ДатаНачала, 
		|			Основной.ВидРасчета,
		|			ВЫБОР КОГДА Основной.Результат >= 0 ТОГДА ИСТИНА ИНАЧЕ ЛОЖЬ КОНЕЦ, 
		|			Основной.База,
		|			Основной.БазаВзноса,
		|			Основной.Результат,
		|			БазаИзНачислений.ВидРасчетаБазы, 
		|			БазаИзНачислений.ПодразделениеОрганизации, 
		|			БазаИзНачислений.ВзносыОсновногоНачисления, 
		|   		БазаИзНачислений.НалоговоеНазначениеДоходовИЗатрат,
		|   		БазаИзНачислений.СпособРаспределенияЗатрат,
		|   		БазаИзНачислений.СчетДт,
		|   		БазаИзНачислений.СубконтоДт1,
		|   		БазаИзНачислений.СубконтоДт2,
		|   		БазаИзНачислений.СубконтоДт3
		| ";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТБазы = "ВТБазы";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТБазы";
	
	// ВТБазыСИтогом
	Если Истина Тогда
		//	Описание:
		// 		Итоги по базе ВТБазы
		//
		ТекстЗапросаВТ = "
		|		ВЫБРАТЬ 
		|			Основной.Налог, 
		|			Основной.СтатьяНалоговойДекларации, 
		|			Основной.Сотрудник, 
		|			Основной.БазовыйПериодНачало, 
		|			Основной.ПериодСтавки, 
		|			Основной.ВидРасчета,
		|			Основной.ЗнакСуммы, 
		|			СУММА(Основной.РезультатБаза) КАК РезультатБазаИтог 
		|ПОМЕСТИТЬ ВТБазыСИтогом	
		|		ИЗ ВТБазы КАК Основной
		|		СГРУППИРОВАТЬ ПО 
		|			Основной.Налог, 
		|			Основной.СтатьяНалоговойДекларации, 
		|			Основной.Сотрудник, 
		|			Основной.БазовыйПериодНачало, 
		|			Основной.ПериодСтавки, 
		|			Основной.ВидРасчета,
		|			Основной.ЗнакСуммы
		| ";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТБазы = "ВТБазыСИтогом";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТБазыСИтогом";
	
	//	ВТПлановыеНачисления
	Если Истина Тогда
		//	Описание:
		// 		РеглУчетПлановыхНачисленийРаботниковОрганизаций
		//		
		ТекстЗапросаВТ = "
		|		ВЫБРАТЬ
		|			ОсновнойПериод.Регистратор,
		|			ОсновнойПериод.НомерСтроки,
		|			ОсновнойПериод.Сотрудник,
		|			ОсновнойПериод.Назначение,
		|			ОсновнойПериод.ВидРасчета,
		|			ПлановыеНачисления.СпособОтраженияВБухучете
		|ПОМЕСТИТЬ ВТПлановыеНачисления	
		|		ИЗ(
		|			ВЫБРАТЬ
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.Назначение,
		|				Основной.ВидРасчета,
		|				Основной.ДокументОснование,
		|				МАКСИМУМ(ПлановыеНачисления.Период)	КАК Период
		|			ИЗ РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК Основной
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетПлановыхНачисленийРаботниковОрганизаций КАК ПлановыеНачисления
		|			ПО		Основной.Назначение = ПлановыеНачисления.Сотрудник 
		|				И	Основной.ВидРасчета = ПлановыеНачисления.ВидРасчета 
		|				И	((Основной.ДокументОснование = ПлановыеНачисления.ДокументОснование) ИЛИ (ПлановыеНачисления.ДокументОснование = ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка))) 
		|				И	ПлановыеНачисления.Период <= &парамПериодРегистрации
		|			ГДЕ		Основной.Сотрудник в ( &парамСотрудники )
		|				И	НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации 
		|			СГРУППИРОВАТЬ ПО
		|				Основной.Регистратор,
		|				Основной.НомерСтроки,
		|				Основной.Сотрудник,
		|				Основной.Назначение,
		|				Основной.ВидРасчета,
		|				Основной.ДокументОснование
		|		) КАК ОсновнойПериод
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетПлановыхНачисленийРаботниковОрганизаций КАК ПлановыеНачисления
		|		ПО		ОсновнойПериод.Назначение = ПлановыеНачисления.Сотрудник 
		|			И	ОсновнойПериод.ВидРасчета = ПлановыеНачисления.ВидРасчета 
		|			И	((ОсновнойПериод.ДокументОснование = ПлановыеНачисления.ДокументОснование) ИЛИ (ПлановыеНачисления.ДокументОснование = ЗНАЧЕНИЕ(Документ.ДоговорНаВыполнениеРаботСФизЛицом.ПустаяСсылка))) 
		|			И	ОсновнойПериод.Период = ПлановыеНачисления.Период
		|
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПлановыеНачисления";
	
	// ВТСдельныйНаряд
	Если Истина Тогда
		//	Описание:
		// 		Суммы начислений, которые, возможно, надо рпспределить пропорционально сдельному наряду
		//		
		ТекстЗапросаВТ = "
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяССылка) КАК Ссылка,
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|   Основной.НалоговоеНазначениеДоходовИЗатрат		КАК НалоговоеНазначениеДоходовИЗатрат,
		|   Основной.СпособРаспределенияЗатрат	КАК СпособРаспределенияЗатрат,
		|   Основной.СчетДт						КАК СчетДт,
		|   Основной.СубконтоДт1				КАК СубконтоДт1,
		|   Основной.СубконтоДт2				КАК СубконтоДт2,
		|   Основной.СубконтоДт3				КАК СубконтоДт3,
		|   Основной.СчетКт						КАК СчетКт,
		|   Основной.СубконтоКт1				КАК СубконтоКт1,
		|   Основной.СубконтоКт2				КАК СубконтоКт2,
		|   Основной.СубконтоКт3				КАК СубконтоКт3,
		|   Основной.ВзносыОсновногоНачисления	КАК ВзносыОсновногоНачисления,
		|	СУММА( Основной.Результат ) 		КАК Результат,
		|	СдельныеВсего.РезультатВсего 		КАК РезультатВсего
		|ПОМЕСТИТЬ ВТСдельныйНаряд	
		|ИЗ	РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК Основной
		|   ЛЕВОЕ СОЕДИНЕНИЕ
		|   (ВЫБРАТЬ 
		|	Основной.Сотрудник КАК Сотрудник,
		|	Основной.Назначение КАК Назначение,
		|	СУММА(Основной.Результат) КАК РезультатВсего
		|	ИЗ	РегистрРасчета.ОтражениеЗарплатыОрганизацийВРеглУчете КАК Основной
		|	ГДЕ	Основной.Сотрудник в (&парамСотрудники)
		|		И	НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации 
		|		И	Основной.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.НачислениеСдельно)
		|	СГРУППИРОВАТЬ ПО
		|		Основной.Сотрудник,
		|		Основной.Назначение) КАК СдельныеВсего
		|   ПО Основной.Сотрудник = СдельныеВсего.Сотрудник
		|    И Основной.Назначение = СдельныеВсего.Назначение
		|ГДЕ	Основной.Сотрудник в (&парамСотрудники)
		|	И	НАЧАЛОПЕРИОДА(Основной.ПериодРегистрации, МЕСЯЦ) = &парамПериодРегистрации 
		|	И	Основной.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.НачислениеСдельно) 
		|				
		|СГРУППИРОВАТЬ ПО
		|	Основной.Сотрудник,
		|	Основной.Назначение,
		|   Основной.НалоговоеНазначениеДоходовИЗатрат,
		|   Основной.СпособРаспределенияЗатрат,
		|   Основной.СчетДт,
		|   Основной.СубконтоДт1,
		|   Основной.СубконтоДт2,
		|   Основной.СубконтоДт3,
		|   Основной.СчетКт,
		|   Основной.СубконтоКт1,
		|   Основной.СубконтоКт2,
		|   Основной.СубконтоКт3,
		|   Основной.ВзносыОсновногоНачисления,
		|	СдельныеВсего.РезультатВсего
		|
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТСдельныйНаряд";
	
	//	ВТПроводки
	Если Истина Тогда
		//	Описание:
		// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
		//		
		ТекстПараметра = "
		|			ВЫБОР	КОГДА		ЕстьNUll(ПроводкиВзносовПордразделение.СчетДт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	ПроводкиВзносовПордразделение.ИмяПараметра 		 
		|					КОГДА		ЕстьNUll(ПроводкиВзносовОрганизация.СчетДт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	ПроводкиВзносовОрганизация.ИмяПараметра 		 
		|					КОГДА		ПроводкиВзносов.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	ПроводкиВзносов.ИмяПараметра 		 
		|					КОГДА		ПроводкиНачислений.ВзносыОсновногоНачисления
		|           		ТОГДА	ВЫБОР	КОГДА СдельныеНаряды.СчетДт ЕСТЬ НЕ NULL
		|										ТОГДА	СдельныеНаряды.ИмяПараметра 		 
		|									КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|										ТОГДА	Распределение.СпособОтраженияВБухучете.ИмяПараметра
		|           						КОГДА УчетОсновногоЗаработка.СпособОтраженияВБухучете ЕСТЬ НЕ NULL
		|										ТОГДА	УчетОсновногоЗаработка.СпособОтраженияВБухучете.ИмяПараметра 		 
		|									КОГДА ЕСТЬNULL(ОтражениеПоПодразделению.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|										ТОГДА	ОтражениеПоПодразделению.СпособОтраженияВБухучете.ИмяПараметра 		   
		|									КОГДА ЕСТЬNULL(ОтражениеПоОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|										ТОГДА	ОтражениеПоОрганизации.СпособОтраженияВБухучете.ИмяПараметра 		   
		|									ИНАЧЕ	ОтражениеНачисленийПоУмолчанию.ИмяПараметра 		 
		|                           КОНЕЦ
		|					ИНАЧЕ		ПроводкиНачислений.ИмяПараметра		 
		|			КОНЕЦ ";
		
		ТекстПараметраСчетКт = "
		|			ВЫБОР	КОГДА		ЕстьNUll(ПроводкиВзносовПордразделение.СчетКт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	ПроводкиВзносовПордразделение.ИмяПараметра 		 
		|					КОГДА		ЕстьNUll(ПроводкиВзносовОрганизация.СчетКт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	ПроводкиВзносовОрганизация.ИмяПараметра 		 
		|					ИНАЧЕ		ПроводкиВзносов.ИмяПараметра		 
		|			КОНЕЦ ";
		
        
		ТекстЗапросаВТ = " 
		|		ВЫБРАТЬ
		|			ПроводкиНачислений.Сотрудник					КАК Сотрудник,
		|			ПроводкиНачислений.ПодразделениеОрганизации, 
		|			ПроводкиНачислений.Налог						КАК Налог,
		|			ПроводкиНачислений.СтатьяНалоговойДекларации	КАК СтатьяНалоговойДекларации,
		|			ПроводкиНачислений.ВидРасчета					КАК ВидРасчета,
		|			ПроводкиНачислений.ЗнакСуммы					КАК ЗнакСуммы, 
		|			ПроводкиНачислений.ВидРасчетаБазы				КАК ВидРасчетаБазы,
		|			ПроводкиНачислений.БазовыйПериодНачало			КАК БазовыйПериодНачало,
		|			ПроводкиНачислений.ПериодСтавки, 
		|			ПроводкиНачислений.Результат				КАК СтатьяНДРезультат,
		|
		|
		|
		|           СпособОтраженияПодразделение.СпособОтраженияВРеглУчете КАК О1,
		|           СпособОтраженияОрганизация.СпособОтраженияВРеглУчете КАК О2,
		|           СпособОтражения.СпособОтраженияВРеглУчете КАК О3,
		|
		|           ПроводкиВзносовПордразделение.СчетДт	КАК С1,
		|           ПроводкиВзносовОрганизация.СчетДт		КАК С2,
		|           ПроводкиВзносов.СчетДт		КАК С3,
		|
		|			ВЫБОР	КОГДА		ЕстьNUll(ПроводкиВзносовПордразделение.СчетДт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	1 		 
		|					КОГДА		ЕстьNUll(ПроводкиВзносовОрганизация.СчетДт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	2 		 
		|					КОГДА		ПроводкиВзносов.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|						ТОГДА	3 		 
		|					КОГДА		ПроводкиНачислений.ВзносыОсновногоНачисления
		|           		ТОГДА	ВЫБОР	КОГДА СдельныеНаряды.СчетДт ЕСТЬ НЕ NULL
		|										ТОГДА	41 		 
		|									КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|										ТОГДА	42
		|           						КОГДА УчетОсновногоЗаработка.СпособОтраженияВБухучете ЕСТЬ НЕ NULL
		|										ТОГДА	43 		 
		|									КОГДА ЕСТЬNULL(ОтражениеПоПодразделению.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|										ТОГДА	44 		   
		|									КОГДА ЕСТЬNULL(ОтражениеПоОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|										ТОГДА	45 		   
		|							ИНАЧЕ	46 		 
		|                           КОНЕЦ
		|					ИНАЧЕ	5		 
		|			КОНЕЦ 		КАК П1,
		|
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","НалоговоеНазначениеДоходовИЗатрат")+"			КАК НалоговоеНазначениеДоходовИЗатрат,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СпособРаспределенияЗатрат")+"	КАК СпособРаспределенияЗатрат,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СчетДт")+"						КАК СчетДт,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоДт1")+"					КАК СубконтоДт1,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоДт2")+"					КАК СубконтоДт2,
		|   		" + СтрЗаменить(ТекстПараметра,"ИмяПараметра","СубконтоДт3")+"					КАК СубконтоДт3,
		|    
		|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СчетКт")+"						КАК СчетКт,
		|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт1")+"					КАК СубконтоКт1,
		|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт2")+"					КАК СубконтоКт2,
		|   		" + СтрЗаменить(ТекстПараметраСчетКт,"ИмяПараметра","СубконтоКт3")+"					КАК СубконтоКт3,
		|    
		|			СатьиЗатратВзносовФОТ.СтатьяЗатрат 			КАК СтатьяЗатрат,
		|           
		|			ВЫБОР	КОГДА 	ПроводкиНачислений.ВзносыОсновногоНачисления  
		|						И 	ЕСТЬNULL(ПроводкиНачислений.Результат, 0) <> 0  
		|						И	ЕСТЬNULL(ПроводкиНачислений.РезультатБаза, 0) <> 0 
		|						И	ЕСТЬNULL(БазыСИтогом.РезультатБазаИтог, 0) <> 0 
		|						И	ЕСТЬNULL(Распределение.ДоляСпособаОтражения,0) > 0 
		|						ТОГДА ПроводкиНачислений.Результат * Распределение.ДоляСпособаОтражения * ПроводкиНачислений.РезультатБаза / (БазыСИтогом.РезультатБазаИтог * 100) 
		|					КОГДА 	ПроводкиНачислений.ВзносыОсновногоНачисления  
		|						И 	ЕСТЬNULL(ПроводкиНачислений.Результат, 0) <> 0  
		|						И	ЕСТЬNULL(СдельныеНаряды.РезультатВсего, 0) <> 0
		|						И	ЕСТЬNULL(БазыСИтогом.РезультатБазаИтог, 0) <> 0 
		|						И	ЕСТЬNULL(СдельныеНаряды.Результат,0) > 0 
		|						ТОГДА ПроводкиНачислений.Результат * СдельныеНаряды.Результат*ПроводкиНачислений.РезультатБаза / (СдельныеНаряды.РезультатВсего*БазыСИтогом.РезультатБазаИтог) 
		|					КОГДА 	ЕСТЬNULL(ПроводкиНачислений.Результат, 0) = 0  
		|						ИЛИ	ЕСТЬNULL(ПроводкиНачислений.РезультатБаза, 0) = 0 
		|						ИЛИ	ЕСТЬNULL(БазыСИтогом.РезультатБазаИтог, 0) = 0 
		|					ТОГДА 0 
		|					ИНАЧЕ 	  ПроводкиНачислений.Результат * ПроводкиНачислений.РезультатБаза / БазыСИтогом.РезультатБазаИтог			
		|	    	КОНЕЦ									КАК Результат
		|
		|ПОМЕСТИТЬ ВТПроводки	
		|		ИЗ	ВТБазы КАК ПроводкиНачислений
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазыСИтогом КАК БазыСИтогом
		|		ПО		ПроводкиНачислений.Налог = БазыСИтогом.Налог
		|			И	ПроводкиНачислений.СтатьяНалоговойДекларации  = БазыСИтогом.СтатьяНалоговойДекларации 
		|			И	ПроводкиНачислений.Сотрудник = БазыСИтогом.Сотрудник 
		|			И	ПроводкиНачислений.БазовыйПериодНачало = БазыСИтогом.БазовыйПериодНачало 
		|			И	ПроводкиНачислений.ПериодСтавки = БазыСИтогом.ПериодСтавки 
		|			И	ПроводкиНачислений.ВидРасчета = БазыСИтогом.ВидРасчета
		|			И	ПроводкиНачислений.ЗнакСуммы = БазыСИтогом.ЗнакСуммы
		|
		|				
		|		//начисления у которых прописана своя проводка		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПлановыеНачисления КАК ПлановыеНачисления
		|		ПО		ПроводкиНачислений.Регистратор = ПлановыеНачисления.Регистратор	
		|			И	ПроводкиНачислений.НомерСтроки = ПлановыеНачисления.НомерСтроки	
		|			И	ПроводкиНачислений.ВзносыОсновногоНачисления			
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаРаботниковОрганизаций.СрезПоследних(КОНЕЦПЕРИОДА(&парамПериодРегистрации),Сотрудник В (&парамСотрудники)) КАК УчетОсновногоЗаработка
		|		ПО		(УчетОсновногоЗаработка.Сотрудник = ПроводкиНачислений.Сотрудник 
		|			И	УчетОсновногоЗаработка.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)	
		|			ИЛИ	УчетОсновногоЗаработка.Сотрудник.ОсновноеНазначение	= ПроводкиНачислений.Сотрудник)
		|			И	ПроводкиНачислений.ВзносыОсновногоНачисления			
		|				
		|		// способ отражения организации	
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаОрганизации.СрезПоследних(КОНЕЦПЕРИОДА(&парамПериодРегистрации,МЕСЯЦ), Организация = &парамОрганизация) КАК ОтражениеПоОрганизации
		|		ПО ПроводкиНачислений.ВзносыОсновногоНачисления			
		|				
		|		// способ отражения подразделения		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетОсновногоЗаработкаПодразделенияОрганизации.СрезПоследних(КОНЕЦПЕРИОДА(&парамПериодРегистрации,МЕСЯЦ), Организация = &парамОрганизация) КАК ОтражениеПоПодразделению
		|		ПО		ПроводкиНачислений.ВзносыОсновногоНачисления			
		|			И	ОтражениеПоПодразделению.ПодразделениеОрганизации = ПроводкиНачислений.ПодразделениеОрганизации			
		|	
		|		// способ отражения по умолчанию		
		|		ЛЕВОЕ СОЕДИНЕНИЕ (	ВЫБРАТЬ * ИЗ Справочник.СпособыОтраженияЗарплатыВРеглУчете 
		|						ГДЕ Ссылка = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ОтражениеНачисленийПоУмолчанию)
		|					) КАК ОтражениеНачисленийПоУмолчанию
		|		ПО ИСТИНА
		|				
		|		// сдельный наряд		
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСдельныйНаряд КАК СдельныеНаряды
		|		ПО		ПроводкиНачислений.Сотрудник = СдельныеНаряды.Сотрудник	
		|			И	ПроводкиНачислений.Назначение = СдельныеНаряды.Назначение	
		|			И	ПроводкиНачислений.ВзносыОсновногоНачисления			
		////|			И	ВЫБОР КОГДА	ПлановыеНачисления.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		////|						ИЛИ		ПроводкиНачислений.ВидРасчетаБазы.СпособОтраженияВБухучете = ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.РаспределятьПоСдельному)
		////|						ТОГДА	ИСТИНА 		 
		////|				ИНАЧЕ	ЛОЖЬ КОНЕЦ 		 
		| 		 
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
		|							Налог,
		|							СпособОтраженияВРеглУчете
		|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
		|					ГДЕ		Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|						И	ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|					) КАК СпособОтражения
		|		ПО   ПроводкиНачислений.Налог = СпособОтражения.Налог 
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
		|							Налог,
		|							СпособОтраженияВРеглУчете
		|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
		|					ГДЕ		Организация = &парамОрганизация
		|						И	ПодразделениеОрганизации = ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|					) КАК СпособОтраженияОрганизация
		|		ПО   ПроводкиНачислений.Налог = СпособОтраженияОрганизация.Налог 
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ ( ВЫБРАТЬ
		|							ПодразделениеОрганизации,
		|							Налог,
		|							СпособОтраженияВРеглУчете
		|					ИЗ РегистрСведений.ОтражениеВзносовВРеглУчете.СрезПоследних(&парамПериодРегистрации, )
		|					ГДЕ		Организация = &парамОрганизация
		|						И	ПодразделениеОрганизации <> ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)
		|					) КАК СпособОтраженияПодразделение
		|		ПО   	ПроводкиНачислений.Налог = СпособОтраженияПодразделение.Налог 
		|			И   ПроводкиНачислений.ПодразделениеОрганизации = СпособОтраженияПодразделение.ПодразделениеОрганизации 
		|	
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносов
		|		ПО   СпособОтражения.СпособОтраженияВРеглУчете = ПроводкиВзносов.Ссылка 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносовОрганизация
		|		ПО		СпособОтраженияОрганизация.СпособОтраженияВРеглУчете = ПроводкиВзносовОрганизация.Ссылка 
		|
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СпособыОтраженияЗарплатыВРеглУчете КАК ПроводкиВзносовПордразделение
		|		ПО		СпособОтраженияПодразделение.СпособОтраженияВРеглУчете = ПроводкиВзносовПордразделение.Ссылка 
		|				
		|				
		|		// распределение основного начисления по документу		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаспределениеОсновногоЗаработкаРаботниковОрганизаций КАК Распределение
		|		ПО		ПроводкиНачислений.Сотрудник = Распределение.Сотрудник
		|			И	ПроводкиНачислений.Назначение = Распределение.Назначение
		|			И	Распределение.ПериодРегистрации = &парамПериодРегистрации
		|           // условие обратное условию в ТекстПараметра 
		|			И	ПроводкиВзносов.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
		|			И	ПроводкиНачислений.ВзносыОсновногоНачисления			
		|			И	СдельныеНаряды.СчетДт ЕСТЬ NULL
		|
		|				
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтражениеВзносовФОТВРеглУчете.СрезПоследних(&парамПериодРегистрации) КАК СатьиЗатратВзносовФОТ
		|		ПО		СатьиЗатратВзносовФОТ.Налог = ПроводкиНачислений.Налог 
		|			И	СатьиЗатратВзносовФОТ.СчетЗатрат = 
		|	ВЫБОР	КОГДА		ЕстьNUll(ПроводкиВзносовПордразделение.СчетДт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА	ПроводкиВзносовПордразделение.СчетДт 		 
		|		КОГДА		ЕстьNUll(ПроводкиВзносовОрганизация.СчетДт,ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА	ПроводкиВзносовОрганизация.СчетДт 		 
		|		КОГДА		ПроводкиВзносов.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
		|			ТОГДА	ПроводкиВзносов.СчетДт 		 
		|		КОГДА		ПроводкиНачислений.ВзносыОсновногоНачисления
       	|	ТОГДА	ВЫБОР	КОГДА СдельныеНаряды.СчетДт ЕСТЬ НЕ NULL
		|							ТОГДА	СдельныеНаряды.СчетДт 		 
		|						КОГДА Распределение.СпособОтраженияВБухучете <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА	Распределение.СпособОтраженияВБухучете.СчетДт
       	|					КОГДА УчетОсновногоЗаработка.СпособОтраженияВБухучете ЕСТЬ НЕ NULL
		|							ТОГДА	УчетОсновногоЗаработка.СпособОтраженияВБухучете.СчетДт 		 
		|						КОГДА ЕСТЬNULL(ОтражениеПоПодразделению.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА	ОтражениеПоПодразделению.СпособОтраженияВБухучете.СчетДт 		   
		|						КОГДА ЕСТЬNULL(ОтражениеПоОрганизации.СпособОтраженияВБухучете, ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)) <> ЗНАЧЕНИЕ(Справочник.СпособыОтраженияЗарплатыВРеглУчете.ПустаяСсылка)
		|							ТОГДА	ОтражениеПоОрганизации.СпособОтраженияВБухучете.СчетДт 		   
		|						ИНАЧЕ	ОтражениеНачисленийПоУмолчанию.СчетДт 		 
        |               КОНЕЦ
		|		ИНАЧЕ		ПроводкиНачислений.СчетДт		 
		|КОНЕЦ 

		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТПроводки = "ВТПроводки";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПроводки";
	
	//	ВТПроводкиСуммы
	Если Истина Тогда
		//	Описание:
		// 		РегистрРасчета.ВзносыВФонды + Проводки Кт
		//		
		ТекстЗапросаВТ = " 
		|		ВЫБРАТЬ
		|			Основной.Сотрудник,
		|			Основной.ПодразделениеОрганизации, 
		|			Основной.Налог,
		|			Основной.СтатьяНалоговойДекларации,
		|			Основной.ВидРасчета,
		|			Основной.ЗнакСуммы			КАК ЗнакСуммы, 
		|			Основной.ВидРасчетаБазы				КАК ВидРасчетаБазы,
		|			Основной.БазовыйПериодНачало,
		|			Основной.ПериодСтавки, 
		|			Основной.Результат,
		|
		|   		Основной.НалоговоеНазначениеДоходовИЗатрат,
		|   		Основной.СпособРаспределенияЗатрат,
		|   		Основной.СчетДт,
		|   		Основной.СубконтоДт1,
		|   		Основной.СубконтоДт2,
		|   		Основной.СубконтоДт3,
		|    
		|			Основной.СчетКт,
		|			Основной.СубконтоКт1,
		|			Основной.СубконтоКт2,
		|			Основной.СубконтоКт3,
		|    
		|			Основной.СтатьяЗатрат,
		|    
		|			0									КАК РезультатНалог,
		|			Основной.Результат					КАК Результат
		|
		|ПОМЕСТИТЬ ВТПроводкиСуммы	
		|		ИЗ	"+ТекстЗапросаВТПроводки+" КАК Основной
		|
		|       ОБЪЕДИНИТЬ ВСЕ
		|		ВЫБРАТЬ
		|			Основной.Сотрудник,
		|			Основной.ПодразделениеОрганизации, 
		|			Основной.Налог,
		|			Основной.СтатьяНалоговойДекларации,
		|			Основной.ВидРасчета,
		|			Основной.ЗнакСуммы			КАК ЗнакСуммы, 
		|           // нам нужны итоги по налогу без разреза на базовые виды расчета
		|			NULL								КАК ВидРасчетаБазы,
		|			Основной.БазовыйПериодНачало,
		|			Основной.ПериодСтавки, 
		|			Основной.Результат,
		|
		|   		Основной.НалоговоеНазначениеДоходовИЗатрат,
		|   		Основной.СпособРаспределенияЗатрат,
		|   		Основной.СчетДт,
		|   		Основной.СубконтоДт1,
		|   		Основной.СубконтоДт2,
		|   		Основной.СубконтоДт3,
		|    
		|			Основной.СчетКт,
		|			Основной.СубконтоКт1,
		|			Основной.СубконтоКт2,
		|			Основной.СубконтоКт3,
		|    
		|			Основной.СтатьяЗатрат,
		|    
		|			СУММА(Основной.Результат)			КАК РезультатНалог,
		|			0									КАК Результат
		|		ИЗ	"+ТекстЗапросаВТПроводки+" КАК Основной
		|
		|		СГРУППИРОВАТЬ ПО
		|			Основной.Сотрудник,
		|			Основной.ПодразделениеОрганизации, 
		|			Основной.Налог,
		|			Основной.СтатьяНалоговойДекларации,
		|			Основной.ВидРасчета,
		|			Основной.ЗнакСуммы,
		|
		|			Основной.БазовыйПериодНачало,
		|			Основной.ПериодСтавки, 
		|			Основной.Результат,
		|
		|   		Основной.НалоговоеНазначениеДоходовИЗатрат,
		|   		Основной.СпособРаспределенияЗатрат,
		|   		Основной.СчетДт,
		|   		Основной.СубконтоДт1,
		|   		Основной.СубконтоДт2,
		|   		Основной.СубконтоДт3,
		|    
		|			Основной.СчетКт,
		|			Основной.СубконтоКт1,
		|			Основной.СубконтоКт2,
		|			Основной.СубконтоКт3,
		|    
		|			Основной.СтатьяЗатрат
		|";
		Запрос.Текст = ТекстЗапросаВТ;
		Запрос.Выполнить();
		ТекстЗапросаВТПроводкиСуммы = "ВТПроводкиСуммы";
	КонецЕсли;
	Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТПроводкиСуммы";
	
	ТекстЗапроса = " 
	|ВЫБРАТЬ
	|	Основной.Сотрудник					КАК Сотрудник,
	|	Основной.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|	Основной.Налог						КАК Налог,
	|	Основной.СтатьяНалоговойДекларации	КАК СтатьяНалоговойДекларации,
	|	Основной.ВидРасчета					КАК ВидРасчета,
	|	Основной.ЗнакСуммы			КАК ЗнакСуммы, 
	|	Основной.ВидРасчетаБазы				КАК ВидРасчетаБазы,
	|	Основной.БазовыйПериодНачало		КАК БазовыйПериодНачало,
	|	Основной.ПериодСтавки, 
	|
	|	Основной.НалоговоеНазначениеДоходовИЗатрат,
	|	Основной.СпособРаспределенияЗатрат,
	|	Основной.СчетДт,
	|	Основной.СубконтоДт1,
	|	Основной.СубконтоДт2,
	|	Основной.СубконтоДт3,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3,
	|    
	|	Основной.СтатьяЗатрат,
	|	
	//|	Основной.СтатьяНДРезультат,
	|	Основной.РезультатНалог							КАК РезультатНалог,// нужен чтобы получить правильную сумму по статье налоговой декларации
	|	Основной.Результат								КАК РезультатТочный,
	|	ВЫБОР КОГДА ВЫРАЗИТЬ(Основной.Результат КАК ЧИСЛО(18, 2)) > Основной.Результат
	|	      ТОГДА ВЫРАЗИТЬ(Основной.Результат КАК ЧИСЛО(18, 2)) - Основной.Результат
	|	      ИНАЧЕ Основной.Результат - ВЫРАЗИТЬ(Основной.Результат КАК ЧИСЛО(18, 2))
	|	      КОНЕЦ										КАК Дельта,
	|	ВЫРАЗИТЬ( Основной.Результат КАК ЧИСЛО (18,2))	КАК Результат,
	|	
	|	// --- ДЕБЕТ	
	|	ЕСТЬNULL(ВидыСубконтоСтатьяЗатратДт.НомерСтроки, 0)  КАК НомерСубконтоСтатьяЗатратДт,
	|	ЕСТЬNULL(ВидыСубконтоПодразделенияДт.НомерСтроки, 0)  КАК НомерСубконтоПодразделенияДт,
	|	ЕСТЬNULL(ВидыСубконтоСтатьиНалоговыхДекларацийДт.НомерСтроки, 0)  КАК НомерСубконтоСтатьиНалоговыхДекларацийДт,
	|	ЕСТЬNULL(ВидыСубконтоНалогиДт.НомерСтроки, 0)  КАК НомерСубконтоНалогиДт,
	|    
	|	// --- КРЕДИТ	
	|	ЕСТЬNULL(ВидыСубконтоСтатьиНалоговыхДекларацийКт.НомерСтроки, 0)  КАК НомерСубконтоСтатьиНалоговыхДекларацийКт,
	|	ЕСТЬNULL(ВидыСубконтоНалогиКт.НомерСтроки, 0)  КАК НомерСубконтоНалогиКт
	|
	|ИЗ	"+ТекстЗапросаВТПроводкиСуммы+" КАК Основной
	|
	|	
	|// --- ДЕБЕТ	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьяЗатратДт
	|ПО		Основной.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И	Основной.СчетДт = ВидыСубконтоСтатьяЗатратДт.Ссылка 
	|	И	ВидыСубконтоСтатьяЗатратДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат)
	|	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоПодразделенияДт
	|ПО		Основной.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И	Основной.СчетДт = ВидыСубконтоПодразделенияДт.Ссылка 
	|	И	ВидыСубконтоПодразделенияДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиНалоговыхДекларацийДт
	|ПО		Основной.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И	Основной.СчетДт = ВидыСубконтоСтатьиНалоговыхДекларацийДт.Ссылка 
	|	И	ВидыСубконтоСтатьиНалоговыхДекларацийДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиНалоговыхДеклараций)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоНалогиДт
	|ПО		Основной.СчетДт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И	Основной.СчетДт = ВидыСубконтоНалогиДт.Ссылка 
	|	И	ВидыСубконтоНалогиДт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Налоги)
	|	
	|// --- КРЕДИТ	
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоСтатьиНалоговыхДекларацийКт
	|ПО		Основной.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И	Основной.СчетКт = ВидыСубконтоСтатьиНалоговыхДекларацийКт.Ссылка 
	|	И	ВидыСубконтоСтатьиНалоговыхДекларацийКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиНалоговыхДеклараций)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидыСубконтоНалогиКт
	|ПО		Основной.СчетКт <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) 
	|	И	Основной.СчетКт = ВидыСубконтоНалогиКт.Ссылка 
	|	И	ВидыСубконтоНалогиКт.ВидСубконто = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Налоги)
	|    
	|УПОРЯДОЧИТЬ ПО    
	|	Сотрудник,
	|	СтатьяНалоговойДекларации,
	|	ЗнакСуммы,
	|	Дельта
	|    
	|ИТОГИ    
	|	СУММА(РезультатНалог), 
	|	СУММА(Результат) 
	|ПО
	|	СтатьяНалоговойДекларации,
	|	ЗнакСуммы,
	|	Сотрудник  
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	ВыборкаСтатьяНалоговойДекларации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаСтатьяНалоговойДекларации.Следующий() Цикл
		
		ВыборкаЗнакСуммы = ВыборкаСтатьяНалоговойДекларации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаЗнакСуммы.Следующий() Цикл
			
			Знак = ?(ВыборкаЗнакСуммы.ЗнакСуммы, 1, -1);
			Дельта = Окр(ВыборкаЗнакСуммы.РезультатНалог, 2) - ВыборкаЗнакСуммы.Результат;
			
			ВыборкаСотрудники = ВыборкаЗнакСуммы.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСотрудники.Следующий() Цикл
				
				Выборка = ВыборкаСотрудники.Выбрать(ОбходРезультатаЗапроса.Прямой);
				Пока Выборка.Следующий() Цикл
					
					Если Выборка.ВидРасчетаБазы = NULL Тогда
						Продолжить;
					КонецЕсли;
					
					Если Дельта*Знак > 0 Тогда
						Копейка = 0.01*Знак;
					ИначеЕсли Дельта = 0 Тогда
						Копейка = 0;
					Иначе
						Копейка = -0.01*Знак;
					КонецЕсли;
					
					//СуммаДвижения = Выборка.Результат + Копейка;
					//Дельта = Дельта - Копейка;
					Если Выборка.Результат <> Выборка.РезультатТочный И Копейка <> 0 Тогда
						//Скорректируем копейку на том, у кого и так проблемы.
						ТекущаяОшибка = МАКС(Выборка.РезультатТочный - Выборка.Результат,-(Выборка.РезультатТочный - Выборка.Результат));
						РезультатОшибка = МАКС(Выборка.РезультатТочный - Выборка.Результат - Копейка,-(Выборка.РезультатТочный - Выборка.Результат - Копейка));
						Если (РезультатОшибка <= ТекущаяОшибка) ИЛИ ((Выборка.РезультатТочный - Выборка.Результат) > 0 И (Выборка.РезультатТочный - Выборка.Результат - Копейка) < 0 ) Тогда
							//Корректировку будем делать в том случае, когда
							// - после корректировки ошибка станет меньше
							// либо
							// - до корректировки мы недоплачиваем налогов, а после корректировки - переплатим
							СуммаДвижения = Выборка.Результат + Копейка;
							Дельта = Дельта - Копейка;
						Иначе
							// Корректировка сделает только хуже
							СуммаДвижения = Выборка.Результат;
						КонецЕсли;	
					Иначе
						СуммаДвижения = Выборка.Результат;
					КонецЕсли;
					
					// Добавим строку
					СтрокаДанных = ВзносыФОТ.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДанных, Выборка);
					СтрокаДанных.Результат = СуммаДвижения;
					
					АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Дт" , "Подразделения");
					АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Дт" , "СтатьяЗатрат");
					АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Дт" , "Налоги");
					АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Дт" , "СтатьиНалоговыхДеклараций");
					
					АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "Налоги");
					АвтозаполнениеСубконто(Выборка, СтрокаДанных, "Кт" , "СтатьиНалоговыхДеклараций");
					
					Если НЕ ЗначениеЗаполнено(Выборка.СтатьяЗатрат) Тогда
						Сообщить("Не определена статья затрат взносов ФОТ для счета Дт " + Строка(Выборка.СчетДт.Код)+", проверьте настройки в регистре ""Отражение Взносов на ФОТ в регл. учете""!",СтатусСообщения.Важное);
					КонецЕсли;	

					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ВзносыФОТ.Сортировать("Сотрудник, Налог, БазовыйПериодНачало, ВидРасчетаБазы");
	
КонецПроцедуры  // РассчитатьВзносы()


Функция СформироватьЗапросПоНачисления( Сотрудники )

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);

	Если НЕ (Сотрудники = Неопределено) Тогда
		Запрос.УстановитьПараметр("парамСотрудники", Сотрудники);
		УсловиеНаФизлицоТекст = " И СтрокиНачисления.Сотрудник В (&парамСотрудники) ";
	Иначе
		УсловиеНаФизлицоТекст="";
	КонецЕсли;

	Запрос.Текст =
	"ВЫБРАТЬ
	// Свойства
	|	СтрокиНачисления.Ссылка.ПериодРегистрации	КАК ПериодРегистрации,
	|	НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаНачала, МЕСЯЦ) КАК БазовыйПериодНачало,
	|	НАЧАЛОПЕРИОДА(СтрокиНачисления.ДатаОкончания, МЕСЯЦ) КАК БазовыйПериодКонец,
	|	ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.Начисление) КАК ВидРасчета,
	|	СтрокиНачисления.ВидРасчета КАК ВидРасчетаБазы,
	|
	// Измерения
	|	СтрокиНачисления.Ссылка.Организация КАК организация,
	|	СтрокиНачисления.Сотрудник,
	|	СтрокиНачисления.Назначение,
	|
	// Ресурсы
	|	СтрокиНачисления.Результат,
	|
	// Реквизиты
	|	СтрокиНачисления.ПодразделениеОрганизации,
	|	СтрокиНачисления.НомерСтроки,
	|	СтрокиНачисления.НалоговоеНазначениеДоходовИЗатрат,
	|	СтрокиНачисления.СпособРаспределенияЗатрат,
	|	СтрокиНачисления.ВзносыОсновногоНачисления,
	|	СтрокиНачисления.СчетДт,
	|	СтрокиНачисления.СубконтоДт1,
	|	СтрокиНачисления.СубконтоДт2,
	|	СтрокиНачисления.СубконтоДт3,
	|	СтрокиНачисления.СчетКт,
	|	СтрокиНачисления.СубконтоКт1,
	|	СтрокиНачисления.СубконтоКт2,
	|	СтрокиНачисления.СубконтоКт3
	|
	|ИЗ Документ."+Ссылка.Метаданные().Имя+".Начисления КАК СтрокиНачисления
	|
	|ГДЕ	СтрокиНачисления.Ссылка = &ДокументСсылка
	|	И	СтрокиНачисления.Сотрудник в (&парамСотрудники)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоНачисления()

Функция СформироватьЗапросПоОтражению() Экспорт
	
	
	Записать();  // запишем документ
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	
	ТекстПараметрыНачисления = "
	|	Основной.НомерСтроки,
	|	Основной.НалоговоеНазначениеДоходовИЗатрат,
	|	Основной.СпособРаспределенияЗатрат,
	|
	|	Основной.СчетДт,
	|	Основной.СубконтоДт1,
	|	Основной.СубконтоДт2,
	|	Основной.СубконтоДт3,
	|	Основной.СчетКт,
	|	Основной.СубконтоКт1,
	|	Основной.СубконтоКт2,
	|	Основной.СубконтоКт3    
	|";
	
	ТекстПараметрыУдержания = "
	|		Основной.НомерСтроки,
	|		NULL				КАК НалоговоеНазначениеДоходовИЗатрат,
	|		NULL				КАК СпособРаспределенияЗатрат,
	|
	|		Основной.СчетДт,
	|		Основной.СубконтоДт1,
	|		Основной.СубконтоДт2,
	|		Основной.СубконтоДт3,
	|		Основной.СчетКт,
	|		Основной.СубконтоКт1,
	|		Основной.СубконтоКт2,
	|		Основной.СубконтоКт3    
	|";
	
	ТекстЗапроса  = "
	|   // --- Начисления
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.Начисление) КАК ВидРасчета,
	|	
	|		Основной.Ссылка.ПериодРегистрации	КАК ПериодРегистрации,
	|		Основной.ДатаНачала					КАК БазовыйПериодНачало,
	|		Основной.ДатаОкончания				КАК БазовыйПериодКонец,
	|		NULL								КАК ПериодСтавки,
	|	
	|		Основной.Ссылка.Организация	КАК Организация,
	|		Основной.Сотрудник			КАК Сотрудник,
	|		Основной.Назначение			КАК Назначение,
	|		Основной.ВидРасчета			КАК ВидРасчетаБазы,
	|		NULL						КАК Налог,
	|	
	|		Основной.ВзносыОсновногоНачисления	КАК ВзносыОсновногоНачисления,
	|	
	|		"+ТекстПараметрыНачисления+",
	|		Основной.Результат
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.Начисления КАК Основной
	|	ГДЕ Основной.Ссылка = &парамРегистратор
	|
	|   // --- ВзносыФОТ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.ВзносыФОТ) КАК ВидРасчета,
	|	
	|		Основной.Ссылка.ПериодРегистрации	КАК ПериодРегистрации,
	|		Основной.БазовыйПериодНачало		КАК БазовыйПериодНачало,
	|		КОНЕЦПЕРИОДА(Основной.БазовыйПериодНачало, МЕСЯЦ)	КАК БазовыйПериодКонец,
	|		Основной.ПериодСтавки				КАК ПериодСтавки,
	|	
	|		Основной.Ссылка.Организация	КАК Организация,
	|		Основной.Сотрудник			КАК Сотрудник,
	|		Основной.Сотрудник			КАК Назначение,
	|		Основной.ВидРасчетаБазы		КАК ВидРасчетаБазы,
	|		Основной.Налог				КАК Налог,
	|	
	|		ЛОЖЬ	КАК ВзносыОсновногоНачисления,
	|	
	|		"+ТекстПараметрыНачисления+",
	|		Основной.Результат
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.ВзносыФОТ КАК Основной
	|	ГДЕ Основной.Ссылка = &парамРегистратор
	|
	|
	|
	|   // --- Взносы
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.Взносы) КАК ВидРасчета,
	|	
	|		Основной.Ссылка.ПериодРегистрации				КАК ПериодРегистрации,
	|		Основной.НалоговыйПериод						КАК БазовыйПериодНачало,
	|		КОНЕЦПЕРИОДА(Основной.НалоговыйПериод, МЕСЯЦ)	КАК БазовыйПериодКонец,
	|		NULL											КАК ПериодСтавки,
	|	
	|		Основной.Ссылка.Организация	КАК Организация,
	|		Основной.Сотрудник			КАК Сотрудник,
	|		Основной.Сотрудник			КАК Назначение,
	|		NULL						КАК ВидРасчетаБазы,
	|		Основной.Налог				КАК Налог,
	|	
	|		ЛОЖЬ	КАК ВзносыОсновногоНачисления,
	|	
	|		"+ТекстПараметрыУдержания+",
	|		Основной.Результат
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.Взносы КАК Основной
	|	ГДЕ Основной.Ссылка = &парамРегистратор
	|
	|   // --- НДФЛ
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.НДФЛ) КАК ВидРасчета,
	|	
	|		Основной.Ссылка.ПериодРегистрации				КАК ПериодРегистрации,
	|		Основной.НалоговыйПериод						КАК БазовыйПериодНачало,
	|		КОНЕЦПЕРИОДА(Основной.НалоговыйПериод, МЕСЯЦ)	КАК БазовыйПериодКонец,
	|		NULL											КАК ПериодСтавки,
	|	
	|		Основной.Ссылка.Организация	КАК Организация,
	|		Основной.Сотрудник			КАК Сотрудник,
	|		Основной.Сотрудник			КАК Назначение,
	|		NULL						КАК ВидРасчетаБазы,
	|		NULL						КАК Налог,
	|	
	|		ЛОЖЬ	КАК ВзносыОсновногоНачисления,
	|	
	|		"+ТекстПараметрыУдержания+",
	|		Основной.Результат
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.НДФЛ КАК Основной
	|	ГДЕ Основной.Ссылка = &парамРегистратор
	|
	|   // --- Удержания
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.Удержание) КАК ВидРасчета,
	|	
	|		Основной.Ссылка.ПериодРегистрации				КАК ПериодРегистрации,
	|		Основной.НалоговыйПериод						КАК БазовыйПериодНачало,
	|		КОНЕЦПЕРИОДА(Основной.НалоговыйПериод, МЕСЯЦ)	КАК БазовыйПериодКонец,
	|		NULL											КАК ПериодСтавки,
	|	
	|		Основной.Ссылка.Организация	КАК Организация,
	|		Основной.Сотрудник			КАК Сотрудник,
	|		Основной.Сотрудник			КАК Назначение,
	|		Основной.ВидРасчета			КАК ВидРасчетаБазы,
	|		NULL						КАК Налог,
	|	
	|		ЛОЖЬ	КАК ВзносыОсновногоНачисления,
	|	
	|		"+ТекстПараметрыУдержания+",
	|		Основной.Результат
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.Удержания КАК Основной
	|	ГДЕ Основной.Ссылка = &парамРегистратор
	|
	|   // --- ПогашениеЗаймов
	|	ОБЪЕДИНИТЬ ВСЕ
	|	ВЫБРАТЬ
	|		ЗНАЧЕНИЕ(ПланВидовРасчета.ОтражениеЗарплатыОрганизаций.Займы) КАК ВидРасчета,
	|	
	|		Основной.Ссылка.ПериодРегистрации				КАК ПериодРегистрации,
	|		Основной.НалоговыйПериод						КАК БазовыйПериодНачало,
	|		КОНЕЦПЕРИОДА(Основной.НалоговыйПериод, МЕСЯЦ)	КАК БазовыйПериодКонец,
	|		NULL											КАК ПериодСтавки,
	|	
	|		Основной.Ссылка.Организация	КАК Организация,
	|		Основной.Сотрудник			КАК Сотрудник,
	|		Основной.Сотрудник			КАК Назначение,
	|		NULL						КАК ВидРасчетаБазы,
	|		NULL						КАК Налог,
	|	
	|		ЛОЖЬ	КАК ВзносыОсновногоНачисления,
	|	
	|		"+ТекстПараметрыУдержания+",
	|		Основной.Результат
	|	ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.ПогашениеЗаймов КАК Основной
	|	ГДЕ Основной.Ссылка = &парамРегистратор
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции  // АвтозаполнениеПроводок


Процедура ПроверитьЗаполнениеСтрокиНачисления(ВыборкаПоСтрокамДокумента, Отказ, Заголовок = "")

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части ""Начисления"": ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// ВидРасчетаБазы
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ВидРасчетаБазы) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан вид расчета!", Отказ, Заголовок);
	КонецЕсли;
	
	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Базовыйпериодначало) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала базового периода!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодКонец) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата окончания базового периода!", Отказ, Заголовок);
	КонецЕсли;

	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СчетДт) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан СчетДт!", Отказ, Заголовок);
	КонецЕсли;

	// Дата окончания
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СчетКт) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан СчетКт!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()

Процедура ПроверитьЗаполнениеСтрокиОтражений(ВыборкаПоСтрокамДокумента, Отказ, Заголовок = "")

	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки) +
									""" табл. части """+ СокрЛП(ВыборкаПоСтрокамДокумента.ВидРасчета) + """: ";
	
	// Сотрудник
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не выбран сотрудник!", Отказ, Заголовок);
	КонецЕсли;
	
	// Дата начала
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.БазовыйПериодначало) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указана дата начала базового периода!", Отказ, Заголовок);
	КонецЕсли;

	// СчетДт
	Если НЕ ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СчетДт) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан СчетДт!", Отказ, Заголовок);
	КонецЕсли;

	// СчетКт
	Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.СчетКт) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не указан СчетКт!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиНачисления()


Процедура ДобавитьСтрокуНачислений(ВыборкаПоСтрокамДокумента, НаборЗаписей)
	
	Движение = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоСтрокамДокумента);

КонецПроцедуры // ДобавитьСтрокуНачислений()

Процедура ДобавитьСтрокуОтражений(ВыборкаПоСтрокамДокумента, НаборЗаписей)
	
	Движение = НаборЗаписей.Добавить();
	ЗаполнитьЗначенияСвойств(Движение, ВыборкаПоСтрокамДокумента);

КонецПроцедуры // ДобавитьСтрокуНачислений()




////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

Функция СформироватьЗапросПоОтражениюВУчете()
	
	Запрос = Новый Запрос();
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ОтражениеЗарплаты.НомерСтроки				КАК НомерСтроки,
	|	ОтражениеЗарплаты.Ссылка.Организация		КАК Организация,
	|	ОтражениеЗарплаты.СпособРаспределенияЗатрат	КАК СпособРаспределенияЗатрат,
	|
	|	ОтражениеЗарплаты.НалоговоеНазначениеДоходовИЗатрат 	КАК НалоговоеНазначениеДоходовИЗатрат,
	|
	|	ВЫБОР	КОГДА ОтражениеЗарплаты.СубконтоДт1 ССЫЛКА Справочник.ПодразделенияОрганизаций 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт1 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт2 ССЫЛКА Справочник.ПодразделенияОрганизаций 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт2 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт3 ССЫЛКА Справочник.ПодразделенияОрганизаций 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт3 
	|			ИНАЧЕ &ПустоеПодразделение 
	|	КОНЕЦ 	КАК ПодразделениеОрганизации,
	|
	|	ВЫБОР	КОГДА ОтражениеЗарплаты.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт1 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт2 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт3 
	|			ИНАЧЕ &ПустаяСтатьяЗатрат 
	|	КОНЕЦ 	КАК СтатьяЗатрат,
	|
	|	ВЫБОР	КОГДА ОтражениеЗарплаты.СубконтоДт1 ССЫЛКА Справочник.ОбъектыСтроительства 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт1 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт2 ССЫЛКА Справочник.ОбъектыСтроительства 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт2 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт3 ССЫЛКА Справочник.ОбъектыСтроительства 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт3 
	|			ИНАЧЕ &ПустойОбъектСтроительства 
	|	КОНЕЦ 	КАК ОбъектСтроительства,
	|
	|	ВЫБОР	КОГДА ОтражениеЗарплаты.СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт1 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт2 
	|			КОГДА ОтражениеЗарплаты.СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы 
	|				ТОГДА ОтражениеЗарплаты.СубконтоДт3 
	|			ИНАЧЕ &ПустаяНоменклатурнаяГруппа 
	|	КОНЕЦ	КАК НоменклатурнаяГруппа,
	|
	|
	|  ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) КАК Продукция,
	|  ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка) КАК ХарактеристикаПродукции,
	|  ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка) КАК СерияПродукции,
	|
	|	ОтражениеЗарплаты.СчетДт				КАК СчетДт,
	|	ОтражениеЗарплаты.СчетДт.Наименование	КАК НаименованиеСчетДт,
	|	ОтражениеЗарплаты.СубконтоДт1			КАК СубконтоДт1,
	|	ОтражениеЗарплаты.СубконтоДт2			КАК СубконтоДт2,
	|	ОтражениеЗарплаты.СубконтоДт3			КАК СубконтоДт3,
	|	ВидСубконтоДт1.ВидСубконто				КАК ВидСубконтоДт1,
	|	ВидСубконтоДт2.ВидСубконто 				КАК ВидСубконтоДт2,
	|	ВидСубконтоДт3.ВидСубконто 				КАК ВидСубконтоДт3,
	|
	|	ОтражениеЗарплаты.СчетКт				КАК СчетКт,
	|	ОтражениеЗарплаты.СубконтоКт1			КАК СубконтоКт1,
	|	ОтражениеЗарплаты.СубконтоКт2			КАК СубконтоКт2,
	|	ОтражениеЗарплаты.СубконтоКт3			КАК СубконтоКт3,
	|	ВидСубконтоКт1.ВидСубконто 				КАК ВидСубконтоКт1,
	|	ВидСубконтоКт2.ВидСубконто 				КАК ВидСубконтоКт2,
	|	ВидСубконтоКт3.ВидСубконто 				КАК ВидСубконтоКт3,
	|
	//Смартис Лиманчук начало 16.11.2012
	|	ОтражениеЗарплаты.СуммаБух				КАК СуммаБух,
	//Смартис Лиманчук окончание 16.11.2012
	|	ОтражениеЗарплаты.Сумма					КАК Сумма
	|
	|ИЗ	Документ.ОтражениеЗарплатыВРеглУчете.ОтражениеВУчете КАК ОтражениеЗарплаты
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоДт1
	|ПО ВидСубконтоДт1.Ссылка = ОтражениеЗарплаты.СчетДт И (ВидСубконтоДт1.НомерСтроки = 1)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоДт2
	|ПО ВидСубконтоДт2.Ссылка = ОтражениеЗарплаты.СчетДт И (ВидСубконтоДт2.НомерСтроки = 2)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоДт3
	|ПО ВидСубконтоДт3.Ссылка = ОтражениеЗарплаты.СчетДт И (ВидСубконтоДт3.НомерСтроки = 3)
	|
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоКт1
	|ПО ВидСубконтоКт1.Ссылка = ОтражениеЗарплаты.СчетКт И (ВидСубконтоКт1.НомерСтроки = 1)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоКт2
	|ПО ВидСубконтоКт2.Ссылка = ОтражениеЗарплаты.СчетКт И (ВидСубконтоКт2.НомерСтроки = 2)
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ВидСубконтоКт3
	|ПО ВидСубконтоКт3.Ссылка = ОтражениеЗарплаты.СчетКт И (ВидСубконтоКт3.НомерСтроки = 3)
	|
	|
	|ГДЕ	ОтражениеЗарплаты.Ссылка = &парамРегистратор
	|";
	
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("парамРегистратор", Ссылка);
	Запрос.УстановитьПараметр("РасходыБудущихПериодов", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РасходыБудущихПериодов);
	Запрос.УстановитьПараметр("ПустоеПодразделение", Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяНоменклатурнаяГруппа", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойОбъектСтроительства", Справочники.ОбъектыСтроительства.ПустаяСсылка());
	
	Возврат Запрос.Выполнить();
	
КонецФункции  // СформироватьЗапросПоОтражениюВУчете()



// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизтов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 					- флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не задана организация!", Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПериодРегистрации) Тогда
		ОбщегоНазначения.СообщитьОбОшибке("Не задан период за который выполняется отражение начислений в бухгалтерском учете!", Отказ);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()


Процедура ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоДоходам, Отказ, Заголовок = "")
	
	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоДоходам.НомерСтроки) + """ табл. части ""Проводки"": ";
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетДт) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан счет дебета!", Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоДоходам.СчетКт) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указан счет кредита!", Отказ);
	КонецЕсли;
	
	ХарактерЗатрат = УправлениеЗатратами.ПолучитьХарактерЗатратПоСчетуЗатрат(ВыборкаПоДоходам.СчетДт, ВыборкаПоДоходам.СтатьяЗатрат);
	Если ХарактерЗатрат <> Перечисления.ХарактерЗатрат.Прочие Тогда
		
		Если Не ЗначениеЗаполнено(ВыборкаПоДоходам.НалоговоеНазначениеДоходовИЗатрат) Тогда  
			ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "Не указано налоговое назначение!", Отказ);
		КонецЕсли; 
		
	КонецЕсли; 	
	
	Сообщение = "";
	Если Не КорректноеСочетаниеСчетов(ВыборкаПоДоходам,Сообщение) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Сообщение, Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиОтраженияВУчете()

Процедура ДобавитьСтрокуВДвиженияПоОтражениюВУчете(СтруктураШапкиДокумента, ВыборкаПоДоходам, ВалютаРеглУчета, ТаблицаЗатрат)
	
	//Смартис Лиманчук начало 16.11.2012
	//Если ВыборкаПоДоходам.Сумма = 0 Тогда
	Если (ВыборкаПоДоходам.Сумма = 0) И (ВыборкаПоДоходам.СуммаБух = 0) Тогда
	//Смартис Лиманчук окончание 16.11.2012
		Возврат;
	КонецЕсли;
	
	//Смартис Лиманчук начало 16.11.2012
	Если ВыборкаПоДоходам.СуммаБух <> 0 Тогда
	//Смартис Лиманчук окончание 16.11.2012
	
	// проводка по бухгалтерскому регистру
	Проводка = Движения.Хозрасчетный.Добавить();
	
	Проводка.Активность = Истина;
	Проводка.Период     = КонецМесяца(ПериодРегистрации);
	
	Проводка.Организация	= Организация;
	//Смартис Лиманчук начало 16.11.2012
	//Проводка.Сумма			= ВыборкаПоДоходам.Сумма;
	Проводка.Сумма			= ВыборкаПоДоходам.СуммаБух;
	//Смартис Лиманчук окончание 16.11.2012
	Проводка.НомерЖурнала	= "ЗП";
	
	// бухучет
	Проводка.СчетДт       = ВыборкаПоДоходам.СчетДт;
	Проводка.СчетКт       = ВыборкаПоДоходам.СчетКт;
	Проводка.СубконтоДт[ВыборкаПоДоходам.ВидСубконтоДт1] = ВыборкаПоДоходам.СубконтоДт1;
	Проводка.СубконтоДт[ВыборкаПоДоходам.ВидСубконтоДт2] = ВыборкаПоДоходам.СубконтоДт2;
	Проводка.СубконтоДт[ВыборкаПоДоходам.ВидСубконтоДт3] = ВыборкаПоДоходам.СубконтоДт3;
	Проводка.СубконтоКт[ВыборкаПоДоходам.ВидСубконтоКт1] = ВыборкаПоДоходам.СубконтоКт1;
	Проводка.СубконтоКт[ВыборкаПоДоходам.ВидСубконтоКт2] = ВыборкаПоДоходам.СубконтоКт2;
	Проводка.СубконтоКт[ВыборкаПоДоходам.ВидСубконтоКт3] = ВыборкаПоДоходам.СубконтоКт3;
	
	Проводка.НалоговоеНазначениеДт = ВыборкаПоДоходам.НалоговоеНазначениеДоходовИЗатрат;
	//Смартис Лиманчук начало 16.11.2012
	//Проводка.СуммаНУДт = НалоговыйУчет.ОпределитьСтоимостьНУ(Проводка.НалоговоеНазначениеДт, ВыборкаПоДоходам.Сумма); 
	Проводка.СуммаНУДт = НалоговыйУчет.ОпределитьСтоимостьНУ(Проводка.НалоговоеНазначениеДт, ВыборкаПоДоходам.СуммаБух); 
	//Смартис Лиманчук окончание 16.11.2012
	
	// Добавим строку в таблицу затрат.
	НоваяСтрока = ТаблицаЗатрат.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоДоходам);
	НоваяСтрока.СпособРаспределенияЗатратНаВыпуск = ВыборкаПоДоходам.СпособРаспределенияЗатрат;
	НоваяСтрока.НалоговоеНазначение = ВыборкаПоДоходам.НалоговоеНазначениеДоходовИЗатрат;
	НоваяСтрока.СчетЗатрат = ВыборкаПоДоходам.СчетДт;
	//Смартис Лиманчук начало 16.11.2012
	//НоваяСтрока.СуммаРегл = ВыборкаПоДоходам.Сумма;
	НоваяСтрока.СуммаРегл = ВыборкаПоДоходам.СуммаБух;
	//Смартис Лиманчук окончание 16.11.2012
	
	// проводка по налоговому учету по налогу на прибыль
	Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль Тогда
	
		// Добавим данные по налоговому учету в таблицу затрат.
		  НоваяСтрока.СуммаНал = Проводка.СуммаНУДт;
				
	КонецЕсли;
	
	//Смартис Лиманчук начало 16.11.2012
	КонецЕсли;
	//Смартис Лиманчук окончание 16.11.2012
	
	//Смартис Лиманчук начало 16.11.2012
	Если ВыборкаПоДоходам.Сумма = ВыборкаПоДоходам.СуммаБух  Тогда
		Возврат;
	КонецЕсли;
	
	// проводка по бухгалтерскому регистру
	Проводка = Движения.Хозрасчетный.Добавить();
	
	Проводка.Активность = Истина;
	Проводка.Период     = КонецМесяца(ПериодРегистрации);
	//ИЗМЕНЕНО Верескул Игорь(Начало 14.12.2020		
	//Если Дата >= Дата("20210101") Тогда
	//	НаличнаяОрганизация = Константы.НПТ.Получить();
	//Иначе
	//	НаличнаяОрганизация = Константы.КрафтКолор.Получить();
	//КонецЕсли;
	НаличнаяОрганизация = Организация;
	Проводка.Организация	= НаличнаяОрганизация;
	Проводка.Сумма			= ВыборкаПоДоходам.Сумма - ВыборкаПоДоходам.СуммаБух;
	Проводка.НомерЖурнала	= "ЗП";
	
	// бухучет
	Проводка.СчетДт       = ВыборкаПоДоходам.СчетДт;
	Проводка.СчетКт       = ВыборкаПоДоходам.СчетКт;
	Проводка.СубконтоДт[ВыборкаПоДоходам.ВидСубконтоДт1] = ВыборкаПоДоходам.СубконтоДт1;
	Проводка.СубконтоДт[ВыборкаПоДоходам.ВидСубконтоДт2] = ВыборкаПоДоходам.СубконтоДт2;
	Проводка.СубконтоДт[ВыборкаПоДоходам.ВидСубконтоДт3] = ВыборкаПоДоходам.СубконтоДт3;
	Проводка.СубконтоКт[ВыборкаПоДоходам.ВидСубконтоКт1] = ВыборкаПоДоходам.СубконтоКт1;
	Проводка.СубконтоКт[ВыборкаПоДоходам.ВидСубконтоКт2] = ВыборкаПоДоходам.СубконтоКт2;
	Проводка.СубконтоКт[ВыборкаПоДоходам.ВидСубконтоКт3] = ВыборкаПоДоходам.СубконтоКт3;
	
	Проводка.НалоговоеНазначениеДт = ВыборкаПоДоходам.НалоговоеНазначениеДоходовИЗатрат;
	Проводка.СуммаНУДт = НалоговыйУчет.ОпределитьСтоимостьНУ(Проводка.НалоговоеНазначениеДт, Проводка.Сумма); 
	
	// Добавим строку в таблицу затрат.
	НоваяСтрока = ТаблицаЗатрат.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоДоходам);
	НоваяСтрока.СпособРаспределенияЗатратНаВыпуск = ВыборкаПоДоходам.СпособРаспределенияЗатрат;
	НоваяСтрока.НалоговоеНазначение = ВыборкаПоДоходам.НалоговоеНазначениеДоходовИЗатрат;
	НоваяСтрока.СчетЗатрат = ВыборкаПоДоходам.СчетДт;
	НоваяСтрока.СуммаРегл = Проводка.Сумма;
	
	// проводка по налоговому учету по налогу на прибыль
	Если СтруктураШапкиДокумента.ЕстьНалогНаПрибыль Тогда
	
		// Добавим данные по налоговому учету в таблицу затрат.
		  НоваяСтрока.СуммаНал = Проводка.СуммаНУДт;
				
	КонецЕсли;
	//Смартис Лиманчук окончание 16.11.2012
	
КонецПроцедуры  // ДобавитьСтрокуВДвиженияПоОтражениюВУчете()

// Процедура определяет параметры учетной политики
//
Процедура ПодготовитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента, Отказ, Заголовок)

	ПодготовитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента, Отказ, Заголовок);
	
КонецПроцедуры // ПодготовитьПараметрыУчетнойПолитики()
 
// Процедура определяет параметры регл. учетной политики
//
Процедура ПодготовитьПараметрыУчетнойПолитикиРегл(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Прежде всего, проверим заполнение реквизита Организация в шапке документа
	СтруктураОбязательныхПолей = Новый Структура("Организация");
	// Теперь позовем общую процедуру проверки
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	// Организация не заполнена, получать учетную политику нет смысла
	Если Отказ Тогда
		Возврат;
	КонецЕсли;

	мУчетнаяПолитикаНУ = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(КонецМесяца(Дата),Организация,, Заголовок);
		
	Если НЕ Отказ Тогда
		СтруктураШапкиДокумента.Вставить("ЕстьНалогНаПрибыль", мУчетнаяПолитикаНУ.ЕстьНалогНаПрибыль);
		СтруктураШапкиДокумента.Вставить("ЕстьНДС"           , мУчетнаяПолитикаНУ.ЕстьНДС);
	КонецЕсли;
		
КонецПроцедуры // ПодготовитьПараметрыУчетнойПолитикиРегл()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	////////////////////////////////////////////////////////////////////////
	// по регистрам Бухгалтерии
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Получим данные учетной политики
	ПодготовитьПараметрыУчетнойПолитики(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// При получении учетной политики произошли ошибки
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьЗаполнениеШапки(Отказ);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	
	////////////////////////////////////////////////////////////////////////
	// по регистру расчета ОтражениеЗарплатыОрганизацийВРеглУчете
	
	Выборка = СформироватьЗапросПоОтражению().Выбрать();
	Пока Выборка.Следующий() Цикл 
		
		ПроверитьЗаполнениеСтрокиОтражений(Выборка, Отказ );
		Если НЕ Отказ Тогда
			ДобавитьСтрокуОтражений(Выборка, Движения.ОтражениеЗарплатыОрганизацийВРеглУчете);
			
		КонецЕсли;
	КонецЦикла;
	
	
	////////////////////////////////////////////////////////////////////////
	// по регистру бухгалтерии
	
	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(КонецМесяца(ПериодРегистрации), ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	
	РезультатЗапросаПоОтражениюВУчете = СформироватьЗапросПоОтражениюВУчете();
	ВыборкаПоОтражениюВУчете = РезультатЗапросаПоОтражениюВУчете.Выбрать();
	ВалютаРеглУчета  = глЗначениеПеременной("ВалютаРегламентированногоУчета");
	
	// Подготовим структуру таблицы для отражения затрат.
	ТаблицаЗатрат = УправлениеЗатратами.СформироватьТаблицуЗатрат();
	
	Пока ВыборкаПоОтражениюВУчете.Следующий() Цикл
		
		ПроверитьЗаполнениеСтрокиОтраженияВУчете(ВыборкаПоОтражениюВУчете, Отказ, Заголовок);
		
		Если Не Отказ Тогда
			ДобавитьСтрокуВДвиженияПоОтражениюВУчете(СтруктураШапкиДокумента, ВыборкаПоОтражениюВУчете, ВалютаРеглУчета, ТаблицаЗатрат);
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицаЗатрат.Количество() > 0 Тогда
		
		ВремСтруктураШапкиДокумента = Новый Структура;
		ВремСтруктураШапкиДокумента.Вставить("Организация", Организация);
		ВремСтруктураШапкиДокумента.Вставить("ОтражатьВБухгалтерскомУчете", Истина);
		ВремСтруктураШапкиДокумента.Вставить("Ссылка", Ссылка);
		ВремСтруктураШапкиДокумента.Вставить("Дата", КонецМесяца(ПериодРегистрации));
		
		ВремСтруктураШапкиДокумента.Вставить("ВидДокумента",  "ОтражениеЗарплатыВРеглУчете");
		
		УправлениеЗатратами.ДвиженияПоПрочимЗатратам(
			ВремСтруктураШапкиДокумента, 
			ТаблицаЗатрат,
			Перечисления.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете
		);
		
	КонецЕсли;
	
	
КонецПроцедуры // ОбработкаПроведения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(РаботникиОрганизации);
	ПроцедурыУправленияПерсоналом.ЗаполнитьФизЛицоПоТЧ(РаботникиОрганизации);
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	
КонецПроцедуры


мПустойСчет = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
мСведенияОСчетах = Новый Соответствие;
мСведенияОСтатьяхЗатрат = Новый Соответствие;