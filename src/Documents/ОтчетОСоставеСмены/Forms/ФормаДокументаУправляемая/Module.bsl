////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ДокументОбъект = РеквизитФормыВЗначение("Объект");
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(ДокументОбъект, ЭтаФорма);
		
		УстановитьПривилегированныйРежим(Истина);
		Если НЕ РольДоступна("ПолныеПрава")
			И Объект.ГраницаСмены <= РегистрыСведений.ЗавершенныеСмены.Получить(Новый Структура("Подразделение", Объект.Подразделение)).ГраницаСмены Тогда
			
			ТолькоПросмотр = Истина;
		КонецЕсли;
		УстановитьПривилегированныйРежим(Ложь);
		
	КонецЕсли;
	
КонецПроцедуры

// СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ДАННЫХ ИЗ НАСТРОЕК

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ДобавитьДополнительныеДанныеВНастройку(Объект, Настройки, Документы.ОтчетОСоставеСмены.СтруктураДополнительныхДанныхФормы());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ЗаполнитьОбъектДополнительнымиДанными(Объект, Настройки, Документы.ОтчетОСоставеСмены.СтруктураДополнительныхДанныхФормы());
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Управляет доступностью реквизитов в строке табличного поля СоставСмены.
//
// Табличное поле имеет две группы реквизитов - для явки и для неявки.
//
&НаКлиенте
Процедура УправлениеДоступностьюРеквизитовВСтрокеСоставСмены()
	
	ДанныеСтроки = Элементы.СоставСмены.ТекущиеДанные;
	Если ДанныеСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//Запрещаем редактировать поля, имеющие смысл только при явке или только при неявке.
	Элементы.СоставСменыВремяЯвки.ТолькоПросмотр 			= НЕ ДанныеСтроки.Явка;
	Элементы.СоставСменыОтработанноеВремя.ТолькоПросмотр 	= НЕ ДанныеСтроки.Явка;
	Элементы.СоставСменыЗамещающийСотрудник.ТолькоПросмотр	= ДанныеСтроки.Явка;
	
	//Запрещаем редактировать сотрудника, имеющегося в графике
	Элементы.СоставСменыСотрудник.ТолькоПросмотр = ДанныеСтроки.ПоГрафику;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - СОСТАВ СМЕНЫ

&НаСервере
Процедура ЗаполнитьСоставомТекущейСмены()

	Объект.СоставСмены.Очистить();
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьСоставомТекущейСмены();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры
 
&НаКлиенте
Процедура КомандаЗаполнитьСоставомТекущейСмены(Команда)
	
	Если Объект.СоставСмены.Количество() > 0 Тогда
		Ответ = Вопрос(НСтр("ru = 'Перед заполнением табличная часть будет очищена. Заполнить?'"), РежимДиалогаВопрос.ДаНет, , , НСтр("ru='Заполнение списка сотрудников'"));
		Если Ответ <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьСоставомТекущейСмены();
	
	// Выведем сообщение, чтобы избежать ситуации "нажал на кнопку - ничего не произошло"
	Если Объект.СоставСмены.Количество() = 0 Тогда
		Предупреждение(НСтр("ru = 'Данные для заполнения отсутствуют'"),,НСтр("ru='Заполнение списка сотрудников'"));
	КонецЕсли;
	
КонецПроцедуры

// Выполняет необходимые действия после добавления новой строки
//
// Параметры
//  ДанныеСтроки - данные добавленной строки
//
&НаКлиенте
Процедура ДобавлениеСтроки(ДанныеСтроки)
	
	ДанныеСтроки.Явка 		= Истина;
	ДанныеСтроки.ПоГрафику 	= Ложь;
	ИзменениеЯвки(ДанныеСтроки);
	
КонецПроцедуры

// Выполняет необходимые действия при изменении флага явки в строке
//
// Параметры
//  ДанныеСтроки - данные измененной строки
//
&НаКлиенте
Процедура ИзменениеЯвки(ДанныеСтроки)
	
	Если НЕ ДанныеСтроки.Явка Тогда
		ДанныеСтроки.ВремяЯвки 			= Неопределено;
		ДанныеСтроки.ОтработанноеВремя 	= Неопределено;
	Иначе
		ДанныеСтроки.ЗамещающийСотрудник= Неопределено;
	КонецЕсли;
	
	//Если это текущая редактируемая строка, то настроим доступность полей
	Если ДанныеСтроки = Элементы.СоставСмены.ТекущиеДанные Тогда
		УправлениеДоступностьюРеквизитовВСтрокеСоставСмены();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСменыЯвкаПриИзменении(Элемент)
	
	ДанныеСтроки = Элементы.СоставСмены.ТекущиеДанные;
	ИзменениеЯвки(ДанныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСменыПередУдалением(Элемент, Отказ)
	
	ДанныеСтроки = Элементы.СоставСмены.ТекущиеДанные;
	Если ДанныеСтроки <> Неопределено Тогда
		
		Если ДанныеСтроки.ПоГрафику Тогда
			//Нельзя удалить из списка сотрудника, работающего по графику.
			//Воспримем это как намерение поставить неявку.
			//Если уже стоит неявка - то сообщим.
			Отказ = Истина;
			
			Если ДанныеСтроки.Явка Тогда
				ДанныеСтроки.Явка 	= Ложь;
				ИзменениеЯвки(ДанныеСтроки);
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					НСтр("ru = 'Нельзя удалить из списка сотрудника, который согласно графику должен был выйти на работу.'"),,
					"СоставСмены");
			КонецЕсли;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСменыПриАктивизацииСтроки(Элемент)
	
	УправлениеДоступностьюРеквизитовВСтрокеСоставСмены();
	
КонецПроцедуры

&НаКлиенте
Процедура СоставСменыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ДанныеСтроки = Элементы.СоставСмены.ТекущиеДанные;
	
	Если НоваяСтрока Тогда
		ДобавлениеСтроки(ДанныеСтроки);
	КонецЕсли;
	
КонецПроцедуры
