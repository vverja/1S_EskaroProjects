Перем ПроведениеБезКонтролей Экспорт;
Перем ДокументИзменен;
Перем ЭтоПерепроведение;
Перем ЭтоУстановкаСтатуса Экспорт;

Функция ПроверитьЗаполнениеШапки() Экспорт
	Результат = Истина;
	
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Не выбрана организация");
		Результат = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Склад) Тогда
		Сообщить("Не выбран склад");
		Результат = Ложь;
	КонецЕсли;
	
	Если ВидПеремещения = Перечисления.ВидыСкладскихПеремещений.НаОснованииОтгрузки Тогда
		Если НЕ ЗначениеЗаполнено(ДокументОтгрузки) Тогда
			Сообщить("Не выбран документ отгрузки");
			Результат = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции
#Если Клиент Тогда
Функция ПроверитьМодифицированность()
	НужноЗаписать = Ложь;
	Если НЕ ЗначениеЗаполнено(Ссылка) ИЛИ ЭтотОбъект.Модифицированность() Тогда
		НужноЗаписать = Истина;
	КонецЕсли;
	
	Если НужноЗаписать Тогда
		Если Вопрос("Для выполнения операции нужно сначала записать документ." + Символы.ПС + "Записать?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.ОК Тогда
			Попытка
				Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
					Дата = ТекущаяДата();
				КонецЕсли;
				
				Если Проведен Тогда
					ЭтотОбъект.Записать(РежимЗаписиДокумента.Проведение);
				Иначе
					ЭтотОбъект.Записать();
				КонецЕсли;
				
				Возврат Истина;
			Исключение
			    Сообщить(ОписаниеОшибки());
				Возврат Ложь;
			КонецПопытки;
		Иначе
			Возврат Ложь;
		КонецЕсли;
	Иначе
		Возврат Истина;
	КонецЕсли;	
КонецФункции
#КонецЕсли
Процедура СформироватьТекстЗапроса(Назначение, Запрос, ВнутриЗоны = Неопределено, ПроверитьРавенство) Экспорт
	Если Назначение = "НоменклатураКПеремещению" Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОтборИОтгрузкаОтгрузка.Номенклатура КАК Номенклатура,
		|	ЕдиницыИзмерения.Ссылка КАК Единица,
		|	ОтборИОтгрузкаОтгрузка.КоличествоКоробок КАК Количество
		|ПОМЕСТИТЬ ОтгрузкаПоЕдиницам
		|ИЗ
		|	Документ.ОтборИОтгрузка.Отгрузка КАК ОтборИОтгрузкаОтгрузка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
		|		ПО ОтборИОтгрузкаОтгрузка.Номенклатура = ЕдиницыИзмерения.Владелец
		|ГДЕ
		|	ОтборИОтгрузкаОтгрузка.Ссылка = &ДокументОтгрузки
		|	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &клКоробка
		|	И ЕСТЬNULL(ОтборИОтгрузкаОтгрузка.КоличествоКоробок, 0) <> 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ОтборИОтгрузкаОтгрузка.Номенклатура,
		|	ОтборИОтгрузкаОтгрузка.ЕдиницаХраненияОстатков,
		|	ОтборИОтгрузкаОтгрузка.КоличествоЕХО
		|ИЗ
		|	Документ.ОтборИОтгрузка.Отгрузка КАК ОтборИОтгрузкаОтгрузка
		|ГДЕ
		|	ОтборИОтгрузкаОтгрузка.Ссылка = &ДокументОтгрузки
		|	И ЕСТЬNULL(ОтборИОтгрузкаОтгрузка.КоличествоЕХО, 0) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтгрузкаПоЕдиницам.Номенклатура,
		|	ОтгрузкаПоЕдиницам.Единица,
		|	ОтгрузкаПоЕдиницам.Количество КАК КоличествоКОтгрузке,
		|	ЕСТЬNULL(ОтборИОтгрузкаОтбор.Количество, 0) КАК КоличествоОтобрано,
		|	ОтгрузкаПоЕдиницам.Количество - ЕСТЬNULL(ОтборИОтгрузкаОтбор.Количество, 0) КАК ОсталосьОтгрузить
		|ПОМЕСТИТЬ НеотобраннаяНоменклатура
		|ИЗ
		|	ОтгрузкаПоЕдиницам КАК ОтгрузкаПоЕдиницам
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ОтборИОтгрузка.Отбор КАК ОтборИОтгрузкаОтбор
		|		ПО ОтгрузкаПоЕдиницам.Номенклатура = ОтборИОтгрузкаОтбор.Номенклатура
		|			И ОтгрузкаПоЕдиницам.Единица = ОтборИОтгрузкаОтбор.ЕдиницаИзмерения
		|			И (ОтборИОтгрузкаОтбор.Ссылка = &ДокументОтгрузки)
		|ГДЕ
		|	ОтгрузкаПоЕдиницам.Количество - ЕСТЬNULL(ОтборИОтгрузкаОтбор.Количество, 0) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НеотобраннаяНоменклатура.Номенклатура,
		|	НеотобраннаяНоменклатура.Единица,
		|	СУММА(НеотобраннаяНоменклатура.КоличествоКОтгрузке) КАК КоличествоКОтгрузке,
		|	СУММА(НеотобраннаяНоменклатура.КоличествоОтобрано) КАК КоличествоОтобрано,
		|	СУММА(НеотобраннаяНоменклатура.ОсталосьОтгрузить) КАК ОсталосьОтгрузить
		|ПОМЕСТИТЬ НеотобрКоробки
		|ИЗ
		|	НеотобраннаяНоменклатура КАК НеотобраннаяНоменклатура
		|ГДЕ
		|	НеотобраннаяНоменклатура.Единица.ЕдиницаПоКлассификатору = &клКоробка
		|
		|СГРУППИРОВАТЬ ПО
		|	НеотобраннаяНоменклатура.Номенклатура,
		|	НеотобраннаяНоменклатура.Единица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НеотобраннаяНоменклатура.Номенклатура,
		|	НеотобраннаяНоменклатура.Единица,
		|	СУММА(НеотобраннаяНоменклатура.КоличествоКОтгрузке) КАК КоличествоКОтгрузке,
		|	СУММА(НеотобраннаяНоменклатура.КоличествоОтобрано) КАК КоличествоОтобрано,
		|	СУММА(НеотобраннаяНоменклатура.ОсталосьОтгрузить) КАК ОсталосьОтгрузить
		|ПОМЕСТИТЬ НеотобрЕХО
		|ИЗ
		|	НеотобраннаяНоменклатура КАК НеотобраннаяНоменклатура
		|ГДЕ
		|	НеотобраннаяНоменклатура.Единица = НеотобраннаяНоменклатура.Номенклатура.ЕдиницаХраненияОстатков
		|
		|СГРУППИРОВАТЬ ПО
		|	НеотобраннаяНоменклатура.Номенклатура,
		|	НеотобраннаяНоменклатура.Единица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(НеотобрЕХО.Номенклатура, НеотобрКоробки.Номенклатура) КАК Номенклатура,
		|	ЕСТЬNULL(НеотобрЕХО.Номенклатура.Наименование, НеотобрКоробки.Номенклатура.Наименование) КАК Наименование,
		|	ЕСТЬNULL(НеотобрКоробки.КоличествоКОтгрузке, 0) КАК КоробокКОтгрузке,
		|	ЕСТЬNULL(НеотобрКоробки.КоличествоОтобрано, 0) КАК КоробокОтобрано,
		|	ЕСТЬNULL(НеотобрКоробки.ОсталосьОтгрузить, 0) КАК КоробокНехватает,
		|	ЕСТЬNULL(НеотобрЕХО.КоличествоКОтгрузке, 0) КАК ЕХОКОтгрузке,
		|	ЕСТЬNULL(НеотобрЕХО.КоличествоОтобрано, 0) КАК ЕХООтобрано,
		|	ЕСТЬNULL(НеотобрЕХО.ОсталосьОтгрузить, 0) КАК ЕХОНехватает
		|ИЗ
		|	НеотобрКоробки КАК НеотобрКоробки
		|		ПОЛНОЕ СОЕДИНЕНИЕ НеотобрЕХО КАК НеотобрЕХО
		|		ПО НеотобрКоробки.Номенклатура = НеотобрЕХО.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование";
	ИначеЕсли Назначение = "ЯчейкиХраненияПаллет" Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СостояниеБлокировокЯчеекСрезПоследних.Ячейка
		|ПОМЕСТИТЬ Заблокированные
		|ИЗ
		|	РегистрСведений.СостояниеБлокировокЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеБлокировокЯчеекСрезПоследних
		|ГДЕ
		|	СостояниеБлокировокЯчеекСрезПоследних.Заблокирована
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СостояниеРезервовЯчеекСрезПоследних.Ячейка
		|ИЗ
		|	РегистрСведений.СостояниеРезервовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеРезервовЯчеекСрезПоследних
		|ГДЕ
		|	СостояниеРезервовЯчеекСрезПоследних.Заблокирована
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	РезервированиеТовараВЯчейкахОстатки.Ячейка
		|ИЗ
		|	РегистрНакопления.РезервированиеТовараВЯчейках.Остатки(
		|			&НаДату,
		|			Склад = &Склад) КАК РезервированиеТовараВЯчейкахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
		|		ПО РезервированиеТовараВЯчейкахОстатки.Ячейка = СостояниеВидовЯчеекСрезПоследних.Ячейка
		|ГДЕ
		|	ЕСТЬNULL(РезервированиеТовараВЯчейкахОстатки.КоличествоЕХООстаток, 0) > 0
		|	И СостояниеВидовЯчеекСрезПоследних.ВидЯчейки <> ЗНАЧЕНИЕ(Перечисление.ВидыСкладскихЯчеек.Общая)
		|
		|СГРУППИРОВАТЬ ПО
		|	РезервированиеТовараВЯчейкахОстатки.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
		|	РазмещениеТоваровНаСкладахОстатки.Единица,
		|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета КАК НомерПаллета,
		|	СостояниеЗонЯчеекСрезПоследних.Зона,
		|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки
		|ПОМЕСТИТЬ РазмещенияНоменклатуры
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
		|			&НаДату,
		|			Склад = &Склад
		|				И Номенклатура = &Номенклатура
		|				И Единица = &едПаллета) КАК РазмещениеТоваровНаСкладахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЗонЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеЗонЯчеекСрезПоследних
		|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеЗонЯчеекСрезПоследних.Ячейка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
		|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеВидовЯчеекСрезПоследних.Ячейка
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК Поле1
		|				ИЗ
		|					Заблокированные КАК Заблокированные
		|				ГДЕ
		|					РазмещениеТоваровНаСкладахОстатки.Ячейка = Заблокированные.Ячейка)
		|	И НЕ РазмещениеТоваровНаСкладахОстатки.Ячейка В (&ИсключаемыеЯчейки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещенияНоменклатуры.Ячейка,
		|	РазмещенияНоменклатуры.НомерПаллета,
		|	РазмещенияНоменклатуры.Зона,
		|	РазмещенияНоменклатуры.Единица
		|ПОМЕСТИТЬ РазмещениеСОтбором
		|ИЗ
		|	РазмещенияНоменклатуры КАК РазмещенияНоменклатуры
		|ГДЕ
		|	РазмещенияНоменклатуры.Зона " + ?(ВнутриЗоны, "=", "<>") + " &Зона
		//|	РазмещенияНоменклатуры.Зона = &Зона
		|	И (РазмещенияНоменклатуры.ВидЯчейки = ЗНАЧЕНИЕ(Перечисление.ВидыСкладскихЯчеек.Буферная) ИЛИ РазмещенияНоменклатуры.ВидЯчейки = ЗНАЧЕНИЕ(Перечисление.ВидыСкладскихЯчеек.Общая))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РазмещениеТоваровНаСкладах.Период) КАК ДатаПоступления,
		//|	РазмещениеТоваровНаСкладах.Ячейка КАК Ячейка,
		//|	РазмещениеТоваровНаСкладах.НомерПаллета
		|	РазмещениеТоваровНаСкладах.Ячейка КАК Ячейка
		|ПОМЕСТИТЬ ДатыПриемок
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах КАК РазмещениеТоваровНаСкладах
		|ГДЕ
		|	РазмещениеТоваровНаСкладах.Склад = &Склад
		|	И РазмещениеТоваровНаСкладах.Номенклатура = &Номенклатура
		|	И РазмещениеТоваровНаСкладах.Единица = &едПаллета
		|	И РазмещениеТоваровНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И 1 В
		|			(ВЫБРАТЬ
		|				1 КАК Поле1
		|			ИЗ
		|				РазмещениеСОтбором КАК РазмещениеСОтбором
		|			ГДЕ
		|				РазмещениеТоваровНаСкладах.Ячейка = РазмещениеСОтбором.Ячейка)
		|
		|СГРУППИРОВАТЬ ПО
		//|	РазмещениеТоваровНаСкладах.Ячейка,
		//|	РазмещениеТоваровНаСкладах.НомерПаллета
		|	РазмещениеТоваровНаСкладах.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ДатыПриемок.ДатаПоступления) КАК ДатаПоступления
		|ПОМЕСТИТЬ СамаяРанняяДата
		|ИЗ
		|	ДатыПриемок КАК ДатыПриемок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		//|	ДатыПриемок.Ячейка,
		//|	ДатыПриемок.НомерПаллета
		|	ДатыПриемок.Ячейка
		|ПОМЕСТИТЬ ЯчейкиПоФИФО
		|ИЗ
		|	ДатыПриемок КАК ДатыПриемок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СамаяРанняяДата КАК СамаяРанняяДата
		|		ПО ДатыПриемок.ДатаПоступления = СамаяРанняяДата.ДатаПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещениеСОтбором.Ячейка,
		|	РазмещениеСОтбором.Ячейка.НомерРяда,
		|	РазмещениеСОтбором.Ячейка.НомерЯруса,
		|	РазмещениеСОтбором.Ячейка.НомерЯчейки,
		|	РазмещениеСОтбором.Зона,
		|	РазмещениеСОтбором.НомерПаллета
		|ПОМЕСТИТЬ ДоступныеЯчейки
		|ИЗ
		|	РазмещениеСОтбором КАК РазмещениеСОтбором
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкиПоФИФО КАК ЯчейкиПоФИФО
		|		ПО РазмещениеСОтбором.Ячейка = ЯчейкиПоФИФО.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка КАК ЯчейкаКомплектации,
		|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка.НомерРяда,
		|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка.НомерЯруса,
		|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка.НомерЯчейки
		|ПОМЕСТИТЬ АдресХраненияНоменклатуры
		|ИЗ
		|	РегистрСведений.АдресаХраненияНоменклатурыНаСкладах.СрезПоследних(
		|			&НаДату,
		|			Склад = &Склад
		|				И Номенклатура = &Номенклатура) КАК АдресаХраненияНоменклатурыНаСкладахСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки,
		|	ДоступныеЯчейки.Зона,
		|	ДоступныеЯчейки.НомерПаллета,
		|	СУММА(СкладскиеЯчейкиВысота.ВысотаЯчейки) КАК Высота
		|ПОМЕСТИТЬ ЯчейкиВнутриРядаВысота
		|ИЗ
		|	ДоступныеЯчейки КАК ДоступныеЯчейки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресХраненияНоменклатуры КАК АдресХраненияНоменклатуры
		|		ПО (АдресХраненияНоменклатуры.ЯчейкаНомерРяда = ДоступныеЯчейки.ЯчейкаНомерРяда)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиВысота
		|		ПО ДоступныеЯчейки.ЯчейкаНомерРяда = СкладскиеЯчейкиВысота.НомерРяда
		|			И (1 = СкладскиеЯчейкиВысота.НомерЯчейки)
		|			И (ВЫБОР
		|				КОГДА АдресХраненияНоменклатуры.ЯчейкаНомерЯруса > ДоступныеЯчейки.ЯчейкаНомерЯруса
		|					ТОГДА АдресХраненияНоменклатуры.ЯчейкаНомерЯруса > СкладскиеЯчейкиВысота.НомерЯруса
		|							И ДоступныеЯчейки.ЯчейкаНомерЯруса < СкладскиеЯчейкиВысота.НомерЯруса
		|				ИНАЧЕ АдресХраненияНоменклатуры.ЯчейкаНомерЯруса < СкладскиеЯчейкиВысота.НомерЯруса
		|						И ДоступныеЯчейки.ЯчейкаНомерЯруса > СкладскиеЯчейкиВысота.НомерЯруса
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеЯчейки.Зона,
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.НомерПаллета,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки,
		|	ДоступныеЯчейки.Зона,
		|	ДоступныеЯчейки.НомерПаллета,
		|	СУММА(СкладскиеЯчейкиДлина.ДлинаЯчейки) КАК Расстояние,
		|	ДоступныеЯчейки.Высота КАК Высота
		|ПОМЕСТИТЬ ЯчейкиВнутриРяда
		|ИЗ
		|	ЯчейкиВнутриРядаВысота КАК ДоступныеЯчейки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АдресХраненияНоменклатуры КАК АдресХраненияНоменклатуры
		|		ПО (АдресХраненияНоменклатуры.ЯчейкаНомерРяда = ДоступныеЯчейки.ЯчейкаНомерРяда)
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиДлина
		|		ПО ДоступныеЯчейки.ЯчейкаНомерРяда = СкладскиеЯчейкиДлина.НомерРяда
		|			И ДоступныеЯчейки.ЯчейкаНомерЯруса = СкладскиеЯчейкиДлина.НомерЯруса
		|			И (ВЫБОР
		|				КОГДА АдресХраненияНоменклатуры.ЯчейкаНомерЯчейки > ДоступныеЯчейки.ЯчейкаНомерЯчейки
		|					ТОГДА АдресХраненияНоменклатуры.ЯчейкаНомерЯчейки > СкладскиеЯчейкиДлина.НомерЯчейки
		|							И ДоступныеЯчейки.ЯчейкаНомерЯчейки < СкладскиеЯчейкиДлина.НомерЯчейки
		|				ИНАЧЕ АдресХраненияНоменклатуры.ЯчейкаНомерЯчейки < СкладскиеЯчейкиДлина.НомерЯчейки
		|						И ДоступныеЯчейки.ЯчейкаНомерЯчейки > СкладскиеЯчейкиДлина.НомерЯчейки
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеЯчейки.Зона,
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.Высота,
		|	ДоступныеЯчейки.НомерПаллета,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Расстояния.Зона КАК Зона,
		|	Расстояния.Ячейка КАК Ячейка,
		|	Расстояния.ЯчейкаНомерЯруса КАК НомерЯруса,
		|	ЕСТЬNULL(Расстояния.Расстояние, 0) / &СкоростьДвижения + ЕСТЬNULL(Расстояния.Высота, 0) / &СкоростьПодъема * 2 КАК ВремяПеремещения,
		|	Расстояния.НомерПаллета
		|ПОМЕСТИТЬ ЯчейкиВнутриРядаВремя
		|ИЗ
		|	ЯчейкиВнутриРяда КАК Расстояния
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЯчейкиВремя.ВремяПеремещения) КАК ВремяПеремещения
		|ПОМЕСТИТЬ ЯчейкиВнутриРядаМинимальноеВремя
		|ИЗ
		|	ЯчейкиВнутриРядаВремя КАК ЯчейкиВремя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиВремя.Зона,
		|	ЯчейкиВремя.Ячейка,
		|	ЯчейкиВремя.ВремяПеремещения,
		|	ЯчейкиВремя.НомерЯруса,
		|	ЯчейкиВремя.НомерПаллета
		|ПОМЕСТИТЬ ЯчейкиВнутриРядаСМинимальнымВременем
		|ИЗ
		|	ЯчейкиВнутриРядаВремя КАК ЯчейкиВремя
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкиВнутриРядаМинимальноеВремя КАК МинимальноеВремя
		|		ПО ЯчейкиВремя.ВремяПеремещения = МинимальноеВремя.ВремяПеремещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЯчейкиВнутриРядаСМинимальнымВременем.НомерЯруса) КАК НомерЯруса
		|ПОМЕСТИТЬ ЯчейкиВнутриРядаМинимальныйЯрус
		|ИЗ
		|	ЯчейкиВнутриРядаСМинимальнымВременем КАК ЯчейкиВнутриРядаСМинимальнымВременем
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиВнутриРядаСМинимальнымВременем.Ячейка,
		|	ЯчейкиВнутриРядаСМинимальнымВременем.Зона КАК ЗонаЯчейки,
		|	ЯчейкиВнутриРядаСМинимальнымВременем.ВремяПеремещения,
		|	ЯчейкиВнутриРядаСМинимальнымВременем.НомерПаллета
		|ПОМЕСТИТЬ ОтобраннаяЯчейкаВнутриРяда
		|ИЗ
		|	ЯчейкиВнутриРядаСМинимальнымВременем КАК ЯчейкиВнутриРядаСМинимальнымВременем
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкиВнутриРядаМинимальныйЯрус КАК ЯчейкиВнутриРядаМинимальныйЯрус
		|		ПО ЯчейкиВнутриРядаСМинимальнымВременем.НомерЯруса = ЯчейкиВнутриРядаМинимальныйЯрус.НомерЯруса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АдресХраненияНоменклатуры.ЯчейкаКомплектации,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерЯчейки,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерЯруса,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерРяда,
		|	СУММА(СкладскиеЯчейкиВысота.ВысотаЯчейки) КАК Высота
		|ПОМЕСТИТЬ ЯчейкаКомплектацииВысота
		|ИЗ
		|	АдресХраненияНоменклатуры КАК АдресХраненияНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиВысота
		|		ПО АдресХраненияНоменклатуры.ЯчейкаНомерРяда = СкладскиеЯчейкиВысота.НомерРяда
		|			И (1 = СкладскиеЯчейкиВысота.НомерЯчейки)
		|			И АдресХраненияНоменклатуры.ЯчейкаНомерЯруса > СкладскиеЯчейкиВысота.НомерЯруса
		|			И (СкладскиеЯчейкиВысота.Владелец = &Склад)
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК поле1
		|				ИЗ
		|					ЯчейкиВнутриРяда КАК ЯчейкиВнутриРяда)
		|
		|СГРУППИРОВАТЬ ПО
		|	АдресХраненияНоменклатуры.ЯчейкаКомплектации,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерЯчейки,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерЯруса,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерРяда
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АдресХраненияНоменклатуры.ЯчейкаКомплектации,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерЯруса,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерРяда,
		|	СУММА(СкладскиеЯчейкиДлина.ДлинаЯчейки) КАК РасстояниеДоНачалаРяда,
		|	АдресХраненияНоменклатуры.Высота КАК Высота
		|ПОМЕСТИТЬ ЯчейкаКомплектацииРасстояния
		|ИЗ
		|	ЯчейкаКомплектацииВысота КАК АдресХраненияНоменклатуры
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиДлина
		|		ПО АдресХраненияНоменклатуры.ЯчейкаНомерРяда = СкладскиеЯчейкиДлина.НомерРяда
		|			И АдресХраненияНоменклатуры.ЯчейкаНомерЯруса = СкладскиеЯчейкиДлина.НомерЯруса
		|			И АдресХраненияНоменклатуры.ЯчейкаНомерЯчейки > СкладскиеЯчейкиДлина.НомерЯчейки
		|			И (СкладскиеЯчейкиДлина.Владелец = &Склад)
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК поле1
		|				ИЗ
		|					ЯчейкиВнутриРяда КАК ЯчейкиВнутриРяда)
		|
		|СГРУППИРОВАТЬ ПО
		|	АдресХраненияНоменклатуры.ЯчейкаКомплектации,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерЯруса,
		|	АдресХраненияНоменклатуры.ЯчейкаНомерРяда,
		|	АдресХраненияНоменклатуры.Высота
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки,
		|	СУММА(СкладскиеЯчейкиВысота.ВысотаЯчейки) КАК Высота,
		|	ДоступныеЯчейки.НомерПаллета,
		|	ДоступныеЯчейки.Зона
		|ПОМЕСТИТЬ ВысотаДоступныхЯчеек
		|ИЗ
		|	ДоступныеЯчейки КАК ДоступныеЯчейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиВысота
		|		ПО ДоступныеЯчейки.ЯчейкаНомерРяда = СкладскиеЯчейкиВысота.НомерРяда
		|			И (1 = СкладскиеЯчейкиВысота.НомерЯчейки)
		|			И ДоступныеЯчейки.ЯчейкаНомерЯруса > СкладскиеЯчейкиВысота.НомерЯруса
		|			И (СкладскиеЯчейкиВысота.Владелец = &Склад)
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК Поле1
		|				ИЗ
		|					ЯчейкиВнутриРяда КАК ЯчейкиВнутриРяда
		|				ГДЕ
		|					ЯчейкиВнутриРяда.Ячейка = ДоступныеЯчейки.Ячейка)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки,
		|	ДоступныеЯчейки.НомерПаллета,
		|	ДоступныеЯчейки.Зона
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВысотаЯчеек.Ячейка,
		|	ВысотаЯчеек.ЯчейкаНомерЯруса,
		|	ВысотаЯчеек.ЯчейкаНомерРяда,
		|	СУММА(СкладскиеЯчейкиДлина.ДлинаЯчейки) КАК РасстояниеДоНачалаРяда,
		|	ВысотаЯчеек.Высота КАК Высота,
		|	ВысотаЯчеек.НомерПаллета,
		|	ВысотаЯчеек.Зона
		|ПОМЕСТИТЬ РасстоянияДоступныхЯчеек
		|ИЗ
		|	ВысотаДоступныхЯчеек КАК ВысотаЯчеек
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиДлина
		|		ПО ВысотаЯчеек.ЯчейкаНомерРяда = СкладскиеЯчейкиДлина.НомерРяда
		|			И ВысотаЯчеек.ЯчейкаНомерЯруса = СкладскиеЯчейкиДлина.НомерЯруса
		|			И ВысотаЯчеек.ЯчейкаНомерЯчейки > СкладскиеЯчейкиДлина.НомерЯчейки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВысотаЯчеек.Ячейка,
		|	ВысотаЯчеек.ЯчейкаНомерЯруса,
		|	ВысотаЯчеек.ЯчейкаНомерРяда,
		|	ВысотаЯчеек.Высота,
		|	ВысотаЯчеек.НомерПаллета,
		|	ВысотаЯчеек.Зона
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РасстоянияДоступныхЯчеек.Ячейка,
		|	РасстоянияДоступныхЯчеек.ЯчейкаНомерЯруса,
		|	РасстоянияДоступныхЯчеек.ЯчейкаНомерРяда,
		|	РасстоянияДоступныхЯчеек.Зона,
		|	РасстоянияДоступныхЯчеек.НомерПаллета,
		|	ЕСТЬNULL(РасстоянияДоступныхЯчеек.Высота, 0) КАК Высота1,
		|	ЕСТЬNULL(ЯчейкаКомплектацииРасстояния.Высота, 0) КАК Высота2,
		|	ЕСТЬNULL(РасстоянияДоступныхЯчеек.РасстояниеДоНачалаРяда, 0) + ЕСТЬNULL(СУММА(СкладыШиринаПроходов.Расстояние), 0) + ЕСТЬNULL(ЯчейкаКомплектацииРасстояния.РасстояниеДоНачалаРяда, 0) КАК Расстояние
		|ПОМЕСТИТЬ РасстоянияДоЯчейкиКомплектации
		|ИЗ
		|	РасстоянияДоступныхЯчеек КАК РасстоянияДоступныхЯчеек
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкаКомплектацииРасстояния КАК ЯчейкаКомплектацииРасстояния
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Склады.ШиринаПроходов КАК СкладыШиринаПроходов
		|		ПО (СкладыШиринаПроходов.Ссылка = &Склад)
		|			И (ВЫБОР
		|				КОГДА РасстоянияДоступныхЯчеек.ЯчейкаНомерРяда > ЯчейкаКомплектацииРасстояния.ЯчейкаНомерРяда
		|					ТОГДА СкладыШиринаПроходов.НомерРяда >= ЯчейкаКомплектацииРасстояния.ЯчейкаНомерРяда
		|							И СкладыШиринаПроходов.НомерСледующегоРяда <= РасстоянияДоступныхЯчеек.ЯчейкаНомерРяда
		|				ИНАЧЕ СкладыШиринаПроходов.НомерРяда <= ЯчейкаКомплектацииРасстояния.ЯчейкаНомерРяда
		|						И СкладыШиринаПроходов.НомерСледующегоРяда >= РасстоянияДоступныхЯчеек.ЯчейкаНомерРяда
		|			КОНЕЦ)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасстоянияДоступныхЯчеек.Ячейка,
		|	РасстоянияДоступныхЯчеек.ЯчейкаНомерЯруса,
		|	РасстоянияДоступныхЯчеек.ЯчейкаНомерРяда,
		|	РасстоянияДоступныхЯчеек.Зона,
		|	РасстоянияДоступныхЯчеек.Высота,
		|	ЯчейкаКомплектацииРасстояния.Высота,
		|	РасстоянияДоступныхЯчеек.НомерПаллета,
		|	РасстоянияДоступныхЯчеек.РасстояниеДоНачалаРяда,
		|	ЯчейкаКомплектацииРасстояния.РасстояниеДоНачалаРяда
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Расстояния.Зона КАК Зона,
		|	Расстояния.Ячейка КАК Ячейка,
		|	Расстояния.ЯчейкаНомерЯруса КАК НомерЯруса,
		|	Расстояния.Расстояние / &СкоростьДвижения + Расстояния.Высота1 / &СкоростьПодъема * 2 + Расстояния.Высота2 / &СкоростьПодъема * 2 КАК ВремяПеремещения,
		|	Расстояния.НомерПаллета
		|ПОМЕСТИТЬ ЯчейкиВремя
		|ИЗ
		|	РасстоянияДоЯчейкиКомплектации КАК Расстояния
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЯчейкиВремя.ВремяПеремещения) КАК ВремяПеремещения
		|ПОМЕСТИТЬ МинимальноеВремя
		|ИЗ
		|	ЯчейкиВремя КАК ЯчейкиВремя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиВремя.Зона,
		|	ЯчейкиВремя.Ячейка,
		|	ЯчейкиВремя.ВремяПеремещения,
		|	ЯчейкиВремя.НомерЯруса,
		|	ЯчейкиВремя.НомерПаллета
		|ПОМЕСТИТЬ ЯчейкиСМинимальнымВременем
		|ИЗ
		|	ЯчейкиВремя КАК ЯчейкиВремя
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальноеВремя КАК МинимальноеВремя
		|		ПО ЯчейкиВремя.ВремяПеремещения = МинимальноеВремя.ВремяПеремещения
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЯчейкиСМинимальнымВременем.НомерЯруса) КАК НомерЯруса
		|ПОМЕСТИТЬ МинимальныйЯрус
		|ИЗ
		|	ЯчейкиСМинимальнымВременем КАК ЯчейкиСМинимальнымВременем
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиСМинимальнымВременем.Ячейка,
		|	ЯчейкиСМинимальнымВременем.Зона КАК ЗонаЯчейки,
		|	ЯчейкиСМинимальнымВременем.ВремяПеремещения,
		|	ЯчейкиСМинимальнымВременем.НомерПаллета
		|ПОМЕСТИТЬ ОтобраннаяЯчейка
		|ИЗ
		|	ЯчейкиСМинимальнымВременем КАК ЯчейкиСМинимальнымВременем
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальныйЯрус КАК МинимальныйЯрус
		|		ПО ЯчейкиСМинимальнымВременем.НомерЯруса = МинимальныйЯрус.НомерЯруса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтобраннаяЯчейкаВнутриРяда.Ячейка,
		|	ОтобраннаяЯчейкаВнутриРяда.ЗонаЯчейки,
		|	ОтобраннаяЯчейкаВнутриРяда.ВремяПеремещения,
		|	ОтобраннаяЯчейкаВнутриРяда.НомерПаллета
		|ИЗ
		|	ОтобраннаяЯчейкаВнутриРяда КАК ОтобраннаяЯчейкаВнутриРяда
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ОтобраннаяЯчейка.Ячейка,
		|	ОтобраннаяЯчейка.ЗонаЯчейки,
		|	ОтобраннаяЯчейка.ВремяПеремещения,
		|	ОтобраннаяЯчейка.НомерПаллета
		|ИЗ
		|	ОтобраннаяЯчейка КАК ОтобраннаяЯчейка";
	ИначеЕсли Назначение = "БуферныеЯчейкиХранения" Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СостояниеБлокировокЯчеекСрезПоследних.Ячейка
		|ПОМЕСТИТЬ Заблокированные
		|ИЗ
		|	РегистрСведений.СостояниеБлокировокЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеБлокировокЯчеекСрезПоследних
		|ГДЕ
		|	СостояниеБлокировокЯчеекСрезПоследних.Заблокирована
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	СостояниеРезервовЯчеекСрезПоследних.Ячейка
		|ИЗ
		|	РегистрСведений.СостояниеРезервовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеРезервовЯчеекСрезПоследних
		|ГДЕ
		|	СостояниеРезервовЯчеекСрезПоследних.Заблокирована
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
		|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(РезервированиеТовараВЯчейкахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток, 0) - ЕСТЬNULL(РезервированиеТовараВЯчейкахОстатки.КоличествоЕХООстаток, 0) КАК КоличествоЕХООстаток
		|ПОМЕСТИТЬ РазмещенияНоменклатурыВЕХО
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
		|			&НаДату,
		|			Склад = &Склад
		|				И Номенклатура = &Номенклатура
		|				И Единица = &едЕХО) КАК РазмещениеТоваровНаСкладахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТовараВЯчейках.Остатки(
		|				&НаДату,
		|				Склад = &Склад
		|					И Номенклатура = &Номенклатура
		|					И Единица = &едЕХО) КАК РезервированиеТовараВЯчейкахОстатки
		|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = РезервированиеТовараВЯчейкахОстатки.Ячейка
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК Поле1
		|				ИЗ
		|					Заблокированные КАК Заблокированные
		|				ГДЕ
		|					РазмещениеТоваровНаСкладахОстатки.Ячейка = Заблокированные.Ячейка)
		|	И НЕ РазмещениеТоваровНаСкладахОстатки.Ячейка В (&ИсключаемыеЯчейки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
		|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.КоличествоОстаток, 0) - ЕСТЬNULL(РезервированиеТовараВЯчейкахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток, 0) - ЕСТЬNULL(РезервированиеТовараВЯчейкахОстатки.КоличествоЕХООстаток, 0) КАК КоличествоЕХООстаток
		|ПОМЕСТИТЬ РазмещенияНоменклатурыВКоробках
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
		|			&НаДату,
		|			Склад = &Склад
		|				И Номенклатура = &Номенклатура
		|				И Единица = &едКоробка) КАК РазмещениеТоваровНаСкладахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.РезервированиеТовараВЯчейках.Остатки(
		|				&НаДату,
		|				Склад = &Склад
		|					И Номенклатура = &Номенклатура
		|					И Единица = &едКоробка) КАК РезервированиеТовараВЯчейкахОстатки
		|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = РезервированиеТовараВЯчейкахОстатки.Ячейка
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК Поле1
		|				ИЗ
		|					Заблокированные КАК Заблокированные
		|				ГДЕ
		|					РазмещениеТоваровНаСкладахОстатки.Ячейка = Заблокированные.Ячейка)
		|	И НЕ РазмещениеТоваровНаСкладахОстатки.Ячейка В (&ИсключаемыеЯчейки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(РазмещенияНоменклатурыВЕХО.Ячейка, РазмещенияНоменклатурыВКоробках.Ячейка) КАК Ячейка,
		|	ЕСТЬNULL(РазмещенияНоменклатурыВЕХО.КоличествоОстаток, 0) КАК ОстатокЕХО,
		|	ЕСТЬNULL(РазмещенияНоменклатурыВКоробках.КоличествоОстаток, 0) КАК ОстатокКоробок,
		|	ЕСТЬNULL(РазмещенияНоменклатурыВЕХО.КоличествоЕХООстаток, 0) + ЕСТЬNULL(РазмещенияНоменклатурыВКоробках.КоличествоЕХООстаток, 0) КАК ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ РазмещенияНоменклатурыОбщее
		|ИЗ
		|	РазмещенияНоменклатурыВЕХО КАК РазмещенияНоменклатурыВЕХО
		|		ПОЛНОЕ СОЕДИНЕНИЕ РазмещенияНоменклатурыВКоробках КАК РазмещенияНоменклатурыВКоробках
		|		ПО РазмещенияНоменклатурыВЕХО.Ячейка = РазмещенияНоменклатурыВКоробках.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
		|	СостояниеЗонЯчеекСрезПоследних.Зона,
		|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки,
		|	РазмещениеТоваровНаСкладахОстатки.ОстатокЕХО,
		|	РазмещениеТоваровНаСкладахОстатки.ОстатокКоробок,
		|	РазмещениеТоваровНаСкладахОстатки.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ РазмещенияНоменклатуры
		|ИЗ
		|	РазмещенияНоменклатурыОбщее КАК РазмещениеТоваровНаСкладахОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЗонЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеЗонЯчеекСрезПоследних
		|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеЗонЯчеекСрезПоследних.Ячейка
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
		|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеВидовЯчеекСрезПоследних.Ячейка
		|ГДЕ
		|	НЕ 1 В
		|				(ВЫБРАТЬ
		|					1 КАК Поле1
		|				ИЗ
		|					Заблокированные КАК Заблокированные
		|				ГДЕ
		|					РазмещениеТоваровНаСкладахОстатки.Ячейка = Заблокированные.Ячейка)
		|	И НЕ РазмещениеТоваровНаСкладахОстатки.Ячейка В (&ИсключаемыеЯчейки)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещенияНоменклатуры.Ячейка,
		|	РазмещенияНоменклатуры.Зона,
		|	РазмещенияНоменклатуры.ОстатокЕХО,
		|	РазмещенияНоменклатуры.ОстатокКоробок,
		|	РазмещенияНоменклатуры.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ РазмещениеСОтбором
		|ИЗ
		|	РазмещенияНоменклатуры КАК РазмещенияНоменклатуры
		|ГДЕ
		|	РазмещенияНоменклатуры.Зона " + ?(ВнутриЗоны, "=", "<>") + " &Зона
		//|	РазмещенияНоменклатуры.Зона <> &Зона
		|	И РазмещенияНоменклатуры.ОбщийОстатокВЕХО >= &КоличествоКОтгрузке
		|	И РазмещенияНоменклатуры.ВидЯчейки = ЗНАЧЕНИЕ(Перечисление.ВидыСкладскихЯчеек.Буферная)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РазмещениеТоваровНаСкладах.Период) КАК ДатаПоступления,
		|	РазмещениеТоваровНаСкладах.Ячейка КАК Ячейка
		|ПОМЕСТИТЬ ДатыПриемок
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах КАК РазмещениеТоваровНаСкладах
		|ГДЕ
		|	РазмещениеТоваровНаСкладах.Склад = &Склад
		|	И РазмещениеТоваровНаСкладах.Номенклатура = &Номенклатура
		|	И РазмещениеТоваровНаСкладах.Единица <> &едПаллета
		|	И РазмещениеТоваровНаСкладах.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
		|	И 1 В
		|			(ВЫБРАТЬ
		|				1 КАК Поле1
		|			ИЗ
		|				РазмещениеСОтбором КАК РазмещениеСОтбором
		|			ГДЕ
		|				РазмещениеТоваровНаСкладах.Ячейка = РазмещениеСОтбором.Ячейка)
		|
		|СГРУППИРОВАТЬ ПО
		|	РазмещениеТоваровНаСкладах.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ДатыПриемок.ДатаПоступления) КАК ДатаПоступления
		|ПОМЕСТИТЬ СамаяРанняяДата
		|ИЗ
		|	ДатыПриемок КАК ДатыПриемок
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДатыПриемок.Ячейка
		|ПОМЕСТИТЬ ЯчейкиПоФИФО
		|ИЗ
		|	ДатыПриемок КАК ДатыПриемок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СамаяРанняяДата КАК СамаяРанняяДата
		|		ПО ДатыПриемок.ДатаПоступления = СамаяРанняяДата.ДатаПоступления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РазмещениеСОтбором.Ячейка,
		|	РазмещениеСОтбором.Ячейка.НомерРяда,
		|	РазмещениеСОтбором.Ячейка.НомерЯруса,
		|	РазмещениеСОтбором.Ячейка.НомерЯчейки,
		|	РазмещениеСОтбором.Зона,
		|	РазмещениеСОтбором.ОстатокЕХО,
		|	РазмещениеСОтбором.ОстатокКоробок,
		|	РазмещениеСОтбором.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ ДоступныеЯчейки
		|ИЗ
		|	РазмещениеСОтбором КАК РазмещениеСОтбором
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЯчейкиПоФИФО КАК ЯчейкиПоФИФО
		|		ПО РазмещениеСОтбором.Ячейка = ЯчейкиПоФИФО.Ячейка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки,
		|	СУММА(СкладскиеЯчейкиВысота.ВысотаЯчейки) КАК Высота,
		|	ДоступныеЯчейки.Зона,
		|	ДоступныеЯчейки.ОстатокЕХО,
		|	ДоступныеЯчейки.ОстатокКоробок,
		|	ДоступныеЯчейки.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ ВысотаЯчеек
		|ИЗ
		|	ДоступныеЯчейки КАК ДоступныеЯчейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиВысота
		|		ПО ДоступныеЯчейки.ЯчейкаНомерРяда = СкладскиеЯчейкиВысота.НомерРяда
		|			И (1 = СкладскиеЯчейкиВысота.НомерЯчейки)
		|			И ДоступныеЯчейки.ЯчейкаНомерЯруса > СкладскиеЯчейкиВысота.НомерЯруса
		|			И (СкладскиеЯчейкиВысота.Владелец = &Склад)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоступныеЯчейки.Ячейка,
		|	ДоступныеЯчейки.ЯчейкаНомерЯруса,
		|	ДоступныеЯчейки.ЯчейкаНомерРяда,
		|	ДоступныеЯчейки.ЯчейкаНомерЯчейки,
		|	ДоступныеЯчейки.Зона,
		|	ДоступныеЯчейки.ОстатокЕХО,
		|	ДоступныеЯчейки.ОстатокКоробок,
		|	ДоступныеЯчейки.ОбщийОстатокВЕХО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВысотаЯчеек.Ячейка,
		|	ВысотаЯчеек.ЯчейкаНомерЯруса,
		|	ЕСТЬNULL(СУММА(СкладыРасстояния.Расстояние), 0) + ЕСТЬNULL(СУММА(СкладскиеЯчейкиДлина.ДлинаЯчейки), 0) КАК Расстояние,
		|	ВысотаЯчеек.Высота КАК Высота,
		|	ВысотаЯчеек.Зона,
		|	ВысотаЯчеек.ОстатокЕХО,
		|	ВысотаЯчеек.ОстатокКоробок,
		|	ВысотаЯчеек.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ Расстояния
		|ИЗ
		|	ВысотаЯчеек КАК ВысотаЯчеек
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СкладскиеЯчейки КАК СкладскиеЯчейкиДлина
		|		ПО ВысотаЯчеек.ЯчейкаНомерРяда = СкладскиеЯчейкиДлина.НомерРяда
		|			И ВысотаЯчеек.ЯчейкаНомерЯруса = СкладскиеЯчейкиДлина.НомерЯруса
		|			И ВысотаЯчеек.ЯчейкаНомерЯчейки > СкладскиеЯчейкиДлина.НомерЯчейки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Склады.Расстояния КАК СкладыРасстояния
		|		ПО ВысотаЯчеек.ЯчейкаНомерРяда = СкладыРасстояния.НомерРяда
		|
		|СГРУППИРОВАТЬ ПО
		|	ВысотаЯчеек.Ячейка,
		|	ВысотаЯчеек.ЯчейкаНомерЯруса,
		|	ВысотаЯчеек.Высота,
		|	ВысотаЯчеек.Зона,
		|	ВысотаЯчеек.ОстатокЕХО,
		|	ВысотаЯчеек.ОстатокКоробок,
		|	ВысотаЯчеек.ОбщийОстатокВЕХО
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Расстояния.Зона КАК Зона,
		|	Расстояния.Ячейка КАК Ячейка,
		|	Расстояния.ЯчейкаНомерЯруса КАК НомерЯруса,
		|	Расстояния.Расстояние / &СкоростьДвижения + Расстояния.Высота / &СкоростьПодъема * 2 КАК ВремяОтгрузки,
		|	Расстояния.ОстатокЕХО,
		|	Расстояния.ОстатокКоробок,
		|	Расстояния.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ ЯчейкиВремя
		|ИЗ
		|	Расстояния КАК Расстояния
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЯчейкиВремя.ВремяОтгрузки) КАК ВремяОтгрузки
		|ПОМЕСТИТЬ МинимальноеВремя
		|ИЗ
		|	ЯчейкиВремя КАК ЯчейкиВремя
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиВремя.Зона,
		|	ЯчейкиВремя.Ячейка,
		|	ЯчейкиВремя.ВремяОтгрузки,
		|	ЯчейкиВремя.НомерЯруса,
		|	ЯчейкиВремя.ОстатокЕХО,
		|	ЯчейкиВремя.ОстатокКоробок,
		|	ЯчейкиВремя.ОбщийОстатокВЕХО
		|ПОМЕСТИТЬ ЯчейкиСМинимальнымВременем
		|ИЗ
		|	ЯчейкиВремя КАК ЯчейкиВремя
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальноеВремя КАК МинимальноеВремя
		|		ПО ЯчейкиВремя.ВремяОтгрузки = МинимальноеВремя.ВремяОтгрузки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(ЯчейкиСМинимальнымВременем.НомерЯруса) КАК НомерЯруса
		|ПОМЕСТИТЬ МинимальныйЯрус
		|ИЗ
		|	ЯчейкиСМинимальнымВременем КАК ЯчейкиСМинимальнымВременем
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЯчейкиСМинимальнымВременем.Ячейка,
		|	ЯчейкиСМинимальнымВременем.Зона КАК ЗонаЯчейки,
		|	ЯчейкиСМинимальнымВременем.ВремяОтгрузки,
		|	ЯчейкиСМинимальнымВременем.ОстатокЕХО,
		|	ЯчейкиСМинимальнымВременем.ОстатокКоробок,
		|	ЯчейкиСМинимальнымВременем.ОбщийОстатокВЕХО
		|ИЗ
		|	ЯчейкиСМинимальнымВременем КАК ЯчейкиСМинимальнымВременем
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ МинимальныйЯрус КАК МинимальныйЯрус
		|		ПО ЯчейкиСМинимальнымВременем.НомерЯруса = МинимальныйЯрус.НомерЯруса";
	КонецЕсли;	
КонецПроцедуры

#Если Клиент Тогда
Процедура ЗаполнитьПолноеПеремещениеВНовуюЯчейку(СтруктураПараметров) Экспорт
	Дата = ТекущаяДата();
	ВидПеремещения = Перечисления.ВидыСкладскихПеремещений.Обычное;
	Статус = Перечисления.СтатусыСкладскихПеремещений.Выполнение;
	Склад = СтруктураПараметров.Склад;
	Ответственный = глЗначениеПеременной("глТекущийПользователь");
	Комментарий = "Создан автоматически. Перемещение всех остатков номенклатуры """ + СтруктураПараметров.Номенклатура + """ из ячейки """ + СтруктураПараметров.СтараяЯчейка + """ в ячейку """
					+ СтруктураПараметров.НоваяЯчейка + """";
	
	ЭтоИзменениеАдресаХраненияНоменклатуры = Истина;				
	Организация = Справочники.Организации.НайтиПоКоду("000000001"); //Эскаро Колор
	
	//Если Статус = Перечисления.СтатусыСкладскихПеремещений.Завершено Тогда
	//	Сообщить("Нельзя проводить операции с документом со статусом ""Завершено""");
	//	Возврат;
	//КонецЕсли;
	//
	//Если НЕ ПроверитьМодифицированность() Тогда
	//	Возврат;
	//КонецЕсли;
	//
	//Если НЕ ПроверитьЗаполнениеШапки() Тогда
	//	Сообщить("Заполнение не произведено!", СтатусСообщения.Важное);
	//	Возврат;
	//КонецЕсли;
		
	Если Перемещение.Количество() > 0 И Вопрос("Табличная часть документа будет очищена"
		+ Символы.ПС + "Продожить?", РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.Отмена Тогда
		
		Возврат;
	КонецЕсли;
	
	//клПаллета = Справочники.КлассификаторЕдиницИзмерения.Паллета;
	//клКоробка = Справочники.КлассификаторЕдиницИзмерения.Коробка;		
	//
	Перемещение.Очистить();
	
	тзОстатки = СтруктураПараметров.ТаблицаОстатков;
	
	Для каждого стрОстатки Из тзОстатки Цикл
		Если стрОстатки.Номенклатура = СтруктураПараметров.Номенклатура Тогда
			НоваяСтрока = Перемещение.Добавить();
			НоваяСтрока.Номенклатура = стрОстатки.Номенклатура;
			НоваяСтрока.ЕдиницаХраненияОстатков = стрОстатки.Номенклатура.ЕдиницаХраненияОстатков;
			НоваяСтрока.Коэффициент = стрОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент;
			НоваяСтрока.КоличествоКПеремещению = стрОстатки.КоличествоЕХООстаток;
			НоваяСтрока.КоличествоФактическиПеремещенное = стрОстатки.КоличествоЕХООстаток;
			//НоваяСтрока.ОтбираемаяЕдиница = стрОстатки.Единица;
			//НоваяСтрока.РазмещаемаяЕдиница = стрОстатки.Единица;
			//НоваяСтрока.ОтбираемоеКоличество = стрОстатки.КоличествоОстаток;
			//НоваяСтрока.РазмещаемоеКоличество = стрОстатки.КоличествоОстаток;
			НоваяСтрока.ЯчейкаПланОткуда = СтруктураПараметров.СтараяЯчейка;
			НоваяСтрока.ЯчейкаФактОткуда = СтруктураПараметров.СтараяЯчейка;
			НоваяСтрока.ЯчейкаПланКуда = СтруктураПараметров.НоваяЯчейка;
			НоваяСтрока.ЯчейкаФактКуда = СтруктураПараметров.НоваяЯчейка;
			НоваяСтрока.НомерПаллета = стрОстатки.НомерПаллета;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры
#КонецЕсли
Процедура ПроверитьРазмещение(Отказ)
	
	ЗапросВТ = Новый Запрос;
	ЗапросВТ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗапросВТ.Текст = 
	"ВЫБРАТЬ
	|	Размещение.Номенклатура,
	|	Размещение.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Размещение.КоличествоФактическиПеремещенное КАК Количество,
	|	Размещение.НомерПаллета,
	|	Размещение.ЯчейкаПланКуда КАК ЯчейкаПлан,
	|	Размещение.ЯчейкаФактКуда КАК ЯчейкаФакт
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&ТабРазмещение КАК Размещение";
	
	ЗапросВТ.УстановитьПараметр("ТабРазмещение", Перемещение.Выгрузить());
	ЗапросВТ.Выполнить();	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
	|	РазмещениеТоваровНаСкладахОстатки.Номенклатура,
	|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета КАК НомерПаллета,
	|	РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток КАК КоличествоЕХООстаток
	|ПОМЕСТИТЬ ОбщиеОстаткиЕХО
	|ИЗ
	|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
	|			&НаДату,
	|			Склад = &Склад
	|				И Статус = &СтатусЗавершено) КАК РазмещениеТоваровНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|ГДЕ
	|	1 В
	|			(ВЫБРАТЬ
	|				1 КАК Поле1
	|			ИЗ
	|				ТаблицаДокумента КАК ТаблицаДокумента
	|			ГДЕ
	|				РазмещениеТоваровНаСкладахОстатки.Ячейка = ТаблицаДокумента.ЯчейкаФакт)
	|	И СостояниеВидовЯчеекСрезПоследних.ВидЯчейки <> &ВидЯчейкиОбщая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков КАК ЕХО,
	|	ТаблицаДокумента.ЕдиницаИзмерения,
	|	ТаблицаДокумента.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения = ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков
	|			ТОГДА ТаблицаДокумента.Количество
	|		ИНАЧЕ ТаблицаДокумента.Количество * ТаблицаДокумента.ЕдиницаИзмерения.СодержитЕХО
	|	КОНЕЦ КАК КоличествоЕХО,
	|	ТаблицаДокумента.НомерПаллета,
	|	ТаблицаДокумента.ЯчейкаПлан,
	|	ТаблицаДокумента.ЯчейкаФакт,
	|	ТаблицаДокумента.ЯчейкаФакт.ДлинаЯчейки * ТаблицаДокумента.ЯчейкаФакт.ШиринаЯчейки * ТаблицаДокумента.ЯчейкаФакт.ВысотаЯчейки КАК ОбъемЯчейки,
	|	ЕСТЬNULL(ОбщиеОстаткиЕХО.КоличествоЕХООстаток, 0) КАК КоличествоЕХООстаток,
	|	ОбщиеОстаткиЕХО.Номенклатура КАК НоменклатураРазмещенная,
	|	ЕСТЬNULL(СостояниеБлокировокЯчеекСрезПоследних.Заблокирована, ЛОЖЬ) КАК Заблокирована,
	|	ЕСТЬNULL(СостояниеРезервовЯчеекСрезПоследних.Заблокирована, ЛОЖЬ) КАК Зарезервирована,
	|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки КАК ТекущийВидЯчейки,
	|	СостояниеЗонЯчеекСрезПоследних.Зона КАК ТекущаяЗонаЯчейки,
	|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка КАК ЗакрепленнаяЯчейка,
	|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.МаксимальноеКоличество
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщиеОстаткиЕХО КАК ОбщиеОстаткиЕХО
	|		ПО ТаблицаДокумента.ЯчейкаФакт = ОбщиеОстаткиЕХО.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеБлокировокЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеБлокировокЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеБлокировокЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЗонЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеЗонЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеЗонЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРезервовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеРезервовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеРезервовЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаХраненияНоменклатурыНаСкладах.СрезПоследних(&НаДату, Склад = &Склад) КАК АдресаХраненияНоменклатурыНаСкладахСрезПоследних
	|		ПО ТаблицаДокумента.Номенклатура = АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Номенклатура
	|			И ТаблицаДокумента.ЯчейкаФакт = АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка";
	
	МоментДокумента = Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Исключая);
	
	Запрос.УстановитьПараметр("НаДату", МоментДокумента);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ВидЯчейкиОбщая", Перечисления.ВидыСкладскихЯчеек.Общая);
	Запрос.УстановитьПараметр("СтатусЗавершено", Перечисления.СтатусыРазмещенийВЯчейках.Завершено);
	
	Запрос.МенеджерВременныхТаблиц = ЗапросВТ.МенеджерВременныхТаблиц;
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	тзОбщиеОстатки = тзРезультат.Скопировать();
	тзОбщиеОстатки.Свернуть("Номенклатура, ЕХО, ЯчейкаФакт, ТекущийВидЯчейки, МаксимальноеКоличество", "КоличествоЕХО, КоличествоЕХООстаток, НомерПаллета"); 
	
	Для Каждого стрРез Из тзРезультат Цикл
		Если стрРез.Заблокирована Тогда
			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ заблокирована", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если стрРез.Зарезервирована Тогда
			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ зарезервирована", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
			Если стрРез.ЯчейкаФакт <> стрРез.ЗакрепленнаяЯчейка Тогда
				Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ не является закрепленной ячейкой номенклатуры """ + стрРез.Номенклатура + """", СтатусСообщения.Важное);
				Отказ = Истина;
			//ИначеЕсли стрРез.НомерПаллета <> 0 Тогда
			//	Сообщить("Нельзя разместить паллету в ячейку комплектации """ + стрРез.ЯчейкаФакт + """", СтатусСообщения.Важное);
			//	Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если стрРез.НоменклатураРазмещенная <> null И стрРез.Номенклатура <> стрРез.НоменклатураРазмещенная Тогда
			Сообщить("В ячейке """ + стрРез.ЯчейкаФакт + """ уже размещена другая номенклатура.", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если Отказ Тогда
			Продолжить;
		КонецЕсли;
		
		Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
			Если стрРез.КоличествоЕХООстаток > 0  И НЕ ПроверкаНаВозвратОстатка(стрРез, тзРезультат)Тогда
				Сообщить("Нельзя размещать в буферную ячейку """ + стрРез.ЯчейкаФакт + """, так как в ней уже содержится товар", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
		
		//Если стрРез.ЕдиницаИзмерения.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.Паллета Тогда
		//	Если стрРез.КоличествоЕХООстаток > 0 Тогда
		//		Если стрРез.НомерПаллетаВОстатке > 0 Тогда
		//			Сообщить("Нельзя разместить паллету в ячейку """ + стрРез.ЯчейкаФакт + """, так как в ней уже расположена паллета № " + стрРез.НомерПаллетаВОстатке, СтатусСообщения.Важное);
		//			Отказ = Истина;
		//		Иначе
		//			Сообщить("Нельзя разместить паллету в ячейку """ + стрРез.ЯчейкаФакт + """, так как в ней уже присутствует товар", СтатусСообщения.Важное);
		//			Отказ = Истина;
		//		КонецЕсли;
		//	КонецЕсли;
		//Иначе
		//	Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация ИЛИ
		//		стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Общая Тогда
		//			
		//		Если стрРез.ЯчейкаФакт <> стрРез.ЗакрепленнаяЯчейка Тогда
		//			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ не является закрепленной ячейкой номенклатуры """ + стрРез.Номенклатура + """", СтатусСообщения.Важное);
		//			Отказ = Истина;
		//		КонецЕсли;
		//	ИначеЕсли стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
		//		Если стрРез.КоличествоЕХООстаток > 0 Тогда
		//			Если стрРез.НомерПаллетаВОстатке > 0 Тогда
		//				Сообщить("В буфферной ячейке """ + стрРез.ЯчейкаФакт + """ уже размещена паллета № " + стрРез.НомерПаллетаВОстатке, СтатусСообщения.Важное);
		//				Отказ = Истина;
		//			Иначе
		//				Сообщить("В буфферной ячейке """ + стрРез.ЯчейкаФакт + """ уже присутствует товар.", СтатусСообщения.Важное);
		//				Отказ = Истина;
		//			КонецЕсли;
		//		ИначеЕсли стрРез.НомерПаллетаВОстатке <> 0 Тогда
		//			Сообщить("В буфферной ячейке """ + стрРез.ЯчейкаФакт + """ уже размещена паллета №" + стрРез.НомерПаллетаВОстатке, СтатусСообщения.Важное);
		//			Отказ = Истина;
		//		КонецЕсли;
		//	КонецЕсли;
		//	
		//КонецЕсли;
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		Для каждого стрРез Из тзОбщиеОстатки Цикл
			Если ВидПеремещения <> Перечисления.ВидыСкладскихПеремещений.НаОснованииОтгрузки И НЕ ЭтоУстановкаСтатуса И (стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация) Тогда
				Если стрРез.КоличествоЕХООстаток + стрРез.КоличествоЕХО > стрРез.МаксимальноеКоличество Тогда
					Сообщить("Обнаружено переполнение ячейки """ + стрРез.ЯчейкаФакт
					+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", размещение: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
					+ ", макс. кол-во: " + стрРез.МаксимальноеКоличество + " " + стрРез.ЕХО
					, СтатусСообщения.Важное);
					
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.ЯчейкаФакт,
	|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТаблицаДокумента.Номенклатура) КАК КоличествоПозиций
	|ПОМЕСТИТЬ НоменклатураПоЯчейкам
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.ЯчейкаФакт,
	|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НоменклатураПоЯчейкам.ЯчейкаФакт
	|ИЗ
	|	НоменклатураПоЯчейкам КАК НоменклатураПоЯчейкам
	|ГДЕ
	|	НоменклатураПоЯчейкам.КоличествоПозиций > 1
	|	И НоменклатураПоЯчейкам.ВидЯчейки <> &ВидЯчейкиОбщая";
	
	Запрос.УстановитьПараметр("ВидЯчейкиОбщая", Перечисления.ВидыСкладскихЯчеек.Общая);
	тзРезультат = Запрос.Выполнить().Выгрузить();
	
	Для каждого стрРез Из тзРезультат Цикл
		Сообщить("Обнаружено размещение нескольких номенклатурных позиций в ячейку """ + стрРез.ЯчейкаФакт + """", СтатусСообщения.Важное);
		Отказ = Истина;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьОтбор(Отказ)
	
	ЗапросВТ = Новый Запрос;
	ЗапросВТ.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ЗапросВТ.Текст = 
	"ВЫБРАТЬ
	|	Отбор.Номенклатура,
	|	Отбор.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	|	Отбор.КоличествоФактическиПеремещенное КАК Количество,
	|	Отбор.НомерПаллета,
	|	Отбор.ЯчейкаПланОткуда КАК ЯчейкаПлан,
	|	Отбор.ЯчейкаФактОткуда КАК ЯчейкаФакт
	|ПОМЕСТИТЬ ТаблицаДокумента
	|ИЗ
	|	&ТабОтбор КАК Отбор";
	
	ЗапросВТ.УстановитьПараметр("ТабОтбор", Перемещение.Выгрузить());
	ЗапросВТ.Выполнить();

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РазмещениеТоваровНаСкладахОстатки.Ячейка,
	|	РазмещениеТоваровНаСкладахОстатки.Номенклатура,
	|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета,
	|	РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток
	|ПОМЕСТИТЬ ОбщиеОстаткиЕХО
	|ИЗ
	|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
	|			&НаДату,
	|			Склад = &Склад
	|				И НЕ Статус = &СтатусВыполнениеРазмещения) КАК РазмещениеТоваровНаСкладахОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО РазмещениеТоваровНаСкладахОстатки.Ячейка = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|ГДЕ
	|	1 В
	|			(ВЫБРАТЬ
	|				1 КАК Поле1
	|			ИЗ
	|				ТаблицаДокумента КАК ТаблицаДокумента
	|			ГДЕ
	|				РазмещениеТоваровНаСкладахОстатки.Ячейка = ТаблицаДокумента.ЯчейкаФакт)
//	|	И СостояниеВидовЯчеекСрезПоследних.ВидЯчейки <> &ВидЯчейкиОбщая
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Номенклатура,
	|	ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков КАК ЕХО,
	|	ТаблицаДокумента.ЕдиницаИзмерения,
	|	ТаблицаДокумента.Количество,
	|	ВЫБОР
	|		КОГДА ТаблицаДокумента.ЕдиницаИзмерения = ТаблицаДокумента.Номенклатура.ЕдиницаХраненияОстатков
	|			ТОГДА ТаблицаДокумента.Количество
	|		ИНАЧЕ ТаблицаДокумента.Количество * ТаблицаДокумента.ЕдиницаИзмерения.СодержитЕХО
	|	КОНЕЦ КАК КоличествоЕХО,
	|	ТаблицаДокумента.НомерПаллета,
	|	ТаблицаДокумента.ЯчейкаПлан,
	|	ТаблицаДокумента.ЯчейкаФакт,
	|	ЕСТЬNULL(РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток, 0) КАК КоличествоЕХООстаток,
	|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета КАК НомерПаллетаВОстатке,
	|	ЕСТЬNULL(СостояниеБлокировокЯчеекСрезПоследних.Заблокирована, ЛОЖЬ) КАК Заблокирована,
	|	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки КАК ТекущийВидЯчейки,
	|	СостояниеЗонЯчеекСрезПоследних.Зона КАК ТекущаяЗонаЯчейки,
	|	ЕСТЬNULL(СостояниеРезервовЯчеекСрезПоследних.Заблокирована, ЛОЖЬ) КАК Зарезервирована,
	|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Ячейка КАК ЗакрепленнаяЯчейка,
	|	АдресаХраненияНоменклатурыНаСкладахСрезПоследних.МаксимальноеКоличество
	|ИЗ
	|	ТаблицаДокумента КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОбщиеОстаткиЕХО КАК РазмещениеТоваровНаСкладахОстатки
	|		ПО ТаблицаДокумента.Номенклатура = РазмещениеТоваровНаСкладахОстатки.Номенклатура
	|			И ТаблицаДокумента.ЯчейкаФакт = РазмещениеТоваровНаСкладахОстатки.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеБлокировокЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеБлокировокЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеБлокировокЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеЗонЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеЗонЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеЗонЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеВидовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеВидовЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРезервовЯчеек.СрезПоследних(&НаДату, ) КАК СостояниеРезервовЯчеекСрезПоследних
	|		ПО ТаблицаДокумента.ЯчейкаФакт = СостояниеРезервовЯчеекСрезПоследних.Ячейка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АдресаХраненияНоменклатурыНаСкладах.СрезПоследних(&НаДату, Склад = &Склад) КАК АдресаХраненияНоменклатурыНаСкладахСрезПоследних
	|		ПО ТаблицаДокумента.Номенклатура = АдресаХраненияНоменклатурыНаСкладахСрезПоследних.Номенклатура";
	
	МоментДокумента = Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Исключая);
	Запрос.УстановитьПараметр("НаДату", МоментДокумента);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("ВидЯчейкиОбщая", Перечисления.ВидыСкладскихЯчеек.Общая);
	Запрос.УстановитьПараметр("СтатусВыполнениеРазмещения", Перечисления.СтатусыРазмещенийВЯчейках.ВыполнениеРазмещения);
	
	Запрос.МенеджерВременныхТаблиц = ЗапросВТ.МенеджерВременныхТаблиц;
	
	тзРезультат = Запрос.Выполнить().Выгрузить();
	тзОбщиеОстатки = тзРезультат.Скопировать();
	тзОбщиеОстатки.Свернуть("Номенклатура, ЕХО, ЯчейкаФакт, ТекущийВидЯчейки, МаксимальноеКоличество", "КоличествоЕХО, КоличествоЕХООстаток, НомерПаллета"); 
	
	Для Каждого стрРез Из тзРезультат Цикл
		Если стрРез.Заблокирована Тогда
			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ заблокирована", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		Если стрРез.Зарезервирована Тогда
			Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ зарезервирована", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная И стрРез.НомерПаллета <> стрРез.НомерПаллетаВОстатке И стрРез.КоличествоЕХООстаток > 0 Тогда
			Сообщить("Номер (" + стрРез.НомерПаллетаВОстатке + ") размещенной паллеты в ячейке """ + стрРез.ЯчейкаФакт + """ не совпадает с отобраным (" + стрРез.НомерПаллета + ")", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
			Если стрРез.ЯчейкаФакт <> стрРез.ЗакрепленнаяЯчейка Тогда
				Сообщить("Ячейка """ + стрРез.ЯчейкаФакт + """ не является ячейкой комплектации номенклатуры """ + стрРез.Номенклатура + """", СтатусСообщения.Важное);
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ Отказ Тогда
		Для каждого стрРез Из тзОбщиеОстатки Цикл
			Если стрРез.КоличествоЕХООстаток - стрРез.КоличествоЕХО < 0 И НЕ ПроверкаНаВозвратОстатка(стрРез, тзОбщиеОстатки) Тогда
				Сообщить("Обнаружен отбор большего количества, чем присутствует в ячейке """ + стрРез.ЯчейкаФакт
				+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", отбор: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
				, СтатусСообщения.Важное);
				
				Отказ = Истина;
			КонецЕсли;
			
			Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
				Если стрРез.КоличествоЕХО < стрРез.КоличествоЕХООстаток Тогда
					Сообщить("Обнаружен отбор меньшего количества, чем присутствует в буферной ячейке """ + стрРез.ЯчейкаФакт
					+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", отбор: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
					, СтатусСообщения.Важное);
					
					Отказ = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	//Если НЕ Отказ Тогда
	//	Для каждого стрРез Из тзОбщиеОстатки Цикл
	//		Если стрРез.КоличествоЕХООстаток - стрРез.КоличествоЕХО < 0 Тогда
	//			Сообщить("Обнаружен отбор большего количества, чем присутствует в ячейке """ + стрРез.ЯчейкаФакт
	//			+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", отбор: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
	//			, СтатусСообщения.Важное);
	//			
	//			Отказ = Истина;
	//		КонецЕсли;
	//		Если стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
	//		ИначеЕсли стрРез.ТекущийВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
	//			Если стрРез.КоличествоЕХО < стрРез.КоличествоЕХООстаток Тогда
	//				Сообщить("Обнаружен отбор меньшего количества, чем присутствует в буферной ячейке """ + стрРез.ЯчейкаФакт
	//				+ """! Остаток: " + стрРез.КоличествоЕХООстаток + " " + стрРез.ЕХО + ", отбор: " + стрРез.КоличествоЕХО + " " + стрРез.ЕХО
	//				, СтатусСообщения.Важное);
	//				
	//				Отказ = Истина;
	//			КонецЕсли;
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДокумент(Отказ)
	Если НЕ РольДоступна("АдминистраторЛогистики") И НЕ РольДоступна("ЗаведующийСкладом")И НЕ РольДоступна("РольГрузчик") Тогда
		ПроверитьРазмещение(Отказ);
		Если НЕ ЭтоИзменениеАдресаХраненияНоменклатуры Тогда
			ПроверитьОтбор(Отказ);
		КонецЕсли;
		
		Если НЕ Отказ И НЕ ЭтоУстановкаСтатуса И (НЕ ЭтоПерепроведение ИЛИ ДокументИзменен) Тогда
			мсвЯчейки = Перемещение.ВыгрузитьКолонку("ЯчейкаФактОткуда");
			мсвЯчейкиКуда = Перемещение.ВыгрузитьКолонку("ЯчейкаФактКуда");
			Для каждого ЯчейкаК Из мсвЯчейкиКуда Цикл
				Если мсвЯчейки.Найти(ЯчейкаК) = Неопределено Тогда
					мсвЯчейки.Добавить(ЯчейкаК);
				КонецЕсли;
			КонецЦикла;
			
			мсвИсклДокументы = Новый Массив;
			мсвИсклДокументы.Добавить(ДокументОтгрузки);
			
			ГраницаДокумента = Новый Граница(Ссылка.МоментВремени(), ВидГраницы.Включая);
			мсвДокументы = Новый Массив;
			УправлениеСкладскойЛогистикой.ПроверитьНаПрисутствиеВПозднихДокументах(Отказ, ГраницаДокумента, мсвЯчейки, мсвДокументы, мсвИсклДокументы);
			Если Отказ Тогда
				Сообщить("Существуют более поздние проведенные документы, осуществляющие движения по ячейкам использованным в данном документе:", СтатусСообщения.Важное);
				
				Для каждого Док Из мсвДокументы Цикл
					Сообщить(СокрЛП(Док));
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//Кабаченко_Смартис 04_12_2015
	//проверяем, если заведующий складом проводит документ, обязательно должны быть ответственные
	Если РольДоступна("ЗаведующийСкладом") Тогда
		Если Исполнители.Количество() = 0 Тогда
		//	Отказ = Истина;
			Сообщить("Исполнители не заполнены!");
		КонецЕсли;
	КонецЕсли;
	
	//Кабаченко_Смартис 04_12_2015

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	Если НЕ ПроверитьЗаполнениеШапки() Тогда
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ (ПроведениеБезКонтролей И ЭтоИзменениеАдресаХраненияНоменклатуры) Тогда
		ПроверитьДокумент(Отказ);
	КонецЕсли;
	
	НаОснованииОтгрузки = ВидПеремещения = Перечисления.ВидыСкладскихПеремещений.НаОснованииОтгрузки;
	
	Движения.СостояниеРезервовЯчеек.Записывать = Истина;
	Движения.СостояниеРезервовЯчеек.Очистить();
	Движения.РазмещениеТоваровНаСкладах.Записывать = Истина;
	Движения.РазмещениеТоваровНаСкладах.Очистить();
	
	Если Статус = Перечисления.СтатусыСкладскихПеремещений.Выполнение Тогда
		ТекущийСтатусПроведения = Перечисления.СтатусыРазмещенийВЯчейках.ВыполнениеРазмещенияПоПеремещению
	Иначе
		ТекущийСтатусПроведения = Перечисления.СтатусыРазмещенийВЯчейках.Завершено;
	КонецЕсли;
	
	Для Каждого ТекСтрокаПеремещение Из Перемещение Цикл
		ВидЯчейкиОткуда =	 УправлениеСкладскойЛогистикой.ПолучитьВидЯчейки(ТекСтрокаПеремещение.ЯчейкаФактОткуда,	 Дата);
		ВидЯчейкиКуда =		 УправлениеСкладскойЛогистикой.ПолучитьВидЯчейки(ТекСтрокаПеремещение.ЯчейкаФактКуда,	 Дата);
		
		// регистр РазмещениеТоваровНаСкладах Расход
		Движение = Движения.РазмещениеТоваровНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаФактОткуда;
		Движение.Номенклатура = ТекСтрокаПеремещение.Номенклатура;
		Движение.КоличествоЕХО = ТекСтрокаПеремещение.КоличествоФактическиПеремещенное;
		Если ВидЯчейкиОткуда = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
			Движение.НомерПаллета = ТекСтрокаПеремещение.НомерПаллета;
		КонецЕсли;
		Движение.Статус = ТекущийСтатусПроведения;
		
		Если Статус = Перечисления.СтатусыСкладскихПеремещений.Выполнение И ВидЯчейкиОткуда <> Перечисления.ВидыСкладскихЯчеек.Общая И НЕ ПроверкаНаВозвратОстатка(ТекСтрокаПеремещение, Перемещение) Тогда
			Движение = Движения.СостояниеРезервовЯчеек.Добавить();
			Движение.Период = Дата;
			Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаФактОткуда;
			Движение.Заблокирована = Истина;
		КонецЕсли;
		
		// регистр РазмещениеТоваровНаСкладах Приход
		Движение = Движения.РазмещениеТоваровНаСкладах.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Движение.Склад = Склад;
		Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаФактКуда;
		Движение.Номенклатура = ТекСтрокаПеремещение.Номенклатура;
		Движение.КоличествоЕХО = ТекСтрокаПеремещение.КоличествоФактическиПеремещенное;
		Если ВидЯчейкиКуда = Перечисления.ВидыСкладскихЯчеек.Буферная Тогда
			Движение.НомерПаллета = ТекСтрокаПеремещение.НомерПаллета;
		КонецЕсли;
		Движение.Статус = ТекущийСтатусПроведения;
	КонецЦикла;
	
	//Движения.РезервированиеТовараВЯчейках.Записывать = Истина;
	//Движения.РезервированиеТовараВЯчейках.Очистить();
	//Если НаОснованииОтгрузки Тогда
		//Движения.БудущиеПеремещения.Записывать = Истина;
		//Движения.БудущиеПеремещения.Очистить();
	//КонецЕсли;
	
	//Если Статус = Перечисления.СтатусыСкладскихПеремещений.Выполнение Тогда
	//	// регистр СостояниеРезервовЯчеек
	//	Для Каждого ТекСтрокаПеремещение Из Перемещение Цикл
	//		//Движение = Движения.СостояниеРезервовЯчеек.Добавить();
	//		//Движение.Период = Дата;
	//		//Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаПланОткуда;
	//		//Движение.Заблокирована = Истина;
	//		//Движение = Движения.СостояниеРезервовЯчеек.Добавить();
	//		//Движение.Период = Дата;
	//		//Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаПланКуда;
	//		//Движение.Заблокирована = Истина;
	//		
	//		// регистр РезервированиеТовараВЯчейках Приход
	//		Движение = Движения.РезервированиеТовараВЯчейках.Добавить();
	//		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
	//		Движение.Период = Дата;
	//		Движение.Склад = Склад;
	//		Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаФактОткуда;
	//		Движение.Номенклатура = ТекСтрокаПеремещение.Номенклатура;
	//		Движение.Единица = ТекСтрокаПеремещение.ОтбираемаяЕдиница;
	//		Движение.НомерПаллета = ТекСтрокаПеремещение.НомерПаллета;
	//		Движение.Количество = ТекСтрокаПеремещение.ОтбираемоеКоличество;
	//		Если Движение.Единица = Движение.Номенклатура.ЕдиницаХраненияОстатков Тогда
	//			Движение.КоличествоЕХО = ТекСтрокаПеремещение.ОтбираемоеКоличество;
	//		Иначе
	//			Движение.КоличествоЕХО = ТекСтрокаПеремещение.ОтбираемоеКоличество * ТекСтрокаПеремещение.ОтбираемаяЕдиница.СодержитЕХО;
	//		КонецЕсли;
	//		//Движение.КоличествоЕХО = ТекСтрокаПеремещение.ОтбираемоеКоличество * ТекСтрокаПеремещение.ОтбираемаяЕдиница.СодержитЕХО;
	//		//Если ТекСтрокаПеремещение.ОтбираемаяЕдиница.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.Паллета Тогда
	//		//	Движение.НомерПаллета = ТекСтрокаПеремещение.НомерПаллета;
	//		//КонецЕсли;
	//		
	//		Если НаОснованииОтгрузки Тогда
	//			Движение = Движения.БудущиеПеремещения.Добавить();
	//			Движение.Период = Дата;
	//			Движение.ДокументОтгрузки = ДокументОтгрузки;
	//			Движение.НомерСтрокиПеремещения = ТекСтрокаПеремещение.НомерСтроки;
	//			Движение.Номенклатура = ТекСтрокаПеремещение.Номенклатура;
	//			Движение.РазмещаемаяЕдиница = ТекСтрокаПеремещение.РазмещаемаяЕдиница;
	//			Движение.РазмещаемоеКоличество = ТекСтрокаПеремещение.РазмещаемоеКоличество;
	//			Движение.ЯчейкаПланКуда = ТекСтрокаПеремещение.ЯчейкаПланКуда;
	//		КонецЕсли;
	//	КонецЦикла;
	//	
	//	//!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
	//	//тзПеремещение = Перемещение.Выгрузить();
	//	//тзПеремещение.Свернуть("ЯчейкаФактКуда");
	//	//// регистр СостояниеРезервовЯчеек
	//	//Для Каждого ТекСтрокаПеремещение Из тзПеремещение Цикл
	//	//	Движение = Движения.СостояниеРезервовЯчеек.Добавить();
	//	//	Движение.Период = Дата;
	//	//	Движение.Ячейка = ТекСтрокаПеремещение.ЯчейкаФактКуда;
	//	//	Движение.Заблокирована = Истина;
	//	//КонецЦикла;
	//Иначе
	//КонецЕсли;
   //Кабаченко_Смартис
//07_12_2015
//ФлагИсполнитель = Ложь;
//Для Каждого строкаИсполнители из Исполнители Цикл
//			Запрос = Новый Запрос;
//			Запрос.Текст = "ВЫБРАТЬ
//			               |	ЗаданиеНаРаботу.Ссылка
//			               |ИЗ
//			               |	Документ.ПеремещениеПоСкладу КАК ПеремещениеПоСкладу
//			               |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаданиеНаРаботу КАК ЗаданиеНаРаботу
//			               |		ПО ЗаданиеНаРаботу.ДокументОснование = ПеремещениеПоСкладу.Ссылка
//			               |ГДЕ
//			               |	ЗаданиеНаРаботу.Проведен = ИСТИНА
//			               |	И ЗаданиеНаРаботу.ПометкаУдаления = ЛОЖЬ
//			               |	И ПеремещениеПоСкладу.Ссылка = &ДокСсылка";
//			Запрос.УстановитьПараметр("ДокСсылка",ЭтотОбъект.Ссылка);
//			Результат = Запрос.Выполнить().Выгрузить();
//			Если Результат.Количество() > 0 Тогда
//			Для Каждого строкаРезультат из Результат Цикл
//				Если строкаРезультат.Ссылка.Исполнитель = строкаИсполнители.Работники Тогда
//				ФлагИсполнитель = Истина;
//				прервать;
//			Иначе 
//				ФлагИсполнитель = Ложь;
//				КонецЕсли;
//			КонецЦикла;
//			КонецЕсли;
//			Если ФлагИсполнитель = Ложь Тогда
//			ДокументЗаданиеНаРаботу = Документы.ЗаданиеНаРаботу.СоздатьДокумент();
//			ДокументЗаданиеНаРаботу.Дата = ТекущаяДата();
//			ДокументЗаданиеНаРаботу.Организация = Организация;                         
//			ДокументЗаданиеНаРаботу.ДокументОснование = ЭтотОбъект.Ссылка;
//			ДокументЗаданиеНаРаботу.ВидЗадания = Перечисления.ВидЗаданияНаРаботу.Перемещение;//Приемка;
//			//ДокументЗаданиеНаРаботу.ПоставщикПолучатель = Поставщик;
//			ДокументЗаданиеНаРаботу.Склад = Склад;
//			ДокументЗаданиеНаРаботу.Исполнитель = строкаИсполнители.Работники;
//			Для Каждого ТекстрокаПеремещение из Перемещение Цикл
//				НоваяСтрока = ДокументЗаданиеНаРаботу.Задание.Добавить();
//				//НоваяСтрока.ВидЯчейки = ТекстрокаПеремещение.ВидЯчейки;
//				НоваяСтрока.ЕдиницаИзмерения = ТекстрокаПеремещение.ЕдиницаХраненияОстатков;
////				НоваяСтрока.Зона = ТекстрокаПеремещение.Зона;
//				НоваяСтрока.Количество = ТекстрокаПеремещение.КоличествоКПеремещению;
//				НоваяСтрока.КоличествоФакт = ТекстрокаПеремещение.КоличествоФактическиПеремещенное;
//				НоваяСтрока.Номенклатура = ТекстрокаПеремещение.Номенклатура;
//				НоваяСтрока.НомерПаллета = ТекстрокаПеремещение.НомерПаллета;
//				НоваяСтрока.ЯчейкаПланКуда = ТекстрокаПеремещение.ЯчейкаПланКуда;
//				НоваяСтрока.ЯчейкаПлан = ТекстрокаПеремещение.ЯчейкаПланОткуда;

//			КонецЦикла;
//			ДокументЗаданиеНаРаботу.Записать(РежимЗаписиДокумента.Проведение);
//			КонецЕсли;
//		КонецЦикла;
	//КонецЕсли;
	//07_12_2015
	//Кабаченко_Смартис



КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт

	СтруктураМакетов = Новый Структура();
	СтруктураМакетов.Вставить("ЗаданиеНаТранспортировку", "Задание на транспортировку (пополнение)");
	//Коновалова 21022013 +
	СтруктураМакетов.Вставить("ИнформационныйЛистПаллета", "Информационный лист (паллета)");
	//Коновалова 21022013 -	
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьТаблицуПечатныхФорм()

Функция ПечатьЗаданияНаТранспортировку() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриемкаИРазмещение_ЗаданияНаТранспортировку";
	Макет = Документы.ПеремещениеПоСкладу.ПолучитьМакет("ЗаданиеНаТранспортировку");
	
	КС_ТЧ = Перемещение.Количество();
	КС_ПЛ = 16;
	КС_СЛ = 19;
	КСтр_Д = (КС_ТЧ - КС_ПЛ)/КС_СЛ;
	Ост = КСтр_Д - Цел(КСтр_Д);
	Если Ост = 0 Тогда
		КСтр = 1 +Цел(КСтр_Д);
	Иначе
		Если КСтр_Д < 0 Тогда 
			КСтр = Цел(КСтр_Д)+1;
		Иначе
			КСтр = Цел(КСтр_Д)+2;
		КонецЕсли;
	КонецЕсли;
	НомерСтр = 1;
	н=0;
	ИтогПаллет = 0;
	ИтогКоробок = 0;
	ИтогЕХО = 0;
	Для ф = НомерСтр по КСтр Цикл
		
		// Заголовок
		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.НомерСтраницы = НомерСтр;
		Область.Параметры.ДатаПечати = Формат(ТекущаяДата(),"ДЛФ=Д");
		Область.Параметры.ВремяПечати = Формат(ТекущаяДата(),"ДЛФ=В");
		
		Если ЗначениеЗаполнено(ДокументОтгрузки) ТОгда
			Область.Параметры.СтрокаНомера = " (пополнение) № " + ДокументОтгрузки.Номер + " / " + Номер; 
		Иначе
			Область.Параметры.СтрокаНомера = " № " + Номер; 
		КонецЕсли;	
			
		ТабДок.Вывести(Область);
		// Шапка
		Если НомерСтр = 1 ТОгда
			Шапка = Макет.ПолучитьОбласть("Шапка");
			Шапка.Параметры.Склад = Склад;
			Если ЗначениеЗаполнено(ДокументОтгрузки) ТОгда
				Шапка.Параметры.Дата = ДокументОтгрузки.Дата; 
			Иначе
				Шапка.Параметры.Дата = Дата; 
			КонецЕсли;	
			ТабДок.Вывести(Шапка);
		КонецЕсли;
		// Приемка
		Область = Макет.ПолучитьОбласть("ОтгрузкаШапка");
		ТабДок.Вывести(Область);
		ОбластьОтгрузка = Макет.ПолучитьОбласть("Отгрузка");
		ТаблицаОтбор = Перемещение.Выгрузить();
		ТаблицаОтбор.Сортировать("Номенклатура Возр"); //сортировка по алфавиту
		
		Если НомерСтр = 1 ТОгда
			Для к=н по н+15 Цикл
				Если н <= (ТаблицаОтбор.Количество()-1) Тогда
					ОбластьОтгрузка.Параметры.КодНоменклатура = ТаблицаОтбор[н].Номенклатура.Код;
					ОбластьОтгрузка.Параметры.Номенклатура = ТаблицаОтбор[н].Номенклатура;
					ОбластьОтгрузка.Параметры.КоличествоПаллет = ТаблицаОтбор[н].КоличествоФактическиПеремещенное;
					ОбластьОтгрузка.Параметры.НомерПалетта = ТаблицаОтбор[н].НомерПаллета;
					ОбластьОтгрузка.Параметры.ЯчейкаПлан = ТаблицаОтбор[н].ЯчейкаПланОткуда;
					//Коновалова 01062013 +
					Если ТаблицаОтбор[н].ЯчейкаПланОткуда <> ТаблицаОтбор[н].ЯчейкаФактОткуда ТОгда
						ОбластьОтгрузка.Параметры.ЯчейкаФакт = ТаблицаОтбор[н].ЯчейкаФактОткуда;
					Иначе
						ОбластьОтгрузка.Параметры.ЯчейкаФакт = "";
					КонецЕсли;	
					//Коновалова 01062013 -
					ОбластьОтгрузка.Параметры.ЯПланК = ТаблицаОтбор[н].ЯчейкаПланКуда;
					//Коновалова 01062013 +
					Если ТаблицаОтбор[н].ЯчейкаПланКуда <> ТаблицаОтбор[н].ЯчейкаФактКуда ТОгда
						ОбластьОтгрузка.Параметры.ЯФактК = ТаблицаОтбор[н].ЯчейкаФактКуда;
					Иначе
						ОбластьОтгрузка.Параметры.ЯФактК = "";
					КонецЕсли;	
					//Коновалова 01062013 -
					ТабДок.Вывести(ОбластьОтгрузка);
				КонецЕсли;
				н=н+1;
			КонецЦикла;
		Иначе	
			Для к=н по н+18 Цикл
				Если н <= (ТаблицаОтбор.Количество()-1) Тогда
					ОбластьОтгрузка.Параметры.КодНоменклатура = ТаблицаОтбор[н].Номенклатура.Код;
					ОбластьОтгрузка.Параметры.Номенклатура = ТаблицаОтбор[н].Номенклатура;
					ОбластьОтгрузка.Параметры.КоличествоПаллет = ТаблицаОтбор[н].КоличествоФактическиПеремещенное;
					ОбластьОтгрузка.Параметры.НомерПалетта = ТаблицаОтбор[н].НомерПаллета;
					ОбластьОтгрузка.Параметры.ЯчейкаПлан = ТаблицаОтбор[н].ЯчейкаПланОткуда;
					//Коновалова 01062013 +
					Если ТаблицаОтбор[н].ЯчейкаПланОткуда <> ТаблицаОтбор[н].ЯчейкаФактОткуда ТОгда
						ОбластьОтгрузка.Параметры.ЯчейкаФакт = ТаблицаОтбор[н].ЯчейкаФактОткуда;
					Иначе
						ОбластьОтгрузка.Параметры.ЯчейкаФакт = "";
					КонецЕсли;	
					//Коновалова 01062013 -
					ОбластьОтгрузка.Параметры.ЯПланК = ТаблицаОтбор[н].ЯчейкаПланКуда;
					//Коновалова 01062013 +
					Если ТаблицаОтбор[н].ЯчейкаПланКуда <> ТаблицаОтбор[н].ЯчейкаФактКуда ТОгда
						ОбластьОтгрузка.Параметры.ЯФактК = ТаблицаОтбор[н].ЯчейкаФактКуда;
					Иначе
						ОбластьОтгрузка.Параметры.ЯФактК = "";
					КонецЕсли;	
					//Коновалова 01062013 -
					ТабДок.Вывести(ОбластьОтгрузка);
				КонецЕсли;
				н=н+1;
			КонецЦикла;
		КонецЕсли;
		Если НомерСтр <> КСтр Тогда      
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтр = НомерСтр + 1;
	КонецЦикла;
	
		ОбластьИтого = Макет.ПолучитьОбласть("Итого");
		ОбластьИтого.Параметры.ИтогоПаллет = Перемещение.Итог("КоличествоФактическиПеремещенное"); 
		ТабДок.Вывести(ОбластьИтого);
		
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСправа = 2;
	
	Возврат ТабДок;
		
КонецФункции

#Если Клиент Тогда
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ИмяМакета = "ЗаданиеНаТранспортировку" Тогда
		ТабДокумент = ПечатьЗаданияНаТранспортировку();
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);
	//Коновалова 21022013 +	
	ИначеЕсли ИмяМакета = "ИнформационныйЛистПаллета" Тогда
		ТабДокумент = ПечатьИнформационныйЛистПаллета();
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);
	//Коновалова 21022013 -	
	КонецЕсли;

КонецПроцедуры // Печать()

//Коновалова 21022013 +
Функция ПечатьИнформационныйЛистПаллета() Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Инвентаризация_ИнформационныйЛистПаллета";
	Макет = Документы.ПеремещениеПоСкладу.ПолучитьМакет("ИнформационныйЛистПаллета");
	
	Область = Макет.ПолучитьОбласть("Область1");
	ТаблицаРазмещения = Перемещение.Выгрузить();
	ТаблицаРазмещения.Свернуть("Номенклатура,НомерПаллета,ЯчейкаФактОткуда,ЯчейкаФактКуда,РазмещаемаяЕдиница,РазмещаемоеКоличество");
	ТаблицаРазмещения.Колонки.Добавить("ВидЯчейки");
	Для каждого строк из ТаблицаРазмещения Цикл
		 строк.ВидЯчейки = ПолучитьВидЯчейки(строк.ЯчейкаФактКуда);
	КонецЦикла;	
	ТаблицаРазмещения.Колонки.Добавить("КолвоШтук");
	Для каждого строка из ТаблицаРазмещения Цикл
		Если Строка.РазмещаемаяЕдиница.ЕдиницаПоКлассификатору <> Справочники.КлассификаторЕдиницИзмерения.Паллета Тогда
			Если Строка.РазмещаемаяЕдиница.ЕдиницаПоКлассификатору = Справочники.КлассификаторЕдиницИзмерения.Коробка Тогда
				Строка.КолвоШтук = Строка.РазмещаемоеКоличество*ПолучитьИЕУ(строка.Номенклатура,Справочники.КлассификаторЕдиницИзмерения.Коробка);
			Иначе
				Строка.КолвоШтук = Строка.РазмещаемоеКоличество;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаРазмещения.Свернуть("Номенклатура,НомерПаллета,ЯчейкаФактОткуда,ЯчейкаФактКуда,ВидЯчейки","КолвоШтук");
	
	Для каждого стр из ТаблицаРазмещения Цикл
		Если (стр.ВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная И стр.НомерПаллета <> 0) ИЛИ (стр.ВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Общая И стр.НомерПаллета <> 0) Тогда
			Область.Параметры.Номер = Номер;
			Область.Параметры.Дата = Дата;
			//Область.Параметры.Поставщик = Поставщик;
			//Область.Параметры.ДатаПоступленияФакт = ДокументПоступления.Дата;
			Область.Параметры.НомерПаллета = стр.НомерПаллета;
			Область.Параметры.Номенклатура = стр.Номенклатура;
			Область.Параметры.КодНоменклатура = стр.Номенклатура.Код;
			Область.Параметры.КоличествоИЕУ = ПолучитьИЕУ(стр.Номенклатура,Справочники.КлассификаторЕдиницИзмерения.Паллета);
			//Область.Параметры.ЯчейкаПриемки = ЯчейкаПриемки;
			Область.Параметры.ЯчейкаОткуда = стр.ЯчейкаФактОткуда;
			Область.Параметры.ЯчейкаКуда = стр.ЯчейкаФактКуда;
			ТабДок.Вывести(Область);
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		//ИначеЕсли стр.ВидЯчейки = Перечисления.ВидыСкладскихЯчеек.Буферная И стр.НомерПаллета = 0 ТОгда
		//	Область.Параметры.Номер = Номер;
		//	Область.Параметры.Дата = Дата;
		//	//Область.Параметры.Поставщик = Поставщик;
		//	//Коновалова 18022013 +
		//	//Область.Параметры.ДатаПоступленияФакт = ДокументПоступления.Дата;
		//	//НайдСтрока = Приемка.Найти(стр.Номенклатура);
		//	//Область.Параметры.ДатаПоступленияФакт = ?(НайдСтрока<>Неопределено,НайдСтрока.ДокументОснование.Дата,"");
		//	//Коновалова 18022013 -
		//	Область.Параметры.НомерПаллета = стр.НомерПаллета;
		//	Область.Параметры.Номенклатура = стр.Номенклатура;
		//	Область.Параметры.КодНоменклатура = стр.Номенклатура.Код;
		//	Область.Параметры.КоличествоИЕУ = стр.КолвоШтук;
		//	Область.Параметры.ЯчейкаОткуда = стр.ЯчейкаФактОткуда;
		//	Область.Параметры.ЯчейкаКуда = стр.ЯчейкаФактКуда;
		//	ТабДок.Вывести(Область);
		//	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДок.ПолеСверху = 2;
	ТабДок.ПолеСлева = 2;
	ТабДок.ПолеСнизу = 2;
	ТабДок.ПолеСправа = 2;
	
	Возврат ТабДок;
	
КонецФункции      	
 #КонецЕсли

Функция ПолучитьВидЯчейки(Ячейка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СостояниеВидовЯчеекСрезПоследних.ВидЯчейки
	                      |ИЗ
	                      |	РегистрСведений.СостояниеВидовЯчеек.СрезПоследних(&ДатаКон, ) КАК СостояниеВидовЯчеекСрезПоследних
	                      |ГДЕ
	                      |	СостояниеВидовЯчеекСрезПоследних.Ячейка = &Ячейка");
						  
	Запрос.УстановитьПараметр("ДатаКон",Дата);					  
	Запрос.УстановитьПараметр("Ячейка",Ячейка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(Результат) ТОгда
		Возврат Результат[0].ВидЯчейки;
	Иначе
		Возврат Перечисления.ВидыСкладскихЯчеек.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПолучитьПризнакПополнения(номен)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА ПеремещениеПоСкладуПеремещение.РазмещаемаяЕдиница.СодержитЕХО = 0
	                      |			ТОГДА ПеремещениеПоСкладуПеремещение.РазмещаемоеКоличество
	                      |		ИНАЧЕ ПеремещениеПоСкладуПеремещение.РазмещаемоеКоличество * ПеремещениеПоСкладуПеремещение.РазмещаемаяЕдиница.СодержитЕХО
	                      |	КОНЕЦ КАК Поле1
	                      |ИЗ
	                      |	Документ.ПеремещениеПоСкладу.Перемещение КАК ПеремещениеПоСкладуПеремещение
	                      |ГДЕ
	                      |	ПеремещениеПоСкладуПеремещение.Номенклатура = &Номенклатура
	                      |	И ПеремещениеПоСкладуПеремещение.Ссылка.ДокументОтгрузки = &Ссылка");
						  
	Запрос.УстановитьПараметр("Номенклатура",номен);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(Результат) ТОгда
		 Возврат Истина;
	Иначе
		 Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКоличествоПеремещения(номен, ячейка)

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВЫБОР
	                      |		КОГДА ПеремещениеПоСкладуПеремещение.РазмещаемаяЕдиница.СодержитЕХО = 0
	                      |			ТОГДА ПеремещениеПоСкладуПеремещение.РазмещаемоеКоличество
	                      |		ИНАЧЕ ПеремещениеПоСкладуПеремещение.РазмещаемоеКоличество * ПеремещениеПоСкладуПеремещение.РазмещаемаяЕдиница.СодержитЕХО
	                      |	КОНЕЦ КАК Поле1,
	                      |	ПеремещениеПоСкладуПеремещение.Ссылка
	                      |ИЗ
	                      |	Документ.ПеремещениеПоСкладу.Перемещение КАК ПеремещениеПоСкладуПеремещение
	                      |ГДЕ
	                      |	ПеремещениеПоСкладуПеремещение.Номенклатура = &Номенклатура
	                      |	И ПеремещениеПоСкладуПеремещение.Ссылка.ДокументОтгрузки = &Ссылка
	                      |	И ПеремещениеПоСкладуПеремещение.ЯчейкаПланОткуда = &ЯчейкаПланОткуда");
						  
	Запрос.УстановитьПараметр("Номенклатура",номен);
	Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ЯчейкаПланОткуда",ячейка);
	Результат = Запрос.Выполнить().Выгрузить();
	
	СтруктураВозврата = Новый Структура("Количество, Ссылка");
	Если ЗначениеЗаполнено(Результат) ТОгда
		СтруктураВозврата.Вставить("Количество", Результат[0].Количество);
		СтруктураВозврата.Вставить("Ссылка", Ссылка);
	Иначе
		СтруктураВозврата.Вставить("Количество", 0);
		СтруктураВозврата.Вставить("Ссылка", Документы.ПеремещениеПоСкладу.ПустаяСсылка());
	КонецЕсли;	
		
	//Если ЗначениеЗаполнено(Результат) ТОгда
	//	 Возврат Результат[0].Количество;
	//Иначе
		 Возврат СтруктураВозврата;
	//КонецЕсли;
	
КонецФункции

Функция ПолучитьКоличествоЕХО(Номен,Ячейка)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток
	                      |ИЗ
	                      |	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
	                      |			&ДатаКон,
	                      |			Номенклатура = &Номенклатура
	                      |				И Склад = &Склад
	                      |				И Ячейка = &Ячейка) КАК РазмещениеТоваровНаСкладахОстатки");
						  
	Запрос.УстановитьПараметр("ДатаКон",Дата);					  
	Запрос.УстановитьПараметр("Номенклатура",Номен);					  
	Запрос.УстановитьПараметр("Склад",Склад);					  
	Запрос.УстановитьПараметр("Ячейка",Ячейка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(Результат) ТОгда
		Возврат Результат[0].КоличествоЕХООстаток;
	Иначе
		Возврат 0;
	КонецЕсли;
		
КонецФункции

Функция ПолучитьИЕУ(номен, единица)
	
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ЕдиницыИзмерения.СодержитЕХО
	                      |ИЗ
	                      |	Справочник.ЕдиницыИзмерения КАК ЕдиницыИзмерения
	                      |ГДЕ
	                      |	ЕдиницыИзмерения.Владелец = &Владелец
	                      |	И ЕдиницыИзмерения.ЕдиницаПоКлассификатору = &ЕдиницаПоКлассификатору");
	Запрос.УстановитьПараметр("Владелец",номен);
	Запрос.УстановитьПараметр("ЕдиницаПоКлассификатору",единица);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если ЗначениеЗаполнено(Результат) ТОгда
		Возврат Результат[0].СодержитЕХО;
	Иначе
		Возврат 0;
	КонецЕсли;
		
КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если  РольДоступна("РольГрузчик") ИЛи  РольДоступна("ЗаведующийСкладом") Тогда
		Иначе
		Если НЕ РольДоступна("АдминистраторЛогистики") И ЭтоИзменениеАдресаХраненияНоменклатуры И РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения И НЕ ПроведениеБезКонтролей Тогда
		Отказ = Истина;
		Сообщить("Запрещено отменять проведение документа созданного на основании изменения адреса хранения номенклатуры");
	ИначеЕсли НЕ РольДоступна("АдминистраторЛогистики") И ЭтоИзменениеАдресаХраненияНоменклатуры И РежимЗаписи = РежимЗаписиДокумента.Проведение И НЕ Проведен И НЕ ПроведениеБезКонтролей Тогда
		Отказ = Истина;
		Сообщить("Запрещено ручное проведение документа созданного на основании изменения адреса хранения номенклатуры");
	КонецЕсли;
	ДокументИзменен = Модифицированность();
	ЭтоПерепроведение = (Проведен = Истина И РежимЗаписи = РежимЗаписиДокумента.Проведение);
	
	Если НЕ Отказ И Статус <> Перечисления.СтатусыСкладскихПеремещений.Выполнение
		И НЕ ЭтоУстановкаСтатуса
		И НЕ УправлениеСкладскойЛогистикой.ДоступноПоРолям("ИзменениеЗавершенныхДокументов") Тогда
		
		Отказ = Истина;
		Сообщить("Запрещено изменение завершенных документов по логистике", СтатусСообщения.Важное);
	КонецЕсли;
	
	Если НЕ Отказ И Дата < Дата(2013, 03, 25) И НЕ РольДоступна("АдминистраторЛогистики") Тогда
		Отказ = Истина;
		Сообщить("Запрещено изменение документов по логистике оформленных до 25.03.2013", СтатусСообщения.Важное);
	КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура СформироватьЗадания() Экспорт
	НачатоеЗадание = НайтиНачатоеЗадание();
    Если НЕ ЗначениеЗаполнено(НачатоеЗадание) Тогда
        ДокументЗаданиеНаРаботу                     = Документы.ЗаданиеНаРаботу.СоздатьДокумент();
        ДокументЗаданиеНаРаботу.Дата                = ТекущаяДата();                         
        ДокументЗаданиеНаРаботу.ДокументОснование   = Строка(ДокументОтгрузки.Ссылка);
        ДокументЗаданиеНаРаботу.ВидЗадания          = "Перемещение";
        ДокументЗаданиеНаРаботу.Склад               = Склад.Наименование;
        ДокументЗаданиеНаРаботу.Комментарий			= Комментарий;
        ДокументЗаданиеНаРаботу.УИД                 = Ссылка.УникальныйИдентификатор();
        ДокументЗаданиеНаРаботу.НомерЗаказа         = Номер;
        //ДокументЗаданиеНаРаботу.ВремяНачалообработки = НачалоДня(ТекущаяДата());
        //ДокументЗаданиеНаРаботу.ВремяОкончанияОбработки = КонецДня(ТекущаяДата());
        Попытка
            ДокументЗаданиеНаРаботу.Записать(РежимЗаписиДокумента.Проведение);	
        Исключение
            Сообщить(ОписаниеОшибки());
            Возврат;
        КонецПопытки; 
        НачатоеЗадание = ДокументЗаданиеНаРаботу.Ссылка;
    КонецЕсли; 
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |	ПеремещениеПоСкладуПеремещение.Номенклатура КАК Номенклатура,
                   |	ПеремещениеПоСкладуПеремещение.НомерПаллета,
                   |	ПеремещениеПоСкладуПеремещение.ЕдиницаХраненияОстатков,
                   |	ПеремещениеПоСкладуПеремещение.КоличествоКПеремещению,
                   |	ПеремещениеПоСкладуПеремещение.КоличествоФактическиПеремещенное,
                   |	ПеремещениеПоСкладуПеремещение.ЯчейкаПланОткуда КАК ЯчейкаПланОткуда,
                   |	ПеремещениеПоСкладуПеремещение.ЯчейкаФактОткуда,
                   |	ПеремещениеПоСкладуПеремещение.ЯчейкаПланКуда,
                   |	ПеремещениеПоСкладуПеремещение.ЯчейкаФактКуда
                   |ИЗ
                   |	Документ.ПеремещениеПоСкладу.Перемещение КАК ПеремещениеПоСкладуПеремещение
                   |ГДЕ
                   |	ПеремещениеПоСкладуПеремещение.Ссылка = &Ссылка
                   |
                   |УПОРЯДОЧИТЬ ПО
                   |	ПеремещениеПоСкладуПеремещение.Номенклатура.Наименование";

   Запрос.УстановитьПараметр("Ссылка", Ссылка);
   выбМаршрутыРаботников = Запрос.Выполнить().Выбрать();
   
   ДокументЗаданиеНаРаботу = НачатоеЗадание.Ссылка.ПолучитьОбъект();
   ТЧ = ДокументЗаданиеНаРаботу.Задание.Выгрузить();
   ТЧ.Очистить(); 
   
   Пока выбМаршрутыРаботников.Следующий() Цикл
        Отбор = Новый Структура("УИД_Документа, КодНоменклатуры, ЯчейкаПлан",
                            Строка(Ссылка.УникальныйИдентификатор()),выбМаршрутыРаботников.Номенклатура.Код, 
                            Строка(выбМаршрутыРаботников.ЯчейкаПланОткуда));
        НайденыеСтроки = ДокументЗаданиеНаРаботу.Задание.НайтиСтроки(Отбор);
        Если НЕ ЗначениеЗаполнено(НайденыеСтроки) Тогда
            СтрокаТЧ                    = ТЧ.Добавить();
            СтрокаТЧ.ЕдиницаИзмерения   = выбМаршрутыРаботников.ЕдиницаХраненияОстатков.Наименование;
            СтрокаТЧ.Количество         = выбМаршрутыРаботников.КоличествоКПеремещению;
            СтрокаТЧ.КоличествоФакт     = выбМаршрутыРаботников.КоличествоФактическиПеремещенное;
			СтрокаТЧ.КодНоменклатуры	= выбМаршрутыРаботников.Номенклатура.Код;
			СтрокаТЧ.Номенклатура       = выбМаршрутыРаботников.Номенклатура;
            СтрокаТЧ.НомерПаллета       = выбМаршрутыРаботников.НомерПаллета;
            СтрокаТЧ.ЯчейкаПланКуда     = выбМаршрутыРаботников.ЯчейкаПланКуда;
    		СтрокаТЧ.ЯчейкаПлан         = выбМаршрутыРаботников.ЯчейкаПланОткуда;
            СтрокаТЧ.УИД_Документа      = Строка(Ссылка.УникальныйИдентификатор());
        КонецЕсли; 
    КонецЦикла;
    Для каждого Строка Из ТЧ Цикл
        НС = ДокументЗаданиеНаРаботу.Задание.Добавить();
    	ЗаполнитьЗначенияСвойств(НС,Строка);
    КонецЦикла; 
    Попытка
        ДокументЗаданиеНаРаботу.Записать(РежимЗаписиДокумента.Проведение);
        Сообщить("Создано/обновлено задание "+ДокументЗаданиеНаРаботу);
    Исключение
        Сообщить(ОписаниеОшибки());
    КонецПопытки;
КонецПроцедуры

Функция НайтиНачатоеЗадание()
     Запрос = Новый Запрос;
      Запрос.Текст = 
        "ВЫБРАТЬ
        |   ЗаданиеНаРаботу.Ссылка
        |ИЗ
        |   Документ.ЗаданиеНаРаботу КАК ЗаданиеНаРаботу
        |ГДЕ
        |   ЗаданиеНаРаботу.ПометкаУдаления = ЛОЖЬ
        |   И ЗаданиеНаРаботу.УИД = &УИД";
            
    Запрос.УстановитьПараметр("УИД", Строка(Ссылка.УникальныйИдентификатор()));
    
    Выборка = Запрос.Выполнить().Выбрать();	
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Ссылка;
    Иначе
        Возврат Неопределено;
    КонецЕсли; 
    
    
КонецФункции

Процедура ПриЗаписи(Отказ)
    Если НЕ Отказ Тогда
        СформироватьЗадания();	
    КонецЕсли;
КонецПроцедуры

//Ищет строку в таблице с таким же как и в искомой Номером паллета и такой же номенклатурой и если находит 
//то это возврат остатка в буфер и его можно пропустить
Функция ПроверкаНаВозвратОстатка(Строка, ВсяТаблица)
    Отбор = Новый Структура;
    Отбор.Вставить("Номенклатура",Строка.Номенклатура);
    Отбор.Вставить("НомерПаллета",Строка.НомерПаллета);
    НайденныеСтроки = ВсяТаблица.НайтиСтроки(Отбор);
    Для каждого Нстрока Из НайденныеСтроки Цикл
        //Здесь проверяем не является ли данная строка искомой же, т.к. она тоже есть в таблице
        Если Нстрока = Строка Тогда
            Продолжить;
        Иначе
        	Возврат Истина;
        КонецЕсли; 
    КонецЦикла; 
	Возврат Ложь;
КонецФункции
 
ПроведениеБезКонтролей = Ложь;
ЭтоУстановкаСтатуса = Ложь;