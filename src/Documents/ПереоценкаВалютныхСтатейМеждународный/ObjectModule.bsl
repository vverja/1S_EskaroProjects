Перем мУдалятьДвижения;

Перем мВалютаРегламентированногоУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	МеждународныйОстатки.Счет,
	               |	МеждународныйОстатки.Субконто1,
	               |	МеждународныйОстатки.Субконто2,
	               |	МеждународныйОстатки.Субконто3,
	               |	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстатокДт) КАК ВалютнаяСуммаОстатокДт,
	               |	СУММА(МеждународныйОстатки.ВалютнаяСуммаОстатокКт) КАК ВалютнаяСуммаОстатокКт,
	               |	СУММА(МеждународныйОстатки.СуммаОстатокДт) КАК СуммаОстатокДт,
	               |	СУММА(МеждународныйОстатки.СуммаОстатокКт) КАК СуммаОстатокКт,
	               |	МеждународныйОстатки.Валюта
	               |ИЗ
	               |	РегистрБухгалтерии.Международный.Остатки(&ПериодКонец, Счет.Валютный = &Истина, , Организация = &Организация) КАК МеждународныйОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	МеждународныйОстатки.Счет,
	               |	МеждународныйОстатки.Субконто1,
	               |	МеждународныйОстатки.Субконто2,
	               |	МеждународныйОстатки.Субконто3,
	               |	МеждународныйОстатки.Валюта";
	
	Запрос.УстановитьПараметр("ПериодКонец", Новый Граница(КонецМесяца(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Истина", Истина);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ ЗначениеЗаполнено(Выборка.Валюта) Тогда
			Продолжить;
		КонецЕсли;

		СуммаЕсть = Выборка.СуммаОстатокДт - Выборка.СуммаОстатокКт;
		
		Попытка
			Если глЗначениеПеременной("ВалютаМеждународногоУчета") = мВалютаРегламентированногоУчета Тогда
				Если Выборка.Валюта = мВалютаРегламентированногоУчета Тогда
					Множитель = 1;
				Иначе
					Множитель = МодульВалютногоУчета.ПолучитьКурсВалюты(Выборка.Валюта, Дата).Курс / МодульВалютногоУчета.ПолучитьКурсВалюты(Выборка.Валюта, Дата).Кратность;
				КонецЕсли;
			Иначе
				Если Выборка.Валюта = мВалютаРегламентированногоУчета Тогда
					Множитель = 1/(МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаМеждународногоУчета"), Дата).Курс / МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаМеждународногоУчета"), Дата).Кратность);
				Иначе
					Множитель = (МодульВалютногоУчета.ПолучитьКурсВалюты(Выборка.Валюта, Дата).Курс / МодульВалютногоУчета.ПолучитьКурсВалюты(Выборка.Валюта, Дата).Кратность) / (МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаМеждународногоУчета"), Дата).Курс / МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаМеждународногоУчета"), Дата).Кратность);
				КонецЕсли;
			КонецЕсли;
		Исключение
			Сообщить("Обнаружен нулевой курс валюты!");
			Отказ = Истина;
			Прервать;
		КонецПопытки;
		
		СуммаДолжноБыть = (Выборка.ВалютнаяСуммаОстатокДт - Выборка.ВалютнаяСуммаОстатокКт) * Множитель;
		СуммаРазница = Окр((СуммаДолжноБыть - СуммаЕсть),2);
		
		Если СуммаРазница <> 0 Тогда
			// регистр Международный 
			Движение = Движения.Международный.Добавить();
			Движение.Период = Дата;
			Движение.Организация = Организация;
			
			СрезСведений = РегистрыСведений.СчетаСОсобымПорядкомПереоценкиМеждународный.ПолучитьПоследнее(Дата, Новый Структура("Счет", Выборка.Счет));
			
			Если СуммаРазница > 0 Тогда
				
				Если НЕ ЗначениеЗаполнено(СрезСведений.СчетДоходовОтКурсовыхРазниц) Тогда
					Движение.СчетКт = ПланыСчетов.Международный.ДоходОтОперационнойКурсовойРазницы;
					Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиДоходов] = СтатьяДоходовОтКурсовыхРазниц;
				Иначе
					Движение.СчетКт = СрезСведений.СчетДоходовОтКурсовыхРазниц;
					Для Ном = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
						Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[Ном-1].ВидСубконто] = СрезСведений["СубконтоДоходов" + Ном];
					КонецЦикла;
				КонецЕсли;
				
				Движение.СчетДт = Выборка.Счет;
				Движение.ВалютаДт = Выборка.Валюта;
				Для Ном = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[Ном-1].ВидСубконто] = Выборка["Субконто" + Ном];
				КонецЦикла;
				
			Иначе
				
				СуммаРазница = - СуммаРазница;  // сумма в проводке должна быть всегда положительной
				Если НЕ ЗначениеЗаполнено(СрезСведений.СчетРасходовОтКурсовыхРазниц) Тогда
					Движение.СчетДт = ПланыСчетов.Международный.РасходыОтОперационнойКурсовойРазницы;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиЗатрат] = СтатьяРасходовОтКурсовыхРазниц;
				Иначе
					Движение.СчетДт = СрезСведений.СчетРасходовОтКурсовыхРазниц;
					Для Ном = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
						Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[Ном-1].ВидСубконто] = СрезСведений["СубконтоРасходов" + Ном];
					КонецЦикла;
				КонецЕсли;

				Движение.СчетКт = Выборка.Счет;
				Движение.ВалютаКт = Выборка.Валюта;
				Для Ном = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[Ном-1].ВидСубконто] = Выборка["Субконто" + Ном];
				КонецЦикла;
			КонецЕсли;
			
			Движение.Сумма = СуммаРазница;
			Движение.Содержание = "Переоценка валютных статей";
			Движение.НомерЖурнала = "Рег";
		КонецЕсли;
	КонецЦикла;

	Движения.Международный.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

