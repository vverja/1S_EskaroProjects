Перем мУдалятьДвижения;

 // Выполняет движения по регистрам бюджетирования.
 //
 Процедура ДвиженияПоРегистрам()
	 
	 Запрос=Новый Запрос;
	 Запрос.Текст="ВЫБРАТЬ
	 |	БюджетированиеОстатки.Счет,
	 |	БюджетированиеОстатки.Субконто1,
	 |	БюджетированиеОстатки.Субконто2,
	 |	БюджетированиеОстатки.Субконто3,
	 |	ДанныеСчет.НаименованиеСубконто1,
	 |	ДанныеСчет.НаименованиеСубконто2,
	 |	ДанныеСчет.НаименованиеСубконто3,
	 |	БюджетированиеОстатки.Валюта,
	 |	БюджетированиеОстатки.СуммаУпрОстатокДт,
	 |	БюджетированиеОстатки.СуммаУпрОстатокКт,
	 |	БюджетированиеОстатки.ВалютнаяСуммаОстатокДт,
	 |	БюджетированиеОстатки.ВалютнаяСуммаОстатокКт,
	 |	БюджетированиеОстатки.СуммаСценарияОстатокДт,
	 |	БюджетированиеОстатки.СуммаСценарияОстатокКт,
	 |	БюджетированиеОстатки.Счет.Вид КАК ВидСчета,
	  |	БюджетированиеОстатки.Счет.Валютный КАК Валютный,
	 |	КурсыВалютыОстатка.Курс КАК КурсОстатка,
	 |	КурсыВалютыОстатка.Кратность КАК КратностьОстатка,
	 |	КурсыВалютыСценария.Курс КАК КурсСценария,
	 |	КурсыВалютыСценария.Кратность КАК КратностьСценария,
	 |	КурсыВалютыУпрУчета.Курс КАК КурсУпрУчета,
	 |	КурсыВалютыУпрУчета.Кратность КАК КратностьУпрУчета
	 |ИЗ
	 |	РегистрБухгалтерии.Бюджетирование.Остатки(&ДатаПереоценки, Счет.Валютный = ИСТИНА, , Сценарий = &Сценарий) КАК БюджетированиеОстатки
	 |ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	 |			Бюджетирование.Ссылка КАК Счет,
	 |			Бюджетирование.Валютный КАК Валютный,
	 |			Бюджетирование.Количественный КАК Количественный,
	 |			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	 |			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	 |			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	 |		ИЗ
	 |			ПланСчетов.Бюджетирование КАК Бюджетирование
	 |				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	 |				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	 |				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	 |				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	 |				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	 |				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчет
	 |		ПО БюджетированиеОстатки.Счет = ДанныеСчет.Счет";
	 Если НЕ Сценарий.ИспользоватьКурсыСценария Тогда
		 Запрос.Текст=Запрос.Текст+"
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПереоценки, ) КАК КурсыВалютыОстатка
		 |		ПО БюджетированиеОстатки.Валюта = КурсыВалютыОстатка.Валюта
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПереоценки, Валюта = &ВалютаУпрУчета) КАК КурсыВалютыУпрУчета
		 |		ПО (ИСТИНА)
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПереоценки, Валюта = &ВалютаСценария) КАК КурсыВалютыСценария
		 |		ПО (ИСТИНА)";
	 Иначе
		 Запрос.Текст=Запрос.Текст+"
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютПоСценариям.СрезПоследних(&ДатаПереоценки,Сценарий=&Сценарий ) КАК КурсыВалютыОстатка
		 |		ПО БюджетированиеОстатки.Валюта = КурсыВалютыОстатка.Валюта
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютПоСценариям.СрезПоследних(&ДатаПереоценки, Валюта = &ВалютаУпрУчета И Сценарий=&Сценарий) КАК КурсыВалютыУпрУчета
		 |		ПО (ИСТИНА)
		 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютПоСценариям.СрезПоследних(&ДатаПереоценки, Валюта = &ВалютаСценария И Сценарий=&Сценарий) КАК КурсыВалютыСценария
		 |		ПО (ИСТИНА)";
		 
	 КонецЕсли;
				   
	ВалютаУпрУчета=глЗначениеПеременной("ВалютаУправленческогоУчета");
	ВалютаСценария=Сценарий.Валюта;
	 
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	Запрос.УстановитьПараметр("ДатаПереоценки", ДатаПереоценки);
	Запрос.УстановитьПараметр("ВалютаУпрУчета", ВалютаУпрУчета);
	Запрос.УстановитьПараметр("ВалютаСценария", ВалютаСценария);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ВидыСубконтоСчет=СчетОтнесенияКурсовыхРазниц.ВидыСубконто;
	ВалютныйСчетОтнесения=СчетОтнесенияКурсовыхРазниц.Валютный;

	
	Обороты=Движения.ОборотыБюджетов;
	ТабОбороты=Обороты.Выгрузить();
	ТабОбороты.Очистить();
	
	Пока Выборка.Следующий() Цикл
		
		СуммаУпрРазница=0;
		СуммаСценарияРазница=0;
		
		Если НЕ ЗначениеЗаполнено(Выборка.Валюта) ИЛИ (Выборка.Валюта=ВалютаСценария И Выборка.Валюта=ВалютаУпрУчета) Тогда
			Продолжить;
		КонецЕсли;
		
		ВалютнаяСуммаТек=Выборка.ВалютнаяСуммаОстатокДт-Выборка.ВалютнаяСуммаОстатокКт;
		
		Если Не (Выборка.Валюта=ВалютаСценария ИЛИ НЕ ЗначениеЗаполнено(Сценарий)) Тогда
			
			Если Выборка.КурсСценария=0 ИЛИ Выборка.КратностьОстатка=0 Тогда
				Сообщить("При пересчете из валюты в валюту обнаружен нулевой курс.");
				Продолжить;
			Иначе
				
				СуммаСценарияТек=Выборка.СуммаСценарияОстатокДт-Выборка.СуммаСценарияОстатокКт;
				СуммаСценарияНов=Окр((ВалютнаяСуммаТек * Выборка.КурсОстатка * Выборка.КратностьСценария) / (Выборка.КурсСценария * Выборка.КратностьОстатка), 2);
			КонецЕсли;	
			
			СуммаСценарияРазница=СуммаСценарияНов-СуммаСценарияТек;
			
		КонецЕсли;
		
		Если Не Выборка.Валюта=ВалютаУпрУчета Тогда
			
			Если Выборка.КурсУпрУчета=0 ИЛИ Выборка.КратностьОстатка=0 Тогда
				Сообщить("При пересчете из валюты в валюту обнаружен нулевой курс.");
				Продолжить;
			Иначе	
				СуммаУпрТек=Выборка.СуммаУпрОстатокДт-Выборка.СуммаУпрОстатокКт;
				СуммаУпрНов=Окр((ВалютнаяСуммаТек * Выборка.КурсОстатка * Выборка.КратностьУпрУчета) / (Выборка.КурсУпрУчета * Выборка.КратностьОстатка), 2);
			КонецЕсли;	
			
			СуммаУпрРазница=СуммаУпрНов-СуммаУпрТек;
			
		КонецЕсли;
		
		Если НЕ (СуммаУпрРазница=0 И СуммаСценарияРазница=0) Тогда
			
			// регистр Бюджетирование 
			
			Движение = Движения.Бюджетирование.Добавить();
			Движение.Период = ДатаПереоценки;
			Движение.Сценарий=Сценарий;
			
			Если Выборка.ВидСчета=ВидСчета.Активный 
				ИЛИ Выборка.ВидСчета=ВидСчета.АктивноПассивный Тогда
				
				Движение.СчетДт = Выборка.Счет;
				Для Ном = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[Ном-1].ВидСубконто] = Выборка["Субконто" + Ном];
				КонецЦикла;
				
				Движение.СчетКт=СчетОтнесенияКурсовыхРазниц;
				Если ВалютныйСчетОтнесения Тогда
					Движение.ВалютаКт=Выборка.Валюта;
				КонецЕсли;
				
				Для Ном=1 по ВидыСубконтоСчет.Количество() Цикл
					
					Если ВидыСубконтоСчет[Ном-1].ВидСубконто.Наименование=Выборка.НаименованиеСубконто1 Тогда
						Движение.СубконтоДт[ВидыСубконтоСчет[Ном-1].ВидСубконто]=Выборка.Субконто1;
					ИначеЕсли ВидыСубконтоСчет[Ном-1].ВидСубконто.Наименование=Выборка.НаименованиеСубконто2 Тогда
						Движение.СубконтоДт[ВидыСубконтоСчет[Ном-1].ВидСубконто]=Выборка.Субконто2;
					ИначеЕсли ВидыСубконтоСчет[Ном-1].ВидСубконто.Наименование=Выборка.НаименованиеСубконто3 Тогда
						Движение.СубконтоДт[ВидыСубконтоСчет[Ном-1].ВидСубконто]=Выборка.Субконто3;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Движение.СуммаУпр = СуммаУпрРазница;
				Движение.СуммаСценария = СуммаСценарияРазница;
				
				Если Выборка.Валютный Тогда
					Движение.ВалютаДт=Выборка.Валюта;
				КонецЕсли;
				
			Иначе
				
				Движение.СчетКт = Выборка.Счет;
				
				Для Ном = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[Ном-1].ВидСубконто] = Выборка["Субконто" + Ном];
				КонецЦикла;
				
				Движение.СчетДт=СчетОтнесенияКурсовыхРазниц;
				
				Если ВалютныйСчетОтнесения Тогда
					Движение.ВалютаДт=Выборка.Валюта;
				КонецЕсли;
				
				Для Ном=1 по ВидыСубконтоСчет.Количество() Цикл
					
					Если ВидыСубконтоСчет[Ном-1].ВидСубконто.Наименование=Выборка.НаименованиеСубконто1 Тогда
						Движение.СубконтоДт[ВидыСубконтоСчет[Ном-1].ВидСубконто]=Выборка.Субконто1;
					ИначеЕсли ВидыСубконтоСчет[Ном-1].ВидСубконто.Наименование=Выборка.НаименованиеСубконто2 Тогда
						Движение.СубконтоДт[ВидыСубконтоСчет[Ном-1].ВидСубконто]=Выборка.Субконто2;
					ИначеЕсли ВидыСубконтоСчет[Ном-1].ВидСубконто.Наименование=Выборка.НаименованиеСубконто3 Тогда
						Движение.СубконтоДт[ВидыСубконтоСчет[Ном-1].ВидСубконто]=Выборка.Субконто3;
						
					КонецЕсли;
					
				КонецЦикла;
				
				Движение.СуммаУпр = СуммаУпрРазница*(-1);
				Движение.СуммаСценария = СуммаСценарияРазница*(-1);
				
				Если Выборка.Валютный Тогда
					Движение.ВалютаКт=Выборка.Валюта;
				КонецЕсли;
				
			КонецЕсли;	
			
			Движение.СтатьяОборотов=СтатьяОборотов;
			
			// По регистру "Обороты бюджетов";
			
			СтрокаОборот=ТабОбороты.Добавить();
			СтрокаОборот.Сценарий=Сценарий;
			СтрокаОборот.СтатьяОборотов=СтатьяОборотов;
			
			Для Ном=1 по 3 цикл
				
				Если Выборка["НаименованиеСубконто"+Ном]="ЦФО" Тогда
					СтрокаОборот.ЦФО=Выборка["Субконто" + Ном];
				ИначеЕсли Выборка["НаименованиеСубконто"+Ном]="Проекты" Тогда
					СтрокаОборот.Проект=Выборка["Субконто" + Ном];
				ИначеЕсли Выборка["НаименованиеСубконто"+Ном]="Контрагенты" Тогда
					СтрокаОборот.Контрагент=Выборка["Субконто" + Ном];
				ИначеЕсли Выборка["НаименованиеСубконто"+Ном]="Номенклатура" Тогда
					СтрокаОборот.Номенклатура=Выборка["Субконто" + Ном];
				КонецЕсли;
				
			КонецЦикла;
			
			СтрокаОборот.СуммаУпр=СуммаУпрРазница;
			СтрокаОборот.СуммаСценария=СуммаСценарияРазница;
			
			СтрокаОборот.Валюта=ВалютаУпрУчета;
			СтрокаОборот.ВалютнаяСумма=СуммаУпрРазница;
			
			СтрокаОборот.Период=ДатаПереоценки;
			СтрокаОборот.Активность=Истина;
							
		КонецЕсли;
		
	КонецЦикла;
	
	Движения.Бюджетирование.Записать();
	
	Обороты.мТаблицаДвижений=ТабОбороты;
	Обороты.ВыполнитьДвижения();
	 
КонецПроцедуры // ДвиженияПоРегистрам()


Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(ДатаПереоценки) Тогда
		
		Сообщить("Не указана дата переоценки.");
		Отказ=Истина;
		Возврат;
		
	ИначеЕсли НЕ ЗначениеЗаполнено(СчетОтнесенияКурсовыхРазниц) Тогда
		
		Сообщить("Не указан счет отнесения курсовых разниц.");
		Отказ=Истина;
		Возврат;
		
	Иначе	
		
		ДвиженияПоРегистрам();
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью





