Перем мУдалятьДвижения;
Перем мВалютаРегламентированногоУчета Экспорт;
//Смартис Лиманчук начало 24.05.2012
Перем мПостроительОтчета Экспорт;
Перем мПериод1 Экспорт, мПериод2 Экспорт, мПериод3 Экспорт;
//Смартис Лиманчук окончание 24.05.2012

//Коновалова 30102013 +
Перем СтруктураПараметровЗагрузки Экспорт;
//Коновалова 30102013 -

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой
//
// Возвращаемое значение:
//  Табличный документ - печатная форма
//
Функция ПечатьПланаПродаж()
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("ВедениеУчетаПоПроектам", УправлениеПроектами.ВедениеУчетаПоПроектам());

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПланПродаж.Номер КАК Номер,
	|	ПланПродаж.Дата КАК Дата,
	|	NULL КАК Организация,
	|	ПланПродаж.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(ПланПродаж.Подразделение) КАК ПодразделениеПредставление,
	|	ПланПродаж.Сценарий КАК Сценарий,
	|	ПРЕДСТАВЛЕНИЕ(ПланПродаж.Сценарий) КАК СценарийПредставление,
	|	ВЫБОР
	|		КОГДА &ВедениеУчетаПоПроектам = ИСТИНА
	|			ТОГДА ПланПродаж.Проект
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК Проект,
	|	ВЫБОР
	|		КОГДА &ВедениеУчетаПоПроектам = ИСТИНА
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(ПланПродаж.Проект)
	|		ИНАЧЕ NULL
	|	КОНЕЦ КАК ПроектПредставление,
	|	ПланПродаж.Сценарий.Периодичность КАК Периодичность,
	|	ПРЕДСТАВЛЕНИЕ(ПланПродаж.Сценарий.Периодичность) КАК ПериодичностьПредставление,
	|	ПланПродаж.ДатаПланирования КАК ДатаПланирования,
	|	ПланПродаж.УчитыватьНДС КАК УчитыватьНДС,
	|	ПланПродаж.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПланПродаж.Ответственный КАК Ответственный,
	|	ПРЕДСТАВЛЕНИЕ(ПланПродаж.Ответственный) КАК ОтветственныйПредставление,
	|	ПланПродаж.СоставПлана.(
	|		НомерСтроки КАК НомерСтроки,
	|		Контрагент КАК Контрагент,
	|		Договор КАК Договор,
	|		Номенклатура КАК Номенклатура,
	|		ВЫБОР
	|			КОГДА ПланПродаж.СоставПлана.Номенклатура.НаименованиеПолное ЕСТЬ NULL 
	|				ТОГДА ПланПродаж.СоставПлана.Номенклатура.Наименование
	|			ИНАЧЕ ВЫБОР
	|					КОГДА (ВЫРАЗИТЬ(ПланПродаж.СоставПлана.Номенклатура.НаименованиеПолное КАК СТРОКА(1000))) = """"
	|						ТОГДА ПланПродаж.СоставПлана.Номенклатура.Наименование
	|					ИНАЧЕ ПланПродаж.СоставПлана.Номенклатура.НаименованиеПолное
	|				КОНЕЦ
	|		КОНЕЦ КАК НоменклатураПредставление,
	|		ХарактеристикаНоменклатуры КАК Характеристика,
	|		NULL КАК Серия,
	|		Заказ КАК Заказ,
	|		Заказ.Номер КАК ЗаказНомер,
	|		Заказ.Дата КАК ЗаказДата,
	|		Количество,
	|		ПРЕДСТАВЛЕНИЕ(ПланПродаж.СоставПлана.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
	|		Цена,
	|		Сумма,
	|		СуммаНДС
	|	)
	|ИЗ
	|	Документ.ПланПродаж КАК ПланПродаж
	|ГДЕ
	|	ПланПродаж.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСоставПлана = Шапка.СоставПлана.Выбрать();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПланПродаж_ПланПродаж";
	Макет = ПолучитьМакет("ПланПродаж");

	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
	ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, "План продаж");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	
	ДатаНачала = Шапка.ДатаПланирования;
	ДатаОкончания = Шапка.ДатаПланирования;
	УправлениеПланированием.ВыровнятьПериод(ДатаНачала, ДатаОкончания, Шапка.Периодичность);

	ОбластьМакета.Параметры.ПериодПланирования = ПредставлениеПериода(ДатаНачала, ДатаОкончания, "ФП=Истина");
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ТабДокумент.Вывести(ОбластьМакета);

	ОбластьСтроки = Макет.ПолучитьОбласть("Строка");
	ВыборкаСоставПлана = Шапка.СоставПлана.Выбрать();
	Пока ВыборкаСоставПлана.Следующий() Цикл
		
		ОбластьСтроки.Параметры.Заполнить(ВыборкаСоставПлана);
		ОбластьСтроки.Параметры.НоменклатураПредставление = ВыборкаСоставПлана.НоменклатураПредставление + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаСоставПлана);
		Если НЕ ЗначениеЗаполнено(ВыборкаСоставПлана.Заказ) Тогда
			ОбластьСтроки.Параметры.ЗаказПредставление = "";
		Иначе
			ОбластьСтроки.Параметры.ЗаказПредставление = ВыборкаСоставПлана.ЗаказНомер + " от " + Формат(ВыборкаСоставПлана.ЗаказДата, "ДФ=dd.MM.yyyy");
		КонецЕсли;
		ОбластьСтроки.Параметры.Всего = ВыборкаСоставПлана.Сумма + ?(Шапка.СуммаВключаетНДС = Истина, 0, ВыборкаСоставПлана.СуммаНДС);

		ТабДокумент.Вывести(ОбластьСтроки);
		
	КонецЦикла;

	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ОтветственныйПредставление = "/" + Шапка.ОтветственныйПредставление + "/";
	ОбластьМакета.Параметры.ИтогоВсего = СоставПлана.Итог("Сумма") + ?(Шапка.СуммаВключаетНДС = Истина, 0, СоставПлана.Итог("СуммаНДС"));
	ОбластьМакета.Параметры.ИтогоСтоимость = СоставПлана.Итог("Сумма");
	ТабДокумент.Вывести(ОбластьМакета);

	Возврат ТабДокумент;

КонецФункции // ПечатьПланаПродаж()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли; 
	
	Если НЕ ЗначениеЗаполнено(Сценарий) Тогда
		Сообщить("Не указан сценарий планирования!");
		Возврат;
	КонецЕсли;
	
	Если ИмяМакета = "ПланПродаж" Тогда
		// Получить экземпляр документа на печать
		ТабДокумент = ПечатьПланаПродаж();
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ПланПродаж", "План продаж");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

//Смартис Лиманчук начало 22.05.2012
Процедура Инициализация() Экспорт

	мПостроительОтчета = Новый ПостроительОтчета;
				мПостроительОтчета.Текст= "ВЫБРАТЬ
				                          |	ПланФакт.Номенклатура КАК Номенклатура,
				                          |	ПланФакт.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				                          |	ПланФакт.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
				                          |	ПланФакт.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
				                          |	0 КАК Количество,
				                          |	ВЫБОР
				                          |		КОГДА ПланФакт.КоличествоФакт1 + ПланФакт.КоличествоФакт2 + ПланФакт.КоличествоФакт3 > 0
				                          |			ТОГДА (ПланФакт.СтоимостьФакт1 + ПланФакт.СтоимостьФакт2 + ПланФакт.СтоимостьФакт3) / (ПланФакт.КоличествоФакт1 + ПланФакт.КоличествоФакт2 + ПланФакт.КоличествоФакт3)
				                          |		ИНАЧЕ ЕСТЬNULL(Цены.ЦенаЕвро, 0)
				                          |	КОНЕЦ КАК Цена,
				                          |	0 КАК Сумма,
				                          |	ПланФакт.Номенклатура.СтавкаНДС КАК СтавкаНДС,
				                          |	0 КАК СуммаНДС,
				                          |	NULL КАК Заказ,
				                          |	&ДатаПланирования КАК Период,
				                          |	ПланФакт.Контрагент КАК Контрагент,
				                          |	NULL КАК Договор,
				                          |	NULL КАК Источник,
				                          |	NULL КАК ВариантРаспределения,
				                          |	ПланФакт.КоличествоПлан1 КАК План1,
				                          |	ПланФакт.КоличествоПлан2 КАК План2,
				                          |	ПланФакт.КоличествоПлан3 КАК План3,
				                          |	ПланФакт.КоличествоФакт1 КАК Факт1,
				                          |	ПланФакт.КоличествоФакт2 КАК Факт2,
				                          |	ПланФакт.КоличествоФакт3 КАК Факт3,
				                          |	ПланФакт.СтоимостьФакт1 КАК СуммаФакт1,
				                          |	ПланФакт.СтоимостьФакт2 КАК СуммаФакт2,
				                          |	ПланФакт.СтоимостьФакт3 КАК СуммаФакт3,
				                          |	ПланФакт.Остаток,
				                          |	ПланФакт.КоличествоПланЗаказ1 КАК Заказ1,
				                          |	ПланФакт.КоличествоПланЗаказ2 КАК Заказ2,
				                          |	ПланФакт.КоличествоПланЗаказ3 КАК Заказ3,
				                          |	ПланФакт.Проект КАК Проекты,
				                          |	ПланФакт.Подразделение КАК Подразделение
				                          |ИЗ
				                          |	(ВЫБРАТЬ
				                          |		ВложенныйЗапрос.Номенклатура КАК Номенклатура,
				                          |		ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				                          |		ВложенныйЗапрос.Контрагент КАК Контрагент,
				                          |		СУММА(ВложенныйЗапрос.КоличествоПлан1) КАК КоличествоПлан1,
				                          |		СУММА(ВложенныйЗапрос.КоличествоПлан2) КАК КоличествоПлан2,
				                          |		СУММА(ВложенныйЗапрос.КоличествоПлан3) КАК КоличествоПлан3,
				                          |		СУММА(ВложенныйЗапрос.КоличествоФакт1) КАК КоличествоФакт1,
				                          |		СУММА(ВложенныйЗапрос.КоличествоФакт2) КАК КоличествоФакт2,
				                          |		СУММА(ВложенныйЗапрос.КоличествоФакт3) КАК КоличествоФакт3,
				                          |		СУММА(ВложенныйЗапрос.СтоимостьФакт1) КАК СтоимостьФакт1,
				                          |		СУММА(ВложенныйЗапрос.СтоимостьФакт2) КАК СтоимостьФакт2,
				                          |		СУММА(ВложенныйЗапрос.СтоимостьФакт3) КАК СтоимостьФакт3,
				                          |		МАКСИМУМ(ВложенныйЗапрос.Остаток) КАК Остаток,
				                          |		СУММА(ВложенныйЗапрос.КоличествоПланЗаказ1) КАК КоличествоПланЗаказ1,
				                          |		СУММА(ВложенныйЗапрос.КоличествоПланЗаказ2) КАК КоличествоПланЗаказ2,
				                          |		СУММА(ВложенныйЗапрос.КоличествоПланЗаказ3) КАК КоличествоПланЗаказ3,
				                          |		ВложенныйЗапрос.Проект КАК Проект,
				                          |		ВложенныйЗапрос.Подразделение КАК Подразделение
				                          |	ИЗ
				                          |		(ВЫБРАТЬ
				                          |			Обороты.Номенклатура КАК Номенклатура,
				                          |			Обороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				                          |			Обороты.Контрагент КАК Контрагент,
				                          |			СУММА(Обороты.КоличествоПлан1) КАК КоличествоПлан1,
				                          |			СУММА(Обороты.КоличествоПлан2) КАК КоличествоПлан2,
				                          |			СУММА(Обороты.КоличествоПлан3) КАК КоличествоПлан3,
				                          |			СУММА(Обороты.КоличествоФакт1) КАК КоличествоФакт1,
				                          |			СУММА(Обороты.КоличествоФакт2) КАК КоличествоФакт2,
				                          |			СУММА(Обороты.КоличествоФакт3) КАК КоличествоФакт3,
				                          |			СУММА(Обороты.СтоимостьФакт1) КАК СтоимостьФакт1,
				                          |			СУММА(Обороты.СтоимостьФакт2) КАК СтоимостьФакт2,
				                          |			СУММА(Обороты.СтоимостьФакт3) КАК СтоимостьФакт3,
				                          |			СУММА(0) КАК Остаток,
				                          |			СУММА(Обороты.КоличествоПланЗаказ1) КАК КоличествоПланЗаказ1,
				                          |			СУММА(Обороты.КоличествоПланЗаказ2) КАК КоличествоПланЗаказ2,
				                          |			СУММА(Обороты.КоличествоПланЗаказ3) КАК КоличествоПланЗаказ3,
				                          |			Обороты.Проект КАК Проект,
				                          |			Обороты.Подразделение КАК Подразделение
				                          |		ИЗ
				                          |			(ВЫБРАТЬ
				                          |				ПродажиОбороты.Номенклатура КАК Номенклатура,
				                          |				ПродажиОбороты.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				                          |				ПродажиОбороты.Контрагент КАК Контрагент,
				                          |				0 КАК КоличествоПлан1,
				                          |				0 КАК КоличествоПлан2,
				                          |				0 КАК КоличествоПлан3,
				                          |				ВЫБОР
				                          |					КОГДА &Дата1 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПродажиОбороты.КоличествоОборот
				                          |				КОНЕЦ КАК КоличествоФакт1,
				                          |				0 КАК КоличествоФакт2,
				                          |				0 КАК КоличествоФакт3,
				                          |				ВЫБОР
				                          |					КОГДА &Дата1 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПродажиОбороты.СтоимостьОборот
				                          |				КОНЕЦ КАК СтоимостьФакт1,
				                          |				0 КАК СтоимостьФакт2,
				                          |				0 КАК СтоимостьФакт3,
				                          |				0 КАК КоличествоПланЗаказ1,
				                          |				0 КАК КоличествоПланЗаказ2,
				                          |				0 КАК КоличествоПланЗаказ3,
				                          |				ПродажиОбороты.Проект КАК Проект,
				                          |				ПродажиОбороты.Подразделение КАК Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.Продажи.Обороты(
				                          |						НАЧАЛОПЕРИОДА(&Дата1, МЕСЯЦ),
				                          |						КОНЕЦПЕРИОДА(&Дата1, МЕСЯЦ),
				                          |						,
				                          |						Подразделение В ИЕРАРХИИ (&Подразделение)
				                          |							И Проект В ИЕРАРХИИ (&Проект) {(Номенклатура).*}) КАК ПродажиОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ПланыПродажОбороты.Номенклатура,
				                          |				ПланыПродажОбороты.ХарактеристикаНоменклатуры,
				                          |				ПланыПродажОбороты.Контрагент,
				                          |				ВЫБОР
				                          |					КОГДА &Дата1 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПланыПродажОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ПланыПродажОбороты.Проект,
				                          |				ПланыПродажОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.ПланыПродаж.Обороты(
				                          |						НАЧАЛОПЕРИОДА(&Дата1, МЕСЯЦ),
				                          |						КОНЕЦПЕРИОДА(&Дата1, МЕСЯЦ),
				                          |						,
				                          |						Подразделение В ИЕРАРХИИ (&Подразделение)
				                          |							И Проект В ИЕРАРХИИ (&Проект) {(Номенклатура).*}) КАК ПланыПродажОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ПродажиОбороты.Номенклатура,
				                          |				ПродажиОбороты.ХарактеристикаНоменклатуры,
				                          |				ПродажиОбороты.Контрагент,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата2 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПродажиОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата2 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПродажиОбороты.СтоимостьОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ПродажиОбороты.Проект,
				                          |				ПродажиОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.Продажи.Обороты(
				                          |						НАЧАЛОПЕРИОДА(&Дата2, МЕСЯЦ),
				                          |						КОНЕЦПЕРИОДА(&Дата2, МЕСЯЦ),
				                          |						,
				                          |						Подразделение В ИЕРАРХИИ (&Подразделение)
				                          |							И Проект В ИЕРАРХИИ (&Проект) {(Номенклатура).*}) КАК ПродажиОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ПланыПродажОбороты.Номенклатура,
				                          |				ПланыПродажОбороты.ХарактеристикаНоменклатуры,
				                          |				ПланыПродажОбороты.Контрагент,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата2 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПланыПродажОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ПланыПродажОбороты.Проект,
				                          |				ПланыПродажОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.ПланыПродаж.Обороты(
				                          |						НАЧАЛОПЕРИОДА(&Дата2, МЕСЯЦ),
				                          |						КОНЕЦПЕРИОДА(&Дата2, МЕСЯЦ),
				                          |						,
				                          |						Подразделение В ИЕРАРХИИ (&Подразделение)
				                          |							И Проект В ИЕРАРХИИ (&Проект) {(Номенклатура).*}) КАК ПланыПродажОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ПродажиОбороты.Номенклатура,
				                          |				ПродажиОбороты.ХарактеристикаНоменклатуры,
				                          |				ПродажиОбороты.Контрагент,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата3 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПродажиОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата3 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПродажиОбороты.СтоимостьОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ПродажиОбороты.Проект,
				                          |				ПродажиОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.Продажи.Обороты(
				                          |						НАЧАЛОПЕРИОДА(&Дата3, МЕСЯЦ),
				                          |						КОНЕЦПЕРИОДА(&Дата3, МЕСЯЦ),
				                          |						,
				                          |						Подразделение В ИЕРАРХИИ (&Подразделение)
				                          |							И Проект В ИЕРАРХИИ (&Проект) {(Номенклатура).*}) КАК ПродажиОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ПланыПродажОбороты.Номенклатура,
				                          |				ПланыПродажОбороты.ХарактеристикаНоменклатуры,
				                          |				ПланыПродажОбороты.Контрагент,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата3 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ПланыПродажОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ПланыПродажОбороты.Проект,
				                          |				ПланыПродажОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.ПланыПродаж.Обороты(
				                          |						НАЧАЛОПЕРИОДА(&Дата3, МЕСЯЦ),
				                          |						КОНЕЦПЕРИОДА(&Дата3, МЕСЯЦ),
				                          |						,
				                          |						Подразделение В ИЕРАРХИИ (&Подразделение)
				                          |							И Проект В ИЕРАРХИИ (&Проект) {(Номенклатура).*}) КАК ПланыПродажОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ЗаказыПокупателейОбороты.Номенклатура,
				                          |				ЗаказыПокупателейОбороты.ХарактеристикаНоменклатуры,
				                          |				ЗаказыПокупателейОбороты.ЗаказПокупателя.Контрагент,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата1 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ЗаказыПокупателейОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				0,
				                          |				ЗаказыПокупателейОбороты.ДоговорКонтрагента.ОсновнойПроект,
				                          |				ЗаказыПокупателейОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.ЗаказыПокупателей.Обороты(НАЧАЛОПЕРИОДА(&Дата1, МЕСЯЦ), КОНЕЦПЕРИОДА(&Дата1, МЕСЯЦ), , Подразделение В ИЕРАРХИИ (&Подразделение) {(Номенклатура).*}) КАК ЗаказыПокупателейОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ЗаказыПокупателейОбороты.Номенклатура,
				                          |				ЗаказыПокупателейОбороты.ХарактеристикаНоменклатуры,
				                          |				ЗаказыПокупателейОбороты.ЗаказПокупателя.Контрагент,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата2 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ЗаказыПокупателейОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				0,
				                          |				ЗаказыПокупателейОбороты.ДоговорКонтрагента.ОсновнойПроект,
				                          |				ЗаказыПокупателейОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.ЗаказыПокупателей.Обороты(НАЧАЛОПЕРИОДА(&Дата2, МЕСЯЦ), КОНЕЦПЕРИОДА(&Дата2, МЕСЯЦ), , Подразделение В ИЕРАРХИИ (&Подразделение) {(Номенклатура).*}) КАК ЗаказыПокупателейОбороты
				                          |			
				                          |			ОБЪЕДИНИТЬ ВСЕ
				                          |			
				                          |			ВЫБРАТЬ
				                          |				ЗаказыПокупателейОбороты.Номенклатура,
				                          |				ЗаказыПокупателейОбороты.ХарактеристикаНоменклатуры,
				                          |				ЗаказыПокупателейОбороты.ЗаказПокупателя.Контрагент,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				0,
				                          |				ВЫБОР
				                          |					КОГДА &Дата3 = &ПустаяДата
				                          |						ТОГДА 0
				                          |					ИНАЧЕ ЗаказыПокупателейОбороты.КоличествоОборот
				                          |				КОНЕЦ,
				                          |				ЗаказыПокупателейОбороты.ДоговорКонтрагента.ОсновнойПроект,
				                          |				ЗаказыПокупателейОбороты.Подразделение
				                          |			ИЗ
				                          |				РегистрНакопления.ЗаказыПокупателей.Обороты(НАЧАЛОПЕРИОДА(&Дата3, МЕСЯЦ), КОНЕЦПЕРИОДА(&Дата3, МЕСЯЦ), , Подразделение В ИЕРАРХИИ (&Подразделение) {(Номенклатура).*}) КАК ЗаказыПокупателейОбороты) КАК Обороты
				                          |		
				                          |		СГРУППИРОВАТЬ ПО
				                          |			Обороты.Номенклатура,
				                          |			Обороты.ХарактеристикаНоменклатуры,
				                          |			Обороты.Контрагент,
				                          |			Обороты.Проект,
				                          |			Обороты.Подразделение
				                          |		
				                          |		ОБЪЕДИНИТЬ ВСЕ
				                          |		
				                          |		ВЫБРАТЬ
				                          |			ТоварыНаСкладахОстатки.Номенклатура,
				                          |			ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры,
				                          |			NULL,
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(ТоварыНаСкладахОстатки.КоличествоОстаток),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			СУММА(0),
				                          |			NULL,
				                          |			NULL
				                          |		ИЗ
				                          |			РегистрНакопления.ТоварыНаСкладах.Остатки(&ДатаПланирования, {(Номенклатура).*, (Склад).*}) КАК ТоварыНаСкладахОстатки
				                          |		
				                          |		СГРУППИРОВАТЬ ПО
				                          |			ТоварыНаСкладахОстатки.Номенклатура,
				                          |			ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры) КАК ВложенныйЗапрос
				                          |	
				                          |	СГРУППИРОВАТЬ ПО
				                          |		ВложенныйЗапрос.Номенклатура,
				                          |		ВложенныйЗапрос.ХарактеристикаНоменклатуры,
				                          |		ВложенныйЗапрос.Контрагент,
				                          |		ВложенныйЗапрос.Проект,
				                          |		ВложенныйЗапрос.Подразделение) КАК ПланФакт
				                          |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
				                          |			ЦеныНоменклатурыСрезПоследних.Номенклатура КАК Номенклатура,
				                          |			ЦеныНоменклатурыСрезПоследних.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
				                          |			СРЕДНЕЕ(ЦеныНоменклатурыСрезПоследних.Цена * КурсыВалютСрезПоследних.Курс * КурсыВалютСрезПоследних.Кратность / (КурсыЕвроСрезПоследних.Курс * КурсыЕвроСрезПоследних.Кратность)) КАК ЦенаЕвро
				                          |		ИЗ
				                          |			РегистрСведений.ЦеныНоменклатуры.СрезПоследних(&ДатаПланирования, ТипЦен.УчаствуетВРасчетеПлановойЦены {(Номенклатура)}) КАК ЦеныНоменклатурыСрезПоследних
				                          |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПланирования, ) КАК КурсыВалютСрезПоследних
				                          |				ПО ЦеныНоменклатурыСрезПоследних.Валюта = КурсыВалютСрезПоследних.Валюта,
				                          |			РегистрСведений.КурсыВалют.СрезПоследних(&ДатаПланирования, ) КАК КурсыЕвроСрезПоследних
				                          |				ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
				                          |				ПО КурсыЕвроСрезПоследних.Валюта = Константы.ВалютаУправленческогоУчета
				                          |		
				                          |		СГРУППИРОВАТЬ ПО
				                          |			ЦеныНоменклатурыСрезПоследних.Номенклатура,
				                          |			ЦеныНоменклатурыСрезПоследних.ХарактеристикаНоменклатуры) КАК Цены
				                          |		ПО ПланФакт.Номенклатура = Цены.Номенклатура
				                          |			И ПланФакт.ХарактеристикаНоменклатуры = Цены.ХарактеристикаНоменклатуры
				                          |
				                          |УПОРЯДОЧИТЬ ПО
				                          |	Подразделение,
				                          |	Проекты,
				                          |	Контрагент,
				                          |	Номенклатура,
				                          |	ХарактеристикаНоменклатуры
				                          |АВТОУПОРЯДОЧИВАНИЕ";

		
	мПостроительОтчета.ЗаполнитьНастройки();
	
	СписокНастроек = ПараметрыЗаполнения.Получить();
	//Мстр= СписокНастроек.НастройкиПостроителя;
	Если СписокНастроек <> Неопределено и СписокНастроек.НастройкиПостроителя <> Неопределено Тогда
	Если СписокНастроек.Количество()>4 Тогда
		Для каждого ЭлементСписка Из СписокНастроек.Отбор Цикл
			Имя=Строка(ЭлементСписка.ТипЗначения);
			мПостроительОтчета.Отбор.Добавить(Имя);
			мПостроительОтчета.Отбор[Имя].Использование = Истина;
			мПостроительОтчета.Отбор[Имя].ВидСравнения=ЭлементСписка.ВидСравнения;
			мПостроительОтчета.Отбор[Имя].Значение=ЭлементСписка.Значение;			
		КонецЦикла;
	Иначе
		мПостроительОтчета.УстановитьНастройки(СписокНастроек.НастройкиПостроителя); 
	КонецЕсли;
		мПериод1 = СписокНастроек.Период1;		
		мПериод2 = СписокНастроек.Период2;		
		мПериод3 = СписокНастроек.Период3;		
	КонецЕсли;

КонецПроцедуры
//Смартис Лиманчук окончание 22.05.2012

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоСоставПлана - результат запроса по табличной части "СоставПлана",
//  ВыборкаПоШапкеДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблица значений.
//
Функция ПодготовитьТаблицуСоставПлана(РезультатЗапросаПоСоставПлана, ВыборкаПоШапкеДокумента, Валюта="EURO")

	ТаблицаСоставПлана = РезультатЗапросаПоСоставПлана.Выгрузить();

	// Переименуем колонку "Сумма" в "Стоимость" (как в регистрах).
	ТаблицаСоставПлана.Колонки.Сумма.Имя = "Стоимость";

	// Надо рассчитать стоимость без НДС.
	Для каждого СтрокаТаблицы Из ТаблицаСоставПлана Цикл

		СтрокаТаблицы.Стоимость = СтрокаТаблицы.Стоимость - 
		                          ?(УчитыватьНДС И СуммаВключаетНДС, СтрокаТаблицы.НДС, 0);

		// Суммы пересчитаем в валюту упр. учета
		Если Валюта="EURO" Тогда 
				СтрокаТаблицы.Стоимость = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Стоимость, ВалютаДокумента,
				                                 ВыборкаПоШапкеДокумента.ВалютаУправленческогоУчета, 
				                                 КурсДокумента,
				                                 ВыборкаПоШапкеДокумента.КурсВалютыУправленческогоУчета, 
				                                 КратностьДокумента,
				                                 ВыборкаПоШапкеДокумента.КратностьВалютыУправленческогоУчета);

				СтрокаТаблицы.НДС = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.НДС, ВалютаДокумента,
				                                 ВыборкаПоШапкеДокумента.ВалютаУправленческогоУчета, 
				                                 КурсДокумента,
				                                 ВыборкаПоШапкеДокумента.КурсВалютыУправленческогоУчета, 
				                                 КратностьДокумента,
				                                 ВыборкаПоШапкеДокумента.КратностьВалютыУправленческогоУчета);
		ИначеЕсли Валюта="ГРН" Тогда
				 СтрокаТаблицы.Стоимость = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.Стоимость, ВалютаДокумента,
				                                 ВыборкаПоШапкеДокумента.ВалютаРегламентированногоУчета, 
				                                 КурсДокумента,
				                                 ВыборкаПоШапкеДокумента.КурсВалютыРегламентированногоУчета, 
				                                 КратностьДокумента,
				                                 ВыборкаПоШапкеДокумента.КратностьВалютыРегламентированногоУчета);

				СтрокаТаблицы.НДС = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаТаблицы.НДС, ВалютаДокумента,
				                                 ВыборкаПоШапкеДокумента.ВалютаРегламентированногоУчета, 
				                                 КурсДокумента,
				                                 ВыборкаПоШапкеДокумента.КурсВалютыРегламентированногоУчета, 
				                                 КратностьДокумента,
				                                 ВыборкаПоШапкеДокумента.КратностьВалютыРегламентированногоУчета);
									 
		КонецЕсли;
												 
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДокументПланирования) = Истина Тогда
			
			СтрокаТаблицы.ДокументПланирования = Ссылка;
			
		КонецЕсли;

	КонецЦикла;

	Возврат ТаблицаСоставПлана;

КонецФункции // ПодготовитьТаблицуСоставПлана()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("ВалютаДокумента, КурсДокумента, КратностьДокумента,
	                        					 |ДатаПланирования, Сценарий");

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строк табличной части "СоставПлана".
//
// Параметры:
// Параметры: 
//  ТаблицаПоСоставПлана    - таблица значений, содержащая данные для проведения и проверки ТЧ СоставПлана
//  ВыборкаПоШапкеДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении.
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеТабличнойЧастиСоставПлана(ТаблицаПоСоставПлана, ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Номенклатура");
	
	Если Сценарий.УчетПоКоличеству Тогда
		
		СтруктураОбязательныхПолей.Вставить("Количество");
		
	КонецЕсли;
	
	Если Сценарий.УчетПоСуммам И НЕ Сценарий.УчетПоКоличеству Тогда
		
		СтруктураОбязательныхПолей.Вставить("Сумма");
		СтруктураОбязательныхПолей.Вставить("СтавкаНДС");
		
	КонецЕсли;

	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "СоставПлана", СтруктураОбязательныхПолей, Отказ, Заголовок);

	// Здесь наборов быть не должно.
	УправлениеЗапасами.ПроверитьЧтоНетНаборов(ЭтотОбъект, "СоставПлана", ТаблицаПоСоставПлана, Отказ, Заголовок);

	// Здесь наборов-комплектов быть не должно.
	УправлениеЗапасами.ПроверитьЧтоНетКомплектов(ЭтотОбъект, "СоставПлана", ТаблицаПоСоставПлана, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеТабличнойЧастиСоставПлана()

// По результату запроса по шапке документа формируем движения по регистрам.
//
// Параметры: 
//  РежимПроведения           - режим проведения документа (оперативный или неоперативный),
//  ВыборкаПоШапкеДокумента   - выборка из результата запроса по шапке документа,
//  ТаблицаПоСоставПлана      - таблица значений, содержащая данные для проведения и проверки ТЧ СоставПлана
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(РежимПроведения, ТаблицаПоСоставПлана, ТаблицаПоСоставПланаГрн, Отказ, Заголовок)

	// ПО регистру "ПланыПродаж".
	
	НаборДвижений = Движения.ПланыПродаж;
	НаборДвиженийГрн=Движения.ПланыПродажГрн;
	// Получим таблицу значений, совпадающую со структурой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	ТаблицаДвиженийГрн=НаборДвиженийГрн.Выгрузить();
	ТаблицаДвиженийГрн.Очистить();
	
	// Заполним таблицу движений.
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоСоставПлана, ТаблицаДвижений);
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоСоставПланаГрн, ТаблицаДвиженийГрн);
	// Недостающие поля.
	ТаблицаДвижений.ЗаполнитьЗначения(Сценарий, "Сценарий");
	ТаблицаДвижений.ЗаполнитьЗначения(Подразделение, "Подразделение");
	
	ТаблицаДвиженийГрн.ЗаполнитьЗначения(Сценарий, "Сценарий");
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации.Ссылка
	               |ИЗ
	               |	РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	               |ГДЕ
	               |	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение = &Подразделение
	               |	И СоответствиеПодразделенийИПодразделенийОрганизаций.Организация = &Организация";
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("Организация", УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация"));
	Ответ = Запрос.Выполнить().Выгрузить();
	ПодразделениеОрганизаций=Ответ[0].ПодразделениеОрганизацииСсылка;
	Если ПодразделениеОрганизаций=Неопределено Тогда
		Сообщить("Не найдено соответствия в Подразделении организаций для записи в регистр");
		ПодразделениеОрганизаций=Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли; 
	ТаблицаДвиженийГрн.ЗаполнитьЗначения(ПодразделениеОрганизаций,"Подразделение");
	
	Если УправлениеПроектами.ВедениеУчетаПоПроектам() Тогда
		ТаблицаДвижений.ЗаполнитьЗначения(Проект, "Проект");
		ТаблицаДвиженийГрн.ЗаполнитьЗначения(Проект, "Проект");
	КонецЕсли;	
	
	НаборДвижений.мТаблицаДвижений   = ТаблицаДвижений;
	НаборДвиженийГрн.мТаблицаДвижений= ТаблицаДвиженийГрн;
	Если Не Отказ Тогда
		
		Движения.ПланыПродаж.ДобавитьДвижение();
		Движения.ПланыПродажГрн.ДобавитьДвижение();
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура вызывается перед записью документа 
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ОбработкаТабличныхЧастей.ПриЗаписиПроверитьСтавкуНДС(ЭтотОбъект, СоставПлана);
	
	Для каждого Строка из СоставПлана Цикл
		
		Если НЕ Сценарий.УчетПоКоличеству И Строка.Количество <> 0 Тогда
			
			Строка.Количество =  0;
			
		КонецЕсли;
		
		Если НЕ Сценарий.УчетПоСуммам  
			И (Строка.Цена <> 0 ИЛИ Строка.Сумма <> 0 ИЛИ Строка.СуммаНДС <> 0) 
			Тогда
			
			Строка.Цена = 0;
			Строка.Сумма = 0;
			Строка.СуммаНДС = 0;
			
		КонецЕсли;
		
	КонецЦикла;

	// Посчитать сумму документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = Ценообразование.ПолучитьСуммуДокументаСНДС(ЭтотОбъект, "СоставПлана");

	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
		
	КонецЕсли;

	ГраницаФиксации = УправлениеПланированием.ПолучитьГраницуФиксацииПериодов(Перечисления.ВидыПланирования.Продажи, Подразделение, Проект, Сценарий);
	
	Если ДатаПланирования <= ГраницаФиксации Тогда
		
		ОбщегоНазначения.СообщитьОбОшибке("Документ не может быть проведен, поскольку дата планирования находится в закрытом периоде (до " + Формат(ГраницаФиксации, "ДФ=dd.MM.yyyy; ДЛФ=D") + ").", Отказ);
		Возврат;
		
	КонецЕсли;
	
	//ИЗМЕНЕНО Верескул Игорь(Начало 14.08.2014
	Если Утверждено и Не РольДоступна("ПравоУтверждатьПланыПродаж") тогда 
		ОбщегоНазначения.СообщитьОбОшибке("Документ утвержден и не может быть перепроведен",Отказ);
		Возврат;
	КонецЕсли;
	//Окончание)Верескул Игорь
	
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	// Заполним по шапке документа дерево параметров, нужных при проведении.
	ДеревоПолейЗапросаПоШапке = УправлениеЗапасами.СформироватьДеревоПолейЗапросаПоШапке();
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "ВалютаУправленческогоУчета", "ВалютаУправленческогоУчета");
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "КурсВалютыУправленческогоУчета", "КурсВалютыУправленческогоУчета");

	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);

	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// Получим необходимые данные для проведения и проверки заполнения данные по табличной части "СоставПлана".
	СтруктураПолей = УправлениеЗапасами.СформироватьСтруктуруПолейТовары();
	
	СтруктураПолей.Вставить("Набор", "Номенклатура.Набор");
 	СтруктураПолей.Вставить("Комплект", "Номенклатура.Комплект");
	СтруктураПолей.Вставить("Заказ", "Заказ");
	СтруктураПолей.Вставить("Контрагент", "Контрагент");
	СтруктураПолей.Вставить("Договор", "Договор");
	СтруктураПолей.Вставить("Источник", "Источник");
	СтруктураПолей.Вставить("ДокументПланирования", "Источник");
	СтруктураПолей.Вставить("ВариантРаспределения", "ВариантРаспределения");
	СтруктураПолей.Удалить("СтавкаНДС");
	СтруктураПолей.Удалить("СерияНоменклатуры");

	СтруктураСложныхПолей = Новый Структура;
	СтруктураСложныхПолей.Вставить("Период",
	"ВЫБОР
	|	КОГДА РАЗНОСТЬДАТ(НАЧАЛОПЕРИОДА(Док.Период, " + ?(ПериодичностьДетализации = Перечисления.Периодичность.ПустаяСсылка(), ?(Сценарий.Периодичность = Перечисления.Периодичность.ПустаяСсылка(), "ДЕНЬ", Строка(Сценарий.Периодичность)), Строка(ПериодичностьДетализации)) + "), Док.Ссылка.ДатаПланирования, ДЕНЬ) > 0
	|		ТОГДА Док.Ссылка.ДатаПланирования
	|	ИНАЧЕ НАЧАЛОПЕРИОДА(Док.Период, " + ?(ПериодичностьДетализации = Перечисления.Периодичность.ПустаяСсылка(), ?(Сценарий.Периодичность = Перечисления.Периодичность.ПустаяСсылка(), "ДЕНЬ", Строка(Сценарий.Периодичность)), Строка(ПериодичностьДетализации)) + ")
	|КОНЕЦ");
	РезультатЗапросаПоСоставПлана = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "СоставПлана", СтруктураПолей, , СтруктураСложныхПолей);
	
	//ИЗМЕНЕНО Верескул Игорь(Начало 16.09.2014
	ТаблицаПоСоставПлана = ПодготовитьТаблицуСоставПлана(РезультатЗапросаПоСоставПлана, СтруктураШапкиДокумента);
	ТаблицаПоСоставПланаГРН=ПодготовитьТаблицуСоставПлана(РезультатЗапросаПоСоставПлана, СтруктураШапкиДокумента, "ГРН");
	//Окончание)Верескул Игорь

	// Проверить заполнение ТЧ "СоставПлана".
	ПроверитьЗаполнениеТабличнойЧастиСоставПлана(ТаблицаПоСоставПлана, СтруктураШапкиДокумента, Отказ, Заголовок);
										
	// Движения по документу
	Если Не Отказ Тогда

		ДвиженияПоРегистрам(РежимПроведения, ТаблицаПоСоставПлана, ТаблицаПоСоставПланаГРН, Отказ, Заголовок);

	КонецЕсли; 

КонецПроцедуры	// ОбработкаПроведения

//Коновалова 30102013 +
Процедура ЗагрузитьДанныеИзЭксель() Экспорт 

	ФормаНастроек = ЭтотОбъект.ПолучитьФорму("Форма_НайстройкаЗагрузкиИзExcell");
	ФормаНастроек.Открыть();;
	
КонецПроцедуры

Процедура ВыполнитьЗагрузкуВыбранногоФайла(Структ,ИмяФайла, НомерЛистаExcel = 1) Экспорт
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Номеклатура");
	ТЗ.Колонки.Добавить("Количество");
	
	xlLastCell = 11;
	
	ВыбФайл = Новый Файл(ИмяФайла);
	Если НЕ ВыбФайл.Существует() Тогда
		Сообщить("Файл не существует!");
	КонецЕсли;
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
		Excel.WorkBooks.Open(ИмяФайла);
		Состояние("Обработка файла Microsoft Excel...");
		//ExcelЛист = Excel.Sheets(НомерЛистаExcel);
	Исключение
		Сообщить("Ошибка. Возможно неверно указан номер листа книги Excel.");
	КонецПопытки;
	
	ТЗ.Очистить();
	
	ActiveCell = Excel.ActiveCell.SpecialCells(xlLastCell);
	RowCount = ActiveCell.Row;
	ColumnCount = ActiveCell.Column;
	
	КолвоЛистов = Excel.Worksheets.Count;
	Если НомерЛистаExcel <> 0 Тогда
		НачальныйСчетчик=НомерЛистаExcel;
		КонечныйСчетчик=НомерЛистаExcel;
	Иначе
		НачальныйСчетчик=1;
		КонечныйСчетчик=КолвоЛистов;
	КонецЕсли;  
	Для НомерЛиста = НачальныйСчетчик По КонечныйСчетчик Цикл
	    ExcelЛист = Excel.Worksheets(НомерЛиста);
		Для Row = Структ["НомерПервойСтроки"] по RowCount Цикл
			Если ExcelЛист.Cells(Row,Структ["КолонкаКод"]).Value <> Неопределено Тогда
				Если ExcelЛист.Cells(Row,Структ["КолонкаКоличество"]).Value <> Неопределено Тогда
					НоваяСтрока = ТЗ.Добавить();
					НайдНом = НайтиНоменклатуру(ExcelЛист.Cells(Row,Структ["КолонкаКод"]).Value);
					Если НайдНом = Справочники.Номенклатура.ПустаяСсылка() Тогда
						Сообщить("Не найдена номенклатура по коду, указанному в строке " + Row + " файла Excell");
					Иначе
						НоваяСтрока.Номеклатура = НайдНом;
					КонецЕсли;
					НоваяСтрока.Количество = ExcelЛист.Cells(Row,Структ["КолонкаКоличество"]).Value;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Excel.WorkBooks.Close();
	Excel = 0;
	
	ЗаполнитьТабличнуюЧастьДокумента(ТЗ);	
	
КонецПроцедуры

Процедура ЗаполнитьТабличнуюЧастьДокумента(Таб)
	
	ТекстВопроса = "Перед заполнением табличная часть будет очищена. Заполнить?";
	Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да,);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЭтотОбъект.СоставПлана.Очистить();
	КонецЕсли; 
	
	
	
	Если Таб.Количество()>0 Тогда
		Для каждого СтрТаб из Таб Цикл
			ТабличнаяЧасть = ЭтотОбъект.СоставПлана;
			НоваяСтрока = ТабличнаяЧасть.Добавить();
			НоваяСтрока.Номенклатура = СтрТаб.Номеклатура;
			НоваяСтрока.Количество = СтрТаб.Количество;
			НоваяСтрока.ЕдиницаИзмерения = ?(СтрТаб.Номеклатура = Неопределено,Справочники.ЕдиницыИзмерения.ПустаяСсылка(),СтрТаб.Номеклатура.ЕдиницаХраненияОстатков);
			НоваяСтрока.Коэффициент = ?(СтрТаб.Номеклатура = Неопределено,0,СтрТаб.Номеклатура.ЕдиницаХраненияОстатков.Коэффициент);
		КонецЦикла;
	Иначе	
		Сообщить("Не удалось получить данные из документа Excell");
	КонецЕсли;
	
КонецПроцедуры

Функция НайтиНоменклатуру(КодНом)
	
	//приводим код к необходимому виду
	 СтрокаПоиска = СтрЗаменить(СокрЛП(Строка(КодНом)),Символы.НПП,"");
	// СтрокаПоиска = "00000000000" + СтрокаПоиска;
	// СтрокаПоиска = Прав(СтрокаПоиска,11);
	 
	 //производим поиск номенклатуры по коду
	 Запрос = Новый Запрос;
	 Запрос.Текст = "ВЫБРАТЬ
	 |	Штрихкоды.Штрихкод,
	 |	Штрихкоды.Владелец
	 |ИЗ
	 |	РегистрСведений.Штрихкоды КАК Штрихкоды
	 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК Номенклатура
	 |		ПО Штрихкоды.Владелец = Номенклатура.Ссылка
	 |ГДЕ
	 |	Штрихкоды.Штрихкод = &Штрихкод";
	 Запрос.УстановитьПараметр("Штрихкод",СтрокаПоиска);
	 РезультатЗапроса = Запрос.Выполнить().Выбрать();
	 РезультатЗапроса.Следующий();
	  
	 Возврат РезультатЗапроса.Владелец;
	 
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.кпкМерчендайзинг") Тогда
		КратностьДокумента = 1;
		КурсДокумента = 1;
		ВалютаДокумента = мВалютаРегламентированногоУчета;
		ДатаПланирования = ДанныеЗаполнения.Дата;
		Комментарий = ДанныеЗаполнения.Комментарий;
		Контрагент = ДанныеЗаполнения.Контрагент;
		Ответственный = ДанныеЗаполнения.Ответственный;
		ТипЦен = ДанныеЗаполнения.ТипЦен;
		ТорговаяТочка = ДанныеЗаполнения.ТорговаяТочка;
		Сценарий = Справочники.СценарииПланирования.НайтиПоКоду("000000061");
		Для Каждого ТекСтрокаНоменклатура Из ДанныеЗаполнения.Номенклатура Цикл
			НоваяСтрока = СоставПлана.Добавить();
			НоваяСтрока.ЕдиницаИзмерения = ТекСтрокаНоменклатура.ЕдиницаИзмерения;
			НоваяСтрока.Количество = ТекСтрокаНоменклатура.Количество;
			НоваяСтрока.Коэффициент = ТекСтрокаНоменклатура.Коэффициент;
			НоваяСтрока.Номенклатура = ТекСтрокаНоменклатура.Номенклатура;
			НоваяСтрока.Сумма = ТекСтрокаНоменклатура.Сумма;
			НоваяСтрока.ХарактеристикаНоменклатуры = ТекСтрокаНоменклатура.ХарактеристикаНоменклатуры;
			НоваяСтрока.Цена = ТекСтрокаНоменклатура.Цена;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
//Коновалова 30102013 +
СтруктураПараметровЗагрузки = Новый Структура;
//Коновалова 30102013 -
