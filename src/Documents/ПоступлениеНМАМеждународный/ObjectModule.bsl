Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Для Каждого ТекСтрокаНематериальныеАктивы Из НематериальныеАктивы Цикл
		СрезСведенийМежд = РегистрыСведений.НематериальныеАктивыМеждународныйУчет.ПолучитьПоследнее(ПериодКонец, Новый Структура("НематериальныйАктив", ТекСтрокаНематериальныеАктивы.НематериальныйАктив));
		
		Если ТекСтрокаНематериальныеАктивы.УчитыватьКакНМА Тогда
			// регистр НематериальныеАктивыМеждународныйУчет 
			Движение = Движения.НематериальныеАктивыМеждународныйУчет.Добавить();
			Движение.Период = Дата;
			Движение.НематериальныйАктив = ТекСтрокаНематериальныеАктивы.НематериальныйАктив;
			Движение.СчетУчета = ТекСтрокаНематериальныеАктивы.СчетУчета;
			Движение.СрокПолезногоИспользования = ТекСтрокаНематериальныеАктивы.СрокПолезногоИспользования;
			Движение.НачислятьАмортизацию = ТекСтрокаНематериальныеАктивы.НачислятьАмортизацию;
			Движение.МетодНачисленияАмортизации = ТекСтрокаНематериальныеАктивы.МетодНачисленияАмортизации;
			Движение.СчетНачисленияАмортизации = ТекСтрокаНематериальныеАктивы.СчетНачисленияАмортизации;
			Движение.СчетЗатрат = ТекСтрокаНематериальныеАктивы.СчетЗатрат;
			Движение.Субконто1 = ТекСтрокаНематериальныеАктивы.Субконто1;
			Движение.Субконто2 = ТекСтрокаНематериальныеАктивы.Субконто2;
			Движение.Субконто3 = ТекСтрокаНематериальныеАктивы.Субконто3;
			Движение.ПредполагаемыйОбъемПродукции = ТекСтрокаНематериальныеАктивы.ПредполагаемыйОбъемПродукции;
			Движение.ФактическийОбъемПродукции = СрезСведенийМежд.ФактическийОбъемПродукции;
			Движение.СуммаНачисленнойАмортизации = ТекСтрокаНематериальныеАктивы.СуммаНачисленнойАмортизации;
			Движение.ПервоначальнаяСтоимость = ТекСтрокаНематериальныеАктивы.ПервоначальнаяСтоимость;
			Движение.СправедливаяСтоимость = СрезСведенийМежд.СправедливаяСтоимость;
			Движение.ЛиквидационнаяСтоимость = ТекСтрокаНематериальныеАктивы.ЛиквидационнаяСтоимость;
			Движение.ДатаПринятияКУчету = ТекСтрокаНематериальныеАктивы.ДатаПринятияКУчету;
			Движение.СчетСниженияСтоимости = ТекСтрокаНематериальныеАктивы.СчетСниженияСтоимости;
			Движение.КоэффициентУскорения = ТекСтрокаНематериальныеАктивы.КоэффициентУскорения;
		КонецЕсли;
		
		Если (ТекСтрокаНематериальныеАктивы.СчетУчетаНовый <> ТекСтрокаНематериальныеАктивы.СчетУчета) 
			и (ЗначениеЗаполнено(ТекСтрокаНематериальныеАктивы.СчетУчетаНовый)) 
			и (ЗначениеЗаполнено(ТекСтрокаНематериальныеАктивы.СчетУчета)) Тогда // переводим на другой счет
			// регистр Международный 
			Движение = Движения.Международный.Добавить();
			Движение.Период = Дата;
			Движение.СчетДт = ТекСтрокаНематериальныеАктивы.СчетУчетаНовый;
			Движение.СчетКт = ТекСтрокаНематериальныеАктивы.СчетУчета;
			Движение.Организация = Организация;
			Движение.Сумма = ТекСтрокаНематериальныеАктивы.ПервоначальнаяСтоимость;
			Движение.Содержание = "Поступление НМА";
			Движение.НомерЖурнала = "Рег";
			
			Для Ном = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
				Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[Ном-1].ВидСубконто] = ТекСтрокаНематериальныеАктивы["Субконто" + Ном + "Нов"];
			КонецЦикла;
			
			Если не Движение.СчетДт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НематериальныеАктивы,) = Неопределено Тогда
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НематериальныеАктивы] = ТекСтрокаНематериальныеАктивы.НематериальныйАктив;
			КонецЕсли;
			Если не Движение.СчетКт.ВидыСубконто.Найти(ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НематериальныеАктивы,) = Неопределено Тогда
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НематериальныеАктивы] = ТекСтрокаНематериальныеАктивы.НематериальныйАктив;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	// записываем движения регистров
	Движения.НематериальныеАктивыМеждународныйУчет.Записать();
	Движения.Международный.Записать();
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью




