// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Приходный ордер на товары", ПечатьПриходногоОрдера_Накладная(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьПриходногоОрдера_Накладная(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ПриходныйОрдерНаТовары_Накладная";

	Макет = ПолучитьМакет("Накладная");

	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ПервыйДокумент = Истина;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		// ШАПКА
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Номер,
		|	Дата,
		|	Контрагент КАК Поставщик,
		|	Организация,
		|	Организация КАК Покупатель,
		|	ФизЛицо.Наименование КАК ФизЛицо,
		|	Ответственный.ФизЛицо.Наименование КАК Выписал
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары КАК ПриходныйОрдерНаТовары
		|
		|ГДЕ
		|	ПриходныйОрдерНаТовары.Ссылка = &ТекущийДокумент";
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	НомерСтрокиТЧ,
		|	Номенклатура,
		|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК Товар,
		|	Номенклатура.Код     КАК Код,
		|	Номенклатура.Артикул КАК Артикул,
		|	Количество,
		|	КоличествоМест,
		|	ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
		|	ЕдиницаИзмеренияМест.Представление КАК ЕдиницаИзмеренияМест,
		|	ХарактеристикаНоменклатуры КАК Характеристика,
		|	СерияНоменклатуры КАК Серия
		|ИЗ 
		|	(ВЫБРАТЬ
		|		МИНИМУМ(НомерСтроки) КАК НомерСтрокиТЧ,
		|		Номенклатура         КАК Номенклатура,
		|		ЕдиницаИзмерения     КАК ЕдиницаИзмерения,
		|		ЕдиницаИзмеренияМест КАК ЕдиницаИзмеренияМест,
		|		СерияНоменклатуры    КАК СерияНоменклатуры,
		|		ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
		|		СУММА(Количество)    КАК Количество,
		|		СУММА(КоличествоМест)КАК КоличествоМест
		|	ИЗ
		|		Документ.ПриходныйОрдерНаТовары.Товары КАК ПриходныйОрдерНаТовары
		|	ГДЕ
		|		ПриходныйОрдерНаТовары.Ссылка = &ТекущийДокумент
		|	СГРУППИРОВАТЬ ПО
		|		Номенклатура,
		|		ЕдиницаИзмерения,
		|		ЕдиницаИзмеренияМест,
		|		СерияНоменклатуры,
		|		ХарактеристикаНоменклатуры
		|	) КАК ВложенныйЗапросПоТоварам
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиТЧ
		|";
		
		ЗапросТовары = Запрос.Выполнить().Выгрузить();

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	НомерСтроки						КАК НомерСтрокиТЧ,
		|	Номенклатура,
		|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК СТРОКА(1000))  КАК Товар,
		|	Номенклатура.Код                КАК Код,
		|	Номенклатура.Артикул            КАК Артикул,
		|	Количество,
		|	Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения
		|ИЗ
		|	Документ.ПриходныйОрдерНаТовары.ВозвратнаяТара КАК ПриходныйОрдерНаТовары
		|
		|ГДЕ
		|	ПриходныйОрдерНаТовары.Ссылка = &ТекущийДокумент
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтрокиТЧ
		|";
		
		ЗапросТара = Запрос.Выполнить().Выгрузить();
		
		// Выводим шапку накладной	
		СведенияОПоставщике = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.Дата,,,КодЯзыкаПечать);
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Покупатель, Шапка.Дата,,,КодЯзыкаПечать);

		ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Шапка, НСтр("ru='Приходный ордер на товары';uk='Прибутковий ордер на товари'",КодЯзыкаПечать),КодЯзыкаПечать);
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ПолноеНаименование,",,КодЯзыкаПечать);
		ТабДокумент.Вывести(ОбластьМакета);

		ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
		ОбластьМакета.Параметры.Заполнить(Шапка);	
		ОбластьМакета.Параметры.ПредставлениеПокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "ПолноеНаименование,",,КодЯзыкаПечать);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим дополнительно информацию о договоре и сделке
		СписокДополнительныхПараметров = "ФизЛицо,";
		МассивСтруктурСтрок = ФормированиеПечатныхФормСервер.ДополнительнаяИнформация(Шапка,СписокДополнительныхПараметров,КодЯзыкаПечать);
		ОбластьМакета = Макет.ПолучитьОбласть("ДопИнформация");
	    Для каждого СтруктураСтроки Из МассивСтруктурСтрок Цикл
			ОбластьМакета.Параметры.Заполнить(СтруктураСтроки);
			ТабДокумент.Вывести(ОбластьМакета);
		КонецЦикла;		
		
		ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
		Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
			ВыводитьКоды = Истина;
			Колонка = "Артикул";
		ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
			ВыводитьКоды = Истина;
			Колонка = "Код";
		Иначе
			ВыводитьКоды = Ложь;
		КонецЕсли;	
		
		ОбластьНомера = Макет.ПолучитьОбласть("ШапкаТаблицы|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("ШапкаТаблицы|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("ШапкаТаблицы|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);	
		Если ВыводитьКоды Тогда
			ОбластьКодов.Параметры.ИмяКолонкиКодов = Колонка;
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;

		ТабДокумент.Присоединить(ОбластьДанных);    

		ОбластьКолонкаТовар = Макет.Область("Товар");
		Если Не ВыводитьКоды Тогда
			ОбластьКолонкаТовар.ШиринаКолонки = ОбластьКолонкаТовар.ШиринаКолонки + 
												Макет.Область("КолонкаКодов").ШиринаКолонки;
		КонецЕсли;
	    	
		ОбластьНомера = Макет.ПолучитьОбласть("Строка|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Строка|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Строка|Данные");

		Для каждого ВыборкаСтрокТовары из ЗапросТовары Цикл 

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;

	        ОбластьНомера.Параметры.НомерСтроки = ЗапросТовары.Индекс(ВыборкаСтрокТовары) + 1;
			ТабДокумент.Вывести(ОбластьНомера);
			Если ВыводитьКоды Тогда
				Если Колонка = "Артикул" Тогда
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Артикул;
				Иначе
					ОбластьКодов.Параметры.Артикул = ВыборкаСтрокТовары.Код;
				КонецЕсли;
				ТабДокумент.Присоединить(ОбластьКодов);
			КонецЕсли;
			
			ОбластьДанных.Параметры.Заполнить(ВыборкаСтрокТовары);
			ОбластьДанных.Параметры.Товар = СокрП(ВыборкаСтрокТовары.Товар) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
			
			ТабДокумент.Присоединить(ОбластьДанных);

		КонецЦикла;

		// Вывести Итого
		ОбластьНомера = Макет.ПолучитьОбласть("Итого|НомерСтроки");
		ОбластьКодов  = Макет.ПолучитьОбласть("Итого|КолонкаКодов");
		ОбластьДанных = Макет.ПолучитьОбласть("Итого|Данные");
		
		ТабДокумент.Вывести(ОбластьНомера);
		Если ВыводитьКоды Тогда
			ТабДокумент.Присоединить(ОбластьКодов);
		КонецЕсли;
		ТабДокумент.Присоединить(ОбластьДанных);

		// выведем таблицу с возвратной тарой
		Если ЗапросТара.Количество() > 0 Тогда
			
			ОбластьНомераТара = Макет.ПолучитьОбласть("ШапкаТаблицыТара|НомерСтрокиТара");
			ОбластьКодовТара  = Макет.ПолучитьОбласть("ШапкаТаблицыТара|КолонкаКодовТара");
			ОбластьДанныхТара = Макет.ПолучитьОбласть("ШапкаТаблицыТара|ДанныеТара");
			
			ТабДокумент.Вывести(ОбластьНомераТара);			
			Если ВыводитьКоды Тогда
				ОбластьКодовТара.Параметры.ИмяКолонкиКодов = Колонка;
				ТабДокумент.Присоединить(ОбластьКодовТара);
			КонецЕсли;

			ТабДокумент.Присоединить(ОбластьДанныхТара);

			ОбластьКолонкаТара = Макет.Область("Тара");
			Если Не ВыводитьКоды Тогда
				ОбластьКолонкаТара.ШиринаКолонки = ОбластьКолонкаТара.ШиринаКолонки + 
													Макет.Область("КолонкаКодовТара").ШиринаКолонки;
			КонецЕсли;

			ОбластьНомераТара = Макет.ПолучитьОбласть("СтрокаТара|НомерСтрокиТара");
			ОбластьКодовТара  = Макет.ПолучитьОбласть("СтрокаТара|КолонкаКодовТара");
			ОбластьДанныхТара = Макет.ПолучитьОбласть("СтрокаТара|ДанныеТара");
			
			Для каждого ВыборкаСтрокТара Из ЗапросТара Цикл 
				Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТара.Номенклатура) Тогда
					Сообщить("В одной из строк не заполнено значение тары - строка при печати пропущена.", СтатусСообщения.Важное);
					Продолжить;
				КонецЕсли;
				
				ОбластьНомераТара.Параметры.НомерСтроки = ЗапросТара.Индекс(ВыборкаСтрокТара) + 1;
				ТабДокумент.Вывести(ОбластьНомераТара);			
				
				Если ВыводитьКоды Тогда
					Если Колонка = "Артикул" Тогда
						ОбластьКодовТара.Параметры.Артикул = ВыборкаСтрокТара.Артикул;
					Иначе
						ОбластьКодовТара.Параметры.Артикул = ВыборкаСтрокТара.Код;
					КонецЕсли;
					ТабДокумент.Присоединить(ОбластьКодовТара);
				КонецЕсли;
			
				ОбластьДанныхТара.Параметры.Заполнить(ВыборкаСтрокТара);			
				ОбластьДанныхТара.Параметры.Товар = СокрП(ВыборкаСтрокТара.Товар);
				ТабДокумент.Присоединить(ОбластьДанныхТара);
				
			КонецЦикла;		
			
			// Вывести Итого				
			ОбластьНомераТара = Макет.ПолучитьОбласть("ИтогоТара|НомерСтрокиТара");
			ОбластьКодовТара  = Макет.ПолучитьОбласть("ИтогоТара|КолонкаКодовТара");
			ОбластьДанныхТара = Макет.ПолучитьОбласть("ИтогоТара|ДанныеТара");
			ТабДокумент.Вывести(ОбластьНомераТара);
			Если ВыводитьКоды Тогда
				ТабДокумент.Присоединить(ОбластьКодовТара);
			КонецЕсли;
			ТабДокумент.Присоединить(ОбластьДанныхТара);
			
		КонецЕсли;

		// Вывести Сумму прописью
		ОбластьМакета = Макет.ПолучитьОбласть("СуммаПрописью");
		
		ОбластьМакета.Параметры.ИтоговаяСтрока = НСтр("ru='Всего наименований ';uk='Всього найменувань '",КодЯзыкаПечать) + ЗапросТовары.Количество()
											   + ?(ЗапросТара.Количество() = 0, "", НСтр("ru='; возвратная тара ';uk='; зворотна тара '",КодЯзыкаПечать)+ ЗапросТара.Количество()) + ".";									  								   
											   
		ТабДокумент.Вывести(ОбластьМакета);

		// Вывести подписи
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла;
	Возврат ТабДокумент;

КонецФункции // ПечатьПриходныйОрдерНаТовары()


// В функции описано, какие данные следует сохранять в шаблоне
Функция СтруктураДополнительныхДанныхФормы() Экспорт
	
	Возврат ХранилищаНастроек.ДанныеФорм.СформироватьСтруктуруДополнительныхДанных("Товары,ВозвратнаяТара");
	
КонецФункции
