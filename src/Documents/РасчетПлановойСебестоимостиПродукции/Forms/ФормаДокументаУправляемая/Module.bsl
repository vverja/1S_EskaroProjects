&НаСервереБезКонтекста 
Процедура НастроитьПостроительОтчета(КомпоновщикНастроекКомпоновкиДанных, МакетСКД = Неопределено)
	МакетСКД = Документы.РасчетПлановойСебестоимостиПродукции.ПолучитьМакет("НастройкаЗаполненияПродукции");
	
	//Схему компоновки данных надо помещать во временное хранилище, иначе при выходе с сервера настройки компоновки данных пропадут
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(МакетСКД, Новый УникальныйИдентификатор);
	
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемыКомпоновкиДанных)); 
КонецПроцедуры	

&НаСервереБезКонтекста 
Функция ПриИзмененииЦеныНаСервере(ТипЦен);
	Возврат ТипЦен.ВалютаЦены;
КонецФункции	
	
&НаКлиенте
Процедура ОбновитьНадписьВалютаЦены()
	ВалютаЦены = "";
	Если ЗначениеЗаполнено(ВалютаЦены) Тогда
		СтрВалютаЦены = "(" + Объект.ТипЦен.ВалютаЦены + ")";
	КонецЕсли;
	
	Элементы.Продукция.ПодчиненныеЭлементы.ПродукцияСебестоимость.Заголовок = "Себестоимость " + СтрВалютаЦены;
	Элементы.ИсходныеКомплектующие.ПодчиненныеЭлементы.ИсходныеКомплектующиеЦена.Заголовок = "Цена " + СтрВалютаЦены;
	Элементы.ИсходныеКомплектующие.ПодчиненныеЭлементы.ИсходныеКомплектующиеСебестоимость.Заголовок = "Сумма " + СтрВалютаЦены;
	Элементы.НадписьВалютаЦены.Заголовок = СтрВалютаЦены;
КонецПроцедуры

//По спецификации номенклатуры заполняется единица измерения и количество в ТЧ Продукция
//	
&НаСервереБезКонтекста
Процедура ЗаполнитьЕдиницуИКоличествоПродукции(СтрокаПродукции) Экспорт
	//Первичное заполнение - из  карточки номенклатуры
	СтрокаПродукции.ЕдиницаИзмерения = СтрокаПродукции.Номенклатура.ЕдиницаХраненияОстатков;
	СтрокаПродукции.Количество = 1;
	Если НЕ ЗначениеЗаполнено(СтрокаПродукции.Спецификация) Тогда
		Возврат;
	КонецЕсли;
	Для Каждого СтрокаВыходногоИзделия ИЗ СтрокаПродукции.Спецификация.ВыходныеИзделия Цикл
		Если СтрокаВыходногоИзделия.Номенклатура = СтрокаПродукции.Номенклатура Тогда
			СтрокаПродукции.ЕдиницаИзмерения = СтрокаВыходногоИзделия.ЕдиницаИзмерения;
			СтрокаПродукции.Количество = СтрокаВыходногоИзделия.Количество;
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ОбновитьНадписьВалютаЦены();	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		//Это новый документ
		
		Если ЗначениеЗаполнено(Объект.Ссылка.НастройкиКомпоновщика.Получить()) Тогда
			//Объект получен копированием
			НастроитьПостроительОтчета(КомпоновщикНастроекКомпоновкиДанных);
			КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(Объект.Ссылка.НастройкиКомпоновщика.Получить());
		Иначе
			МакетСКД = Неопределено;
			НастроитьПостроительОтчета(КомпоновщикНастроекКомпоновкиДанных, МакетСКД);
			КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(МакетСКД.НастройкиПоУмолчанию);
		КонецЕсли;	
	Иначе
		НастроитьПостроительОтчета(КомпоновщикНастроекКомпоновкиДанных);
		КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(Объект.Ссылка.НастройкиКомпоновщика.Получить());
		
		// Это существующий документ. 
		// Проверим, что его можно менять.
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);
		
	КонецЕсли;	
	ВалютаЦены = Объект.ТипЦен.ВалютаЦены;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	ПараметрыЗаписи.Вставить("КомпоновщикНастроекКомпоновкиДанных", КомпоновщикНастроекКомпоновкиДанных);
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	ТекКомпоновщикНастроекКомпоновкиДанных = ПараметрыЗаписи.КомпоновщикНастроекКомпоновкиДанных;
	ТекущийОбъект.НастройкиКомпоновщика = Новый ХранилищеЗначения(ТекКомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки());
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ТипЦенПриИзменении(Элемент)
	ВалютаЦены = ПриИзмененииЦеныНаСервере(Объект.ТипЦен);
	ОбновитьНадписьВалютаЦены();
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ Продукция

&НаСервере
Функция ИзменениеНоменклатурыСервер(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = РаботаСДиалогамиСервер.ИзменениеНоменклатуры(ДанныеДляЗаполнения);

	// Специализированные для табличной части
	ЗначенияДляЗаполнения.Вставить("Номенклатура",	ДанныеДляЗаполнения.Номенклатура);
	Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(
		ДанныеДляЗаполнения.Номенклатура, 
		ДанныеДляЗаполнения.ХарактеристикаНоменклатуры,
		ДанныеДляЗаполнения.Дата);
	ЗначенияДляЗаполнения.Вставить("Спецификация",			Спецификация);
	ЗначенияДляЗаполнения.Вставить("Количество");

	ЗаполнитьЕдиницуИКоличествоПродукции(ЗначенияДляЗаполнения);
	
	Возврат ЗначенияДляЗаполнения;
КонецФункции

// Процедура - обработчик события "ПриИзменении" поля ввода номенклатуры
// в строке табличной части "Продукция".
//
&НаКлиенте
Процедура ПродукцияНоменклатураПриИзменении(Элемент)
	
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	ДанныеОбменаССервером = Новый Структура();
	ДанныеОбменаССервером.Вставить("Номенклатура",  СтрокаТабличнойЧасти.Номенклатура);
	ДанныеОбменаССервером.Вставить("ХарактеристикаНоменклатуры",  СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры);
	ДанныеОбменаССервером.Вставить("Дата",          Объект.Дата);
	
	// Получим все необходимые данные на сервере
	ЗначенияДляЗаполнения = ИзменениеНоменклатурыСервер(ДанныеОбменаССервером);
	
	// Заполним реквизиты строки
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ЗначенияДляЗаполнения);

КонецПроцедуры // ПродукцияНоменклатураПриИзменении()

// Процедура - обработчик события "НачалоВыбора" поля ввода "Спецификация"
&НаКлиенте
Процедура ПродукцияСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	РаботаСДиалогамиКлиент.НачалоВыбораЗначенияСпецификации(Элементы.Продукция.ТекущиеДанные.Номенклатура, Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПродукцияСпецификацияПриИзменении(Элемент)
	
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	
	ЗначенияДляЗаполнения = Новый Структура();
	
	// Основные реквизиты
	ЗначенияДляЗаполнения.Вставить("Номенклатура",	СтрокаТабличнойЧасти.Номенклатура);
	ЗначенияДляЗаполнения.Вставить("Спецификация",	СтрокаТабличнойЧасти.Спецификация);
	ЗначенияДляЗаполнения.Вставить("ЕдиницаИзмерения");
	ЗначенияДляЗаполнения.Вставить("Количество");
		
	ЗаполнитьЕдиницуИКоличествоПродукции(ЗначенияДляЗаполнения);
	
	// Заполним реквизиты строки
	ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, ЗначенияДляЗаполнения);
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменени" поля ввода "ХарактеристикаНоменклатуры"
&НаКлиенте
Процедура ПродукцияХарактеристикаНоменклатурыПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.Продукция.ТекущиеДанные;
	СтрокаТабличнойЧасти.Спецификация = УправлениеПроизводством.ОпределитьСпецификациюПоУмолчанию(СтрокаТабличнойЧасти.Номенклатура, СтрокаТабличнойЧасти.ХарактеристикаНоменклатуры, Объект.Дата);
КонецПроцедуры

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ТЧ ИсходныеКомплектующие

&НаКлиенте
Процедура ИсходныеКомплектующиеСпецификацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Элементы.ИсходныеКомплектующие.ТекущиеДанные.Продукция) Тогда
		РаботаСДиалогамиКлиент.НачалоВыбораЗначенияСпецификации(Элементы.ИсходныеКомплектующие.ТекущиеДанные.Продукция, Элемент, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЕдиницуХраненияОстатков(Номенклатура)
	Возврат Номенклатура.ЕдиницаХраненияОстатков;
КонецФункции


&НаКлиенте
Процедура ИсходныеКомплектующиеНоменклатураПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;

	СтрокаТабличнойЧасти.ЕдиницаИзмерения = ПолучитьЕдиницуХраненияОстатков(СтрокаТабличнойЧасти.Номенклатура);
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеЦенаПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	СтрокаТабличнойЧасти.Себестоимость = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеКоличествоПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	СтрокаТабличнойЧасти.Себестоимость = СтрокаТабличнойЧасти.Количество * СтрокаТабличнойЧасти.Цена;
КонецПроцедуры

&НаКлиенте
Процедура ИсходныеКомплектующиеСебестоимостьПриИзменении(Элемент)
	СтрокаТабличнойЧасти = Элементы.ИсходныеКомплектующие.ТекущиеДанные;
	Если СтрокаТабличнойЧасти.Количество = 0 Тогда
		Возврат;
	КонецЕсли;
	СтрокаТабличнойЧасти.Цена = СТрокаТабличнойЧасти.Себестоимость / СтрокаТабличнойЧасти.Количество;
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаСервере
Процедура ЗаполнитьТабличныеЧастиНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьПродукцию(КомпоновщикНастроекКомпоновкиДанных);
	ДокументОбъект.ЗаполнитьИсходныеКомплектующиеПоСпецификации();
	ДокументОбъект.ЗаполнитьЦеныИсходныхКомплектующих();
	ДокументОбъект.РассчитатьСебестоимостьПродукции();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры	

&НаКлиенте
Процедура Заполнить(Команда)
	Если НЕ ЗначениеЗаполнено(Объект.ТипЦен) Тогда
		Предупреждение("Не указан тип цен для расчета себестоимости исходных комплектующих");
		Возврат;
	КонецЕсли;
	ЗаполнятьТабличныеЧасти = Истина;
	Если Объект.ИсходныеКомплектующие.Количество() > 0 ИЛИ Объект.Продукция.Количество() > 0 Тогда
		ТекстВопроса = "Перед расчетом будут очищены данные " + Символы.ПС +
			"на закладках ""Себестоимость"", ""Состав затрат""" + Символы.ПС +
			"Рассчитать?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет,,,"Расчет плановой себестоимости продукции");
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	Объект.Продукция.Очистить();
	Объект.ИсходныеКомплектующие.Очистить();
	
	ЗаполнитьТабличныеЧастиНаСервере();
	
	ОбщегоНазначения.Сообщение("Расчет завершен");
КонецПроцедуры
