// Процедура заполняет значение переключателя "ВидОтраженияВУчете".
//
&НаКлиенте
Процедура ЗаполнитьВидОтраженияВУчете()
	
	Если Объект.ОтражатьВУправленческомУчете Тогда
		ВидОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете");
		
	Иначе
		ВидОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете");
		
	КонецЕсли;
	
КонецПроцедуры // ЗаполнитьВидОтраженияВУчете()

&НаСервере
Функция ПолучитьИспользованиеРасширеннойАналитики(Дата)
	Возврат УправлениеЗапасами.ИспользуетсяРасширеннаяАналитикаУчета(Дата);
КонецФункции	

&НаСервере
Процедура ПроверитьВозможностьОткрытияФормы(ДокументОбъект, Отказ)
	
	ТекстСообщения = "";
	
	ИспользоватьРасширеннуюАналитику = ПолучитьИспользованиеРасширеннойАналитики(Объект.Дата);
	Если НЕ ИспользоватьРасширеннуюАналитику Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Не используется ""Расширенная аналитика учета затрат""'")
			+ Символы.ПС + НСтр("ru = 'В управляемом режиме этот документ открыть нельзя'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ДокументОбъект,,, Отказ);		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВыполняемыеДействия()

	МассивДействий = ПроцедурыРасчетаСебестоимостиВыпуска.ПолучитьМассивВыполняемыхДействий(Объект.ПериодРегистрации, Объект.Организация, Объект.ОтражатьВУправленческомУчете, Объект.ОтражатьВБухгалтерскомУчете, Истина);
	
	Объект.ВыполняемыеДействия.Очистить();
	Для Каждого ТекущееДействие Из МассивДействий Цикл
		НоваяСтрока = Объект.ВыполняемыеДействия.Добавить();
		НоваяСтрока.ВыполняемоеДействие = ТекущееДействие;
	КонецЦикла;
	
КонецПроцедуры

// Устанавливает видимость реквизитов в зависимости от установленных флажков
//  по типам учета.
//
// Параметры
//  Нет.
//
&НаКлиенте
Процедура УстановитьВидимостьРеквизитовПоТипуУчета()

	Если Объект.ОтражатьВУправленческомУчете Тогда
		Элементы.Организация.Доступность = Ложь;
	Иначе
		Элементы.Организация.Доступность = Истина;
	КонецЕсли;

КонецПроцедуры // УстановитьВидимостьРеквизитовПоТипуУчета()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Проверка: не должны быть заполнены данные, которые на форме не отражаются или не поддерживаются
	//Проверять надо и для нового документа: реквизиты могли заполниться неправильными значениями по умолчанию
	ПроверитьВозможностьОткрытияФормы(Объект, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		// Это существующий документ. 
		// Проверим, что его можно менять.
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);

	КонецЕсли;
	мТекущаяДатаДокумента = Объект.Дата; 
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьВидОтраженияВУчете();
	УстановитьВидимостьРеквизитовПоТипуУчета();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ДЕЙСТВИЯ КОМАНДНЫХ ПАНЕЛЕЙ ФОРМЫ

&НаКлиенте
Процедура ЗаполнитьСписокВыполняемыхДействий(Команда)
		Если Объект.ВыполняемыеДействия.Количество() > 0 Тогда
	 
		Ответ = Вопрос("В документе уже присутствуют строки." + Символы.ПС
					 + "При заполнении они будут удалены!" + Символы.ПС
					 + "Продолжить?", РежимДиалогаВопрос.ДаНет,,
					 КодВозвратаДиалога.Нет, "Заполнить список действий");
					 
		Если Не Ответ = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
		Объект.ВыполняемыеДействия.Очистить();
	КонецЕсли;
	
	ЗаполнитьВыполняемыеДействия();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(Объект.Номер) Тогда
		ПрефиксацияОбъектовСобытия.ОчиститьНомерОбъекта(Объект.Номер, Объект.Организация);
	КонецЕсли; 
	
КонецПроцедуры

// Процедура - обработчик события "ПриИзменении" поля ввода даты документа.
//
&НаКлиенте
Процедура ДатаПриИзменении(Элемент)

	Если НЕ ПолучитьИспользованиеРасширеннойАналитики(Объект.Дата) Тогда
		Предупреждение("На указанную дату не используется ""Расширенная аналитика учета затрат""" + Символы.ПС
						+ "Будет восстановлено предыдущее значение даты");
		Объект.Дата = мТекущаяДатаДокумента;
		Возврат;
	КонецЕсли;	
	
	мТекущаяДатаДокумента = Объект.Дата;
	Если НачалоМесяца(Объект.ПериодРегистрации) <> НачалоМесяца(Объект.Дата) Тогда
		Объект.ПериодРегистрации = НачалоМесяца(Объект.Дата);
	КонецЕсли;	
КонецПроцедуры // ДатаПриИзменении()

// Процедура - обработчик события "ПриИзменении" флага отражения
// документа в управленческом учете.
//
&НаКлиенте
Процедура ВидОтраженияВУчетеПриИзменении(Элемент)
	
	Объект.ОтражатьВУправленческомУчете = (ВидОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВидыОтраженияВУчете.ОтражатьВУправленческомУчете"));
	Объект.ОтражатьВБухгалтерскомУчете = (ВидОтраженияВУчете = ПредопределенноеЗначение("Перечисление.ВидыОтраженияВУчете.ОтражатьВРегламентированномУчете"));

	УстановитьВидимостьРеквизитовПоТипуУчета();
	
КонецПроцедуры // ВидОтраженияВУчетеПриИзменении()

&НаКлиенте
Процедура ВыполняемыеДействияВыполняемоеДействиеНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	Элемент.СписокВыбора.ЗагрузитьЗначения(ПроцедурыРасчетаСебестоимостиВыпуска.ПолучитьМассивВыполняемыхДействий(
		Объект.ПериодРегистрации, 
		Объект.Организация, 
		Объект.ОтражатьВУправленческомУчете, 
		Объект.ОтражатьВБухгалтерскомУчете, // В форме флаг ОтражатьВБухгалтерскомУчете - это отражение и в бух. и в нал. учете
		Истина));	
КонецПроцедуры
