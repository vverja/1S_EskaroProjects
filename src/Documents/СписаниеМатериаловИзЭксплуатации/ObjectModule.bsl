Перем мУдалятьДвижения;

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт; // (Регл)
Перем мСтрокаРеквизитыУпрУчета Экспорт; // (Упр)
Перем мСтрокаРеквизитыНалУчета Экспорт; // (Регл)

Перем мВалютаРегламентированногоУчета Экспорт;
Перем мВалютаУправленческогоУчета     Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда

// Функция формирует печатную форму М-11
//
Функция ПечатьМШ8(ПечатьПоДаннымУпрУчета = Истина)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер 	                       КАК НомерДокумента,
	|	Дата	                       КАК ДатаДокумента,
	|	Организация                    КАК Организация,
	|	Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	" + ?(ПечатьПоДаннымУпрУчета, "Подразделение", "ПодразделениеОрганизации")+" КАК Подразделение
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК Док
	|
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	                            
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	
	Если Проведен Тогда
		
		Рег = ?(ПечатьПоДаннымУпрУчета, "ПартииМатериаловВЭксплуатации", "ПартииМатериаловВЭксплуатацииБухгалтерскийУчет");
		Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК МатериалНаименование,
		|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
		|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ЕдиницаИзмерения)              КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК Характеристика,
		|	ВложенныйЗапрос.СерияНоменклатуры          КАК Серия," + ?(Не ПечатьПоДаннымУпрУчета, "
		|	ВложенныйЗапрос.СчетПередачиБУ             КАК СчетПередачи,", "") + "
		|	ВложенныйЗапрос.СрокСлужбы                 КАК СрокСлужбы,
		|	ВложенныйЗапрос.ДатаПоступления            КАК ДатаПоступления,
		|	ВложенныйЗапрос.Количество                 КАК Количество,
		|	ВложенныйЗапрос.Цена                       КАК Цена,
		|	ВложенныйЗапрос.Стоимость                  КАК Стоимость,
		|	ВложенныйЗапрос.ПричинаСписания.Представление 	КАК ПричинаСписанияНаименование
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииМатериаловВЭксплуатации.Номенклатура                           КАК Номенклатура,
		|		ПартииМатериаловВЭксплуатации.ХарактеристикаНоменклатуры             КАК ХарактеристикаНоменклатуры,
		|		ПартииМатериаловВЭксплуатации.СерияНоменклатуры                      КАК СерияНоменклатуры," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		ПартииМатериаловВЭксплуатации.СхемаНазначенияИспользования.СчетПередачиБУ КАК СчетПередачиБУ,", "") + "
		|		ПартииМатериаловВЭксплуатации.ДокументПередачи.Дата                  КАК ДатаПоступления,
		|		ВЫБОР
		|			КОГДА ПартииМатериаловВЭксплуатации.Количество = 0
		|				ТОГДА ПартииМатериаловВЭксплуатации.Стоимость
		|			ИНАЧЕ ВЫРАЗИТЬ(ПартииМатериаловВЭксплуатации.Стоимость / ПартииМатериаловВЭксплуатации.Количество КАК ЧИСЛО(15, 2))
		|		КОНЕЦ КАК Цена,
		|		СУММА(ПартииМатериаловВЭксплуатации.Количество)                      КАК Количество,
		|		СУММА(ПартииМатериаловВЭксплуатации.Стоимость)                       КАК Стоимость,
		|		ПартииМатериаловВЭксплуатации.Номенклатура.ЕдиницаХраненияОстатков   КАК ЕдиницаИзмерения,
		|		МИНИМУМ(ПартииМатериаловВЭксплуатации.НомерСтроки)                   КАК НомерСтроки,
		|		МИНИМУМ(ПартииМатериаловВЭксплуатации.Регистратор.ПричинаСписания) 	 КАК ПричинаСписания,
		|		ПартииМатериаловВЭксплуатации.СрокПолезногоИспользования КАК СрокСлужбы
		|	ИЗ
		|		РегистрНакопления." + Рег + " КАК ПартииМатериаловВЭксплуатации
		|	ГДЕ
		|		ПартииМатериаловВЭксплуатации.Регистратор = &ТекущийДокумент
		|		И ПартииМатериаловВЭксплуатации.ВидДвижения = &ВидДвижения
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПартииМатериаловВЭксплуатации.Номенклатура,
		|		ПартииМатериаловВЭксплуатации.ХарактеристикаНоменклатуры," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		ПартииМатериаловВЭксплуатации.СхемаНазначенияИспользования.СчетПередачиБУ,", "") + "
		|		ПартииМатериаловВЭксплуатации.СерияНоменклатуры,
		|		ВЫБОР
		|			КОГДА ПартииМатериаловВЭксплуатации.Количество = 0
		|				ТОГДА ПартииМатериаловВЭксплуатации.Стоимость
		|			ИНАЧЕ ВЫРАЗИТЬ(ПартииМатериаловВЭксплуатации.Стоимость / ПартииМатериаловВЭксплуатации.Количество КАК ЧИСЛО(15, 2))
		|		КОНЕЦ,
		|		ПартииМатериаловВЭксплуатации.ДокументПередачи.Дата,
		|		ПартииМатериаловВЭксплуатации.СрокПолезногоИспользования,		
		|		ПартииМатериаловВЭксплуатации.Номенклатура.ЕдиницаХраненияОстатков) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.НомерСтроки                                                      
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	ОБЩИЕ";
		
	Иначе
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
		|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
		|	ВложенныйЗапрос.Серия                КАК Серия,
		|	ВложенныйЗапрос.Количество           КАК Количество," + ?(Не ПечатьПоДаннымУпрУчета, "
		|	ВложенныйЗапрос.СчетПередачиБУ       КАК СчетПередачи,", "") + "
		|	ВложенныйЗапрос.СрокСлужбы           КАК СрокСлужбы," + ?(УказыватьДокументПередачи, "
		|	ВложенныйЗапрос.ДатаПоступления      КАК ДатаПоступления,", "") + "
		|	ВложенныйЗапрос.ПричинаСписания.Представление	КАК ПричинаСписанияНаименование,
		|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
		|ИЗ 
		|	(
		|	ВЫБРАТЬ
		|		Номенклатура                           КАК Номенклатура,
		|		ЕдиницаИзмерения                       КАК ЕдиницаИзмерения," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		СхемаНазначенияИспользования.СчетПередачиБУ КАК СчетПередачиБУ,", "") + "
		|		ХарактеристикаНоменклатуры	           КАК Характеристика,
		|		СерияНоменклатуры                      КАК Серия," + ?(УказыватьДокументПередачи, "
		|		ДокументПередачи.Дата                  КАК ДатаПоступления,", "") + "
		|		СУММА(Количество)                      КАК Количество,
		|		МИНИМУМ(НомерСтроки) 		           КАК НомерСтроки,
		|		СрокПолезногоИспользования КАК СрокСлужбы,
		|		Ссылка.ПричинаСписания  			   КАК ПричинаСписания
		|	ИЗ
		|		Документ.СписаниеМатериаловИзЭксплуатации.Материалы КАК Док
		|	ГДЕ
		|		Док.Ссылка = &ТекущийДокумент
		|
		|	СГРУППИРОВАТЬ ПО
		|		Номенклатура,
		|		ЕдиницаИзмерения," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		СхемаНазначенияИспользования.СчетПередачиБУ,", "") + "
		|		ХарактеристикаНоменклатуры,
		|		СерияНоменклатуры," + ?(УказыватьДокументПередачи, "
		|		ДокументПередачи.Дата,", "") + "
		|		СрокПолезногоИспользования,
		|		Ссылка.ПричинаСписания
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	ОБЩИЕ
		|";
		
	КонецЕсли;

	ЗапросПоНоменклатуре = Запрос.Выполнить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериаловИзЭксплуатации_М11";
	
	// Вывод заголовка
	Макет = ПолучитьМакет("МШ8");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(Шапка);
	Область.Параметры.КодОперации = "Списання";	
	
	Если ПечатьПоДаннымУпрУчета Тогда
		
		Область.Параметры.ПредставлениеОрганизации = "Управлінський облік";
		Область.Параметры.Валюта                   = мВалютаУправленческогоУчета;
		
	Иначе
				
		СписокПоказателей = Новый СписокЗначений;
		СписокПоказателей.Добавить("", "КодПоЕДРПОУ");
		СписокПоказателей = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.ДатаДокумента, СписокПоказателей);
		Область.Параметры.КодПоЕДРПОУ              = СписокПоказателей.КодПоЕДРПОУ;
		Область.Параметры.ПредставлениеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		Область.Параметры.Валюта                   = мВалютаРегламентированногоУчета;
		
	КонецЕсли;
	
	ТабДокумент.Вывести(Область);
	
	ВысотаШапки   = ТабДокумент.ВысотаТаблицы;
	ШиринаТаблицы = ТабДокумент.ШиринаТаблицы;
	Номера        = ТабДокумент.ПолучитьОбласть("R" + ВысотаШапки);
	ТабДокумент.ОбластьПечати = ТабДокумент.Область("C2:C" + ШиринаТаблицы);
	
	ВыборкаОбщийИтог = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий(); // получение общего итога
	
	ОбластьПодвал   = Макет.ПолучитьОбласть("Подвал");
	ПараметрыПодвал = ОбластьПодвал.Параметры;
	
	// В форме сказано "Загальна кількість предметів прописом". Будет выводится количество позиций.
	ПараметрыПодвал.ИтогоКоличествоПрописью = ЧислоПрописью(ОбщегоНазначения.ПреобразоватьВЧисло(ВыборкаОбщийИтог.Количество), 
	                                                        "Л=uk_UA;НП=Ложь;НД=Ложь;", ",,,,,,,,0");
	ВыборкаПоСтрокам = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КоличествоВВыборке     = ВыборкаПоСтрокам.Количество();
	КоличествоОбработанных = 1;
	
	ВыборкаПоКомиссии = РаботаСДиалогами.ПолучитьСведенияОКомиссии(ЭтотОбъект);
	
	Пока ВыборкаПоСтрокам.Следующий() Цикл

		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) 
		                                         + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаПоСтрокам);
		
		Если КоличествоОбработанных = КоличествоВВыборке Тогда
			// Последняя запись. Ее не следует отрывать от подписей.
			
			МассивТаблиц = Новый Массив(2);
			МассивТаблиц[0] = Область;
			МассивТаблиц[1] = ОбластьПодвал;
			
			Если НЕ ТабДокумент.ПроверитьВывод(МассивТаблиц) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(Номера);
				
			КонецЕсли;
			
		Иначе
			
			Если НЕ ТабДокумент.ПроверитьВывод(Область) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(Номера);
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(Область);
        КоличествоОбработанных = КоличествоОбработанных + 1;
		
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьПодвал);
	
	Область = Макет.ПолучитьОбласть("Металлолом");
	
	Область.Параметры.Заполнить(ВыборкаПоКомиссии);
		
	Если ПечатьПоДаннымУпрУчета Тогда
		
		Область.Параметры.Валюта = мВалютаУправленческогоУчета;
		
	Иначе
				
		Область.Параметры.Валюта = мВалютаРегламентированногоУчета;
		
	КонецЕсли;
	
	ТабДокумент.Вывести(Область);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМШ8()

// Функция формирует печатную форму М-11
//
Функция ПечатьМ11(ПечатьПоДаннымУпрУчета = Истина)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер 	                       КАК НомерДокумента,
	|	Дата	                       КАК ДатаДокумента,
	|	Организация                    КАК Организация,
	|	Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	" + ?(ПечатьПоДаннымУпрУчета, "Подразделение", "ПодразделениеОрганизации")+" КАК Подразделение
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК Док
	|
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	                            
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	
	Если Проведен Тогда
		
		Рег = ?(ПечатьПоДаннымУпрУчета, "ПартииМатериаловВЭксплуатации", "ПартииМатериаловВЭксплуатацииБухгалтерскийУчет");
		Запрос.УстановитьПараметр("ВидДвижения", ВидДвиженияНакопления.Расход);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура                                 КАК Номенклатура,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК МатериалНаименование,
		|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
		|	ПРЕДСТАВЛЕНИЕ(ВложенныйЗапрос.ЕдиницаИзмерения)              КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ХарактеристикаНоменклатуры КАК Характеристика,
		|	ВложенныйЗапрос.СерияНоменклатуры          КАК Серия," + ?(Не ПечатьПоДаннымУпрУчета, "
		|	ВложенныйЗапрос.СчетПередачиБУ             КАК СчетПередачи,", "") + "
		|	ВложенныйЗапрос.Количество                 КАК Количество,
		|	ВложенныйЗапрос.Цена                       КАК Цена,
		|	ВложенныйЗапрос.Стоимость                  КАК Стоимость
		|ИЗ
		|	(ВЫБРАТЬ
		|		ПартииМатериаловВЭксплуатации.Номенклатура                           КАК Номенклатура,
		|		ПартииМатериаловВЭксплуатации.ХарактеристикаНоменклатуры             КАК ХарактеристикаНоменклатуры,
		|		ПартииМатериаловВЭксплуатации.СерияНоменклатуры                      КАК СерияНоменклатуры," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		ПартииМатериаловВЭксплуатации.СхемаНазначенияИспользования.СчетПередачиБУ КАК СчетПередачиБУ,", "") + "
		|		ВЫБОР
		|			КОГДА ПартииМатериаловВЭксплуатации.Количество = 0
		|				ТОГДА ПартииМатериаловВЭксплуатации.Стоимость
		|			ИНАЧЕ ВЫРАЗИТЬ(ПартииМатериаловВЭксплуатации.Стоимость / ПартииМатериаловВЭксплуатации.Количество КАК ЧИСЛО(15, 2))
		|		КОНЕЦ КАК Цена,
		|		СУММА(ПартииМатериаловВЭксплуатации.Количество)                      КАК Количество,
		|		СУММА(ПартииМатериаловВЭксплуатации.Стоимость)                       КАК Стоимость,
		|		ПартииМатериаловВЭксплуатации.Номенклатура.ЕдиницаХраненияОстатков   КАК ЕдиницаИзмерения,
		|		МИНИМУМ(ПартииМатериаловВЭксплуатации.НомерСтроки)                   КАК НомерСтроки
		|	ИЗ
		|		РегистрНакопления." + Рег + " КАК ПартииМатериаловВЭксплуатации
		|	ГДЕ
		|		ПартииМатериаловВЭксплуатации.Регистратор = &ТекущийДокумент
		|		И ПартииМатериаловВЭксплуатации.ВидДвижения = &ВидДвижения
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ПартииМатериаловВЭксплуатации.Номенклатура,
		|		ПартииМатериаловВЭксплуатации.ХарактеристикаНоменклатуры," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		ПартииМатериаловВЭксплуатации.СхемаНазначенияИспользования.СчетПередачиБУ,", "") + "
		|		ПартииМатериаловВЭксплуатации.СерияНоменклатуры,
		|		ВЫБОР
		|			КОГДА ПартииМатериаловВЭксплуатации.Количество = 0
		|				ТОГДА ПартииМатериаловВЭксплуатации.Стоимость
		|			ИНАЧЕ ВЫРАЗИТЬ(ПартииМатериаловВЭксплуатации.Стоимость / ПартииМатериаловВЭксплуатации.Количество КАК ЧИСЛО(15, 2))
		|		КОНЕЦ,
		|		ПартииМатериаловВЭксплуатации.Номенклатура.ЕдиницаХраненияОстатков) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО
		|	ВложенныйЗапрос.НомерСтроки                                                      
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Стоимость)
		|ПО
		|	ОБЩИЕ";
		
	Иначе
		
		Запрос.Текст = "
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
		|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
		|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
		|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
		|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
		|	ВложенныйЗапрос.Серия                КАК Серия,
		|	ВложенныйЗапрос.Количество           КАК Количество," + ?(Не ПечатьПоДаннымУпрУчета, "
		|	ВложенныйЗапрос.СчетПередачиБУ       КАК СчетПередачи,", "") + "
		|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
		|ИЗ 
		|	(
		|	ВЫБРАТЬ
		|		Номенклатура                           КАК Номенклатура,
		|		ЕдиницаИзмерения                       КАК ЕдиницаИзмерения," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		СхемаНазначенияИспользования.СчетПередачиБУ КАК СчетПередачиБУ,", "") + "
		|		ХарактеристикаНоменклатуры	           КАК Характеристика,
		|		СерияНоменклатуры                      КАК Серия,
		|		СУММА(Количество)                      КАК Количество,
		|		МИНИМУМ(НомерСтроки) 		           КАК НомерСтроки
		|	ИЗ
		|		Документ.СписаниеМатериаловИзЭксплуатации.Материалы КАК Док
		|	ГДЕ
		|		Док.Ссылка = &ТекущийДокумент
		|
		|	СГРУППИРОВАТЬ ПО
		|		Номенклатура,
		|		ЕдиницаИзмерения," + ?(Не ПечатьПоДаннымУпрУчета, "
		|		СхемаНазначенияИспользования.СчетПередачиБУ,", "") + "
		|		ХарактеристикаНоменклатуры,
		|		СерияНоменклатуры
		|
		|	) КАК ВложенныйЗапрос
		|
		|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	ОБЩИЕ
		|";
		
	КонецЕсли;

	ЗапросПоНоменклатуре = Запрос.Выполнить();
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериаловИзЭксплуатации_М11";
	
	// Вывод заголовка
	Макет = ПолучитьОбщийМакет("М11");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(Шапка);
	Область.Параметры.КодОперации = "Переміщення";	
	Область.Параметры.Основание = Основание;
	Область.Параметры.Кому = Кому;
	
	Если ПечатьПоДаннымУпрУчета Тогда
		
		Область.Параметры.ПредставлениеОрганизации = "Управлінський облік";
		Область.Параметры.Валюта                   = мВалютаУправленческогоУчета;
		
	Иначе
				
		СписокПоказателей = Новый СписокЗначений;
		СписокПоказателей.Добавить("", "КодПоЕДРПОУ");
		СписокПоказателей = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.ДатаДокумента, СписокПоказателей);
		Область.Параметры.КодПоЕДРПОУ              = СписокПоказателей.КодПоЕДРПОУ;
		Область.Параметры.ПредставлениеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		Область.Параметры.Валюта                   = мВалютаРегламентированногоУчета;
		
	КонецЕсли;
	
	ТабДокумент.Вывести(Область);
	
	ВысотаШапки   = ТабДокумент.ВысотаТаблицы;
	ШиринаТаблицы = ТабДокумент.ШиринаТаблицы;
	ТабДокумент.ПовторятьПриПечатиСтроки = ТабДокумент.Область("R" + ВысотаШапки);
	ТабДокумент.ОбластьПечати            = ТабДокумент.Область("C2:C" + ШиринаТаблицы);
	
	ВыборкаОбщийИтог = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаОбщийИтог.Следующий(); // получение общего итога
	
	ОбластьПодвал   = Макет.ПолучитьОбласть("Подвал");
	ПараметрыПодвал = ОбластьПодвал.Параметры;
	
	Если Проведен Тогда
		
		ПрописьВалюты = ?(ПечатьПоДаннымУпрУчета, мВалютаУправленческогоУчета.ПараметрыПрописиНаУкраинском,
		                                          мВалютаРегламентированногоУчета.ПараметрыПрописиНаУкраинском);
		ПараметрыПодвал.ИтогоСуммаПрописью = ЧислоПрописью(ОбщегоНазначения.ПреобразоватьВЧисло(ВыборкаОбщийИтог.Стоимость),
		                                                   "Л=uk_UA;ДП=Истина;", ПрописьВалюты);
		
	КонецЕсли;
	
	ВыборкаПоСтрокам = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	КоличествоВВыборке     = ВыборкаПоСтрокам.Количество();
	КоличествоОбработанных = 1;
	// В форме сказано "Кількість найменувань". Будет выводится количество позиций.
	ПараметрыПодвал.ИтогоКоличествоПрописью = ЧислоПрописью(КоличествоВВыборке, 
	                                                        "Л=uk_UA;НП=Ложь;НД=Ложь;", ",,,,,,,,0");
	
	Пока ВыборкаПоСтрокам.Следующий() Цикл

		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) 
		                                         + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаПоСтрокам);
		
		Если КоличествоОбработанных = КоличествоВВыборке Тогда
			// Последняя запись. Ее не следует отрывать от подписей.
			
			МассивТаблиц = Новый Массив(2);
			МассивТаблиц[0] = Область;
			МассивТаблиц[1] = ОбластьПодвал;
			
			Если НЕ ТабДокумент.ПроверитьВывод(МассивТаблиц) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(Область);
        КоличествоОбработанных = КоличествоОбработанных + 1;
		
	КонецЦикла;
	
	ОбластьПодвал.Параметры.ОтпускРазрешил = ОтпускРазрешил;
	ОбластьПодвал.Параметры.Сдал = Сдал;
	ОбластьПодвал.Параметры.Принял = Принял;
	ОтвЛица = ФормированиеПечатныхФорм.ОтветственныеЛицаОрганизаций(Организация, Дата);
	ОбластьПодвал.Параметры.Заполнить(ОтвЛица);
	
	ТабДокумент.Вывести(ОбластьПодвал);
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ11()

// Функция формирует печатную форму документа
//
Функция ПечатьМШ7(ПечатьПоДаннымУпрУчета = Истина)

	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Номер 	                       КАК НомерДокумента,
	|	Дата	                       КАК ДатаДокумента,
	|	Организация                    КАК Организация,
	|	Организация.НаименованиеПолное КАК ОрганизацияНаименованиеПолное,
	|	" + ?(ПечатьПоДаннымУпрУчета, "Подразделение", "ПодразделениеОрганизации")+" КАК ПредставлениеПодразделения
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК Док
	|
	|ГДЕ
	|	Док.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Док.Номенклатура." + ТоварКод + "          КАК НоменклатурныйНомер,
	|	ВЫРАЗИТЬ(Док.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК МатериалНаименование,
	|	Док.ХарактеристикаНоменклатуры             КАК Характеристика,
	|	Док.СерияНоменклатуры                      КАК Серия,
	|	Док.ЕдиницаИзмерения.Код                   КАК ЕдиницаИзмеренияКод,
	|	Док.ЕдиницаИзмерения.Наименование          КАК ЕдиницаИзмеренияНаименование," + ?(Не ПечатьПоДаннымУпрУчета, "
	|	Док.СчетПередачиБУ                         КАК СчетПередачи,", "") + "
	|	Док.Количество                             КАК Количество,
	|	Док.ФизЛицо                                КАК Сотрудник,
	|	Док.ФизЛицо.Код                            КАК ТабельныйНомер,
	|	Док.ДатаДокумента                          КАК ДатаДокумента,
	|	Док.СрокСлужбы                             КАК СрокСлужбы
	|ИЗ
	|	(ВЫБРАТЬ
	|		Док.Номенклатура                           КАК Номенклатура,
	|		Док.ХарактеристикаНоменклатуры             КАК ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры                      КАК СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения                       КАК ЕдиницаИзмерения," + ?(Не ПечатьПоДаннымУпрУчета, "
	|		Док.СхемаНазначенияИспользования.СчетПередачиБУ КАК СчетПередачиБУ,", "") + "
	|		СУММА(Док.Количество)                      КАК Количество,
	|		МИНИМУМ(Док.НомерСтроки) 		           КАК НомерСтроки,
	|		Док.ФизЛицо                                КАК ФизЛицо,
	|		Док.Ссылка.Дата                            КАК ДатаДокумента,
	|		Док.СрокПолезногоИспользования КАК СрокСлужбы
	|	ИЗ
	|		Документ.СписаниеМатериаловИзЭксплуатации.Материалы КАК Док
	|	ГДЕ
	|		Док.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Док.Номенклатура,
	|		Док.ХарактеристикаНоменклатуры,
	|		Док.СерияНоменклатуры,
	|		Док.ЕдиницаИзмерения," + ?(Не ПечатьПоДаннымУпрУчета, "
	|		Док.СхемаНазначенияИспользования.СчетПередачиБУ,", "") + "
	|		Док.ФизЛицо,
	|		Док.Ссылка.Дата,
	|		Док.СрокПолезногоИспользования) КАК Док
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР";

	ЗапросПоНоменклатуре = Запрос.Выполнить();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериаловИзЭксплуатации_МШ7";
	
	// Вывод заголовка
	Макет = ПолучитьОбщийМакет("МШ7");
	Область = Макет.ПолучитьОбласть("Шапка");
	Область.Параметры.Заполнить(Шапка);
	Область.Параметры.КодОперации = "Списання (сдача)";	
	
	ОбластьПодвал   = Макет.ПолучитьОбласть("Подвал");
	
	Если ПечатьПоДаннымУпрУчета Тогда
		
		Область.Параметры.ПредставлениеОрганизации = "Управлінський облік";
		
	Иначе
				
		СписокПоказателей = Новый СписокЗначений;
		СписокПоказателей.Добавить("", "КодПоЕДРПОУ");
		СписокПоказателей = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(Шапка.Организация, Шапка.ДатаДокумента, СписокПоказателей);
		Область.Параметры.КодПоЕДРПОУ              = СписокПоказателей.КодПоЕДРПОУ;
		Область.Параметры.ПредставлениеОрганизации = Шапка.ОрганизацияНаименованиеПолное;
		
	КонецЕсли;
	
	ТабДокумент.Вывести(Область);

	ВысотаШапки   = ТабДокумент.ВысотаТаблицы;
	ШиринаТаблицы = ТабДокумент.ШиринаТаблицы;
	ТабДокумент.ПовторятьПриПечатиСтроки = ТабДокумент.Область("R" + ВысотаШапки);
	ТабДокумент.ОбластьПечати            = ТабДокумент.Область("C2:C" + ШиринаТаблицы);
	
	ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоВВыборке     = ВыборкаПоСтрокам.Количество();
	КоличествоОбработанных = 1;
	
	Пока ВыборкаПоСтрокам.Следующий() Цикл

		Область = Макет.ПолучитьОбласть("Строка");
		Область.Параметры.Заполнить(ВыборкаПоСтрокам);
		Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаПоСтрокам);
		Область.Параметры.НомерПП              = КоличествоОбработанных;
		
		Если КоличествоОбработанных = КоличествоВВыборке Тогда
			// Последняя запись. Ее не следует отрывать от подписей.
			
			МассивТаблиц = Новый Массив(2);
			МассивТаблиц[0] = Область;
			МассивТаблиц[1] = ОбластьПодвал;
			
			Если НЕ ТабДокумент.ПроверитьВывод(МассивТаблиц) Тогда
				
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(Область);
        КоличествоОбработанных = КоличествоОбработанных + 1;

	КонецЦикла;

	// Вывод подвала
	ТабДокумент.Вывести(ОбластьПодвал);

	Возврат ТабДокумент;

КонецФункции // ПечатьМШ7()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли; 

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "МШ8упр" Тогда
		
		ТабДокумент = ПечатьМШ8(Истина);
		
	ИначеЕсли ИмяМакета = "МШ8бух" Тогда
		
		ТабДокумент = ПечатьМШ8(Ложь);
		
	ИначеЕсли ИмяМакета = "МШ7упр" Тогда
		
		ТабДокумент = ПечатьМШ7(Истина);
		
	ИначеЕсли ИмяМакета = "МШ7бух" Тогда
		
		ТабДокумент = ПечатьМШ7(Ложь);
		
	ИначеЕсли ИмяМакета = "М11упр" Тогда
		
		ТабДокумент = ПечатьМ11(Истина);
		
	ИначеЕсли ИмяМакета = "М11бух" Тогда
		
		ТабДокумент = ПечатьМ11(Ложь);
	ИначеЕсли ИмяМакета = "СписаниеМатериаловБух" ИЛИ ИмяМакета = "СписаниеМатериаловУпр" Тогда
		
		ТипУчета = ?( ИмяМакета = "СписаниеМатериаловУпр", "Упр", "Бух");
				   
		ТабДокумент = ПечатьСписаниеМатериалов(ТипУчета);
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,
	ОбщегоНазначения.СформироватьЗаголовокДокумента(Ссылка));
	
КонецПроцедуры // Печать()

// Функция формирования печатной формы документа СписаниеМатериалов
//
Функция ПечатьСписаниеМатериалов(ТипУчета)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	Ссылка,
	|	Организация,
	|	Организация.Представление КАК ПечОрганизация,
	|	"+?(ТипУчета = "Упр", "Подразделение", "ПодразделениеОрганизации")+" КАК Подразделение,
	|	"+?(ТипУчета = "Упр", "Подразделение.Представление", "ПодразделениеОрганизации.Представление")+" КАК ПечПодразделение
	|ИЗ
	|	Документ.СписаниеМатериаловИзЭксплуатации КАК СписаниеМатериаловИзЭксплуатации
	|ГДЕ
	|	СписаниеМатериаловИзЭксплуатации.Ссылка = &ТекущийДокумент";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура								КАК Товар,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное 	КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ВложенныйЗапрос.Номенклатура.Код 							КАК Код,
	|	ВложенныйЗапрос.Номенклатура.Артикул						КАК Артикул,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление 				КАК ПечЕдИзм,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.ДокументПередачи,
	|	ВложенныйЗапрос.СхемаНазначенияИспользования,
	|	ВложенныйЗапрос.ФизЛицо					КАК Сотрудник,	
	|	ВложенныйЗапрос.ФизЛицо.Код				КАК ТабНомер,
	|	ВложенныйЗапрос.ФизЛицо.Представление 	КАК ПечФИО,
	|	СУММА(ВложенныйЗапрос.Количество)		КАК Количество
	|ИЗ (
	|	ВЫБРАТЬ
	|		СписаниеМатериаловИзЭксплуатации.Номенклатура				КАК Номенклатура,
	|		СписаниеМатериаловИзЭксплуатации.ЕдиницаИзмерения			КАК ЕдиницаИзмерения,
	|		СписаниеМатериаловИзЭксплуатации.ХарактеристикаНоменклатуры	КАК Характеристика,
	|		СписаниеМатериаловИзЭксплуатации.СерияНоменклатуры			КАК Серия,
	|		СписаниеМатериаловИзЭксплуатации.ДокументПередачи			КАК ДокументПередачи,
	|		СписаниеМатериаловИзЭксплуатации.СхемаНазначенияИспользования 	КАК СхемаНазначенияИспользования,
	|		СписаниеМатериаловИзЭксплуатации.ФизЛицо						КАК ФизЛицо,
	|		СУММА(СписаниеМатериаловИзЭксплуатации.Количество)			КАК Количество
	|	ИЗ
	|		Документ.СписаниеМатериаловИзЭксплуатации.Материалы КАК СписаниеМатериаловИзЭксплуатации
	|	ГДЕ
	|		СписаниеМатериаловИзЭксплуатации.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписаниеМатериаловИзЭксплуатации.Номенклатура,
	|		СписаниеМатериаловИзЭксплуатации.ЕдиницаИзмерения,
	|		СписаниеМатериаловИзЭксплуатации.ХарактеристикаНоменклатуры,
	|		СписаниеМатериаловИзЭксплуатации.СерияНоменклатуры,
	|		СписаниеМатериаловИзЭксплуатации.ДокументПередачи,
	|		СписаниеМатериаловИзЭксплуатации.СхемаНазначенияИспользования,
	|		СписаниеМатериаловИзЭксплуатации.ФизЛицо	
	|	) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.Номенклатура,
	|	ВложенныйЗапрос.ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.ДокументПередачи,
	|	ВложенныйЗапрос.СхемаНазначенияИспользования,
	|	ВложенныйЗапрос.ФизЛицо
	|";
	
				
	ЗапросПоТоварам = Новый Запрос;
	ЗапросПоТоварам.Текст = ТекстЗапроса;
	
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
	ЗапросПоТоварам.УстановитьПараметр("ТипУчета", ТипУчета);
	
	РезультатЗапроса = ЗапросПоТоварам.Выполнить();
	
	ТабДок = Новый ТабличныйДокумент;
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеМатериалов_СписаниеМатериалов";
	
	Макет  = ПолучитьМакет("СписаниеМатериалов");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	// Параметры вывода
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	КолАртикул = ?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул, "Артикул",
				 ?( ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код,     "Код", ""));
	ФлагВыводКода = НЕ ПустаяСтрока(КолАртикул);
	
	// Вывод заголовка
	Область = Макет.ПолучитьОбласть("Заголовок|Данные");
	Область.Параметры.Заголовок = ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект,НСтр("ru='Списание материалов из эксплуатации';uk='Списання матеріалів з експлуатації'",КодЯзыкаПечать),КодЯзыкаПечать);
	Область.Параметры.Заполнить(Шапка);
		
	ТабДок.Вывести(Область);
	
	// Вывод шапки табличной части
	Если ФлагВыводКода Тогда
		Область = Макет.ПолучитьОбласть("ТабШапка|Данные");
		Область.Параметры.ПечАртикул = КолАртикул;
		ТабДок.Вывести(Область);
	Иначе
		Область = Макет.ПолучитьОбласть("ТабШапкаБезАртикула|Данные");
		ТабДок.Вывести(Область);
	КонецЕсли;
	
	
	// Вывод табличной части
	Если ФлагВыводКода Тогда
		Область     = Макет.ПолучитьОбласть("ТабСтрока|Данные");
	Иначе
		Область     = Макет.ПолучитьОбласть("ТабСтрокаБезАртикула|Данные");
	КонецЕсли;
	
	ТабЧасть = РезультатЗапроса.Выбрать();
	СуммаИтого = 0;
	ПечНомер = 0;
	
	Пока ТабЧасть.Следующий() Цикл
		
		ПечНомер = ПечНомер + 1;
		Область.Параметры.ПечНомер = ПечНомер;
		
		Если ФлагВыводКода Тогда
			Область.Параметры.ПечАртикул = ТабЧасть[КолАртикул];
		КонецЕсли;
		
		Область.Параметры.Заполнить(ТабЧасть);
		Область.Параметры.ПечМатериал = СокрЛП( ТабЧасть.Товар) + ФормированиеПечатныхФорм.ПредставлениеСерий( ТабЧасть);
		Область.Параметры.Материал    = ТабЧасть.Товар;
		Область.Параметры.ПечКол      = ТабЧасть.Количество;
		
		Если НЕ ПустаяСтрока(ТабЧасть.ТабНомер) Тогда
			Область.Параметры.ПечТабНомер = ТабЧасть.ТабНомер;
		Иначе
			Область.Параметры.ПечТабНомер = "";
		КонецЕсли;
		
		ТабДок.Вывести(Область);
		
		
	КонецЦикла;
	
	// Вывод итогов документа
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.СтрокаИтог = НСтр("ru='Всего наименований: ';uk='Всього найменувань: '",КодЯзыкаПечать) + ТабЧасть.Количество();
		ТабДок.Вывести( Область);
	
		Область = Макет.ПолучитьОбласть("НизДокумента");
	ТабДок.Вывести( Область);
	
	Возврат ТабДок;
	
КонецФункции //	ПечатьСписаниеМатериалов()

                       
// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктПечФорм = Новый Структура;
	
	Если ОтражатьВУправленческомУчете Тогда
		
		СтруктПечФорм.Вставить("МШ8упр", "Ведомость МШ-8 (упр. учет)");
		СтруктПечФорм.Вставить("МШ7упр", "Ведомость МШ-7 (упр. учет, сдача)");
		СтруктПечФорм.Вставить("М11упр", "Накладная M-11 (упр. учет)");	
		СтруктПечФорм.Вставить( "СписаниеМатериаловУпр", "Списание материалов из эксплуатации (упр. учет)");
	КонецЕсли;
	
	Если ОтражатьВБухгалтерскомУчете Тогда
		
		СтруктПечФорм.Вставить("МШ8бух", "Ведомость МШ-8 (бух. учет)");
		СтруктПечФорм.Вставить("МШ7бух", "Ведомость МШ-7 (бух. учет, сдача)");
		СтруктПечФорм.Вставить("М11бух", "Накладная M-11 (бух. учет)");
		СтруктПечФорм.Вставить( "СписаниеМатериаловБух", "Списание материалов из эксплуатации (бух. учет)");
		
	КонецЕсли;

	Возврат СтруктПечФорм;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр();
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл();
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для упр. учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()
	
	мСтрокаРеквизитыУпрУчета = "Подразделение, НадписьПодразделение";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для регл. учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()
	
	мСтрокаРеквизитыБухУчета = "ПодразделениеОрганизации, НадписьПодразделениеОрганизации";
	
	мСтрокаРеквизитыНалУчета = "";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Укажем, что надо проверить:
	ОбязательныеРеквизитыШапки = "";
	ДополнитьРеквизитыШапкиУпр(ОбязательныеРеквизитыШапки);
	ДополнитьРеквизитыШапкиРегл(ОбязательныеРеквизитыШапки);
	
	УправлениеЗатратами.НепроверятьРеквизитыПоТипуУчета(ЭтотОбъект, ОбязательныеРеквизитыШапки, СтруктураШапкиДокумента, мСтрокаРеквизитыУпрУчета, мСтрокаРеквизитыБухУчета, мСтрокаРеквизитыНалУчета);
	
	СтруктураОбязательныхПолей = 
	Новый Структура(ОбязательныеРеквизитыШапки);

	// Теперь позовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Процедура дополняет список реквизитов шапки упр. реквизитами
//
Процедура ДополнитьРеквизитыШапкиУпр(Реквизиты)
	Реквизиты = Реквизиты + ?(ПустаяСтрока(Реквизиты),"",", ") 
	          + "Подразделение";
КонецПроцедуры // ДополнитьРеквизитыШапкиУпр()

// Процедура дополняет список реквизитов шапки регл. реквизитами
//
Процедура ДополнитьРеквизитыШапкиРегл(Реквизиты)
	Реквизиты = Реквизиты + ?(ПустаяСтрока(Реквизиты),"",", ") 
	          + "Организация, ПодразделениеОрганизации";
КонецПроцедуры // ДополнитьРеквизитыШапкиРегл()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Функция проверяет правильность заполнения документа
// Возврат - структура с данными шапки документа
//
Функция ПроверкаРеквизитов(Отказ, Заголовок) Экспорт
	
	// Дерево значений, содержащее имена необходимых полей в запросе по шапке.
	Перем ДеревоПолейЗапросаПоШапке;
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета();
	
	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);

	// Проверим правильность заполнения шапки документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	РеквизитыТЧ = "Номенклатура, Количество, ЕдиницаИзмерения, ФизЛицо, "
	              + "СхемаНазначенияИспользования, СпособОтраженияРасходов, СрокПолезногоИспользования, Качество";
				  
	Если УказыватьДокументПередачи Тогда
		
		РеквизитыТЧ = РеквизитыТЧ + ?(ПустаяСтрока(РеквизитыТЧ),"",", ") 
	                  + "ДокументПередачи";
		
	КонецЕсли;
	
	УправлениеЗатратами.НепроверятьРеквизитыПоТипуУчета(ЭтотОбъект, РеквизитыТЧ, СтруктураШапкиДокумента, мСтрокаРеквизитыУпрУчета, мСтрокаРеквизитыБухУчета, "Материалы");
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "Материалы", Новый Структура(РеквизитыТЧ), Отказ, Заголовок);
	УправлениеЗапасами.ПроверитьЧтоНетНаборов(ЭтотОбъект, "Материалы", , Отказ, Заголовок);	
	
	Возврат СтруктураШапкиДокумента;
	
КонецФункции // ПроверкаРеквизитов()

// Дополняет полями, нужными для регл. учета
//
Процедура ДополнитьСтруктуруПолейТабличнойЧастиМатериалыРегл(СтруктураПолей)
	
	Если  ОтражатьВБухгалтерскомУчете Тогда
		
		СтруктураПолей.Вставить("СчетПередачиБУ"   , "СхемаНазначенияИспользования.СчетПередачиБУ");
		СтруктураПолей.Вставить("СчетАмортизацииБУ", "СхемаНазначенияИспользования.СчетАмортизацииБУ");
		
	КонецЕсли;
	
КонецПроцедуры // ДополнитьСтруктуруПолейТабличнойЧастиМатериалыРегл()

// По результату запроса по шапке документа формируем движения по регистрам.
//
// Параметры: 
//  РежимПроведения           - режим проведения документа (оперативный или неоперативный),
//  СтруктураШапкиДокумента   - выборка из результата запроса по шапке документа,
//  ТаблицаПоТоварам          - таблица значений, содержащая данные для проведения и проверки ТЧ Товары
//  ТаблицаПоТаре             - таблица значений, содержащая данные для проведения и проверки ТЧ "Возвратная тара",
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоМатериалам, Отказ, Заголовок)
					
	ДвиженияПоРегистрамУпр(РежимПроведения, СтруктураШапкиДокумента,  ТаблицаПоМатериалам, Отказ, Заголовок);
	ДвиженияПоРегиструСписанныеМатериалыИзЭксплуатации(СтруктураШапкиДокумента, ТаблицаПоМатериалам, Отказ, Заголовок);
	
	Если Не Отказ И НЕ СтруктураШапкиДокумента.ИспользоватьРАУЗ Тогда
		
		СпецодеждаИСпецоснастка.ДвижениеПартийМатериалов(Ссылка, Движения.СписанныеМатериалыИзЭксплуатации.Выгрузить(), Заголовок)
		
	КонецЕсли;

КонецПроцедуры // ДвиженияПоРегистрам()

// Формирование движений по регистрам по управленческому учету.
//
Процедура ДвиженияПоРегистрамУпр(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоМатериалам, Отказ, Заголовок)
	
	Если Не СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		Возврат;
	КонецЕсли;

	// МАТЕРИАЛЫ ПО РЕГИСТРУ МатериалыВЭксплуатации.
	НаборДвижений = Движения.МатериалыВЭксплуатации;
	
	НаборДвижений.КонтрольОстатков(ЭтотОбъект, "Материалы", СтруктураШапкиДокумента, Отказ, Заголовок, РежимПроведения);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;	
	
	//////////////////
	// Движение расход
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоМатериалам, ТаблицаДвижений);
	ТаблицаДвижений.ЗаполнитьЗначения(Подразделение,"Подразделение");
	ТаблицаДвижений.ЗаполнитьЗначения(ВидДвиженияНакопления.Расход, "ВидДвижения");
	
	ТаблицаДвижений.ЗаполнитьЗначения( Дата  , "Период");
	ТаблицаДвижений.ЗаполнитьЗначения( Истина, "Активность");
	ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.КодыОперацийМатериалыВЭксплуатации.СписаниеИзЭксплуатации, "КодОперации");
	
	Движения.МатериалыВЭксплуатации.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвиженияПоРегистрамУпр()

Процедура ЗаполнитьКолонкиРегистраСписанныеМатериалыИзЭксплуатацииУпр(ТаблицаДвижений, СтруктураШапкиДокумента, ТаблицаПоМатериалам)

	Если НЕ СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		
		Возврат
		
	КонецЕсли;
	
	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.Подразделение    , "Подразделение");
	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.ОтражатьВУправленческомУчете, "ОтражатьВУправленческомУчете");
	
КонецПроцедуры // ЗаполнитьКолонкиРегистраСписанныеТоварыПоТоварамУпр()

Процедура ЗаполнитьКолонкиРегистраСписанныеМатериалыИзЭксплуатацииРегл(ТаблицаДвижений, СтруктураШапкиДокумента, ТаблицаПоМатериалам)

	Если НЕ СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		
		Возврат
		
	КонецЕсли;

	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете , "ОтражатьВБухгалтерскомУчете");
	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.Организация                 , "Организация");
	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.ПодразделениеОрганизации    , "ПодразделениеОрганизации");
	
КонецПроцедуры // ЗаполнитьКолонкиРегистраСписанныеТоварыПоТоварамРегл()

// Формирование движений по регистру СписанныеМатериалыИзЭксплуатации.
//
Процедура ДвиженияПоРегиструСписанныеМатериалыИзЭксплуатации(СтруктураШапкиДокумента, ТаблицаПоМатериалам, Отказ, Заголовок)
	
	Если СтруктураШапкиДокумента.ИспользоватьРАУЗ Тогда   
		Возврат;		                   
	КонецЕсли; 
	
	// МАТЕРИАЛЫ ПО РЕГИСТРУ СписанныеМатериалыИзЭксплуатации.
	НаборДвижений = Движения.СписанныеМатериалыИзЭксплуатации;

	// Получим таблицу значений, совпадающую со структурой набора записей регистра.
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();

	// Заполним таблицу движений.
	ОбщегоНазначения.ЗагрузитьВТаблицуЗначений(ТаблицаПоМатериалам, ТаблицаДвижений);
	
	// Недостающие поля.
	Инд = 0;
	Для каждого Строка Из ТаблицаДвижений Цикл
		Инд = Инд+1;
		Строка.НомерСтрокиДокумента = Инд;
	КонецЦикла;
	
	ТаблицаДвижений.ЗаполнитьЗначения(Дата,   "Период");
	ТаблицаДвижений.ЗаполнитьЗначения(Ссылка, "Регистратор");
	ТаблицаДвижений.ЗаполнитьЗначения(Истина, "Активность");

	ТаблицаДвижений.ЗаполнитьЗначения(Перечисления.КодыОперацийПартииМатериаловВЭксплуатации.СписаниеИзЭксплуатации, "КодОперации");
	ТаблицаДвижений.ЗаполнитьЗначения(СтруктураШапкиДокумента.УказыватьДокументПередачи                            , "УказыватьДокументПередачи");
    	
	ЗаполнитьКолонкиРегистраСписанныеМатериалыИзЭксплуатацииУпр(ТаблицаДвижений, СтруктураШапкиДокумента, ТаблицаПоМатериалам);
	ЗаполнитьКолонкиРегистраСписанныеМатериалыИзЭксплуатацииРегл(ТаблицаДвижений, СтруктураШапкиДокумента, ТаблицаПоМатериалам);
	
	НаборДвижений.мПериод          = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;

	Если Не Отказ Тогда
		
		Движения.СписанныеМатериалыИзЭксплуатации.ВыполнитьДвижения();
		// необходимо записать для формирования списания партий
		Движения.СписанныеМатериалыИзЭксплуатации.Записать();
		
	КонецЕсли;
	
КонецПроцедуры // ДвиженияПоРегиструСписанныеМатериалыИзЭксплуатации()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ПОДГОТОВКИ ТАБЛИЦ ЗНАЧЕНИЙ ДЛЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Выгружает результат запроса в табличную часть, добавляет ей необходимые колонки для проведения.
//
// Параметры: 
//  РезультатЗапросаПоТоварам - результат запроса по табличной части "Материалы",
//  СтруктураШапкиДокумента   - выборка по результату запроса по шапке документа.
//
// Возвращаемое значение:
//  Сформированная таблица значений.
//
Функция ПодготовитьТаблицуМатериалов(РезультатЗапросаПоМатериалам, СтруктураШапкиДокумента, Отказ, Заголовок)

	ТаблицаМатериалов = РезультатЗапросаПоМатериалам.Выгрузить();
	
	Для каждого СтрокаТЧ Из ТаблицаМатериалов Цикл
	
		СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(СтрокаТЧ.НомерСтроки) +
		                                """ табличной части ""Материалы"": ";
										

		
		Если ОтражатьВБухгалтерскомУчете Тогда
		
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ВидМатериала) Тогда
					
					ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Символы.ПС + Символы.Таб
					                 + "В назначении использования <" + СтрокаТЧ.СхемаНазначенияИспользования 
									 + "> не выбран ""Вид материала"".",
									 Отказ, Заголовок);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.СчетПередачиБУ) Тогда
				
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Символы.ПС + Символы.Таб
				                 + "В назначении использования <" + СтрокаТЧ.СхемаНазначенияИспользования 
								 + "> не выбран ""Счет передачи"".",
								 Отказ, Заголовок);
				
			КонецЕсли;
			
			Если (СтрокаТЧ.ВидМатериала <> Перечисления.ВидыМатериалов.МалоценныйБыстроизнашивающийсяПредмет)
				  И НЕ ЗначениеЗаполнено(СтрокаТЧ.СчетАмортизацииБУ) Тогда
				
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Символы.ПС + Символы.Таб
				                 + "В назначении использования <" + СтрокаТЧ.СхемаНазначенияИспользования 
								 + "> не выбран ""Счет амортизации"".",
								 Отказ, Заголовок);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СтрокаТЧ.НалоговоеНазначение) Тогда
				
				ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Символы.ПС + Символы.Таб
				                 + "Не заполнено ""Налоговое назначение"".",
								 Отказ, Заголовок);
				
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЦикла;
	
	Возврат ТаблицаМатериалов;

КонецФункции // ПодготовитьТаблицуМатериалов()

//////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события ОбработкаПроведения
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	СтруктураШапкиДокумента = ПроверкаРеквизитов(Отказ, Заголовок);
	
	// первый этап проверки закончен
	Если Отказ Тогда
		
		Возврат
		
	КонецЕсли;
	
	// Подготовим таблицу материалов для проведения.
	СтруктураПолей = Новый Структура();
	СтруктураПолей.Вставить("Номенклатура"        				, "Номенклатура");
	СтруктураПолей.Вставить("Услуга"              				, "Номенклатура.Услуга");
	СтруктураПолей.Вставить("Набор"               				, "Номенклатура.Набор");
	СтруктураПолей.Вставить("Количество"          				, "Количество * Коэффициент /Номенклатура.ЕдиницаХраненияОстатков.Коэффициент");
	
	СтруктураПолей.Вставить("ХарактеристикаНоменклатуры"		, "ХарактеристикаНоменклатуры");
	СтруктураПолей.Вставить("СерияНоменклатуры"         		, "СерияНоменклатуры");
	
	СтруктураПолей.Вставить("ФизЛицо"         					, "ФизЛицо");
	СтруктураПолей.Вставить("СхемаНазначенияИспользования"      , "СхемаНазначенияИспользования");
	СтруктураПолей.Вставить("ВидМатериала"                  	, "СхемаНазначенияИспользования.ВидМатериала");
	СтруктураПолей.Вставить("СпособОтраженияРасходов"	        , "СпособОтраженияРасходов");
	СтруктураПолей.Вставить("СрокПолезногоИспользования"	    , "СрокПолезногоИспользования");
	
	СтруктураПолей.Вставить("ДокументПередачи"              	, "ДокументПередачи");
	
	СтруктураПолей.Вставить("НалоговоеНазначение"              	, "НалоговоеНазначение");
	
	СтруктураПолей.Вставить("Качество"         					, "Качество");
	СтруктураПолей.Вставить("НомерСтроки"         				, "НомерСтроки");
	
	ДополнитьСтруктуруПолейТабличнойЧастиМатериалыРегл(СтруктураПолей);	
	РезультатЗапросаПоМатериалам = УправлениеЗапасами.СформироватьЗапросПоТабличнойЧасти(ЭтотОбъект, "Материалы", СтруктураПолей);
	ТаблицаПоМатериалам = ПодготовитьТаблицуМатериалов(РезультатЗапросаПоМатериалам, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// Движения по документу.
	Если Не Отказ Тогда
		ДвиженияПоРегистрам(РежимПроведения, СтруктураШапкиДокумента, ТаблицаПоМатериалам, Отказ, Заголовок);
	КонецЕсли;
	
	// подготовим таблицы для РАУЗ 
	Если СтруктураШапкиДокумента.ИспользоватьРАУЗ Тогда
		
		ТаблицаПоМНА = ТаблицаПоМатериалам.СкопироватьКолонки();
		ТаблицаПоМБП = ТаблицаПоМатериалам.СкопироватьКолонки();
		
		Для Каждого СтрокаМатериалы Из ТаблицаПоМатериалам Цикл    
			Если СтрокаМатериалы.ВидМатериала = Перечисления.ВидыМатериалов.МалоценныйБыстроизнашивающийсяПредмет Тогда   
				НоваяСтрока = ТаблицаПоМБП.Добавить();
			Иначе
				НоваяСтрока = ТаблицаПоМНА.Добавить();
			КонецЕсли; 
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМатериалы);
		КонецЦикла; 
		
		//Сделаем переменные доступными из подписок на события
		ДополнительныеСвойства.Вставить("СтруктураШапкиДокумента", СтруктураШапкиДокумента);
		ДополнительныеСвойства.Вставить("СтруктураТабличныхЧастей", Новый Структура("ТаблицаПоМатериалам, ТаблицаПоМНА, ТаблицаПоМБП", ТаблицаПоМатериалам, ТаблицаПоМНА, ТаблицаПоМБП));
	
	КонецЕсли;
	
КонецПроцедуры	// ОбработкаПроведения()

// Процедура - обработчик события ОбработкаЗаполнения
//
Процедура ОбработкаЗаполнения(Основание)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
		
		// Заполнение шапки
		ОтражатьВБухгалтерскомУчете  = Основание.ОтражатьВБухгалтерскомУчете;
		ОтражатьВУправленческомУчете = Основание.ОтражатьВУправленческомУчете;
		Организация                  = Основание.Организация;
		Подразделение                = Основание.Подразделение;
		ПодразделениеОрганизации     = Основание.ПодразделениеОрганизации;
		Комментарий                  = Основание.Комментарий;
		Ответственный                = Основание.Ответственный;
		УказыватьДокументПередачи    = Истина;
		
		Для Каждого ТекСтрокаМатериалы Из Основание.Материалы Цикл
			
			НоваяСтрока = Материалы.Добавить();
			
			НоваяСтрока.Номенклатура               = ТекСтрокаМатериалы.Номенклатура;
			НоваяСтрока.ХарактеристикаНоменклатуры = ТекСтрокаМатериалы.ХарактеристикаНоменклатуры;
			НоваяСтрока.СерияНоменклатуры          = ТекСтрокаМатериалы.СерияНоменклатуры;
			
			НоваяСтрока.ЕдиницаИзмерения           = ТекСтрокаМатериалы.ЕдиницаИзмерения;
			НоваяСтрока.ЕдиницаИзмеренияМест       = ТекСтрокаМатериалы.ЕдиницаИзмеренияМест;
			НоваяСтрока.Количество                 = ТекСтрокаМатериалы.Количество;
			НоваяСтрока.КоличествоМест             = ТекСтрокаМатериалы.КоличествоМест;
			НоваяСтрока.Коэффициент                = ТекСтрокаМатериалы.Коэффициент;
			НоваяСтрока.Качество                   = ТекСтрокаМатериалы.Качество;
			
			НоваяСтрока.ФизЛицо 				     	= ТекСтрокаМатериалы.ФизЛицо;
			НоваяСтрока.СхемаНазначенияИспользования 	= ТекСтрокаМатериалы.СхемаНазначенияИспользования;
			НоваяСтрока.СпособОтраженияРасходов 		= ТекСтрокаМатериалы.СпособОтраженияРасходов;
			НоваяСтрока.СрокПолезногоИспользования 		= ТекСтрокаМатериалы.СрокПолезногоИспользования;
			
			НоваяСтрока.ДокументПередачи = Основание;
			
			НоваяСтрока.НалоговоеНазначение 	= ТекСтрокаМатериалы.НалоговоеНазначение;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры // ОбработкаЗаполнения()

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтражатьВБухгалтерскомУчете Тогда
		НалоговыйУчет.ЗаполнитьНалоговыеНазначенияВТабличныхЧастяхПередЗаписьюДокумента(
			"Поступление",
			Дата,
			Организация,
			Материалы 	// ТабличнаяЧастьТовары
		);
	КонецЕсли;
	
	// очистка не используемых полей	
	Если Не УказыватьДокументПередачи Тогда
		
		Для каждого СтрокаТЧ Из Материалы Цикл
		
			СтрокаТЧ.ДокументПередачи = Неопределено;	
		
		КонецЦикла;
		
	КонецЕсли;
	
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

КонецПроцедуры

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
мВалютаУправленческогоУчета = глЗначениеПеременной("ВалютаУправленческогоУчета");
