Перем НП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура АвтозаполнениеПроизвольная() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "ВЫБРАТЬ
	                     |	ВложенныйЗапрос.Период КАК Период,
	                     |	СУММА(ВложенныйЗапрос.Начисления) КАК СовокупныйДоход,
	                     |	СУММА(ВложенныйЗапрос.Удержания) КАК Удержания,
	                     |	СУММА(ВложенныйЗапрос.СуммаКВыплате) КАК СуммаКВыплате
	                     |ИЗ
	                     |	(ВЫБРАТЬ
	                     |		Начисления.ПериодРегистрации КАК Период,
	                     |		СУММА(Начисления.Результат) КАК Начисления,
	                     |		NULL КАК Удержания,
	                     |		СУММА(Начисления.Результат) КАК СуммаКВыплате
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Результат,
	                     |			НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
	                     |		ИЗ
	                     |			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации
	                     |) КАК Начисления
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Начисления.ПериодРегистрации
	                     |	
	                     |	ОБЪЕДИНИТЬ ВСЕ
	                     |	
	                     |	ВЫБРАТЬ
	                     |		Удержания.ПериодРегистрации,
	                     |		NULL,
	                     |		СУММА(Удержания.Результат),
	                     |		СУММА(-Удержания.Результат)
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	                     |			СУММА(ВзносыВФонды.Результат) КАК Результат
	                     |		ИЗ
	                     |			РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
	                     |		ГДЕ
	                     |			ВзносыВФонды.Сотрудник = &Сотрудник
	                     |			И ВзносыВФонды.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ВзносыВФонды.Организация.Ссылка = &парамОрганизация
	                     |			И ВзносыВФонды.Результат <> 0
	                     |			И (НЕ ВзносыВФонды.Налог В ИЕРАРХИИ (&ГруппаНалоговФОТ))
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(ВзносыВФонды.ПериодРегистрации, МЕСЯЦ)
	                     |		
	                     |		ОБЪЕДИНИТЬ ВСЕ
	                     |		
	                     |		ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ),
	                     |			СУММА(УдержанияРаботниковОрганизаций.Результат)
	                     |		ИЗ
	                     |			РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			УдержанияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И УдержанияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	                     |			И УдержанияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	                     |		
	                     |		ОБЪЕДИНИТЬ ВСЕ
	                     |		
	                     |		ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ),
	                     |			СУММА(ВзаиморасчетыПоНДФЛОбороты.НалогПриход)
	                     |		ИЗ
	                     |			РегистрНакопления.ВзаиморасчетыПоНДФЛ.Обороты(, , Месяц, ) КАК ВзаиморасчетыПоНДФЛОбороты
	                     |		ГДЕ
	                     |			ВзаиморасчетыПоНДФЛОбороты.Сотрудник = &Сотрудник
	                     |			И ВзаиморасчетыПоНДФЛОбороты.Период МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ВзаиморасчетыПоНДФЛОбороты.Организация.Ссылка = &парамОрганизация
	                     |			И ВзаиморасчетыПоНДФЛОбороты.НалогПриход <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(ВзаиморасчетыПоНДФЛОбороты.Период, МЕСЯЦ)) КАК Удержания
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Удержания.ПериодРегистрации) КАК ВложенныйЗапрос
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВложенныйЗапрос.Период";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	
	Запрос.УстановитьПараметр("ГруппаНалоговФОТ", Справочники.Налоги.ВзносыФОТ);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Строка = Доходы.Добавить();
		
		Строка.Период			= Выборка.Период;
		Строка.СовокупныйДоход	= Выборка.СовокупныйДоход;
		Строка.Удержания		= Выборка.Удержания;
		Строка.СуммаКВыплате	= Выборка.СуммаКВыплате;
	КонецЦикла;
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеСоцстрах() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
	"ВЫБРАТЬ
	|РезультатыБезОграничения.ПериодРегистрации КАК Период,
	|РезультатыБезОграничения.Налог КАК Налог,
	|РезультатыБезОграничения.Дней КАК ОтработаноДней,
	|РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
	|ВЫБОР КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.ВсегоОблагоемое 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатВсего,
	|ВЫБОР КОГДА РезультатыБезОграничения.РезультатОсновное <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатОсновное 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатОсновное,
	|ВЫБОР
	|КОГДА (РезультатыБезОграничения.РезультатОсновное+РезультатыБезОграничения.РезультатСовместительство)<= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатСовместительство 
	|КОГДА РезультатыБезОграничения.РезультатОсновное >= РезультатыБезОграничения.Предел
	|ТОГДА 0
	|ИНАЧЕ
	|РезультатыБезОграничения.Предел - РезультатыБезОграничения.РезультатОсновное
	|КОНЕЦ КАК РезультатСовместительство,
	|РезультатыБезОграничения.Предел КАК Предел
	|ИЗ
	|(ВЫБРАТЬ
	|СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК ВсегоОблагоемое,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней
	|ИНАЧЕ 0
	|КОНЕЦ) КАК Дней,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатОсновное,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатСовместительство,
	|НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|ВидыРасчетовВзносовВФонды.ВидРасчета КАК Налог,
	|СведенияОВзносахВФонды.Предел  КАК Предел
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период
	|ГДЕ
	|	ВидыРасчетовВзносовВФонды.Налог = &Соцстрах
	|СГРУППИРОВАТЬ ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)
	|)КАК ВидыРасчетовВзносовВФондыДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|ПО ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период
	| И ВидыРасчетовВзносовВФонды.Налог = &Соцстрах
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
	|	СведенияОВзносахВФонды.Налог КАК Налог,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|	ПО Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|	И  Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
	|ГДЕ
	|	СведенияОВзносахВФонды.Налог = &ЕСВ
	|СГРУППИРОВАТЬ ПО Налог, ПериодРегистрации	
	|)КАК СведенияОВзносахВФондыДаты
	|ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период
	| И СведенияОВзносахВФонды.Налог = &ЕСВ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК ВзносыВФондыБазовыеВидыРасчета
	|ПО  ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета
	|   И ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ГДЕ
	|ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
	|И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	|И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	|И НЕ (ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, 
	|ВидыРасчетовВзносовВФонды.ВидРасчета, 
	|СведенияОВзносахВФонды.Предел
	|) КАК РезультатыБезОграничения
	|УПОРЯДОЧИТЬ ПО Период
	|";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("Соцстрах", Справочники.Налоги.Соцстрах);
	Запрос.УстановитьПараметр("ЕСВ", Справочники.Налоги.ЕСВРаботники);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеБезработица() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
	"ВЫБРАТЬ
	|РезультатыБезОграничения.ПериодРегистрации КАК Период,
	|РезультатыБезОграничения.Налог КАК Налог,
	|РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
	|ВЫБОР КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.ВсегоОблагоемое 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатВсего,
	|РезультатыБезОграничения.Предел КАК Предел,
	|РезультатыБезОграничения.УдержаноВзносов КАК РезультатВзносы,
	|РАЗНОСТЬДАТ(РезультатыБезОграничения.ПериодРегистрации,КОНЕЦПЕРИОДА(РезультатыБезОграничения.ПериодРегистрации,МЕСЯЦ),ДЕНЬ)+1 - ЕСТЬNULL(РезультатыБезОграничения.НеявкиКалендарные,0) КАК КалендарныеДни,
	|РезультатыБезОграничения.НеявкиКалендарные КАК НеявкиКалендарные
	|ИЗ
	|(ВЫБРАТЬ
	|СУММА(
	| ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	| ТОГДА 0
	| ИНАЧЕ ОсновныеНачисленияРаботниковОрганизаций.Результат
	| КОНЕЦ) КАК ВсегоОблагоемое,
	|НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|ВидыРасчетовВзносовВФонды.ВидРасчета КАК Налог,
	|СведенияОВзносахВФонды.Предел  КАК Предел,
	|ВзносыСотрудника.УдержаноВзносов КАК УдержаноВзносов,
	|Неявки.Календарные КАК НеявкиКалендарные
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период
	|ГДЕ
	|	ВидыРасчетовВзносовВФонды.Налог = &Безработица
	|СГРУППИРОВАТЬ ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)
	|)КАК ВидыРасчетовВзносовВФондыДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|ПО ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период
	| И ВидыРасчетовВзносовВФонды.Налог = &Безработица
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
	|	СведенияОВзносахВФонды.Налог КАК Налог,
	|	Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|	ПО Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|	И  Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
	|ГДЕ
	|	СведенияОВзносахВФонды.Налог = &ЕСВ
	|СГРУППИРОВАТЬ ПО Налог, ПериодРегистрации	
	|)КАК СведенияОВзносахВФондыДаты
	|ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период
	| И СведенияОВзносахВФонды.Налог = &ЕСВ
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК ВзносыВФондыБазовыеВидыРасчета
	|ПО  ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета
	|   И ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|		ВзносыВФонды.ПериодРегистрации КАК ПериодРегистрации,
	|		ВзносыВФонды.Сотрудник КАК Сотрудник,
	|		Сумма(ВзносыВФонды.Результат) КАК УдержаноВзносов
	|	ИЗ
	|		РегистрРасчета.ВзносыВФонды КАК ВзносыВФонды
	|		ГДЕ ВзносыВФонды.ВидРасчета В
	|		(ВЫБРАТЬ
	|		   ВидРасчета
	|		 ИЗ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетов
	|		 ГДЕ ВидыРасчетов.Налог В (&СписокБезработица)  
	|		)
	|	СГРУППИРОВАТЬ ПО
	|		ВзносыВФонды.ПериодРегистрации,
	|		ВзносыВФонды.Сотрудник) КАК ВзносыСотрудника
	|ПО  ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = ВзносыСотрудника.ПериодРегистрации
	|   И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = ВзносыСотрудника.Сотрудник
	|ЛЕВОЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,МЕСЯЦ) КАК ПериодРегистрации,
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник,
	|		СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,ДЕНЬ)+1) КАК Календарные
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|		ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	|	СГРУППИРОВАТЬ ПО
	|		НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,МЕСЯЦ),
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник) КАК Неявки
	|ПО  ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = Неявки.ПериодРегистрации
	|   И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = Неявки.Сотрудник
	|ГДЕ
	|ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
	|И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	|И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	|И (НЕ (ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL)  ИЛИ ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки))
	|СГРУППИРОВАТЬ ПО
	|ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, 
	|ВидыРасчетовВзносовВФонды.ВидРасчета, 
	|СведенияОВзносахВФонды.Предел,
	|ВзносыСотрудника.УдержаноВзносов,
	|Неявки.Календарные
	|) КАК РезультатыБезОграничения
	|УПОРЯДОЧИТЬ ПО Период
	|";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	Запрос.УстановитьПараметр("Безработица", Справочники.Налоги.Безработица);
	Запрос.УстановитьПараметр("ЕСВ", Справочники.Налоги.ЕСВРаботники);
	СписокБезработица = Новый Массив(7);
	СписокБезработица[0]=(Справочники.Налоги.Безработица);
	СписокБезработица[1]=(Справочники.Налоги.ЕСВБольничные);
	СписокБезработица[2]=(Справочники.Налоги.ЕСВГПХ);
	СписокБезработица[3]=(Справочники.Налоги.ЕСВИнвалидыУТОГУТОС);
	СписокБезработица[4]=(Справочники.Налоги.ЕСВЛетчики);
	СписокБезработица[5]=(Справочники.Налоги.ЕСВРаботники);
	СписокБезработица[6]=(Справочники.Налоги.ЕСВРаботникиСР);
	Запрос.УстановитьПараметр("СписокБезработица", СписокБезработица);
	МассивНеявки = Новый Массив(3);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("УважительныеНеявки", МассивНеявки);
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеПенсия() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = 
	"ВЫБРАТЬ
	|РезультатыБезОграничения.ПериодРегистрации КАК Период,
	|РезультатыБезОграничения.Дней КАК Дней,
	|РезультатыБезОграничения.ВсегоОблагоемое КАК ВсегоОблагаемое,
	|ВЫБОР КОГДА РезультатыБезОграничения.ВсегоОблагоемое <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.ВсегоОблагоемое 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатВсего,
	|ВЫБОР КОГДА РезультатыБезОграничения.РезультатОсновное <= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатОсновное 
	|ИНАЧЕ РезультатыБезОграничения.Предел
	|КОНЕЦ КАК РезультатОсновное,
	|ВЫБОР
	|КОГДА (РезультатыБезОграничения.РезультатОсновное+РезультатыБезОграничения.РезультатСовместительство)<= РезультатыБезОграничения.Предел
	|ТОГДА РезультатыБезОграничения.РезультатСовместительство 
	|КОГДА РезультатыБезОграничения.РезультатОсновное >= РезультатыБезОграничения.Предел
	|ТОГДА 0
	|ИНАЧЕ
	|РезультатыБезОграничения.Предел - РезультатыБезОграничения.РезультатОсновное
	|КОНЕЦ КАК РезультатСовместительство,
	|РезультатыБезОграничения.Предел КАК Предел
	|ИЗ
	|(ВЫБРАТЬ
	|СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК ВсегоОблагоемое,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.ОтработаноДней
	|ИНАЧЕ 0
	|КОНЕЦ) КАК Дней,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатОсновное,
	|СУММА(ВЫБОР КОГДА ОсновныеНачисленияРаботниковОрганизаций.Назначение.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство) Тогда
	|ОсновныеНачисленияРаботниковОрганизаций.Результат
	|ИНАЧЕ 0
	|КОНЕЦ) КАК РезультатСовместительство,
	|НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	|СведенияОВзносахВФонды.Предел  КАК Предел
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВзносыВФондыРаботниковОрганизаций.Период) КАК Период,
	|	ВзносыВФондыРаботниковОрганизаций.Налог КАК Налог,
	|	ВзносыВФондыРаботниковОрганизаций.Сотрудник КАК Сотрудник,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВзносыВФондыРаботниковОрганизаций.Период
	|	 И Начисления.Сотрудник = ВзносыВФондыРаботниковОрганизаций.Сотрудник 
	|ГДЕ
	|ВзносыВФондыРаботниковОрганизаций.Налог В (&СписокПенсия)
	|СГРУППИРОВАТЬ ПО ВзносыВФондыРаботниковОрганизаций.Сотрудник, ВзносыВФондыРаботниковОрганизаций.Налог,	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)
	|)КАК ВзносыВФондыРаботниковОрганизацийДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВзносыВФондыРаботниковОрганизацийДаты.ПериодРегистрации
	| И ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = ВзносыВФондыРаботниковОрганизацийДаты.Сотрудник
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВзносыВФондыРаботниковОрганизаций КАК ВзносыВФондыРаботниковОрганизаций
	|ПО  ВзносыВФондыРаботниковОрганизаций.Налог = ВзносыВФондыРаботниковОрганизацийДаты.Налог
	| И  ВзносыВФондыРаботниковОрганизаций.Период = ВзносыВФондыРаботниковОрганизацийДаты.Период
	| И  ВзносыВФондыРаботниковОрганизаций.Сотрудник = ВзносыВФондыРаботниковОрганизацийДаты.Сотрудник
	| И  ВзносыВФондыРаботниковОрганизаций.Актуальность
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(
	|ВЫБРАТЬ
	|	МАКСИМУМ(ВидыРасчетовВзносовВФонды.Период) КАК Период,
	|	ВидыРасчетовВзносовВФонды.Налог КАК Налог,
	|	КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) КАК ПериодРегистрации
	|ИЗ  РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|	РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|	ПО КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ) >= ВидыРасчетовВзносовВФонды.Период
	|СГРУППИРОВАТЬ ПО ВидыРасчетовВзносовВФонды.Налог,КОНЕЦПЕРИОДА(Начисления.ПериодРегистрации,МЕСЯЦ)	
	|)КАК ВидыРасчетовВзносовВФондыДаты
	|ПО КОНЕЦПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации,МЕСЯЦ) = ВидыРасчетовВзносовВФондыДаты.ПериодРегистрации
	| И ВзносыВФондыРаботниковОрганизаций.Налог = ВидыРасчетовВзносовВФондыДаты.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ВидыРасчетовВзносовВФонды КАК ВидыРасчетовВзносовВФонды
	|ПО ВидыРасчетовВзносовВФонды.Период = ВидыРасчетовВзносовВФондыДаты.Период
	| И ВидыРасчетовВзносовВФонды.Налог = ВидыРасчетовВзносовВФондыДаты.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ
	|МАКСИМУМ(СведенияОВзносахВФонды.Период) КАК Период,
	|СведенияОВзносахВФонды.Налог КАК Налог,
	|Начисления.ПериодРегистрации КАК ПериодРегистрации
	|ИЗ
	|РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Начисления
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО Начисления.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И  Начисления.ПериодРегистрации >= СведенияОВзносахВФонды.Период
	|СГРУППИРОВАТЬ ПО СведенияОВзносахВФонды.Налог,Начисления.ПериодРегистрации	
	|)КАК СведенияОВзносахВФондыДаты
	|ПО ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации = СведенияОВзносахВФондыДаты.ПериодРегистрации
	| И СведенияОВзносахВФондыДаты.Налог = ВидыРасчетовВзносовВФонды.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|РегистрСведений.СведенияОВзносахВФонды КАК СведенияОВзносахВФонды
	|ПО СведенияОВзносахВФонды.Период = СведенияОВзносахВФондыДаты.Период
	| И СведенияОВзносахВФонды.Налог = СведенияОВзносахВФондыДаты.Налог
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|ПланВидовРасчета.ВзносыВФонды.БазовыеВидыРасчета КАК ВзносыВФондыБазовыеВидыРасчета
	|ПО  ВзносыВФондыБазовыеВидыРасчета.Ссылка = ВидыРасчетовВзносовВФонды.ВидРасчета
	|   И ВзносыВФондыБазовыеВидыРасчета.ВидРасчета = ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета
	|ГДЕ
	|ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &парамСотрудник
	|И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	|И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	|И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	|И НЕ (ВзносыВФондыБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL)
	|СГРУППИРОВАТЬ ПО
	|ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, 
	|СведенияОВзносахВФонды.Предел
	|) КАК РезультатыБезОграничения
	|УПОРЯДОЧИТЬ ПО Период
	|";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
	СписокПенсия = Новый Массив(8);
	СписокПенсия[0]=(Справочники.Налоги.Пенсионный1_5);
	СписокПенсия[1]=(Справочники.Налоги.Пенсионный);
	СписокПенсия[2]=(Справочники.Налоги.ЕСВБольничные);
	СписокПенсия[3]=(Справочники.Налоги.ЕСВГПХ);
	СписокПенсия[4]=(Справочники.Налоги.ЕСВИнвалидыУТОГУТОС);
	СписокПенсия[5]=(Справочники.Налоги.ЕСВЛетчики);
	СписокПенсия[6]=(Справочники.Налоги.ЕСВРаботники);
	СписокПенсия[7]=(Справочники.Налоги.ЕСВРаботникиСР);
	Запрос.УстановитьПараметр("СписокПенсия", СписокПенсия);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Доходы.Загрузить(ТЗ);
	
КонецПроцедуры //  Автозаполнение

Процедура АвтозаполнениеСубсидия() Экспорт
	
	Доходы.Очистить();
	ДоходыТекстЗапроса = "ВЫБРАТЬ
	                     |	ВложенныйЗапрос.Период КАК Период,
	                     |	СУММА(ВложенныйЗапрос.СовокупныйДоход) КАК СовокупныйДоход,
	                     |	СУММА(ВложенныйЗапрос.НачисленоЗП) КАК НачисленоЗП,
	                     |	СУММА(ВложенныйЗапрос.НачисленоПрочее) КАК НачисленоПрочее,
						 |	СУММА(ВложенныйЗапрос.Удержания) КАК Алименты
	                     |ИЗ
	                     |	(ВЫБРАТЬ
	                     |		Начисления.ПериодРегистрации КАК Период,
						 |		СУММА(Начисления.Результат) КАК СовокупныйДоход,
						 |      СУММА(ВЫБОР 
						 |			КОГДА Начисления.ВидРасчета.СчетУчета В (&СчетаЗарплата) ТОГДА
						 |			Начисления.Результат
						 |			ИНАЧЕ 0
						 |		КОНЕЦ) КАК НачисленоЗП,
						 |      СУММА(ВЫБОР 
						 |			КОГДА Начисления.ВидРасчета.СчетУчета В (&СчетаЗарплата) ТОГДА
						 |			0
						 |			ИНАЧЕ Начисления.Результат
						 |		КОНЕЦ) КАК НачисленоПрочее,
					     |		NULL КАК Удержания
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			СУММА(ОсновныеНачисленияРаботниковОрганизаций.Результат) КАК Результат,
						 |			ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета КАК ВидРасчета,
	                     |			НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации
	                     |		ИЗ
	                     |			РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			ОсновныеНачисленияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
	                     |			И ОсновныеНачисленияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, ОсновныеНачисленияРаботниковОрганизаций.ВидРасчета 
	                     |) КАК Начисления
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Начисления.ПериодРегистрации
	                     |	
	                     |	ОБЪЕДИНИТЬ ВСЕ
	                     |	
	                     |	ВЫБРАТЬ
	                     |		Удержания.ПериодРегистрации,
	                     |		NULL,
						 |		NULL,
						 |		NULL,
	                     |		СУММА(Удержания.Результат)
	                     |	ИЗ
	                     |		(ВЫБРАТЬ
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ) КАК ПериодРегистрации,
	                     |			СУММА(УдержанияРаботниковОрганизаций.Результат) КАК Результат
	                     |		ИЗ
	                     |			РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	                     |		ГДЕ
	                     |			УдержанияРаботниковОрганизаций.Сотрудник = &Сотрудник
	                     |			И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &парамДатаНач И &парамДатаКон
	                     |			И УдержанияРаботниковОрганизаций.Организация.Ссылка = &парамОрганизация
						 |			И УдержанияРаботниковОрганизаций.ВидРасчета.СпособРасчета В (&ЭтоАлименты)
	                     |			И УдержанияРаботниковОрганизаций.Результат <> 0
	                     |		
	                     |		СГРУППИРОВАТЬ ПО
	                     |			НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизаций.ПериодРегистрации, МЕСЯЦ)
	                     |	) КАК Удержания
	                     |	
	                     |	СГРУППИРОВАТЬ ПО
	                     |		Удержания.ПериодРегистрации) КАК ВложенныйЗапрос
	                     |
	                     |СГРУППИРОВАТЬ ПО
	                     |	ВложенныйЗапрос.Период";
						 
	Запрос = Новый Запрос(ДоходыТекстЗапроса);
	
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаНач);
	Запрос.УстановитьПараметр("парамДатаКон", ДатаКон);
	Запрос.УстановитьПараметр("парамОрганизация", Организация);
    СчетаЗарплата = Новый Массив(3);
	СчетаЗарплата[0]=(Планысчетов.Хозрасчетный.РасчетыПоЗаработнойПлате);
	СчетаЗарплата[1]=(Планысчетов.Хозрасчетный.РасчетыПоДругимВыплатам);
	Запрос.УстановитьПараметр("СчетаЗарплата", СчетаЗарплата);
	ВидыАлиментов = Новый Массив(5);
	ВидыАлиментов[0] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыПроцентом;
	ВидыАлиментов[1] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыПроцентомДоПредела;
	ВидыАлиментов[2] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыФиксСуммой;
	ВидыАлиментов[3] = Перечисления.СпособыРасчетаОплатыТруда.АлиментыФиксСуммойДоПредела;
	Запрос.УстановитьПараметр("ЭтоАлименты", ВидыАлиментов);


	
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Доходы.Загрузить(ТЗ);	
	
КонецПроцедуры //  Автозаполнение


#Если Клиент Тогда

Функция ПечатьПроизвольная()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дт, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дт", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дт, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дт", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();
		
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Период КАК ДатаПриема
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПервых(, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период";
	
	ЗапросДатаПриема = Новый Запрос(ТекстЗапроса);
	ЗапросДатаПриема.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДатаПриема.УстановитьПараметр("Организация", Организация);
		
	РезультатДатаПриема = ЗапросДатаПриема.Выполнить().Выбрать();
	РезультатДатаПриема.Следующий();
				
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Период КАК ДатаУвольнения,
	|	Работники.ЗанимаемыхСтавок
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(, Организация=&Организация) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ,
	|	Работники.ЗанимаемыхСтавок УБЫВ";
		
	ЗапросДатаУвольнения = Новый Запрос(ТекстЗапроса);
	ЗапросДатаУвольнения.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДатаУвольнения.УстановитьПараметр("Организация", Организация);
	ЗапросДатаУвольнения.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДатаУвольнения = ЗапросДатаУвольнения.Выполнить().Выбрать();
	РезультатДатаУвольнения.Следующий();
				
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(Доходы.Период) КАК НачалоПериодаДоходов,
	|	МАКСИМУМ(КОНЕЦПЕРИОДА(Доходы.Период,МЕСЯЦ)) КАК ОкончаниеПериодаДоходов
	|ИЗ
	|	Документ.СправкаОДоходах.Доходы КАК Доходы
	|ГДЕ
	|	Доходы.Ссылка = &Ссылка";
		
	ЗапросПериодДоходов = Новый Запрос(ТекстЗапроса);
	ЗапросПериодДоходов.УстановитьПараметр("Ссылка", Ссылка);
		
	РезультатПериодДоходов = ЗапросПериодДоходов.Выполнить().Выбрать();
	РезультатПериодДоходов.Следующий();
				
	// получаем макет
	Макет = ПолучитьМакет("Макет");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
		
	Если  Сотрудник.Физлицо.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		ОбластьМакетаШапка.Параметры.он                     =НСтр("ru='он';uk='він'",КодЯзыкаПечать);
		ОкончаниеРаботал="";
	Иначе
		ОбластьМакетаШапка.Параметры.он                     =НСтр("ru='она';uk='вона'",КодЯзыкаПечать);
		ОкончаниеРаботал="а";
	КонецЕсли;	
		
	ТекстДоговор = "";
		
	Если РезультатДатаУвольнения.ЗанимаемыхСтавок=1 Тогда
		ТекстРаботает = НСтр("ru='работает в ';uk='працює в '",КодЯзыкаПечать) + Организация.НаименованиеПолное +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
		Формат(РезультатДатаПриема.ДатаПриема, "ДЛФ=Д")+НСтр("ru='г.';uk='р.'",КодЯзыкаПечать) + ТекстДоговор + НСтр("ru='. В настоящий момент занимает должность ';uk='. На даний момент займає посаду '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
	Иначе
		ТекстРаботает = НСтр("ru='работал';uk='працював'",КодЯзыкаПечать)+ОкончаниеРаботал+" в  "+Организация.НаименованиеПолное +НСтр("ru=' с ';uk=' з '",КодЯзыкаПечать) +
		Формат(РезультатДатаПриема.ДатаПриема, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'",КодЯзыкаПечать) + " по " + Формат(РезультатДатаУвольнения.ДатаУвольнения-86400, "ДЛФ=Д")+ НСтр("ru='г.';uk='р.'",КодЯзыкаПечать)  + ТекстДоговор + НСтр("ru=' на должности ';uk=' на посаді '",КодЯзыкаПечать) + РезультатДолжность.Должность.Наименование;
	КонецЕсли;
		
	ОбластьМакетаШапка.Параметры.Номер						= Номер;
	ОбластьМакетаШапка.Параметры.Дата						= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДатаНач					= Формат(МАКС(РезультатДатаПриема.ДатаПриема,РезультатПериодДоходов.НачалоПериодаДоходов), "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДатаКон					= Формат(?(РезультатДатаУвольнения.ЗанимаемыхСтавок=1,РезультатПериодДоходов.ОкончаниеПериодаДоходов,МИН(РезультатДатаУвольнения.ДатаУвольнения,РезультатПериодДоходов.ОкончаниеПериодаДоходов)), "ДЛФ=Д");
		
	ОбластьМакетаШапка.Параметры.ИдентификационныйКод		= Сотрудник.Физлицо.КодПоДРФО;
	ОбластьМакетаШапка.Параметры.ТекстРаботает				= ТекстРаботает;
		
	ОбластьМакетаШапка.Параметры.СуммаДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаПериод"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,			"Л="+КодЯзыкаПечать+"; ДФ='ММММ ` гггг'");
		ОбластьМакета.Параметры.СовокупныйДоход	= Формат(СтрокаТЧ.СовокупныйДоход,	"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.Удержания		= Формат(СтрокаТЧ.Удержания,		"ЧЦ=10; ЧДЦ=2");
		ОбластьМакета.Параметры.СуммаКВыплате	= Формат(СтрокаТЧ.СуммаКВыплате,	"ЧЦ=10; ЧДЦ=2");
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("СтрокаИтого");
	ОбластьМакета.Параметры.СовокупныйДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.Удержания		= Формат(Доходы.Итог("Удержания"),			"ЧЦ=10; ЧДЦ=2");
	ОбластьМакета.Параметры.СуммаКВыплате	= Формат(Доходы.Итог("СуммаКВыплате"),		"ЧЦ=10; ЧДЦ=2");
	ТабДокумент.Вывести(ОбластьМакета);
		
	//Дно
	ТекстЗапроса="ВЫБРАТЬ
	             |	ФИОФизЛицСрезПоследних.Фамилия,
	             |	ФИОФизЛицСрезПоследних.Имя,
	             |	ФИОФизЛицСрезПоследних.Отчество
	             |ИЗ
	             |	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	             |ГДЕ
	             |	ФИОФизЛицСрезПоследних.ФизЛицо = &ФизЛицо";
	Запрос = Новый Запрос(ТекстЗапроса);
		
	Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
	Отбор.СтруктурнаяЕдиница	= Организация;
	Отбор.ОтветственноеЛицо		= Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер;
		
	Выборка = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(Дата, Отбор);
	Для Каждого Строка Из Выборка Цикл
		Запрос.УстановитьПараметр("ФизЛицо",Строка.ФизическоеЛицо);
		ВыборкаФам = Запрос.Выполнить().Выбрать();
		ВыборкаФам.Следующий();
		ГлавныйБухгалтер = ВыборкаФам.Фамилия +" "+Лев(ВыборкаФам.Имя, 1)+"."+Лев(ВыборкаФам.Отчество, 1);
		Прервать;
	КонецЦикла;
	
	Отбор = Новый Структура("СтруктурнаяЕдиница, ОтветственноеЛицо");
	Отбор.СтруктурнаяЕдиница	= Организация;
	Отбор.ОтветственноеЛицо		= Перечисления.ОтветственныеЛицаОрганизаций.Руководитель;
		
	Выборка = РегистрыСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(Дата, Отбор);
	Для Каждого Строка Из Выборка Цикл
		Запрос.УстановитьПараметр("ФизЛицо",Строка.ФизическоеЛицо);
		ВыборкаФам = Запрос.Выполнить().Выбрать();
		ВыборкаФам.Следующий();
		Директор = ВыборкаФам.Фамилия +" "+Лев(ВыборкаФам.Имя, 1)+"."+Лев(ВыборкаФам.Отчество, 1);
		Прервать;
	КонецЦикла;


	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.НазначениеСправки	= НазначениеСправки;
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Директор			= Директор;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьСоцстрах()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетСоцСтрах");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	
	ОбластьМакетаШапка.Параметры.Номер			= Номер;
	ОбластьМакетаШапка.Параметры.Дата			= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
	//ОбластьМакетаШапка.Параметры.СуммаДоход	= Формат(Доходы.Итог("СовокупныйДоход"),	"ЧЦ=10; ЧДЦ=2");
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		ОбластьМакета.Параметры.ОтработаноДней	= СтрокаТЧ.ОтработаноДней;
		ОбластьМакета.Параметры.РезультатОсновное	= СтрокаТЧ.РезультатОсновное;
		ОбластьМакета.Параметры.РезультатСовместительство	= СтрокаТЧ.РезультатСовместительство;
		ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.ОтработаноДней	= Доходы.Итог("ОтработаноДней");
	ОбластьМакета.Параметры.РезультатОсновное	= Доходы.Итог("РезультатОсновное");
	ОбластьМакета.Параметры.РезультатСовместительство	= Доходы.Итог("РезультатСовместительство");
	ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Если  Доходы.Итог("ОтработаноДней") <> 0 Тогда
		Результат = Доходы.Итог("РезультатВсего")/Доходы.Итог("ОтработаноДней");
	Иначе
		Результат = 0;
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, глЗначениеПеременной("ВалютаРегламентированногоУчета"), "uk")+"  ( "+Формат(Цел(Результат),"ЧЦ=10; ЧДЦ=0; ЧН=0; ЧГ=")+" грн. "+Формат((Результат-Цел(Результат))*100,"ЧЦ=2; ЧДЦ=0; ЧН=00; ЧВН=")+" коп.)";
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьБезработица()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетБезработица");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	Если ЗначениеЗаполнено(Адрес) Тогда
		ОбластьМакетаШапка.Параметры.Организация = ОбластьМакетаШапка.Параметры.Организация + ", "+Адрес;
	Конецесли;	
	
	ОбластьМакетаШапка.Параметры.Номер			= Номер;
	ОбластьМакетаШапка.Параметры.Дата			= Формат(Дата, "ДЛФ=Д");
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		Если СтрокаТЧ.КалендарныеДни > 0 Тогда
			ОбластьМакета.Параметры.Месяц			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ""; Л=""uk""");
		Иначе
			ОбластьМакета.Параметры.Месяц			= СписокНеявок(СтрокаТЧ.Период);
		КонецЕсли;	
		ОбластьМакета.Параметры.КалендарныеДни	= Строка(СтрокаТЧ.КалендарныеДни)+ СписокНеявокПоДням(СтрокаТЧ.Период);
		ОбластьМакета.Параметры.ВсегоОблагаемое	= СтрокаТЧ.ВсегоОблагаемое;
		ОбластьМакета.Параметры.РезультатВсего	= СтрокаТЧ.РезультатВсего;
		ОбластьМакета.Параметры.РезультатВзносы	= СтрокаТЧ.РезультатВзносы;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.КалендарныеДни	= Доходы.Итог("КалендарныеДни");
	ОбластьМакета.Параметры.ВсегоОблагаемое	= Доходы.Итог("ВсегоОблагаемое");
	ОбластьМакета.Параметры.РезультатВсего	= Доходы.Итог("РезультатВсего");
	ОбластьМакета.Параметры.РезультатВзносы	= Доходы.Итог("РезультатВзносы");
	ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Если  Доходы.Итог("КалендарныеДни") <> 0 Тогда
		Результат1 = Доходы.Итог("РезультатВсего")/Доходы.Итог("КалендарныеДни");
		Результат2 = СтрокаТЧ.Предел/30.44;
		Если Результат2 = 0 Тогда
			Результат = Результат1;
		Иначе
			Результат = Мин(Результат1,Результат2);
		КонецЕсли;	
	Иначе
		Результат = 0;
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");

	Если Сотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.Совместительство Тогда
		ТекстЗапроса =
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	Работники.Период КАК ДатаУвольнения
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций КАК Работники
		|ГДЕ
		|	Работники.Сотрудник = &Сотрудник
		|	И Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|УПОРЯДОЧИТЬ ПО
		|	Работники.Период УБЫВ";
			
		ЗапросДатаУвольнения = Новый Запрос(ТекстЗапроса);
		ЗапросДатаУвольнения.УстановитьПараметр("Сотрудник", Сотрудник);
		ЗапросДатаУвольнения.УстановитьПараметр("Организация", Организация);
			
		РезультатДатаУвольнения = ЗапросДатаУвольнения.Выполнить().Выбрать();
		Пока РезультатДатаУвольнения.Следующий() Цикл
			ОбластьМакета.Параметры.ДатаУвольнения	= РезультатДатаУвольнения.ДатаУвольнения-1;
		КонецЦикла;	
		
	КонецЕсли;
	
	
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, глЗначениеПеременной("ВалютаРегламентированногоУчета"), "uk")+"  ( "+Формат(Цел(Результат),"ЧЦ=10; ЧДЦ=0; ЧН=0; ЧГ=")+" грн. "+Формат((Результат-Цел(Результат))*100,"ЧЦ=2; ЧДЦ=0; ЧН=00; ЧВН=")+" коп.)";
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьПенсия()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
		
	// получаем макет
	Макет = ПолучитьМакет("МакетПенсия");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	Результат = Доходы.Итог("РезультатВсего");
	ОбластьМакетаШапка.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, глЗначениеПеременной("ВалютаРегламентированногоУчета"), "uk");
	
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Таблица|ПерваяКолонка");
	ТабДокумент.Вывести(ОбластьМакета);
	Год = 0;
	Итог = 0;
	ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
	ТЧДоходы = Доходы.Выгрузить();
	ТЧДоходы.Сортировать("Период");
	Для каждого СтрокаТЧ Из ТЧДоходы Цикл
		Если Год(СтрокаТЧ.Период) <> Год Тогда
			Если Год > 0 Тогда
				ОбластьКолонка.Параметры.Итог = Итог;
				ТабДокумент.Присоединить(ОбластьКолонка);
			КонецЕсли;
			Год = Год(СтрокаТЧ.Период);
			Итог = 0;
			ОбластьКолонка = Макет.ПолучитьОбласть("Таблица|Колонка");
			ОбластьКолонка.Параметры.Год = Строка(Год)+" р.";
			ОбластьКолонка.Параметры.Январь = 0;
			ОбластьКолонка.Параметры.Февраль = 0;
			ОбластьКолонка.Параметры.Март = 0;
			ОбластьКолонка.Параметры.Апрель = 0;
			ОбластьКолонка.Параметры.Май = 0;
			ОбластьКолонка.Параметры.Июнь = 0;
			ОбластьКолонка.Параметры.Июль = 0;
			ОбластьКолонка.Параметры.Август = 0;
			ОбластьКолонка.Параметры.Сентябрь = 0;
			ОбластьКолонка.Параметры.Октябрь = 0;
			ОбластьКолонка.Параметры.Ноябрь = 0;
			ОбластьКолонка.Параметры.Декабрь = 0;
		КонецЕсли;	
		Если Месяц(СтрокаТЧ.Период) = 1 Тогда
			ОбластьКолонка.Параметры.Январь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 2 Тогда
			ОбластьКолонка.Параметры.Февраль = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 3 Тогда
			ОбластьКолонка.Параметры.Март = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 4 Тогда
			ОбластьКолонка.Параметры.Апрель = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 5 Тогда
			ОбластьКолонка.Параметры.Май = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 6 Тогда
			ОбластьКолонка.Параметры.Июнь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 7 Тогда
			ОбластьКолонка.Параметры.Июль = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 8 Тогда
			ОбластьКолонка.Параметры.Август = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 9 Тогда
			ОбластьКолонка.Параметры.Сентябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 10 Тогда
			ОбластьКолонка.Параметры.Октябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 11 Тогда
			ОбластьКолонка.Параметры.Ноябрь = СтрокаТЧ.РезультатВсего;
		ИначеЕсли Месяц(СтрокаТЧ.Период) = 12 Тогда
			ОбластьКолонка.Параметры.Декабрь = СтрокаТЧ.РезультатВсего;
		КонецЕсли;	
		Итог = Итог + СтрокаТЧ.РезультатВсего;	
	КонецЦикла;
	
	ОбластьКолонка.Параметры.Итог = Итог;
	ТабДокумент.Присоединить(ОбластьКолонка);
	
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	ГодНач = Год(ТЧДоходы[0].Период);
	ГодКон = Год(ТЧДоходы[ТЧДоходы.Количество()-1].Период);
	Если ГодНач = ГодКон Тогда
		Года = Строка(ГодНач);
	Иначе
		Года = Строка(ГодНач)+" - "+Строка(ГодКон);
	КонецЕсли;	
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;
	ОбластьМакета.Параметры.Года = Года;
	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

Функция ПечатьСубсидия()
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// получаем данные для печати
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ИЗ
	|		РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОФизЛицСрезПоследних
	|ГДЕ
	|	ФизЛицо = &ФизЛицо";
		
	ЗапросФИО = Новый Запрос(ТекстЗапроса);
	ЗапросФИО.УстановитьПараметр("ФизЛицо", Сотрудник.ФизЛицо);
	ЗапросФИО.УстановитьПараметр("Дата", Дата);
		
	РезультатФИО = ЗапросФИО.Выполнить().Выбрать();
	РезультатФИО.Следующий();
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Работники.Должность
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дт, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|	И Работники.Сотрудник.ВидЗанятости <> &ВидЗанятостиСовмещение
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период УБЫВ";
		
	ЗапросДолжность = Новый Запрос(ТекстЗапроса);
	ЗапросДолжность.УстановитьПараметр("Дт", Дата);
	ЗапросДолжность.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДолжность.УстановитьПараметр("Организация", Организация);
	ЗапросДолжность.УстановитьПараметр("ВидЗанятостиСовмещение", Перечисления.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство);
		
	РезультатДолжность = ЗапросДолжность.Выполнить().Выбрать();
	РезультатДолжность.Следующий();

		
	// получаем макет
	Макет = ПолучитьМакет("МакетСубсидия");
		
	//Выводим шапку
	ОбластьМакетаШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакетаШапка.Параметры.Физлицо = РезультатФИО.Фамилия +" "+РезультатФИО.Имя+" "+РезультатФИО.Отчество;
	ОбластьМакетаШапка.Параметры.Должность = РезультатДолжность.Должность;
	Если Сотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы Тогда
		ОбластьМакетаШапка.Параметры.ВидЗанятости = "основне";
	Иначе
		ОбластьМакетаШапка.Параметры.ВидЗанятости = "за сумісництвом";
	КонецЕсли;	
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Организация, Дата,,,"uk");
	ОбластьМакетаШапка.Параметры.Организация = СведенияОбОрганизации.ПолноеНаименование;
	ОбластьМакетаШапка.Параметры.Адрес = СведенияОбОрганизации.ЮридическийАдрес;
	ОбластьМакетаШапка.Параметры.Телефон = СведенияОбОрганизации.Телефоны;
	ОбластьМакетаШапка.Параметры.ЕДРПОУ = СведенияОбОрганизации.КодПоЕДРПОУ;
	
	ОбластьМакетаШапка.Параметры.ДРФО			= Сотрудник.Физлицо.КодПоДРФО;
			
	Срез = РегистрыСведений.КодыОрганизации.СрезПоследних(Дата, НОВЫЙ Структура("Организация",Организация));
	Если Срез.Количество() > 0 тогда
		ОбластьМакетаШапка.Параметры.ГНА = Срез[0].НалоговаяИнспекция;
	КонецЕсли;	
		
	ТабДокумент.Вывести(ОбластьМакетаШапка);
		
	// выводим строки
	ОбластьМакета = Макет.ПолучитьОбласть("Строка"); // строка периода
	Для каждого СтрокаТЧ Из Доходы Цикл
		ОбластьМакета.Параметры.Период			= Формат(СтрокаТЧ.Период,	"ДФ=""ММММ ` гггг""; Л=""uk""");
		ОбластьМакета.Параметры.НачисленоЗП	= СтрокаТЧ.НачисленоЗП;
		ОбластьМакета.Параметры.НачисленоПрочее	= СтрокаТЧ.НачисленоПрочее;
		ОбластьМакета.Параметры.Алименты	= СтрокаТЧ.Алименты;
		ТабДокумент.Вывести(ОбластьМакета);
	КонецЦикла;		
		
	//Итоги
	ОбластьМакета = Макет.ПолучитьОбласть("Итоги");
	ОбластьМакета.Параметры.НачисленоЗП	= Доходы.Итог("НачисленоЗП");
	ОбластьМакета.Параметры.НачисленоПрочее	= Доходы.Итог("НачисленоПрочее");
	ОбластьМакета.Параметры.Алименты	= Доходы.Итог("Алименты");
    ТабДокумент.Вывести(ОбластьМакета);
	
	//Дно
	ОтветственныеЛица = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата);
	Результат = Доходы.Итог("НачисленоЗП")+Доходы.Итог("НачисленоПрочее")-Доходы.Итог("Алименты");
	
	ОбластьМакета = Макет.ПолучитьОбласть("Дно");
	ОбластьМакета.Параметры.ПериодС = Формат(Доходы[0].Период,	"ДФ=""ММММ гггг""; Л=""uk""");
	ОбластьМакета.Параметры.ПериодПо = Формат(СтрокаТЧ.Период,	"ДФ=""ММММ гггг""; Л=""uk""");
	ОбластьМакета.Параметры.ДолжностьРуководителя	= ОтветственныеЛица.РуководительДолжность;
	ОбластьМакета.Параметры.Дата	= Дата;
	ОбластьМакета.Параметры.Номер	= Номер;
	ОбластьМакета.Параметры.Результат	= ОбщегоНазначения.СформироватьСуммуПрописью(Результат, глЗначениеПеременной("ВалютаРегламентированногоУчета"), "uk");
	ОбластьМакета.Параметры.ГлавныйБухгалтер	= ОтветственныеЛица.ГлавныйБухгалтер;
	ОбластьМакета.Параметры.Руководитель	= ОтветственныеЛица.Руководитель;

	ТабДокумент.Вывести(ОбластьМакета);
	
	Возврат ТабДокумент;
КонецФункции

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура  Печать(НазваниеМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение(НСтр("ru='Документ можно распечатать только после его записи';uk='Документ можна роздрукувати тільки після його запису'"));
		Возврат;
	КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	// Получить экземпляр документа на печать
	Если НазваниеМакета = "Справка" Тогда
		Если ПроверкаЗаполненияРеквизитов() Тогда
			Возврат;
		КонецЕсли;
		
		
		Если ВидСправки = Перечисления.ВидыСправокОДоходах.Произвольная Тогда
			ТабДокумент = ПечатьПроизвольная();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах Тогда	
			ТабДокумент = ПечатьСоцСтрах();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Безработица Тогда	
			ТабДокумент = ПечатьБезработица();	
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Пенсия Тогда	
			ТабДокумент = ПечатьПенсия();
		ИначеЕсли ВидСправки = Перечисления.ВидыСправокОДоходах.Субсидия Тогда	
			ТабДокумент = ПечатьСубсидия();	
		КонецЕсли;	
			
			
		УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер,НСтр("ru='Справка о доходах ';uk='Довідка про доходи '"));	
	КонецЕсли;
	
	

КонецПроцедуры // Печать

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Справка",НСтр("ru='Справка';uk='Довідка'"));

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Функция ПроверкаЗаполненияРеквизитов()
	Если Не ЗначениеЗаполнено(Организация) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана организация';uk='Не вказано організацію'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Сотрудник) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указан работник';uk='Не вказано працівника'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Дата) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указана дата справки';uk='Не вказано дату довідки'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДатаНач) ИЛИ Не ЗначениеЗаполнено(ДатаКон) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не указан период';uk='Не вказано період'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	
	Если Доходы.Количество() = 0 Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Не предоставлена информация о доходах';uk='Не надано інформацію про доходи'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕСли;
	
		Если ВидСправки = Перечисления.ВидыСправокОДоходах.Произвольная Тогда
		Для Каждого Строка ИЗ Доходы Цикл
			Если Строка.Период = Дата(1,1,1) Тогда
				ОбщегоНазначения.СообщитьОбОшибке(Локализация.СтрШаблон(НСтр("ru='В строке № ""¤1¤"" не указан период';uk='В строці № ""¤1¤"" не вказано період'"), Строка.НомерСтроки),,, СтатусСообщения.Важное);
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ВидСправки = Перечисления.ВидыСправокОДоходах.Соцстрах Тогда
		Если Доходы.Итог("ОтработаноДней") = 0 Тогда
			ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Количество отработанных дней не может равнятся 0';uk='Кількість відпрацьованих днів не може бути рівною 0'"),,,СтатусСообщения.Важное);
			Возврат Истина;
		КонецЕсли;			
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ЕстьNULL(Работники.Период, ДАТАВРЕМЯ(1,1,1)) КАК ДатаПриема
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПервых(, Организация=&Организация И ЗанимаемыхСтавок>0) КАК Работники
	|ГДЕ
	|	Работники.Сотрудник = &Сотрудник
	|УПОРЯДОЧИТЬ ПО
	|	Работники.Период";
	
	ЗапросДатаПриема = Новый Запрос(ТекстЗапроса);
	ЗапросДатаПриема.УстановитьПараметр("Сотрудник", Сотрудник);
	ЗапросДатаПриема.УстановитьПараметр("Организация", Организация);
		
	РезультатДатаПриема = ЗапросДатаПриема.Выполнить().Выбрать();
	РезультатДатаПриема.Следующий();
	
	Если НЕ ЗначениеЗаполнено(РезультатДатаПриема.ДатаПриема) Тогда
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru='Работник не принят на работу в данную организацию';uk='Працівник не прийнятий на работу в дану організацію'"),,,СтатусСообщения.Важное);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

Функция СписокНеявок(ДатаПериода)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК Причина
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	|		И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &парамСотрудник
	|       И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
	|";
						 
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаПериода);
	Запрос.УстановитьПараметр("парамДатаКон", КонецМесяца(ДатаПериода));
	МассивНеявки = Новый Массив(3);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("УважительныеНеявки", МассивНеявки);
	Неявки = Запрос.Выполнить().Выбрать();
	
	Результат = "";
	Пока Неявки.Следующий() Цикл
		Если Результат <> "" Тогда
			Результат = Результат + ", ";
		КонецЕсли;
		Если Неявки.Причина = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь Тогда
			Результат = Результат + "тимчасова непрацездатність";
		Иначе
			Результат = Результат + "відпустка";
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат Результат;
	
КонецФункции	

Функция СписокНеявокПоДням(ДатаПериода)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени КАК Причина,
	|		СУММА(РАЗНОСТЬДАТ(ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало,ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияКонец,ДЕНЬ)+1) КАК Календарные
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия КАК ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия
	|	ГДЕ
	|		ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени В(&УважительныеНеявки)
	|		И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.Сотрудник = &парамСотрудник
	|       И ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ПериодДействияНачало МЕЖДУ &парамДатаНач И &парамДатаКон
	|   СГРУППИРОВАТЬ ПО ОсновныеНачисленияРаботниковОрганизацийФактическийПериодДействия.ВидРасчета.ОбозначениеВТабелеУчетаРабочегоВремени
	|";
						 
	Запрос = Новый Запрос(ТекстЗапроса);
	
	Запрос.УстановитьПараметр("парамСотрудник", Сотрудник);
	Запрос.УстановитьПараметр("парамДатаНач", ДатаПериода);
	Запрос.УстановитьПараметр("парамДатаКон", КонецМесяца(ДатаПериода));
	МассивНеявки = Новый Массив(3);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам);
	МассивНеявки.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком);
	Запрос.УстановитьПараметр("УважительныеНеявки", МассивНеявки);
	Неявки = Запрос.Выполнить().Выбрать();
	
	Результат = "";
	Пока Неявки.Следующий() Цикл
		Если Результат <> "" Тогда
			Результат = Результат + ", ";
		КонецЕсли;
		Если Неявки.Причина = Справочники.КлассификаторИспользованияРабочегоВремени.Болезнь Тогда
			Результат = Результат + Строка(Неявки.Календарные)+" - хвороба";
		Иначе
			Результат = Результат + Строка(Неявки.Календарные)+ " - відпустка";
		КонецЕсли;	
	КонецЦикла;	
	
	Если Результат = "" Тогда 
		Возврат Результат;
	Иначе
		Возврат " ("+Результат+")";
	Конецесли;	
	
КонецФункции

#Если Клиент Тогда
НП = Новый НастройкаПериода;
#КонецЕсли
