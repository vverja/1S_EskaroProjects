// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Накладная") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Накладная", "Требование-накладная", ПечатьТребованиеНакладная(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "М-11 (Требование накладная)", ПечатьМ11(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры


// Функция формирует печатную форму М-11
//
Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапроса_Шапка = 
	"ВЫБРАТЬ
	|	Ссылка.Номер	КАК НомерДокумента,
	|	Ссылка.Дата	КАК ДатаДокумента,
	|	Ссылка.Дата	КАК ДатаСоставления,
	|	Ссылка.Организация,
	|	Ссылка.Склад,
	|	Ссылка.ПодразделениеОрганизации КАК Подразделение
	|	//ПОЛЕ_КорСчет, ВЫБОР КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ СчетЗатрат) = 1 ТОГДА
	|	//ПОЛЕ_КорСчет	МИНИМУМ(СчетЗатрат) 
	|	//ПОЛЕ_КорСчет ИНАЧЕ """" КОНЕЦ КАК КоррСчет
	|ИЗ
	|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
	|
	|ГДЕ
	|	ТребованиеНакладная.Ссылка = &ТекущийДокумент
	|//ПОЛЕ_КорСчет СГРУППИРОВАТЬ ПО Ссылка";
	
	ТекстЗапроса_Материалы = "
    |ВЫБРАТЬ
	|	ТребованиеНакладная.Номенклатура,
	|	ВЫРАЗИТЬ(ТребованиеНакладная.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК МатериалНаименование,
	|	ТребованиеНакладная.Номенклатура." + ТоварКод + " КАК НоменклатурныйНомер,
	|	ТребованиеНакладная.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТребованиеНакладная.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ТребованиеНакладная.Характеристика,
	|	ТребованиеНакладная.Серия,
	|	ТребованиеНакладная.Количество,
	|	ТребованиеНакладная.Счет,
	|	ТребованиеНакладная.СчетЗатрат КАК СчетПередачи,
	|	ТребованиеНакладная.НомерСтроки КАК НомерСтроки,
	|	ВЫРАЗИТЬ(
	|		ЕСТЬNULL(ТаблицаСебестоимостиОбороты.Стоимость, 0)
	|		* ТребованиеНакладная.Количество 
	|		* ТребованиеНакладная.Коэффициент
	|		/ ЕСТЬNULL(ТребованиеНакладная.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 1)
	|		/ ЕСТЬNULL(ТаблицаСебестоимостиОбороты.Количество, 1)
	|	 КАК ЧИСЛО(15,2) ) КАК Сумма
	|ИЗ (
	|	ВЫБРАТЬ
	|		ТребованиеНакладная.Номенклатура,
	|		ТребованиеНакладная.ЕдиницаИзмерения,
	|		ТребованиеНакладная.Коэффициент,
	|		ТребованиеНакладная.Счет,
	|		ТребованиеНакладная.СчетЗатрат,
	|		ТребованиеНакладная.ХарактеристикаНоменклатуры КАК Характеристика,
	|		ТребованиеНакладная.СерияНоменклатуры КАК Серия,
	|		СУММА(ТребованиеНакладная.Количество) КАК Количество,
	|		МИНИМУМ(ТребованиеНакладная.НомерСтроки) КАК НомерСтроки
	|	ИЗ
	|		Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладная
	|	ГДЕ
	|		ТребованиеНакладная.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТребованиеНакладная.Номенклатура,
	|		ТребованиеНакладная.ЕдиницаИзмерения,
	|		ТребованиеНакладная.Коэффициент,
	|		ТребованиеНакладная.ХарактеристикаНоменклатуры,
	|		ТребованиеНакладная.СерияНоменклатуры,
	|		ТребованиеНакладная.Счет,
	|		ТребованиеНакладная.СчетЗатрат
	|	) КАК ТребованиеНакладная
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ТаблицаСебестоимостиОбороты КАК ТаблицаСебестоимостиОбороты
	|		ПО ТребованиеНакладная.Номенклатура = ТаблицаСебестоимостиОбороты.Номенклатура
	|			И ТаблицаСебестоимостиОбороты.Регистратор = &Регистратор
	|			И ((ТребованиеНакладная.Характеристика = ТаблицаСебестоимостиОбороты.ХарактеристикаНоменклатуры) 
	|				ИЛИ (ТаблицаСебестоимостиОбороты.ХарактеристикаНоменклатуры = ""Не используется""))
	|			И ((ТребованиеНакладная.Серия = ТаблицаСебестоимостиОбороты.СерияНоменклатуры)
	|				ИЛИ (ТаблицаСебестоимостиОбороты.СерияНоменклатуры = ""Не используется""))
	|			И ((ТребованиеНакладная.Счет = ТаблицаСебестоимостиОбороты.СчетУчета) 
	|				ИЛИ (ТаблицаСебестоимостиОбороты.СчетУчета = ""Не используется""))
	|		
	|ГДЕ
	|	ТаблицаСебестоимостиОбороты.Регистратор = &ТекущийДокумент
	|	ИЛИ ТаблицаСебестоимостиОбороты.Регистратор ЕСТЬ NULL
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|";

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_М11";
	
	// Вывод заголовка
	Макет = ПолучитьОбщийМакет("М11");

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст = ТекстЗапроса_Шапка;
		Если Ссылка.ОтражатьВБухгалтерскомУчете Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "Документ.ТребованиеНакладная", "Документ.ТребованиеНакладная.Материалы");
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "//ПОЛЕ_КорСчет", "");
		Иначе
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"Ссылка.", "");
			Запрос.Текст = СтрЗаменить(Запрос.Текст,"ПодразделениеОрганизации", "Подразделение");
		КонецЕсли;

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		СтруктраПараметров = Новый Структура();
		СтруктраПараметров.Вставить("ТекущийДокумент", Ссылка);
		СтруктраПараметров.Вставить("Регистратор", Ссылка);
		СтруктраПараметров.Вставить("НачГраница", Новый Граница(Ссылка.Дата, ВидГраницы.Включая));

		ТекстЗапроса = ТекстЗапроса_Материалы;

		ТаблицаЗатрат = УправлениеЗапасами.ПолучитьТаблицуЗатратДляПечатиИЗаполненияДокументов(Ссылка, ТекстЗапроса, СтруктраПараметров);
		
		Если ТаблицаЗатрат = Неопределено Тогда
			Продолжить;
		КонецЕсли;	
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заполнить(Шапка);
		
		Область.Параметры.КодОперации = "Відпуск";

		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		
		Область.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование,", Ложь);
		
		Область.Параметры.КодПоЕДРПОУ = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации, "КодПоЕДРПОУ,", Ложь);
		
		ТабДокумент.Вывести(Область);
		
		ВысотаШапки   = ТабДокумент.ВысотаТаблицы;
		ШиринаТаблицы = ТабДокумент.ШиринаТаблицы;
		ТабДокумент.ПовторятьПриПечатиСтроки = ТабДокумент.Область("R" + ВысотаШапки);
		ТабДокумент.ОбластьПечати            = ТабДокумент.Область("C2:C" + ШиринаТаблицы);
		
		
		ОбластьПодвал   = Макет.ПолучитьОбласть("Подвал");
		ПараметрыПодвал = ОбластьПодвал.Параметры;
		
		КоличествоВВыборке     = ТаблицаЗатрат.Количество();
		КоличествоОбработанных = 1;
		// В форме сказано "Кількість найменувань". Будет выводиться количество позиций.
		ПараметрыПодвал.ИтогоКоличествоПрописью = ЧислоПрописью(КоличествоВВыборке, 
		                                                        "Л=uk_UA;НП=Ложь;НД=Ложь;", ",,,,,,,,0");
																
		ПараметрыПодвал.ИтогоСуммаПрописью = ЧислоПрописью(?(КоличествоВВыборке = 0, 0, ТаблицаЗатрат.Итог("Сумма")), "Л=uk_UA; ДП=Ложь", глЗначениеПеременной("ВалютаРегламентированногоУчета").ПараметрыПрописиНаУкраинском);
		
		
		Для Каждого ВыборкаПоСтрокам Из ТаблицаЗатрат Цикл

			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			
			Область.Параметры.Стоимость = ВыборкаПоСтрокам.Сумма;
			Область.Параметры.Цена = ?( ВыборкаПоСтрокам.Количество = 0, ВыборкаПоСтрокам.Сумма, Окр(ВыборкаПоСтрокам.Сумма / ВыборкаПоСтрокам.Количество, 2, 1));
			
			Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) 
			                                         + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
			
			Если КоличествоОбработанных = КоличествоВВыборке Тогда
				// Последняя запись. Ее не следует отрывать от подписей.
				
				МассивТаблиц = Новый Массив(2);
				МассивТаблиц[0] = Область;
				МассивТаблиц[1] = ОбластьПодвал;
				
				Если НЕ ТабДокумент.ПроверитьВывод(МассивТаблиц) Тогда
					
					ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
					
				КонецЕсли;
				
			КонецЕсли;
			
			ТабДокумент.Вывести(Область);		
			КоличествоОбработанных = КоличествоОбработанных + 1;

		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьПодвал);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ11()

// Функция формирует печатную форму документа
//
Функция ПечатьТребованиеНакладная(МассивОбъектов, ОбъектыПечати) Экспорт
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		Колонка = "Артикул";
		ТекстКодАртикул = "Артикул";
	ИначеЕсли ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Код Тогда
		Колонка = "Код";
		ТекстКодАртикул = "Код";
	Иначе
		Колонка         = "";
		ТекстКодАртикул = "Код";
	КонецЕсли;
	ОбластьСтроки = "Строка";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ТребованиеНакладная_ТН";
	
	Макет = ПолучитьМакет("ТребованиеНакладная");
	
	// печать производится на языке, указанном в настройках пользователя
	КодЯзыкаПечать = Локализация.ПолучитьЯзыкФормированияПечатныхФорм(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "РежимФормированияПечатныхФорм"));
	Макет.КодЯзыкаМакета = КодЯзыкаПечать;
	
	ТекстЗапроса_ТаблицаМатериалов = 
    "ВЫБРАТЬ
	|	МИНИМУМ(НомерСтроки) КАК НомПП,
	|	Номенклатура.Код КАК Код,
	|	Номенклатура.Артикул КАК Артикул,
	|	ВЫРАЗИТЬ(Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК Имя,
	|	ХарактеристикаНоменклатуры       	 КАК Характеристика,
	|	СерияНоменклатуры                	 КАК Серия,
	|	ЕдиницаИзмеренияМест КАК ЕдИзмМест,
	|	ЕдиницаИзмерения КАК ЕдИзм,
	|	СУММА(Количество) КАК Количество,
	|	СУММА(КоличествоМест) КАК КоличествоМест
	|
	|ИЗ
	|	Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладная
	|
	|ГДЕ
	|	ТребованиеНакладная.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	Номенклатура,
	|	ЕдиницаИзмерения,
	|	ЕдиницаИзмеренияМест,
	|	ХарактеристикаНоменклатуры,
	|	СерияНоменклатуры
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомПП
	|";

	ПервыйДокумент = Истина;
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.Текст =     "ВЫБРАТЬ
		|	Номер,
		|	Дата,
		|	Организация,
		|	Склад,
		|	"+?(Ссылка.ОтражатьВБухгалтерскомУчете, "ПодразделениеОрганизации", "Подразделение")+" КАК Подразделение
		|ИЗ
		|	Документ.ТребованиеНакладная КАК ТребованиеНакладная
		|
		|ГДЕ
		|	ТребованиеНакладная.Ссылка = &ТекущийДокумент";


		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	
		Запрос.Текст = ТекстЗапроса_ТаблицаМатериалов;

		ЗапросПоНоменклатуре = Запрос.Выполнить();

		Область = Макет.ПолучитьОбласть("Заголовок");
		Область.Параметры.ТекстЗаголовка = ОбщегоНазначения.СформироватьЗаголовокДокумента(Ссылка, НСтр("ru='Требование-накладная';uk='Накладна-вимога'", КодЯзыкаПечать), КодЯзыкаПечать);
		Область.Параметры.Заполнить(Шапка);
		Если Ссылка.РекламнаяПродукция Тогда
			Область.Параметры.НадписьПокупатель = "Покупатель:";
			Область.Параметры.Покупатель = Ссылка.Контрагент;
		КонецЕсли;
		ТабДокумент.Вывести(Область);
		

		//Вывод строк
		Область = Макет.ПолучитьОбласть(ОбластьСтроки);

		ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.Код = ВыборкаПоСтрокам[ТекстКодАртикул];

			Область.Параметры.Имя = СокрЛП(ВыборкаПоСтрокам.Имя) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
			ТабДокумент.Вывести(Область);

		КонецЦикла;

		// Вывод подвала
		Область = Макет.ПолучитьОбласть("Подписи");
		ТабДокумент.Вывести(Область);
		
		// Вывод комментария
		Область = Макет.ПолучитьОбласть("Комментарий");
		Область.Параметры.Комментарий = Ссылка.Комментарий;
		ТабДокумент.Вывести(Область);
		
		МестВсего = ЗапросПоНоменклатуре.Выгрузить().Итог("КоличествоМест");
		Если МестВсего = 0 Тогда
			УниверсальныеМеханизмы.СкрытьКолонкиВТабличномДокументе(ТабДокумент, "Мест", 2, "Заголовок");
		КонецЕсли;
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);

    КонецЦикла;

	Возврат ТабДокумент;

КонецФункции // ПечатьТребованиеНакладная()


// В функции описано, какие данные следует сохранять в шаблоне
//
Функция СтруктураДополнительныхДанныхФормы() Экспорт
	
	Возврат ХранилищаНастроек.ДанныеФорм.СформироватьСтруктуруДополнительныхДанных("Материалы");
	
КонецФункции
