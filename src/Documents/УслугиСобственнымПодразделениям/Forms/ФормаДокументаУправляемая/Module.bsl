////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		// Это существующий документ. 
		// Проверим, что его можно менять.
		
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);
		
	КонецЕсли;
	
КонецПроцедуры

// СОХРАНЕНИЕ И ВОССТАНОВЛЕНИЕ ДАННЫХ ИЗ НАСТРОЕК

&НаСервере
Процедура ПриСохраненииДанныхВНастройкахНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ДобавитьДополнительныеДанныеВНастройку(Объект, Настройки, Документы.УслугиСобственнымПодразделениям.СтруктураДополнительныхДанныхФормы());
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ХранилищаНастроек.ДанныеФорм.ЗаполнитьОбъектДополнительнымиДанными(Объект, Настройки, Документы.УслугиСобственнымПодразделениям.СтруктураДополнительныхДанныхФормы());
	Модифицированность = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОВТОРЯЮЩИЕСЯ ДЕЙСТВИЯ ПРИ ИЗМЕНЕНИИ РАЗНЫХ РЕКВИЗИТОВ

&НаКлиенте
Процедура ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения)
	
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначенияДляЗаполнения.Свойство("Подразделение") Тогда
		// Подразделение заполняется из параметров учета номенклатуры
		Возврат;
	КонецЕсли;
	
	// Оповестим о том, что не заполнены параметры учета номенклатуры
	Если ЗначениеЗаполнено(Объект.Подразделение) Тогда
		ТекстОповещения = Нстр("ru = 'Данные об исполнителе не изменены'");
	Иначе
		ТекстОповещения = Нстр("ru = 'Данные об исполнителе не заполнены'");
	КонецЕсли;
	
	Пояснение = Нстр("ru = 'Не выполнена настройка параметров учета для услуги &Услуга'");
	Пояснение = СтрЗаменить(Пояснение, "&Услуга", "" + Объект.Номенклатура);
	
	ПоказатьОповещениеПользователя(ТекстОповещения, , Пояснение);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ДАННЫХ В ШАПКЕ

&НаСервереБезКонтекста
Функция ПараметрыУчетаНоменклатуры(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = Новый Структура();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = "ВЫБРАТЬ
	|	&Номенклатура КАК Номенклатура,
	|	&ВидНоменклатуры КАК ВидНоменклатуры
	|ПОМЕСТИТЬ ДанныеНоменклатуры";
	
	Запрос.УстановитьПараметр("Номенклатура",    ДанныеДляЗаполнения.Номенклатура);
	Запрос.УстановитьПараметр("ВидНоменклатуры", ДанныеДляЗаполнения.Номенклатура.ВидНоменклатуры);
	Запрос.Выполнить();
	
	СчетаУчетаВДокументах.СформироватьТаблицуПараметровУчетаУслуг(Запрос.МенеджерВременныхТаблиц, ДанныеДляЗаполнения.Организация, 	ДанныеДляЗаполнения.Дата);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеНоменклатуры.Номенклатура,
	|	ДанныеНастроекПараметровУчета.Подразделение 				КАК Подразделение,
	|	ДанныеНастроекПараметровУчета.ПодразделениеОрганизации 		КАК ПодразделениеОрганизации,
	|	ДанныеНастроекПараметровУчета.НоменклатурнаяГруппа 			КАК НоменклатурнаяГруппа,
	|	ДанныеНастроекПараметровУчета.СчетЗатрат 					КАК СчетЗатрат,
	|	ДанныеНастроекПараметровУчета.НалоговоеНазначение 			КАК НалоговоеНазначение
	|ИЗ ДанныеНоменклатуры
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|	ДанныеНастроекПараметровУчета КАК ДанныеНастроекПараметровУчета
	|ПО ДанныеНастроекПараметровУчета.Номенклатура = ДанныеНоменклатуры.Номенклатура
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	//Выборка всегда будет содержать хотя бы одну запись
	Выборка.Следующий();
	
	Если НЕ ЗначениеЗаполнено(Выборка.Подразделение) Тогда
		// Параметры не заданы
	Иначе
		
		ЗначенияДляЗаполнения.Вставить("Подразделение");
		ЗначенияДляЗаполнения.Вставить("ПодразделениеОрганизации");
		ЗначенияДляЗаполнения.Вставить("НоменклатурнаяГруппа");
		ЗначенияДляЗаполнения.Вставить("СчетЗатрат");
		ЗначенияДляЗаполнения.Вставить("НалоговоеНазначение");
		ЗаполнитьЗначенияСвойств(ЗначенияДляЗаполнения, Выборка);
		
	КонецЕсли;
	
	Возврат ЗначенияДляЗаполнения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменениеНоменклатурыСервер(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = ПараметрыУчетаНоменклатуры(ДанныеДляЗаполнения);
		
	Возврат ЗначенияДляЗаполнения;
	
КонецФункции

&НаСервереБезКонтекста
Функция ИзменениеОрганизацииСервер(ДанныеДляЗаполнения)
	
	ЗначенияДляЗаполнения = Новый Структура;
	
	Если ЗначениеЗаполнено(ДанныеДляЗаполнения.Номенклатура) Тогда
		
		ЗначенияДляЗаполнения = ПараметрыУчетаНоменклатуры(ДанныеДляЗаполнения);
		
	Иначе // Номенклатура не заполнена
		
		// Заполняем только подразделение организации
		ПодразделениеОрганизации = РаботаСДиалогамиСервер.ПодразделениеОрганизации(ДанныеДляЗаполнения.Подразделение, ДанныеДляЗаполнения.Организация);
		Если ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
			ЗначенияДляЗаполнения.Вставить("ПодразделениеОрганизации", ПодразделениеОрганизации);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ЗначенияДляЗаполнения;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура НоменклатураПриИзменении(Элемент)
	
	Если НЕ ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		Возврат;
	КонецЕсли;
	
	// Получаем данные с сервера
	ДанныеОбменаССервером = Новый Структура("Дата, Организация, Номенклатура");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	
	ЗначенияДляЗаполнения = ИзменениеНоменклатурыСервер(ДанныеОбменаССервером);
	ЗаполнитьЗначенияСвойств(Объект,   ЗначенияДляЗаполнения);
	
	// Оповещаем, если не заданы параметры учета номенклатуры
	ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	// Получаем данные с сервера
	ДанныеОбменаССервером = Новый Структура("Дата, Организация, Подразделение, Номенклатура");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	
	ЗначенияДляЗаполнения = ИзменениеОрганизацииСервер(ДанныеОбменаССервером);
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияДляЗаполнения);
	
	// Оповещаем, если не заданы параметры учета номенклатуры
	ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения);
		
	Если НЕ ПустаяСтрока(Объект.Номер) Тогда
		ПрефиксацияОбъектовСобытия.ОчиститьНомерОбъекта(Объект.Номер, Объект.Организация);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Номенклатура) Тогда
		// Могли поменяться параметры учета

		ДанныеДляОбменаССервером = Новый Структура("Номенклатура, Дата, Организация");
		ЗаполнитьЗначенияСвойств(ДанныеДляОбменаССервером, Объект);

		ЗначенияДляЗаполнения = ПараметрыУчетаНоменклатуры(ДанныеДляОбменаССервером);

		ОповеститьНеЗаданыПараметрыУчетаНоменклатуры(ЗначенияДляЗаполнения);

		// Заполним шапку
		ЗаполнитьЗначенияСвойств(Объект, ЗначенияДляЗаполнения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	РаботаСДиалогамиКлиент.ЗаполнитьПодразделениеОрганизации(Объект);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНалоговоеНазначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтрокаТабличнойЧасти = Элементы.Затраты.ТекущиеДанные;
	ГруппаНалоговыхНазначений = НалоговыйУчетПовтИсп.ОпределитьГруппуНалоговогоНазначенияЗатрат(СтрокаТабличнойЧасти.Счет);
	РаботаСДиалогамиКлиент.НачалоВыбораЗначенияНалоговоеНазначениеУП(Элемент, СтандартнаяОбработка, ГруппаНалоговыхНазначений);
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНалоговоеНазначениеАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	СтрокаТабличнойЧасти = Элементы.Затраты.ТекущиеДанные;
	ГруппаНалоговыхНазначений = НалоговыйУчетПовтИсп.ОпределитьГруппуНалоговогоНазначенияЗатрат(СтрокаТабличнойЧасти.Счет);
	РаботаСДиалогамиКлиент.АвтоПодборТекстаНалоговоеНазначениеУП(Текст, ДанныеВыбора, СтандартнаяОбработка, ГруппаНалоговыхНазначений);
КонецПроцедуры

&НаКлиенте
Процедура ЗатратыНалоговоеНазначениеОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	СтрокаТабличнойЧасти = Элементы.Затраты.ТекущиеДанные;
	ГруппаНалоговыхНазначений = НалоговыйУчетПовтИсп.ОпределитьГруппуНалоговогоНазначенияЗатрат(СтрокаТабличнойЧасти.Счет);
	РаботаСДиалогамиКлиент.ОкончаниеВводаТекстаНалоговоеНазначениеУП(Текст, ДанныеВыбора, СтандартнаяОбработка, ГруппаНалоговыхНазначений);
КонецПроцедуры

