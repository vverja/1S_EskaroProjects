Перем мУдалятьДвижения;

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт;
Перем мСтрокаРеквизитыУпрУчета Экспорт;
Перем мСтрокаРеквизитыНалУчета Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	мСтрокаРеквизитыБухУчета = "Организация, НадписьОрганизация";
	мСтрокаРеквизитыНалУчета = "";
	мСтрокаРеквизитыУпрУчета = "";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ПередЗаписью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	
	Если ОтражатьВУправленческомУчете Тогда
		Организация = Неопределено;
	КонецЕсли;
	
	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью()

// Процедура - обработчик события "ОбработкаПроведения"
//
Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Если ОтражатьВУправленческомУчете Тогда
		ПорядокЗакрытияПодразделений = Движения.ПорядокЗакрытияПодразделений;
	Иначе
		ПорядокЗакрытияПодразделений = Движения.ПорядокЗакрытияПодразделенийОрганизаций;
	КонецЕсли;
	
	Если ОтражатьВУправленческомУчете Тогда
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Подразделения.Ссылка КАК Подразделение,
		|	ВЫБОР КОГДА ПорядокЗакрытия.НомерПередела ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		ПорядокЗакрытия.НомерПередела
		|	КОНЕЦ КАК НомерПередела
		|ИЗ
		|	Справочник.Подразделения КАК Подразделения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			УстановкаПорядкаЗакрытие.Подразделение КАК Подразделение,
		|			УстановкаПорядкаЗакрытие.НомерСтроки КАК НомерПередела
		|		ИЗ
		|			Документ.УстановкаПорядкаЗакрытияПодразделений.ПорядокЗакрытия КАК УстановкаПорядкаЗакрытие
		|		ГДЕ
		|          	УстановкаПорядкаЗакрытие.Ссылка = &Ссылка
		|		) КАК ПорядокЗакрытия
		|	ПО
		|		Подразделения.Ссылка = ПорядокЗакрытия.Подразделение
		|ГДЕ
		|	Не Подразделения.ПометкаУдаления
		|";
	Иначе
		ТекстЗапроса = "
		|ВЫБРАТЬ
		|	Подразделения.Ссылка КАК Подразделение,
		|	ВЫБОР КОГДА ПорядокЗакрытия.НомерПередела ЕСТЬ NULL ТОГДА
		|		0
		|	ИНАЧЕ
		|		ПорядокЗакрытия.НомерПередела
		|	КОНЕЦ КАК НомерПередела
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК Подразделения
		|	
		|	ЛЕВОЕ СОЕДИНЕНИЕ (
		|		ВЫБРАТЬ
		|			УстановкаПорядкаЗакрытие.Подразделение КАК Подразделение,
		|			УстановкаПорядкаЗакрытие.НомерСтроки КАК НомерПередела
		|		ИЗ
		|			Документ.УстановкаПорядкаЗакрытияПодразделений.ПорядокЗакрытия КАК УстановкаПорядкаЗакрытие
		|		ГДЕ
		|          	УстановкаПорядкаЗакрытие.Ссылка = &Ссылка
		|		) КАК ПорядокЗакрытия
		|	ПО
		|		Подразделения.Ссылка = ПорядокЗакрытия.Подразделение
		|ГДЕ
		|	Не Подразделения.ПометкаУдаления
		|	И Подразделения.Владелец = &Организация
		|";
	КонецЕсли;
		
	Запрос = Новый Запрос;	
	Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Организация", Организация);
	РезультатЗапроса = Запрос.Выполнить().Выгрузить();
	
	Для Каждого Строка Из РезультатЗапроса Цикл
		
		НоваяСтрока = ПорядокЗакрытияПодразделений.Добавить();
		НоваяСтрока.Период = НачалоМесяца(Дата);
		НоваяСтрока.Подразделение = Строка.Подразделение;
		НоваяСтрока.НомерПередела = Строка.НомерПередела;
		Если ОтражатьВБухгалтерскомУчете Тогда
			НоваяСтрока.Организация = Организация;
		КонецЕсли;
		
	КонецЦикла;
	
	ПорядокЗакрытияПодразделений.Записать();
	
КонецПроцедуры // ОбработкаПроведения()



