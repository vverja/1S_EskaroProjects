Перем мУдалятьДвижения;

// Настройка периода
Перем НП Экспорт;

#Если Клиент Тогда

// Заполняет таблицу значениями, полученными на основании источников
// данных для статей бюджетирования
//
// Параметры: нет
//
Процедура ПолучитьФактическиеДанные() Экспорт

	// Выберем статьи оборотов, для которых будем получать данные
	Запрос=Новый Запрос;
	СтруктураПараметров=Новый Структура;
	
	ТекстЗапроса="ВЫБРАТЬ
	|	СтатьиОборотовПоБюджетам.Ссылка КАК СтатьяОборотов,
	|	СтатьиОборотовПоБюджетам.Ссылка.Представление КАК СтатьяОборотовПредставление,
	|	СтатьиОборотовПоБюджетам.УчетПоКоличеству,
	|	СтатьиОборотовПоБюджетам.УчетПоСумме,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ТекстЗапроса КАК ТекстЗапроса,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.НастройкиПостроителя КАК НастройкиПостроителя,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ИзмеренияИсточника КАК ИзмеренияИсточника,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ПроизвольныйЗапрос КАК ПроизвольныйЗапрос,
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта.ДатыОтбораДанныхИсточника КАК ДатыОтбораДанныхИсточника,
	|	СтатьиОборотовПоБюджетам.ПоказательИсточникаДанныхДляФактаСум,
	|	СтатьиОборотовПоБюджетам.КоэффициентДляФактаСум,
	|	СтатьиОборотовПоБюджетам.СпособОпределенияВалютыОборотаФакт,
	|	СтатьиОборотовПоБюджетам.ПоказательИсточникаДанныхДляФактаКол,
	|	СтатьиОборотовПоБюджетам.КоэффициентДляФактаКол,
	|	СтатьиОборотовПоБюджетам.ОсновнаяВалюта,
	|	СтатьиОборотовПоБюджетам.РазделениеПоКонтрагентам,
	|	СтатьиОборотовПоБюджетам.РазделениеПоНоменклатуре
    |ИЗ
	|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам";
	Если НЕ ЦФО.Пустая() Тогда // Выбираем источники, в измерениях которых есть ЦФО
		ТекстЗапроса=ТекстЗапроса+"		  		  
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ИсточникиДанныхДляРасчетовБюджетирования.ИзмеренияИсточника КАК ИсточникиДанныхДляРасчетовБюджетированияИзмеренияИсточника
		|		ПО СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта = ИсточникиДанныхДляРасчетовБюджетированияИзмеренияИсточника.Ссылка 
		|		И (ИсточникиДанныхДляРасчетовБюджетированияИзмеренияИсточника.ИзмерениеБюджетирования = &ЦФО)";
		СтруктураПараметров.Вставить("ЦФО",Перечисления.ИзмеренияБюджетирования.ЦФО);
	КонецЕсли;
	ТекстЗапроса=ТекстЗапроса+"
	|ГДЕ
	|	СтатьиОборотовПоБюджетам.ИсточникДанныхДляФакта <> &ПустойИсточникДанных";
	Если НЕ СтатьиОборотов.Пустая() Тогда
		ТекстЗапроса=ТекстЗапроса+"
		|И
		|	СтатьиОборотовПоБюджетам.Ссылка В ИЕРАРХИИ(&СтатьиОборотов)";
		СтруктураПараметров.Вставить("СтатьиОборотов",СтатьиОборотов);
	КонецЕсли;
	
	Запрос.Текст=ТекстЗапроса;
	Запрос.УстановитьПараметр("ПустойИсточникДанных",Новый(Тип("СправочникСсылка.ИсточникиДанныхДляРасчетовБюджетирования")));
	
	Для Каждого Параметр Из СтруктураПараметров Цикл
		
		Запрос.УстановитьПараметр(Параметр.Ключ,Параметр.Значение);
		
	КонецЦикла;
	
	РезультатЗапроса=Запрос.Выполнить().Выбрать();
		
	СписокЦФО=Новый СписокЗначений;
		
	//Заполним список ЦФО для отбора
	Если НЕ ЦФО.Пустая() Тогда
		
		Запрос=Новый Запрос;
		Запрос.Текст="ВЫБРАТЬ
		             |	Подразделения.Ссылка КАК ЦФО
		             |ИЗ
		             |	Справочник.Подразделения КАК Подразделения
		             |
		             |ГДЕ
		             |	Подразделения.Ссылка В ИЕРАРХИИ(&ЦФО)";
					 
		Запрос.УстановитьПараметр("ЦФО",ЦФО);
		СписокЦФО.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ЦФО"));
		
	КонецЕсли;
	
	БюджетныеОперации.Очистить();
	ТабОперации=БюджетныеОперации.Выгрузить();
	
	Пока РезультатЗапроса.Следующий() Цикл
		
		ПолучитьДанныеПоСтатье(РезультатЗапроса,СписокЦФО,ТабОперации);
		
	КонецЦикла; 
	
КонецПроцедуры // ПолучитьФактическиеДанные()

// Формирует строку (строки) таблицы "Бюджетные операции" по данным источника,
// указанного для статьи оборотов 
//
// Параметры
//  Статья: строка результата запроса - содержит данные, необходимые для 
//  получения фактических данных.
//  СписокЦФО: список значений - список ЦФО для отбора данных.
//  ТабОперации: таблица значений - шаблон для заполнения перед добавлением в ТЧ "БюджетныеОперации"
//
Процедура ПолучитьДанныеПоСтатье(Статья,СписокЦФО,ТабОперации)
	
	ПостроительОтчета=Новый ПостроительОтчета;
	
	ПостроительОтчета.Текст=Статья.ТекстЗапроса;
	
	СохраненнаяНастройка=Статья.НастройкиПостроителя.Получить();
	
	Если ТипЗнч(СохраненнаяНастройка.НастройкиПостроителя)=Тип("НастройкиПостроителяОтчета") Тогда
		
		Если Статья.ПроизвольныйЗапрос Тогда
			ПостроительОтчета.ЗаполнитьНастройки();
		КонецЕсли;
		
		ПостроительОтчета.УстановитьНастройки(СохраненнаяНастройка.НастройкиПостроителя,Истина,Ложь,Истина,Истина);
		
		Для Каждого Параметр Из СохраненнаяНастройка.ПараметрыПостроителя Цикл
			ПостроительОтчета.Параметры.Вставить(Параметр.Ключ,Параметр.Значение);
		КонецЦикла;
		
	КонецЕсли;
	
	ИзмеренияИсточника=Статья.ИзмеренияИсточника.Выгрузить();
		
	Если НЕ Статья.РазделениеПоКонтрагентам Тогда 
		
		СтрокаИзмерения=ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Контрагент,"ИзмерениеБюджетирования");
		
		Если НЕ СтрокаИзмерения=Неопределено Тогда
			
			ПолеВыбора=ПостроительОтчета.ВыбранныеПоля.Найти(СтрокаИзмерения.ИмяПоляИсточника);
			ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеВыбора);
			
		КонецЕсли;

	КонецЕсли;
	
	Если НЕ Статья.РазделениеПоНоменклатуре Тогда 		
		
		СтрокаИзмерения=ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.Номенклатура,"ИзмерениеБюджетирования");
		
		Если НЕ СтрокаИзмерения=Неопределено Тогда
			
			ПолеВыбора=ПостроительОтчета.ВыбранныеПоля.Найти(СтрокаИзмерения.ИмяПоляИсточника);
			ПостроительОтчета.ВыбранныеПоля.Удалить(ПолеВыбора);
			
		КонецЕсли;

	КонецЕсли;
	
	Если НЕ ЦФО.Пустая() Тогда
		
		СтрокаИзмерения=ИзмеренияИсточника.Найти(Перечисления.ИзмеренияБюджетирования.ЦФО,"ИзмерениеБюджетирования");
		
		Если НЕ СтрокаИзмерения=Неопределено Тогда
			
			НовыйОтбор=ПостроительОтчета.Отбор.Добавить(СтрокаИзмерения.ПутьКДанным);
			НовыйОтбор.ВидСравнения= ВидСравнения.ВСпискеПоИерархии;
			НовыйОтбор.Значение=СписокЦФО;
			НовыйОтбор.Использование=Истина;
			
		КонецЕсли;
		
	КонецЕсли;
				
	ДатыОтбораДанныхИсточника=Статья.ДатыОтбораДанныхИсточника.Выгрузить();
	
	Для каждого Граница Из ДатыОтбораДанныхИсточника Цикл
		
		Если Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.ФиксированнаяДата Тогда
			НачальнаяДатаГраницы=Граница.ДатаНачальнойГраницыОтсчета;
		ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.НачалоПериода Тогда
			НачальнаяДатаГраницы=ДатаНачала;
		ИначеЕсли Граница.НачальнаяГраницаОтсчета=Перечисления.ВидыГраницОтбораИсточникаПланирования.КонецПериода Тогда
			НачальнаяДатаГраницы=КонецДня(ДатаКонца);
		КонецЕсли;
				
		ПостроительОтчета.Параметры.Вставить(Граница.ИмяДатаГраницы,НачальнаяДатаГраницы);
		
	КонецЦикла;
	
	Если ПостроительОтчета.ВыбранныеПоля.Найти("Период")=Неопределено Тогда
		
		Если НЕ ПостроительОтчета.ДоступныеПоля.Найти("Период")=Неопределено Тогда
			
			ПостроительОтчета.ВыбранныеПоля.Вставить("Период","Период",ПостроительОтчета.ВыбранныеПоля.Количество()+1);
			
		Иначе
			
			Сообщить(Статья.СтатьяОборотовПредставление+": в источнике для получения фактических данных отсутствует поле ""Период"". Данные не получены.");
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;		
		
	ПостроительОтчета.Выполнить();
	ТабИсточника=ПостроительОтчета.Результат.Выгрузить();
	
	Если ТабИсточника.Количество()=0 Тогда
		Сообщить("Нет данных по статье "+Статья.СтатьяОборотовПредставление);
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из ИзмеренияИсточника Цикл
		
		Если (Не Статья.РазделениеПоКонтрагентам И Строка.ИзмерениеБюджетирования=Перечисления.ИзмеренияБюджетирования.Контрагент)
			ИЛИ (Не Статья.РазделениеПоНоменклатуре И Строка.ИзмерениеБюджетирования=Перечисления.ИзмеренияБюджетирования.Номенклатура)
			Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТабИсточника.Колонки.Найти(Строка.ИзмерениеБюджетирования) = Неопределено Тогда
			ТабИсточника.Колонки[Строка.ИмяПоляИсточника].Имя = Строка.ИзмерениеБюджетирования;
		КонецЕсли;
		
	КонецЦикла;
	

	Для каждого СтрокаИсточник Из ТабИсточника Цикл
		
		НоваяОперация=ТабОперации.Добавить();
		
		Для каждого Колонка Из ТабОперации.Колонки Цикл
			
			КолонкаИсточника = ТабИсточника.Колонки.Найти(Колонка.Имя);
			Если КолонкаИсточника <> Неопределено Тогда
				//Коновалова 26022013 +
				//НоваяОперация[Колонка.Имя] = СтрокаИсточник[Колонка.Имя];
				Если ТипЗнч(СтрокаИсточник[Колонка.Имя])=Тип("СправочникСсылка.ПодразделенияОрганизаций") ТОгда
					НоваяОперация[Колонка.Имя] = ПолучитьПодразделение(СтрокаИсточник[Колонка.Имя]);
				Иначе
					НоваяОперация[Колонка.Имя] = СтрокаИсточник[Колонка.Имя];
				КонецЕсли;
				//Коновалова 26022013 -
			КонецЕсли;
			
		КонецЦикла;
		
		Если НЕ Статья.ПоказательИсточникаДанныхДляФактаКол="" Тогда
			
			Если НЕ СтрокаИсточник[Статья.ПоказательИсточникаДанныхДляФактаКол]=NULL Тогда 
				
				НоваяОперация.Количество=СтрокаИсточник[Статья.ПоказательИсточникаДанныхДляФактаКол]*Статья.КоэффициентДляФактаКол;
				
			Иначе
				
				НоваяОперация.Количество=0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяОперация.Количество=0;
			
		КонецЕсли;
		
		Если НЕ Статья.ПоказательИсточникаДанныхДляФактаСум="" Тогда
			Попытка
				а = СтрокаИсточник[Статья.ПоказательИсточникаДанныхДляФактаСум];
			Исключение
			    Сообщить("В статье оборотов """ + Статья.СтатьяОборотов.Наименование + """ некорректно указан показатель источника данных для факта сумм", СтатусСообщения.Внимание);
				Сообщить("Заполнение прервано", СтатусСообщения.Внимание);
				//Возврат;
			КонецПопытки;
			
			Если НЕ СтрокаИсточник[Статья.ПоказательИсточникаДанныхДляФактаСум]=NULL Тогда
				
				НоваяОперация.Сумма=СтрокаИсточник[Статья.ПоказательИсточникаДанныхДляФактаСум]*Статья.КоэффициентДляФактаСум;
				
			Иначе
				
				НоваяОперация.Сумма=0;
				
			КонецЕсли;
			
		Иначе
			
			НоваяОперация.Сумма=0;
			
		КонецЕсли;
		
	КонецЦикла; 
	
				
	// Заполним валюты операций
	Если Статья.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаУправленческогоУчета Тогда
		ТабОперации.ЗаполнитьЗначения(глЗначениеПеременной("ВалютаУправленческогоУчета"),"Валюта");
	ИначеЕсли Статья.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ВалютаРегламентированногоУчета Тогда
		ТабОперации.ЗаполнитьЗначения(глЗначениеПеременной("ВалютаРегламентированногоУчета"),"Валюта");
	ИначеЕсли Статья.СпособОпределенияВалютыОборотаФакт=Перечисления.СпособыОпределенияВалютыОборотаПоСтатье.ОсновнаяВалютаСтатьи Тогда
	    ТабОперации.ЗаполнитьЗначения(Статья.ОсновнаяВалюта,"Валюта");
	КонецЕсли;
	
	ТабОперации.ЗаполнитьЗначения(Статья.СтатьяОборотов,"СтатьяОборотов");
	
	// Переносим сформированные операции в табличную часть
	Для каждого СтрокаОперации Из ТабОперации Цикл
		
		Если СтрокаОперации.Количество=0 И СтрокаОперации.Сумма=0 Тогда
			
			Продолжить;
			
		Иначе
			
			НоваяОперация=БюджетныеОперации.Добавить();
			НоваяОперация.Период=СтрокаОперации.Период;
			НоваяОперация.Валюта=СтрокаОперации.Валюта;
			НоваяОперация.СтатьяОборотов=СтрокаОперации.СтатьяОборотов;
			НоваяОперация.ЦФО=СтрокаОперации.ЦФО;
			НоваяОперация.Проект=СтрокаОперации.Проект;
			НоваяОперация.Контрагент=СтрокаОперации.Контрагент;
			НоваяОперация.Номенклатура=СтрокаОперации.Номенклатура;
			НоваяОперация.Количество=СтрокаОперации.Количество;
			НоваяОперация.Сумма=СтрокаОперации.Сумма;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабОперации.Очистить();
		
КонецПроцедуры // ПолучитьДанныеПоСтатье()

#КонецЕсли
//Коновалова 26022013 +
Функция ПолучитьПодразделение(Подр_Орг)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение
	                      |ИЗ
	                      |	РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	                      |ГДЕ
	                      |	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации = &ПодразделениеОрганизации");
						  
	Запрос.УстановитьПараметр("ПодразделениеОрганизации",Подр_Орг);
	Результат = Запрос.Выполнить().Выгрузить();
	Если ЗначениеЗаполнено(Результат) ТОгда
		Возврат Результат[0].Подразделение;
	Иначе
		Возврат Справочники.Подразделения.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции
//Коновалова 26022013 -

// Возвращает структуру, содержащую поля ТЧ "БюджетныеОперации", обязательные для заполнения
//
//
// Возвращаемое значение:
//   СтруктураОбязательныхПолей - структура с именами реквизитов шапки
//
Функция СтруктураОбязательныхПолейТЧ()
	
	СтруктураОбязательныхПолей=Новый Структура;
	СтруктураОбязательныхПолей.Вставить("Период");
	СтруктураОбязательныхПолей.Вставить("СтатьяОборотов");
    СтруктураОбязательныхПолей.Вставить("Валюта");
	
	Возврат СтруктураОбязательныхПолей;
	
КонецФункции // СтруктураОбязательныхПолейТЧ()


// Возвращает таблицу значений для использования в движениях
// регистров
//
Функция СформироватьЗапросПоДаннымДокумента()

	Запрос=Новый Запрос;
	
	ТекстЗапроса="ВЫБРАТЬ
	            |	БюджетныеОперацииДокумент.Период КАК Период,
				|	БюджетныеОперацииДокумент.Валюта КАК Валюта,
	            |	БюджетныеОперацииДокумент.ЦФО КАК ЦФО,
	            |	БюджетныеОперацииДокумент.Проект КАК Проект,
	            |	БюджетныеОперацииДокумент.Контрагент КАК Контрагент,
	            |	БюджетныеОперацииДокумент.Номенклатура КАК Номенклатура,
	            |	БюджетныеОперацииДокумент.СтатьяОборотов КАК СтатьяОборотов,
				|	СУММА(БюджетныеОперацииДокумент.Сумма) КАК ВалютнаяСумма,
	            |	СУММА(БюджетныеОперацииДокумент.Количество) КАК Количество,
				|	СУММА(ВЫРАЗИТЬ 
				|	(ВЫБОР 
				|		КОГДА БюджетныеОперацииДокумент.Валюта=&ВалютаУпрУчета ТОГДА БюджетныеОперацииДокумент.Сумма
				|		КОГДА БюджетныеОперацииДокумент.Валюта<>&ВалютаУпрУчета И КурсыОперации.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
				|			БюджетныеОперацииДокумент.Сумма*КурсыОперации.Курс * КурсыУпрУчета.Кратность 
				|			/ (КурсыУпрУчета.Курс * КурсыОперации.Кратность)
				|		ИНАЧЕ
				|			0
				|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаУпр
	            |	ИЗ
	            |	Документ.УчетФактическихДанныхПоБюджетам.БюджетныеОперации КАК БюджетныеОперацииДокумент
				// Курсы документа 
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
				|	КурсыВалют.Курс КАК Курс, 
				|	КурсыВалют.Кратность КАК Кратность,
				|	КурсыВалют.Валюта КАК Валюта
				|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		Максимум(КурсыВнутр.Период) КАК Период,
				|		Обороты.Дата КАК Дата,
				|		КурсыВнутр.Валюта КАК Валюта
				|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|			ВЫБРАТЬ
  				|			УчетФактическихДанныхПоБюджетамБюджетныеОперации.Период КАК Дата,
				|			УчетФактическихДанныхПоБюджетамБюджетныеОперации.Валюта КАК ВалютаДок
  				|		ИЗ
  				|			Документ.УчетФактическихДанныхПоБюджетам.БюджетныеОперации КАК УчетФактическихДанныхПоБюджетамБюджетныеОперации
  				|		ГДЕ
				|			УчетФактическихДанныхПоБюджетамБюджетныеОперации.Ссылка = &Ссылка
  				|		) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И КурсыВнутр.Валюта = Обороты.ВалютаДок
				|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
				|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта) КАК КурсыОперации
				|ПО КурсыОперации.Дата = БюджетныеОперацииДокумент.Период И
				|   КурсыОперации.Валюта = БюджетныеОперацииДокумент.Валюта
				// Курсы валюты управленческого учета
				|ЛЕВОЕ СОЕДИНЕНИЕ
				|(ВЫБРАТЬ 
				|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
				|	КурсыВалют.Курс КАК Курс, 
				|	КурсыВалют.Кратность КАК Кратность
				|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
				|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|	ВЫБРАТЬ
				|		МАКСИМУМ(КурсыВнутр.Период) КАК Период,
				|		Обороты.Дата КАК Дата
				|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
				|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
				|		ВЫБРАТЬ
  				|			ОперацииДата.Период КАК Дата
  				|		ИЗ
  				|			Документ.УчетФактическихДанныхПоБюджетам.БюджетныеОперации КАК ОперацииДата
  				|		ГДЕ
				|			ОперацииДата.Ссылка = &Ссылка
  				|		) КАК Обороты
   				|ПО Обороты.Дата >= КурсыВнутр.Период
				|	И (КурсыВнутр.Валюта = &ВалютаУпрУчета)
				|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
				|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
				|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета) КАК КурсыУпрУчета
				|ПО КурсыУпрУчета.Дата = БюджетныеОперацииДокумент.Период
				|ГДЕ
				|БюджетныеОперацииДокумент.Ссылка = &Ссылка
				|СГРУППИРОВАТЬ ПО
				|БюджетныеОперацииДокумент.Период,
				|БюджетныеОперацииДокумент.Валюта,
				|БюджетныеОперацииДокумент.ЦФО,
				|БюджетныеОперацииДокумент.Проект,
				|БюджетныеОперацииДокумент.Контрагент,
				|БюджетныеОперацииДокумент.Номенклатура,
				|БюджетныеОперацииДокумент.СтатьяОборотов";
					
				Запрос.Текст=ТекстЗапроса;
				
				Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
				Запрос.УстановитьПараметр("Ссылка",Ссылка);

                ТабОборотовДокумента=Запрос.Выполнить().Выгрузить();
				
	Возврат ТабОборотовДокумента;
	
КонецФункции // СформироватьЗапросПоДаннымДокумента()

// Возвращает таблицу значений для использования в движениях
// регистра бухгалтерии "Бюджетирование"
//
Функция СформироватьПроводкиПоДаннымДокумента()
	
	Запрос=Новый Запрос;
	ТекстЗапроса="
	|ВЫБРАТЬ
	|БюджетныеОперацииДокумент.Период КАК Период,
	|ДанныеСчетДт.Счет КАК СчетДт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт1,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт2,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоДт3,
	|ДанныеСчетКт.Счет КАК СчетКт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт1,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт2,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ КАК СубконтоКт3,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА БюджетныеОперацииДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ КАК ВалютаДт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА БюджетныеОперацииДокумент.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	ИНАЧЕ NULL КОНЕЦ) КАК ВалютнаяСуммаДт,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА БюджетныеОперацииДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ КАК ВалютаКт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА БюджетныеОперацииДокумент.Сумма * ТаблицаПроводок.КоэффициентДляСуммы 
	|	ИНАЧЕ NULL КОНЕЦ) КАК ВалютнаяСуммаКт,
	|ТаблицаПроводок.Ссылка КАК СтатьяОборотов,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетДт.Количественный ТОГДА БюджетныеОперацииДокумент.Количество * ТаблицаПроводок.КоэффициентДляКоличества 
	|	ИНАЧЕ NULL КОНЕЦ) КАК КоличествоДт,
	|СУММА(ВЫБОР 
	|	КОГДА ДанныеСчетКт.Количественный ТОГДА БюджетныеОперацииДокумент.Количество * ТаблицаПроводок.КоэффициентДляКоличества 
	|	ИНАЧЕ NULL КОНЕЦ) КАК КоличествоКт,
	|	СУММА(ВЫРАЗИТЬ 
	|	(ВЫБОР 
	|		КОГДА БюджетныеОперацииДокумент.Валюта=&ВалютаУпрУчета ТОГДА БюджетныеОперацииДокумент.Сумма* ТаблицаПроводок.КоэффициентДляСуммы
	|		КОГДА БюджетныеОперацииДокумент.Валюта<>&ВалютаУпрУчета И КурсыОперации.Курс <>0 И КурсыУпрУчета.Курс <>0 ТОГДА
	|			БюджетныеОперацииДокумент.Сумма* ТаблицаПроводок.КоэффициентДляСуммы*КурсыОперации.Курс * КурсыУпрУчета.Кратность 
	|			/ (КурсыУпрУчета.Курс * КурсыОперации.Кратность)
	|		ИНАЧЕ
	|			0
	|		КОНЕЦ КАК ЧИСЛО (15,2))) КАК СуммаУпр
	|ИЗ
	|	Документ.УчетФактическихДанныхПоБюджетам.БюджетныеОперации КАК БюджетныеОперацииДокумент
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатьиОборотовПоБюджетам.ШаблоныПроводок КАК ТаблицаПроводок
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Бюджетирование.Ссылка КАК Счет,
	|			Бюджетирование.Валютный КАК Валютный,
	|			Бюджетирование.Количественный КАК Количественный,
	|			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	|		ИЗ
	|			ПланСчетов.Бюджетирование КАК Бюджетирование
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчетДт
	|		ПО ТаблицаПроводок.СчетДт = ДанныеСчетДт.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			Бюджетирование.Ссылка КАК Счет,
	|			Бюджетирование.Валютный КАК Валютный,
	|			Бюджетирование.Количественный КАК Количественный,
	|			БюджетированиеВидыСубконто1.ВидСубконто.Наименование КАК НаименованиеСубконто1,
	|			БюджетированиеВидыСубконто2.ВидСубконто.Наименование КАК НаименованиеСубконто2,
	|			БюджетированиеВидыСубконто3.ВидСубконто.Наименование КАК НаименованиеСубконто3
	|		ИЗ
	|			ПланСчетов.Бюджетирование КАК Бюджетирование
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто1
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто1.Ссылка И (БюджетированиеВидыСубконто1.НомерСтроки = 1)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто2
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто2.Ссылка И (БюджетированиеВидыСубконто2.НомерСтроки = 2)
	|				ЛЕВОЕ СОЕДИНЕНИЕ ПланСчетов.Бюджетирование.ВидыСубконто КАК БюджетированиеВидыСубконто3
	|				ПО Бюджетирование.Ссылка = БюджетированиеВидыСубконто3.Ссылка И (БюджетированиеВидыСубконто3.НомерСтроки = 3)) КАК ДанныеСчетКт
	|		ПО ТаблицаПроводок.СчетКт = ДанныеСчетКт.Счет
	|	ПО БюджетныеОперацииДокумент.СтатьяОборотов = ТаблицаПроводок.Ссылка
	// Курсы документа 
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность,
	|	КурсыВалют.Валюта КАК Валюта
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		Максимум(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата,
	|		КурсыВнутр.Валюта КАК Валюта
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ
  	|			УчетФактическихДанныхПоБюджетамБюджетныеОперации.Период КАК Дата,
	|			УчетФактическихДанныхПоБюджетамБюджетныеОперации.Валюта КАК ВалютаДок
  	|		ИЗ
  	|			Документ.УчетФактическихДанныхПоБюджетам.БюджетныеОперации КАК УчетФактическихДанныхПоБюджетамБюджетныеОперации
  	|		ГДЕ
	|			УчетФактическихДанныхПоБюджетамБюджетныеОперации.Ссылка = &Ссылка
  	|		) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = Обороты.ВалютаДок)
	|	СГРУППИРОВАТЬ ПО Обороты.Дата, КурсыВнутр.Валюта) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период И 
	|      КурсыВалют.Валюта = ПериодПоследнейЗаписиКурсаНаДатуОборота.Валюта) КАК КурсыОперации
	|ПО КурсыОперации.Дата = БюджетныеОперацииДокумент.Период И
	|   КурсыОперации.Валюта = БюджетныеОперацииДокумент.Валюта
	// Курсы валюты управленческого учета
	|ЛЕВОЕ СОЕДИНЕНИЕ
	|(ВЫБРАТЬ 
	|	ПериодПоследнейЗаписиКурсаНаДатуОборота.Дата КАК Дата, 
	|	КурсыВалют.Курс КАК Курс, 
	|	КурсыВалют.Кратность КАК Кратность
	|ИЗ РегистрСведений.КурсыВалют КАК КурсыВалют
	|ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|	ВЫБРАТЬ
	|		МАКСИМУМ(КурсыВнутр.Период) КАК Период,
	|		Обороты.Дата КАК Дата
	|	ИЗ РегистрСведений.КурсыВалют КАК КурсыВнутр
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ (
	|		ВЫБРАТЬ
  	|			ОперацииДата.Период КАК Дата
  	|		ИЗ
  	|			Документ.УчетФактическихДанныхПоБюджетам.БюджетныеОперации КАК ОперацииДата
  	|		ГДЕ
	|			ОперацииДата.Ссылка = &Ссылка
  	|		) КАК Обороты
   	|ПО Обороты.Дата >= КурсыВнутр.Период
	|	И (КурсыВнутр.Валюта = &ВалютаУпрУчета)
	|	СГРУППИРОВАТЬ ПО Обороты.Дата) КАК ПериодПоследнейЗаписиКурсаНаДатуОборота
	|	ПО КурсыВалют.Период = ПериодПоследнейЗаписиКурсаНаДатуОборота.Период
	|ГДЕ КурсыВалют.Валюта = &ВалютаУпрУчета) КАК КурсыУпрУчета
	|ПО КурсыУпрУчета.Дата = БюджетныеОперацииДокумент.Период
	|ГДЕ
	|БюджетныеОперацииДокумент.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|БюджетныеОперацииДокумент.Период,
	|ДанныеСчетДт.Счет,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетДт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ДанныеСчетКт.Счет,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто1 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто2 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""ЦФО"" ТОГДА БюджетныеОперацииДокумент.ЦФО 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Проекты"" ТОГДА БюджетныеОперацииДокумент.Проект 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Контрагенты"" ТОГДА БюджетныеОперацииДокумент.Контрагент 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Номенклатура"" ТОГДА БюджетныеОперацииДокумент.Номенклатура 
	|	КОГДА ДанныеСчетКт.НаименованиеСубконто3 = ""Статьи оборотов"" ТОГДА ТаблицаПроводок.Ссылка 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетДт.Валютный ТОГДА БюджетныеОперацииДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ВЫБОР 
	|	КОГДА ДанныеСчетКт.Валютный ТОГДА БюджетныеОперацииДокумент.Валюта 
	|	ИНАЧЕ NULL КОНЕЦ,
	|ТаблицаПроводок.Ссылка";
	
	Запрос.Текст=ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ВалютаУпрУчета",глЗначениеПеременной("ВалютаУправленческогоУчета"));
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
		
	ТабПроводокДокумента=Запрос.Выполнить().Выгрузить();
				
Возврат ТабПроводокДокумента;

КонецФункции // СформироватьПроводкиПоДаннымДокумента()

// Формирует движения по регистрам
//  Отказ                     - флаг отказа в проведении,
//  Заголовок                 - строка, заголовок сообщения об ошибке проведения.
//
Процедура ДвиженияПоРегистрам(Отказ, Заголовок)
	
	ТабОборотовДокумента=СформироватьЗапросПоДаннымДокумента();
			
	// По регистру "ОборотыБюджетов"
	
	НаборДвижений = Движения.ОборотыБюджетов;	
	НаборДвижений.мТаблицаДвижений   = ТабОборотовДокумента;
	
	Движения.ОборотыБюджетов.ВыполнитьДвижения();
	
	// По регистру бухгалтерии "Бюджетирование"
	
	ТабПроводокДокумента=СформироватьПроводкиПоДаннымДокумента();
	ТабПроводокДокумента.Колонки.Добавить("Сценарий");
	ТабПроводокДокумента.ЗаполнитьЗначения(Новый(Тип("СправочникСсылка.СценарииПланирования")),"Сценарий");
	
	ТабПроводокДокумента.Колонки.Добавить("СуммаСценария");
	ТабПроводокДокумента.ЗаполнитьЗначения(0,"СуммаСценария");
		
	НаборДвижений=Движения.Бюджетирование;
	
	НаборДвижений.мТаблицаДвижений   = ТабПроводокДокумента;
    Движения.Бюджетирование.ВыполнитьДвижения();
					
КонецПроцедуры // ДвиженияПоРегистрам() 

Процедура ОбработкаПроведения(Отказ, Режим)
	
	
	Если мУдалятьДвижения Тогда
		ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	СтруктураДанныхШапки=Новый Структура;
	
	ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(ЭтотОбъект, "БюджетныеОперации", СтруктураОбязательныхПолейТЧ(),Отказ, Заголовок);	
	Если Не Отказ Тогда		
		
		ДвиженияПоРегистрам(Отказ, Заголовок);
				
	КонецЕсли;		
		
КонецПроцедуры 

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

#Если Клиент Тогда
 
НП = Новый НастройкаПериода;

#КонецЕсли

