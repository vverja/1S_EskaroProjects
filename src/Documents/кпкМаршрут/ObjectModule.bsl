//Переменные модуля

Перем ТаблицаЗаданий Экспорт;  // Таблица значений, в которую записываются задания агента
Перем ВводНаОсновании Экспорт; // Переменная, с помощью которой контролируем, производится 
							   // ввода на основании или просто создание документа

// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Процедура формирует таблицу с заданиями
//       
Процедура ОбновитьТаблицуЗаданий() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	ДЕНЬ(кпкЗаданиеАгента.Дата) КАК День,
	|	кпкЗаданиеАгента.Ссылка КАК Документ,
	|	кпкЗаданиеАгента.Контрагент,
	|	кпкЗаданиеАгента.кпкТорговаяТочка КАК ТорговаяТочка
	|ИЗ
	|	Документ.кпкЗаданиеАгента КАК кпкЗаданиеАгента
	|ГДЕ
	|	кпкЗаданиеАгента.Агент = &Агент
	|	И кпкЗаданиеАгента.Дата МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И кпкЗаданиеАгента.ПометкаУдаления = ЛОЖЬ
	|	И ДЕНЬ(кпкЗаданиеАгента.Дата) = &ТекДень");
	
	Запрос.УстановитьПараметр("Агент", 		   Агент);
	Запрос.УстановитьПараметр("ТекДень", 	   День(Дата));
	Запрос.УстановитьПараметр("ДатаНачала",    НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Дата));
	
	ТаблицаЗаданий = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры //ОбновитьТаблицуЗаданий()   

// Процедура производит обновление табличной 
// части маршрута согласно плану посещений
//       
Процедура ОбновитьМаршрутПоПлану() Экспорт
	
	КолДнейМесяца = День(КонецМесяца(Дата));
	
	ДобДней = 0;
	Если НачалоМесяца(Дата) > НачалоМесяца(ДокОснование.Дата) Тогда
		ДобДней = День(КонецМесяца(ДокОснование.Дата));		
	КонецЕсли;
	
	Смещение = День(Дата) - (НачалоДня(ДокОснование.Дата) - НачалоМесяца(ДокОснование.Дата))/86400 + ДобДней;
		
	СписокПосещений.Очистить();
	
	// Обновим табличную часть
	Для Каждого Стр Из ДокОснование.Дни Цикл	
		Попытка
			Если Вычислить("Стр.Д" + Смещение) Тогда
				НоваяСтрока = СписокПосещений.Добавить();
				Если ДокОснование.ТипПлана = 0 Тогда
					НоваяСтрока.Контрагент = Стр.Контрагент;
				Иначе
					НоваяСтрока.ТорговаяТочка = Стр.ТорговаяТочка;
					НоваяСтрока.Контрагент    = Стр.ТорговаяТочка.Владелец;
				КонецЕсли;
			КонецЕсли;
		Исключение
			Продолжить;
		КонецПопытки;
	КонецЦикла;
	
КонецПроцедуры //ОбновитьМаршрутПоПлану()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура - обработчик события "ОбработкаЗаполнения".
//
Процедура ОбработкаЗаполнения(Основание, СтандартнаяОбработка)
	
	Если ТипЗнч(Основание) = Тип("ДокументСсылка.кпкПланПосещений") Тогда    
		
		Дата = ТекущаяДата();
		
		ВводНаОсновании = Истина;
		
		#Если Клиент Тогда
			ВвестиДату(Дата, "Введите дату маршрута.", ЧастиДаты.Дата);
			Если (НачалоДня(Дата) < НачалоДня(Основание.Дата)) ИЛИ (Дата > (Основание.Дата + (86400 * (Основание.ИнтервалПланирования - 1)))) Тогда
				Предупреждение("Дата не соответствует периоду плана посещений!");
				Дата = Дата("00010101");
				СтандартнаяОбработка = Ложь;
				Возврат;
			КонецЕсли;    
		#КонецЕсли
		
		Выборка = Документы.кпкМаршрут.Выбрать(НачалоДня(Дата), КонецДня(Дата), Новый Структура("ДокОснование", Основание));
		
		Если Выборка.Следующий() Тогда			
			Сообщить("Маршрут на заданную дату уже существует!", СтатусСообщения.Важное);
			СтандартнаяОбработка = Ложь;
			Возврат;
		КонецЕсли;
		
		ДеньСтр = Строка(День(Дата));
		ГодП = Год(Основание.Дата);
		ГодМ = Год(Дата);
		ДеньП = ДеньГода(Основание.Дата);
		ДеньМ = ДеньГода(Дата);
		
		Если ГодП = ГодМ Тогда
			Смещение = ДеньМ - ДеньП;
		Иначе
			Смещение = ДеньГода(КонецГода(Основание.Дата)) - ДеньП;
			Смещение = Смещение + (ДеньМ - ДеньГода(НачалоГода(Дата))) + 1;
		КонецЕсли;
		
		// Заполним реквизиты шапки по документу основанию.  
		Агент 		 = Основание.Агент;
		Организация  = Основание.Организация;
		ДокОснование = Основание.Ссылка;
		ТипПлана 	 = ДокОснование.ТипПлана;
		
		// Заполним табличную часть по документу основанию (План посещений);		
		Для Каждого Стр Из Основание.Дни Цикл
			Если Вычислить("Стр.Д" + (1 + Смещение)) Тогда
				НоваяСтрока = СписокПосещений.Добавить();
				Если ДокОснование.ТипПлана = 0 Тогда
					НоваяСтрока.Контрагент = Стр.Контрагент;
				Иначе
					НоваяСтрока.ТорговаяТочка = Стр.ТорговаяТочка;
					НоваяСтрока.Контрагент = Стр.ТорговаяТочка.Владелец;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры
     
ТаблицаЗаданий = Новый ТаблицаЗначений;  
ТаблицаЗаданий.Колонки.Добавить("Контрагент");
ТаблицаЗаданий.Колонки.Добавить("ТорговаяТочка");
ТаблицаЗаданий.Колонки.Добавить("Документ");

ВводНаОсновании = Ложь;
