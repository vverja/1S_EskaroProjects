
Перем мМонопольныйРежимПередЗаписью;
Перем мТипУдалениеДанных;
Перем мТипРегистрСведенийНаборЗаписейОбъектыДоступаДокументов;
Перем мЭтоНовыйЭлемент;

Перем мТаблицаОрганизацийДляВыгрузкиПередЗаписью;
Перем мОтборПоДатеДокумента;

Перем мИнформацияОНаличиеОрганизацииВРегистре;
Перем мИнформацияОБазовыхТипах;

Перем мКоличествоОрганизацийВУзле;
Перем мСоответствиеОрганизацийИУзлов;

Перем мСтарыйТипОбъектаОтправки;
Перем мИмяСтарогоБазовогоТипа;
Перем Организации;

Функция СообщитьИнформациюПользователюПослеСозданияНовогоУзла() Экспорт
	
КонецФункции

Функция СравнитьТаблицыПоПолю(Таблица1, Таблица2, ИмяПоля)
	
	
КонецФункции

Функция ОпределитьЕстьОтличияВТабличнойЧасти()
	
КонецФункции


Процедура ПередЗаписью(Отказ)
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	СтрокаСообщенияПользователю = СообщитьИнформациюПользователюПослеСозданияНовогоУзла();
	
	#Если Клиент Тогда
	Сообщить(СтрокаСообщенияПользователю);
	#КонецЕсли		
		
КонецПроцедуры

Функция ПолучитьИмяБазовогоТипаПоТипуОбъекта(ТипОбъекта) Экспорт
	
	МетаданныеТипа = Метаданные.НайтиПоТипу(ТипОбъекта);
	
	Если Метаданные.РегистрыСведений.Содержит(МетаданныеТипа) Тогда
	
		Возврат "РегистрыСведений";
		
	ИначеЕсли Метаданные.Документы.Содержит(МетаданныеТипа) Тогда
		
		Возврат "Документы";
		
	ИначеЕсли Метаданные.Справочники.Содержит(МетаданныеТипа) Тогда
		
		Возврат "Справочники";	
		
	Иначе
	   
		Возврат "";
		
	КонецЕсли;
			
КонецФункции

Процедура УбратьИзРегистраДанныеНеНужныеДляПереносаПоОрганизации(ЭлементДанных)
	

КонецПроцедуры

Процедура ОпределитьТипОтправкиДанных(ЭлементДанных, ОтправкаЭлемента) Экспорт
	
		
КонецПроцедуры

