
Функция ПолучитьЗаданиеПолучитьВсеЗаданияПользователя(ГетЗапрос)
    РаботникИСклад = Warehouse.ПолучитьТекущегоРаботника();
    Если РаботникИСклад = Неопределено Тогда
        Ответ = Новый HTTPСервисОтвет(404);    	
        Возврат Ответ;
    КонецЕсли; 

    Задания = Warehouse.ПолучитьАктуальныеЗадания(РаботникИСклад);
    МассивДжсонОбъектов = Новый Массив;
    Для каждого Документ Из Задания Цикл
    	МассивДжсонОбъектов.Добавить(Warehouse.КонвертироватьТаскВСтруктуру(Документ));
    КонецЦикла;     
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, Новый Структура("taskList",МассивДжсонОбъектов));
    
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция РаботаСЗаданиямиЗаписатьВсеЗадания(ПостЗапрос)
    РаботникИСклад = Warehouse.ПолучитьТекущегоРаботника();
    Если РаботникИСклад = Неопределено Тогда
        Ответ = Новый HTTPСервисОтвет(404);    	
        Возврат Ответ;
    КонецЕсли;
    
    СтруктураОтвета = Новый Структура;
    
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    СтруктураОтвета = Warehouse.ЗаписатьДанныеВБазу(ПостЗапрос);    
       
    ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция РаботаСПользователямиПОлучитьДанныеПользователя(Запрос)
    Пользователь = ПараметрыСеанса.ТекущийПользователь;
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
    |	РаботникиТабличнаяЧастьРаботников.Ссылка.Склад.Код КАК stock_code,
    |	РаботникиТабличнаяЧастьРаботников.Ссылка.Склад.Наименование КАК stock_name,
    |	РаботникиТабличнаяЧастьРаботников.Сотрудник.Наименование КАК display_name,
    |	РаботникиТабличнаяЧастьРаботников.ТипРаботника КАК worker_type,
    |	РаботникиТабличнаяЧастьРаботников.Пользователь.Код КАК user_name
    |ИЗ
    |	Справочник.Работники.ТабличнаяЧастьРаботников КАК РаботникиТабличнаяЧастьРаботников
    |ГДЕ
    |	РаботникиТабличнаяЧастьРаботников.Пользователь = &Пользователь";
    Запрос.УстановитьПараметр("Пользователь",Пользователь);
    Выборка = Запрос.Выполнить().Выбрать();
    СтруктураОтвета = Warehouse.ПреобразоватьВыборкуВСтрукутуру(Выборка);
    Если СтруктураОтвета = Неопределено Тогда
    	Возврат Новый HTTPСервисОтвет(404);
    КонецЕсли; 
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);   
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция КартинкаПолучитьКартинку(ГетЗапрос)
    СтруктураЗапроса = Warehouse.СформироватьСтруктуруИзЗапроса(ГетЗапрос);
    ПутьКартинок = "C:\inetpub\wwwroot\img\";
    БазовыйУРЛКартинки = "https://work.eskaro.com.ua/img/";
    Запрос = Новый Запрос;
    Запрос.Текст = "ВЫБРАТЬ
                   |    Номенклатура.Ссылка,
                   |    Номенклатура.Код
                   |ИЗ
                   |    Справочник.Номенклатура КАК Номенклатура
                   |ГДЕ
                   |    Номенклатура.Код В(&СписокКодов)";
    Запрос.УстановитьПараметр("СписокКодов", СтруктураЗапроса.imageList);
    Выборка = Запрос.Выполнить().Выбрать();
    
    
    МассивКартинок = Новый Массив; 
    Пока Выборка.Следующий() Цикл
        ИмяФайла = ПутьКартинок + Выборка.Код + ".png";
        КодИзображения = Выборка.Код;
        Файл = Новый Файл(ИмяФайла);	
		Если НЕ Файл.Существует() Тогда
            Картинка = Выборка.Ссылка.ОсновноеИзображение.Хранилище.Получить();
            Попытка
                Картинка.Записать(ИмяФайла);	
            Исключение
                КодИзображения = "no-image1";
            КонецПопытки; 
            
		КонецЕсли;
        СтруктураОтвета = Новый Структура;
        СтруктураОтвета.Вставить("item_code", Выборка.Код);
        СтруктураОтвета.Вставить("item_img", БазовыйУРЛКартинки+КодИзображения+".png");
        МассивКартинок.Добавить(СтруктураОтвета);
    КонецЦикла; 
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, Новый Структура("images",МассивКартинок));
    Ответ = Новый HTTPСервисОтвет(200);
     Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция РаботаСПеремещениямиПолучитьВсеПеремещения(Запрос)
    РаботникИСклад = Warehouse.ПолучитьТекущегоРаботника();
    Если РаботникИСклад = Неопределено Тогда
        Ответ = Новый HTTPСервисОтвет(404);    	
        Возврат Ответ;
    КонецЕсли; 

    Задания = Warehouse.ПолучитьАктуальныxеЗадания(РаботникИСклад);
    МассивДжсонОбъектов = Новый Массив;
    Для каждого Документ Из Задания Цикл
    	МассивДжсонОбъектов.Добавить(Warehouse.КонвертироватьТаскВСтруктуру(Документ));
    КонецЦикла;     
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, Новый Структура("taskList",МассивДжсонОбъектов));
    
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция РаботаСПеремещениямиЗаписатьПеремещение(Запрос)
    Ответ = Новый HTTPСервисОтвет(200);
    Возврат Ответ;
КонецФункции

Функция ИнвентаризацияПолучитьИнвентаризацию(Запрос)
    РаботникИСклад = Warehouse.ПолучитьТекущегоРаботника();
    Если РаботникИСклад = Неопределено Тогда
        Ответ = Новый HTTPСервисОтвет(404);    	
        Возврат Ответ;
    КонецЕсли; 

    Задания = Warehouse.ПолучитьАктуальныеИнвентаризаци(РаботникИСклад);
    МассивДжсонОбъектов = Новый Массив;
    Для каждого Документ Из Задания Цикл
    	МассивДжсонОбъектов.Добавить(Warehouse.КонвертироватьИнвентаризациюВСтруктуру(Документ.Ссылка));
    КонецЦикла;     
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, Новый Структура("taskList",МассивДжсонОбъектов));
    
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;

КонецФункции

Функция ИнвентаризацияЗаписатьИнвентаризацию(ПостЗапрос)
    РаботникИСклад = Warehouse.ПолучитьТекущегоРаботника();
    Если РаботникИСклад = Неопределено Тогда
        Ответ = Новый HTTPСервисОтвет(404);    	
        Возврат Ответ;
    КонецЕсли;
    
    СтруктураОтвета = Новый Структура;
    
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    СтруктураОтвета = Warehouse.ЗаписатьДанныеВБазу(ПостЗапрос);    
       
    ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
;
КонецФункции

Функция ПроверкаЗаданийПолучитьЗаданияДляПроверки(ГетЗапрос)
    Задания = Warehouse.ПолучитьЗаданияДляПроверки(ГетЗапрос);
    МассивДжсонОбъектов = Новый Массив;
    Для каждого Документ Из Задания Цикл
    	МассивДжсонОбъектов.Добавить(Warehouse.КонвертироватьТаскВСтруктуру(Документ));
    КонецЦикла;     
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, Новый Структура("taskList",МассивДжсонОбъектов));
    
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция ВерсияПриложенияПолучитьТекущуюВерсию(Запрос)
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    ЗаписатьJSON(ЗаписьJSON, Новый Структура("version",Константы.ВерсияПриложенияСкладскогоУчета.Получить()));

   Ответ = Новый HTTPСервисОтвет(200);
   Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());

    Возврат Ответ;
КонецФункции

Функция ШтрихкодПолучитьНоменклатуру(Запрос)
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    СтруктураОтвета = Warehouse.ПолучитьНоменклатуруПоШтрихкоду(Запрос);    
       
    ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции

Функция СписокНоменклатурыПолучитьСписокВсейНоменклатуры(Запрос)
    ЗаписьJSON = Новый ЗаписьJSON;
    ЗаписьJSON.УстановитьСтроку();
    СтруктураОтвета = Warehouse.ПолучитьСписокНоменклатуры();    
       
    ЗаписатьJSON(ЗаписьJSON, СтруктураОтвета);
    Ответ = Новый HTTPСервисОтвет(200);
    Ответ.УстановитьТелоИзСтроки(ЗаписьJSON.Закрыть());
    Возврат Ответ;
КонецФункции


