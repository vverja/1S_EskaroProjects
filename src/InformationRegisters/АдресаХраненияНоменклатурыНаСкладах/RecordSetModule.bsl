
Процедура ПередЗаписью(Отказ, Замещение)
	//Если РольДоступна("АдминистраторЛогистики") Тогда
	//	Возврат;
	//КонецЕсли;
	
	Если ЭтотОбъект.Количество() > 1 Тогда
		Отказ = Истина;
		Сообщить("Запрещено сохранять более одной записи одновременно", СтатусСообщения.Важное);
	ИначеЕсли ЭтотОбъект.Количество() = 1 Тогда
		//Возврат;//!!!!!!!!!!!!!!!!!!!!!!!
		
		ТекЗапись = ЭтотОбъект[0];
		
		ОтборЗаписей = Новый Структура("Склад, Номенклатура", ТекЗапись.Склад, ТекЗапись.Номенклатура);
		тзПредЗапись = РегистрыСведений.АдресаХраненияНоменклатурыНаСкладах.СрезПоследних(ТекЗапись.Период, ОтборЗаписей);
		Если тзПредЗапись.Количество() > 0 Тогда
			ПредЗапись = тзПредЗапись[0];
		Иначе
			Возврат;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазмещениеТоваровНаСкладахОстатки.Номенклатура,
		|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета,
		|	СУММА(РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток) КАК КоличествоЕХООстаток
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
		|			&НаДату,
		|			Склад = &Склад
		|				И Ячейка = &Ячейка
		|				И Статус <> &СтатусЗавершено) КАК РазмещениеТоваровНаСкладахОстатки
		|
		|СГРУППИРОВАТЬ ПО
		|	РазмещениеТоваровНаСкладахОстатки.Номенклатура,
		|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета";
		
		Запрос.УстановитьПараметр("НаДату", ТекЗапись.Период);
		Запрос.УстановитьПараметр("Склад", ТекЗапись.Склад);
		Запрос.УстановитьПараметр("Ячейка", ПредЗапись.Ячейка);
		Запрос.УстановитьПараметр("СтатусЗавершено", Перечисления.СтатусыРазмещенийВЯчейках.Завершено);
		тзРез = Запрос.Выполнить().Выгрузить();
		
		Если тзРез.Количество() > 0 Тогда
			Отказ = Истина;
			Сообщить("Для перемещения остатков в новую ячейку, все документы выполняющие движения по данной ячейке должны быть завершены", СтатусСообщения.Важное);
			Возврат;
		КонецЕсли;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РазмещениеТоваровНаСкладах.Регистратор,
		|	РазмещениеТоваровНаСкладах.Номенклатура,
		//|	РазмещениеТоваровНаСкладах.Единица,
		//|	РазмещениеТоваровНаСкладах.Количество,
		|	РазмещениеТоваровНаСкладах.КоличествоЕХО,
		|	РазмещениеТоваровНаСкладах.НомерПаллета
		|ИЗ
		|	РегистрНакопления.РазмещениеТоваровНаСкладах КАК РазмещениеТоваровНаСкладах
		|ГДЕ
		|	РазмещениеТоваровНаСкладах.Период > &НачПериода
		|	И РазмещениеТоваровНаСкладах.Склад = &Склад
		|	И РазмещениеТоваровНаСкладах.Ячейка = &Ячейка";
		
		Запрос.УстановитьПараметр("НачПериода", ТекЗапись.Период);
		//Запрос.УстановитьПараметр("КонПериода", КонецДня(ТекЗапись.Период));
		тзРез = Запрос.Выполнить().Выгрузить();
		
		Если тзРез.Количество() > 0 Тогда
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	МАКСИМУМ(РазмещениеТоваровНаСкладах.Период) КАК Период
			|ИЗ
			|	РегистрНакопления.РазмещениеТоваровНаСкладах КАК РазмещениеТоваровНаСкладах
			|ГДЕ
			|	РазмещениеТоваровНаСкладах.Склад = &Склад
			|	И РазмещениеТоваровНаСкладах.Ячейка = &Ячейка
			|	И РазмещениеТоваровНаСкладах.Период > &КонПериода";
			
			тзРез = Запрос.Выполнить().Выгрузить();
			
			Если тзРез.Количество() = 0 ИЛИ тзРез[0].Период = Null Тогда
				РазрешеннаяДата = ТекЗапись.Период + 1;
			Иначе
				РазрешеннаяДата = тзРез[0].Период + 1;
			КонецЕсли;
			
			ТекстСообщения = "После устанавливаемого периода присутствуют движения по ячейке " + СокрЛП(ПредЗапись.Ячейка) + Символы.ПС
							+ "Ближайшая разрешенная дата - " + РазрешеннаяДата + ".";
							
			//Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.ОК Тогда
			//	ТекЗапись.Период = РазрешеннаяДата;
			//Иначе
				Сообщить(ТекстСообщения);
				Отказ = Истина;
				Возврат;
			//КонецЕсли;
		КонецЕсли;
		
		
		ОтборЗаписей = Новый Структура("Ячейка", ПредЗапись.Ячейка);
		тзВидЯчейки = РегистрыСведений.СостояниеВидовЯчеек.СрезПоследних(ТекЗапись.Период, ОтборЗаписей);
		Если тзВидЯчейки.Количество() = 0 Тогда
			Отказ = Истина;
			Сообщить("Не установлен вид предыдущей закрепленной ячейки """ + СокрЛП(ПредЗапись.Ячейка) + """");
		Иначе
			ВидПредЯчейки = тзВидЯчейки[0].ВидЯчейки;
		КонецЕсли;
		
		ОтборЗаписей = Новый Структура("Ячейка", ТекЗапись.Ячейка);
		тзВидЯчейки = РегистрыСведений.СостояниеВидовЯчеек.СрезПоследних(ТекЗапись.Период, ОтборЗаписей);
		Если тзВидЯчейки.Количество() = 0 Тогда
			Отказ = Истина;
			Сообщить("Не установлен вид закрепляемой ячейки """ + СокрЛП(ПредЗапись.Ячейка) + """");
		Иначе
			ВидТекЯчейки = тзВидЯчейки[0].ВидЯчейки;
		КонецЕсли;
		
		//Если ВидТекЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация И ТекЗапись.МаксимальноеКоличество = 0 Тогда
		Если ТекЗапись.МаксимальноеКоличество = 0 Тогда
			Отказ = Истина;
			Сообщить("Не заполнено максимальное количество для закрепляемой ячейки """ + СокрЛП(ТекЗапись.Ячейка) + """");
		КонецЕсли;
		
		Если НЕ Отказ И ТекЗапись.Период > ПредЗапись.Период И ТекЗапись.Ячейка <> ПредЗапись.Ячейка Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	РазмещениеТоваровНаСкладахОстатки.Номенклатура,
			//|	РазмещениеТоваровНаСкладахОстатки.Единица,
			|	РазмещениеТоваровНаСкладахОстатки.НомерПаллета,
			|	РазмещениеТоваровНаСкладахОстатки.КоличествоЕХООстаток
			|ИЗ
			|	РегистрНакопления.РазмещениеТоваровНаСкладах.Остатки(
			|			&НаДату,
			|			Склад = &Склад
			|				И Ячейка = &Ячейка) КАК РазмещениеТоваровНаСкладахОстатки";
			
			Запрос.УстановитьПараметр("НаДату", ТекЗапись.Период);
			Запрос.УстановитьПараметр("Склад", 	ТекЗапись.Склад);
			Запрос.УстановитьПараметр("Ячейка", ПредЗапись.Ячейка);
			тзРез = Запрос.Выполнить().Выгрузить();
			
			Если тзРез.Количество() > 0 Тогда
				Если ВидПредЯчейки = Перечисления.ВидыСкладскихЯчеек.Общая И
					ВидТекЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
					
					//тзНоменклатураВОстатке = тзРез.Скопировать(, "Номенклатура");
					//тзНоменклатураВОстатке.Свернуть("Номенклатура");
					//Если тзНоменклатураВОстатке.Количество() > 1 Тогда
					//	Отказ = Истина;
					//	Сообщить("Нельзя переместить содержимое общей ячейки """ + ПредЗапись.Ячейка + """, так как в ней присутствует другая номенклатура", СтатусСообщения.Важное);
					//КонецЕсли;
				ИначеЕсли ВидПредЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация И
					ВидТекЯчейки = Перечисления.ВидыСкладскихЯчеек.Комплектация Тогда
					
					тзНоменклатураВОстатке = тзРез.Скопировать(, "Номенклатура, КоличествоЕХООстаток");
					тзНоменклатураВОстатке.Свернуть("Номенклатура", "КоличествоЕХООстаток");
					Если тзНоменклатураВОстатке.Количество() > 1 Тогда
						Отказ = Истина;
						Сообщить("Нельзя переместить содержимое ячейки комплектации """ + ПредЗапись.Ячейка + """, так как в ней присутствует другая номенклатура", СтатусСообщения.Важное);
					ИначеЕсли тзНоменклатураВОстатке[0].КоличествоЕХООстаток > ТекЗапись.МаксимальноеКоличество Тогда
						Отказ = Истина;
						Сообщить("Нельзя переместить содержимое ячейки комплектации """ + ПредЗапись.Ячейка + """, так как общий остаток в ней превышает максимальное количество в ячейке """ +ТекЗапись.Ячейка + """", СтатусСообщения.Важное);
					КонецЕсли;
				//ИначеЕсли ВидПредЯчейки = Перечисления.ВидыСкладскихЯчеек.Общая И
				//	ВидТекЯчейки = Перечисления.ВидыСкладскихЯчеек.Общая Тогда
				//	
				//	Отказ = Истина;
				//	Сообщить("Автоматическое перемещение остатков между общими ячейками пока не поддерживается!");
				КонецЕсли;
				
				тзОбщиеОстатки = тзРез.Скопировать();
				тзОбщиеОстатки.Свернуть("Номенклатура", "КоличествоЕХООстаток"); 
				Для каждого стрОст Из тзОбщиеОстатки Цикл
					Если стрОст.Номенклатура = ТекЗапись.Номенклатура Тогда
						Если стрОст.КоличествоЕХООстаток > ТекЗапись.МаксимальноеКоличество Тогда
							Отказ = Истина;
							Сообщить("Общий остаток номенклатуры """ + СокрЛП(ТекЗапись.Номенклатура) + """ в ячейке """ + ПредЗапись.Ячейка + """ (" + стрОст.КоличествоЕХООстаток + ") больше чем максимально допустимое количество в ячейке """ + ТекЗапись.Ячейка + """", СтатусСообщения.Важное);
							Прервать;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
				Если НЕ Отказ Тогда
					Сообщить("В ячейке содержится товар. Создается документ ""Перемещение (по складу)""...");
					СтруктураПараметров = Новый Структура;
					СтруктураПараметров.Вставить("Номенклатура", 	ТекЗапись.Номенклатура);
					СтруктураПараметров.Вставить("Склад", 			ТекЗапись.Склад);
					СтруктураПараметров.Вставить("НоваяЯчейка", 	ТекЗапись.Ячейка);
					СтруктураПараметров.Вставить("ВидНовойЯчейки", 	ВидТекЯчейки);
					СтруктураПараметров.Вставить("СтараяЯчейка", 	ПредЗапись.Ячейка);
					СтруктураПараметров.Вставить("ВидСтаройЯчейки", ВидПредЯчейки);
					СтруктураПараметров.Вставить("ТаблицаОстатков", тзРез);
					
					ДокПеремещение = Документы.ПеремещениеПоСкладу.СоздатьДокумент();
					ДокПеремещение.ЗаполнитьПолноеПеремещениеВНовуюЯчейку(СтруктураПараметров);
					Попытка
						ДокПеремещение.ПроведениеБезКонтролей = Истина;
						ДокПеремещение.Записать(РежимЗаписиДокумента.Проведение);
					Исключение
					    Сообщить(ОписаниеОшибки());
						ФормаДок = ДокПеремещение.ПолучитьФорму();
						ФормаДок.Открыть();
						Возврат;
					КонецПопытки;
					Сообщить("Создан и проведен документ """ + СокрЛП(ДокПеремещение) + """");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе	
		ТекущийОтбор = ЭтотОбъект.Отбор;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПеремещениеПоСкладуПеремещение.Ссылка
		|ИЗ
		|	Документ.ПеремещениеПоСкладу.Перемещение КАК ПеремещениеПоСкладуПеремещение
		|ГДЕ
		|	ПеремещениеПоСкладуПеремещение.Ссылка.Дата МЕЖДУ &НачДата И &КонДата
		|	И ПеремещениеПоСкладуПеремещение.Ссылка.ЭтоИзменениеАдресаХраненияНоменклатуры
		|	И ПеремещениеПоСкладуПеремещение.Ссылка.Проведен
		|	И ПеремещениеПоСкладуПеремещение.Номенклатура = &Номенклатура
		|	И ПеремещениеПоСкладуПеремещение.Ссылка.Склад = &Склад
		|
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеПоСкладуПеремещение.Ссылка";
		
		Запрос.УстановитьПараметр("НачДата", НачалоДня(ТекущийОтбор.Период.Значение));
		Запрос.УстановитьПараметр("КонДата", КонецДня(ТекущийОтбор.Период.Значение));
		Запрос.УстановитьПараметр("Номенклатура", ТекущийОтбор.Номенклатура.Значение);
		Запрос.УстановитьПараметр("Склад", ТекущийОтбор.Склад.Значение);
		тзРез = Запрос.Выполнить().Выгрузить();
		
		Если тзРез.Количество() > 0 Тогда
			ТекстВопроса = "При удаления текущей записи, будет помечен на удаление документ:";
			Для каждого стрРез Из тзРез Цикл
				ТекстВопроса = ТекстВопроса + Символы.ПС + СокрЛП(стрРез.Ссылка)
			КонецЦикла;
			
			Если Вопрос(ТекстВопроса, РежимДиалогаВопрос.ОКОтмена) = КодВозвратаДиалога.ОК Тогда
				НачатьТранзакцию();
				Для каждого стрРез Из тзРез Цикл
					Попытка
						ДокументОбъект = стрРез.Ссылка.ПолучитьОбъект();
						ДокументОбъект.ПроведениеБезКонтролей = Истина;
						ДокументОбъект.УстановитьПометкуУдаления(Истина);
					Исключение
					    Сообщить(ОписаниеОшибки());
						Отказ = Истина;
						ОтменитьТранзакцию();
						Прервать;
					КонецПопытки;
				КонецЦикла;
				ЗафиксироватьТранзакцию();
			Иначе
				Отказ = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
