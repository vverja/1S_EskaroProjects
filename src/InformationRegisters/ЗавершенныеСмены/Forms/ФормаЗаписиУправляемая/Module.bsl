////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Устанавливает невидимым реквизитам записи значения выбранной смены
&НаСервере
Процедура УстановитьСмену()
	
	Если ВыбраннаяСмена = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(Запись, Новый Структура("ГраницаСмены, Смена")); // "Пустая смена"
	Иначе
		ЗаполнитьЗначенияСвойств(Запись, ТаблицаСмен.Получить(ВыбраннаяСмена));
	КонецЕсли;
	
КонецПроцедуры

// Подготавлвает перечень смен, включающий незавершенные смены выбранного подразделения и последнюю завершенную.
// Перечень содержит не более 50 смен,
// если перечень содержит не все незавершенные смены, то он содержит элемент Неопределено.
//
// Возвращаемое значение
//  СписокЗначений - список, содержащий 
//    структуры с ключами ГраницаСмены и Смена
//    значение Неопределено
&НаСервере
Процедура ПодготовитьСписокВыбораСмен()
	
	ВыбраннаяСмена = Неопределено;
	
	Если Запись.Подразделение.Пустая() Тогда
		ТаблицаСмен.Очистить();
		Элементы.ВыбраннаяСмена.СписокВыбора.Очистить();
		Возврат;
	КонецЕсли;
	
	// Получим перечень незавершенных смен и последней завершенной
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтчетМастераСмены.ГраницаСмены КАК ГраницаСмены,
	|	ОтчетМастераСмены.Смена,
	|	ЛОЖЬ КАК Завершена
	|ИЗ
	|	Документ.ОтчетМастераСмены КАК ОтчетМастераСмены
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗавершенныеСмены КАК ЗавершенныеСмены
	|		ПО ОтчетМастераСмены.Подразделение = ЗавершенныеСмены.Подразделение
	|ГДЕ
	|	ОтчетМастераСмены.Подразделение = &Подразделение
	|	И ОтчетМастераСмены.Проведен
	|	И ОтчетМастераСмены.ГраницаСмены > ЕСТЬNULL(ЗавершенныеСмены.ГраницаСмены, ДАТАВРЕМЯ(1, 1, 1))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗавершенныеСмены.ГраницаСмены,
	|	ЗавершенныеСмены.Смена,
	|	ИСТИНА
	|ИЗ
	|	РегистрСведений.ЗавершенныеСмены КАК ЗавершенныеСмены
	|ГДЕ
	|	ЗавершенныеСмены.Подразделение = &Подразделение
	|
	|УПОРЯДОЧИТЬ ПО
	|	Завершена,
	|	ГраницаСмены УБЫВ"
	);
	
	Запрос.УстановитьПараметр("Подразделение", Запись.Подразделение);
	
	ТаблицаСмен.Загрузить(Запрос.Выполнить().Выгрузить());
	
	// Установим значения в список выбора
	СписокСмен = Элементы.ВыбраннаяСмена.СписокВыбора;
	
	СписокСмен.Очистить();
	
	Для НомерСтроки = 0 По ТаблицаСмен.Количество()-1 Цикл
		
		ДанныеСмены = ТаблицаСмен[НомерСтроки];
		
		ПредставлениеСмены = ОперативныйУчетПроизводства.ПредставлениеСмены(ДанныеСмены.ГраницаСмены, ДанныеСмены.Смена) + ?(ДанныеСмены.Завершена," (завершена)", "");
		
		// Значениями списка будет номер строки таблицы смен.
		// Почему номер строки: чтобы по нему можно было найти значение в таблице 
		//   (если в значениях хранить структуру, то по ней затем будет невозможен поиск значения).
		СписокСмен.Добавить(НомерСтроки, ПредставлениеСмены);
		
	КонецЦикла;
	
	// Спозиционируемся на выбранной смене
	СтруктураПоиска = Новый Структура("ГраницаСмены, Смена");
	ЗаполнитьЗначенияСвойств(СтруктураПоиска, Запись);
	НайденныеСтроки = ТаблицаСмен.НайтиСтроки(СтруктураПоиска);
	Если НайденныеСтроки.Количество() > 0 Тогда
		
		ВыбраннаяСмена = ТаблицаСмен.Индекс(НайденныеСтроки[0]);
		
	Иначе
		
		ВыбраннаяСмена = Неопределено;
		
	КонецЕсли;
	
КонецПроцедуры

// Заполняет реквизиты значениями последней незавершенной смены
//
&НаСервере
Процедура ЗаполнитьПоПодразделению()
	
	ВыбраннаяСмена = Неопределено;
	
	ПодготовитьСписокВыбораСмен();
	Если ТаблицаСмен.Количество() > 0 Тогда
			
		// Заполним значениями последней незавершенной смены
		ВыбраннаяСмена = 0;
			
	КонецЕсли;
		
	УстановитьСмену();
	
КонецПроцедуры

// Настраивает диалог формы в соответствии со значениями реквизитов
//
&НаКлиенте
Процедура НастроитьДиалог()
	
	Элементы.ВыбраннаяСмена.ОтметкаНезаполненного = (ВыбраннаяСмена = Неопределено);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ РЕКВИЗИТОВ

&НаКлиенте
Процедура ПодразделениеПриИзменении(Элемент)
	
	ЗаполнитьПоПодразделению();
	НастроитьДиалог();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбраннаяСменаПриИзменении(Элемент)
	
	УстановитьСмену();
	НастроитьДиалог();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РегистрСведенийМенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	Если РегистрСведенийМенеджерЗаписи.Выбран() Тогда
		
		ПодготовитьСписокВыбораСмен();
		
	Иначе
		
		// Открыли форму новой записи
		// Определим следующую смену для закрытия
		
		Если Запись.Подразделение.Пустая() Тогда
			Запись.Подразделение = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(
									глЗначениеПеременной("глТекущийПользователь"), 
									"ОсновноеПодразделение");
		КонецЕсли;
								
		ЗаполнитьПоПодразделению();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НастроитьДиалог();
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// На всякий случай получим актуальные параметры выбранной смены
	УстановитьСмену();
	
	// Для того, чтобы можно было заместить запись, набор должен быть считан с тем же отбором, с которым записываем.
	// Поэтому сохраним данные реквизитов,
	// считаем набор,
	// и затем вернем данные реквизитов.
	Данные = Новый Структура("Смена,ГраницаСмены,Подразделение");
	ЗаполнитьЗначенияСвойств(Данные, Запись);
	
	РегистрСведенийМенеджерЗаписи = РеквизитФормыВЗначение("Запись");
	//РегистрСведенийМенеджерЗаписи = РегистрыСведений.ЗавершенныеСмены.СоздатьМенеджерЗаписи();
	//РегистрСведенийМенеджерЗаписи.Подразделение = Запись.Подразделение;
	РегистрСведенийМенеджерЗаписи.Прочитать();
	
	ЗначениеВРеквизитФормы(РегистрСведенийМенеджерЗаписи, "Запись");
	
	// Запрещено сдвигать границу завершенных смен назад
	Если Данные.ГраницаСмены <> '0001-01-01' И РегистрСведенийМенеджерЗаписи.ГраницаСмены > Данные.ГраницаСмены Тогда
		// Выполняется вне транзакции.
		// Модальное окно не будет выдано.
		// Поэтому выдаем своё модальное окно.
		ОбщегоНазначения.СообщитьОбОшибке(НСтр("ru = 'Есть более поздние завершенные смены.
				|Запрещено сдвигать границу завершенных смен назад.'"), Отказ,,, Запись);
	КонецЕсли;
	
	// ...вернем данные реквизитов.
	ЗаполнитьЗначенияСвойств(Запись, Данные);
	
КонецПроцедуры


