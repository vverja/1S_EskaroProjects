// Процедура предназначена для записи наборов записей перерасчета для тех документов, которые затронуты
// данным набором записей регистра
// Если набор записей НадбавкиПоШтатномуРасписаниюОрганизаций записывается с датами, после которых проводились 
// начисления зарплаты (по тем же физлицам, по которым записываем начисления), то нужно переначислить 
// зарплату (т.е. перезаполнить соответсвующие документы Начисление зарплаты)
// 
// Параметры:
//	нет
// Возвращаемое значение:
//	нет
//
Процедура ЗаписьПерерасчетов()
	
	Запрос = Новый Запрос;
	
	УсловиеТекст = "";
	Для Каждого ЭлементОтбора из ЭтотОбъект.Отбор Цикл
		Если ЭлементОтбора.Использование Тогда
			Если не ПустаяСтрока(УсловиеТекст) Тогда
				УсловиеТекст = УсловиеТекст + " И ";
			КонецЕсли;
			УсловиеТекст = УсловиеТекст + "Надбавки." + ЭлементОтбора.Имя + " = &" + ЭлементОтбора.Имя;
			Запрос.УстановитьПараметр(ЭлементОтбора.Имя, ЭлементОтбора.Значение);
		КонецЕсли;

	КонецЦикла;
	Если не ПустаяСтрока(УсловиеТекст) Тогда
		УсловиеТекст = "ГДЕ " + УсловиеТекст;
	КонецЕсли;
	
	ЗапросТекст = 
	"ВЫБРАТЬ
	|	ВыбранныеЗаписи.Регистратор КАК Регистратор,
	|	ВыбранныеЗаписи.Сотрудник
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		Расчеты.Регистратор КАК Регистратор,
	|		Расчеты.Сотрудник КАК Сотрудник
	|	ИЗ
	|		РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций КАК Надбавки
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизации
	|			ПО РаботникиОрганизации.ПодразделениеОрганизации = Надбавки.ПодразделениеОрганизации И РаботникиОрганизации.Должность = Надбавки.Должность
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК Расчеты
	|			ПО Расчеты.Сотрудник = РаботникиОрганизации.Сотрудник И Расчеты.Организация = РаботникиОрганизации.Организация И Расчеты.ПериодДействияНачало >= Надбавки.Период
	|	
	|	" + УсловиеТекст + ") КАК ВыбранныеЗаписи
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ПерерасчетОсновныхНачислений КАК Перерасчеты
	|		ПО Перерасчеты.ОбъектПерерасчета = ВыбранныеЗаписи.Регистратор И Перерасчеты.Сотрудник = ВыбранныеЗаписи.Сотрудник И (Перерасчеты.ВидРасчета = &парамПустойВидРасчета)
	|
	|ГДЕ
	|	((Перерасчеты.ОбъектПерерасчета) ЕСТЬ NULL )
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	Запрос.УстановитьПараметр("парамПустойВидРасчета",	ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ПустаяСсылка());
	Запрос.Текст = ЗапросТекст;
	Выборка = Запрос.Выполнить().Выбрать();
	
	Наборы = Новый Соответствие;
	Пока Выборка.Следующий() Цикл
		Набор = Наборы[Выборка.Регистратор];
		Если Набор = Неопределено Тогда
			Набор = РегистрыРасчета.ОсновныеНачисленияРаботниковОрганизаций.Перерасчеты.ПерерасчетОсновныхНачислений.СоздатьНаборЗаписей();
			Набор.Отбор.ОбъектПерерасчета.Значение = Выборка.Регистратор;
			Набор.Отбор.ОбъектПерерасчета.Использование = Истина;
			Наборы.Вставить(Выборка.Регистратор, Набор);
		КонецЕсли;
		НоваяСтрока = Набор.Добавить();
		НоваяСтрока.ОбъектПерерасчета = Выборка.Регистратор;
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
	КонецЦикла;
	Для Каждого ЭлементСтруктуры Из Наборы Цикл
		// дописываем набор записей по данному объекту перерасчета
		ЭлементСтруктуры.Значение.Записать(Ложь);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик события ПередЗаписью набора записей регистра сведений
Процедура ПередЗаписью(Отказ, Замещение)
	Если Замещение Тогда
		// запишем перерасчеты по тем записям, которые сейчас будут замещены
		ЗаписьПерерасчетов();
	КонецЕсли;
КонецПроцедуры          

// Обработчик события ПриЗаписи набора записей регистра сведений
Процедура ПриЗаписи(Отказ, Замещение)
	// запишем перерасчеты по новым записям
	ЗаписьПерерасчетов();
КонецПроцедуры