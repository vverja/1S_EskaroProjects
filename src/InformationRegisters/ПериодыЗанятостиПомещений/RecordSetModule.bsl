////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем ПустойНаборЗаписей;

Перем мПомещения;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

Процедура ВыполнитьПроверку(ДатаНачала = Неопределено, ДатаОкончания = Неопределено)
	
	СообщенияОбОшибках = Новый Массив;
	
	Регистратор = Отбор.Регистратор.Значение;
	
	ПроцедурыУправленияПерсоналом.ПолучитьОшибкиПериодовЗанятостиПомещения(Регистратор, Истина, мПомещения, СообщенияОбОшибках, ДатаНачала, ДатаОкончания);
	
	ТекстОшибки = "";
	Для Каждого Сообщение Из СообщенияОбОшибках Цикл
		СтрокаСообщениеОбОшибке = Сообщение.Помещение + ": Противоречие в периодах по занятости" + Символы.ПС+ "(" + 
		Формат(Сообщение.ДатаНачала, "ДФ='дд МММ гг ""г."" ЧЧ:мм'") + " - " + 
		Формат(Сообщение.ДатаОкончания, "ДФ='дд МММ гг ""г."" ЧЧ:мм'") + " и " + 
		Формат(Сообщение.ДатаНачалаПред, "ДФ='дд МММ гг ""г."" ЧЧ:мм'") + " - " + 
		Формат(Сообщение.ДатаОкончанияПред, "ДФ='дд МММ гг ""г."" ЧЧ:мм'") + ")";
		СтрокаСообщениеОбОшибке = СтрокаСообщениеОбОшибке + Символы.ПС + "Документы, которые противоречат друг другу:";
		Если не ПустаяСтрока(Сообщение.Регистратор) Тогда
			СтрокаСообщениеОбОшибке = СтрокаСообщениеОбОшибке + Символы.ПС + "   " + Сообщение.Регистратор;
		КонецЕсли;
		Если не ПустаяСтрока(Сообщение.ПослРегистратор) Тогда
			СтрокаСообщениеОбОшибке = СтрокаСообщениеОбОшибке + Символы.ПС + "   " + Сообщение.ПослРегистратор;
		КонецЕсли;
		Если Не ПустаяСтрока(ТекстОшибки) Тогда
			ТекстОшибки = ТекстОшибки + Символы.ПС;
		КонецЕсли;
		ТекстОшибки = ТекстОшибки + СтрокаСообщениеОбОшибке;
	КонецЦикла;
	
	Если СообщенияОбОшибках.Количество() > 0 Тогда
		ВызватьИсключение ТекстОшибки;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ПустойНаборЗаписей = ЭтотОбъект.Количество() = 0;
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ, Замещение)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	мПомещения = Новый Массив;
	
	ДатаНачала		= Дата(1,1,1);
	ДатаОкончания	= Дата(1,1,1);
	
	Для Каждого Запись Из ЭтотОбъект Цикл
		мПомещения.Добавить(Запись.Помещение);
		
		Если (Не ЗначениеЗаполнено(ДатаНачала) ИЛИ ДатаНачала > Запись.ДатаНачала) И ЗначениеЗаполнено(Запись.ДатаНачала) Тогда
			ДатаНачала	= Запись.ДатаНачала;
		КонецЕсли;
		Если (Не ЗначениеЗаполнено(ДатаОкончания) ИЛИ ДатаОкончания < Запись.ДатаОкончания) И ЗначениеЗаполнено(Запись.ДатаОкончания) Тогда
			ДатаОкончания	= Запись.ДатаОкончания;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ПустойНаборЗаписей Тогда
		ВыполнитьПроверку(ДатаНачала, ДатаОкончания);
	КонецЕсли;
	
КонецПроцедуры // ПриЗаписи()

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ

