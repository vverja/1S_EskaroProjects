////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки          Экспорт;

#Если Клиент ИЛИ ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует отчет в табличный документ
//
// Параметры:
//  Результат         - табличный документ куда будет сформирован отчет
//  ДанныеРасшифровки - данные расшифровки отчета схемы компоновки данных
//  ВыводВФормуОтчета - признак вывода отчета в форму  
//
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	Возврат ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	
КонецФункции //СформироватьОтчет()
	
// В процедуре можно доработать компоновщик перед выводом в отчет
//
// Параметры:
//  Нет.
//
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	
КонецПроцедуры //ДоработатьКомпоновщикПередВыводом()

#КонецЕсли

#Если Клиент Тогда

// Настройка отчета
//
// Параметры:
//  Отбор                              - отбор компоновки данных
//  КомпоновщикНастроекОсновногоОтчета - компоновщик настроек
//
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры //Настроить()

// Сохраняет настройки отчета
//
// Параметры:
//  Нет.
//
Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры //СохранитьНастройку()

// Заполняет параметры отчета по элементу справочника из переменной "СохраненнаяНастройка".
//
// Параметры:
//  Нет.
//
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры //ПрименитьНастройку()

// Инициализация отчета
//
// Параметры:
//  Нет.
//
Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.ИнициализацияТиповогоОтчета(ЭтотОбъект);
	
КонецПроцедуры //ИнициализацияОтчета()

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли