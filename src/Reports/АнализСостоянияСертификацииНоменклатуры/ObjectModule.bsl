#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ // РАЗРЕШЕННЫЕ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫРАЗИТЬ(ЕСТЬNULL(РегСертификация.СерияНоменклатуры.Владелец, РегОстаткиТоваров.СерияНоменклатуры.Владелец) КАК Справочник.Номенклатура) КАК Номенклатура,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(РегСертификация.СерияНоменклатуры, РегОстаткиТоваров.СерияНоменклатуры) КАК Справочник.СерииНоменклатуры) КАК СерияНоменклатуры,
		|	ЕСТЬNULL(РегОстаткиТоваров.КоличествоОстаток, 0) КАК КолОстаток,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.СостояниеСертификации
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СостояниеСертификацииВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.ДатаСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаСертификатаВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.НомерСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ  КАК НомерСертификатаВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.ДатаНачала
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаНачалаВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.ДатаОкончания
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаОкончанияВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		ВЫБОР
		|			КОГДА РегСертификация.СостояниеСертификации ЕСТЬ NULL 
		|				ТОГДА ""Нет данных о сертификации""
		|			КОГДА РегСертификация.СостояниеСертификации = &Заявка
		|				ТОГДА ""Подана заявка""
		|			КОГДА РегСертификация.СостояниеСертификации = &ОтборПроб
		|				ТОГДА ""Выполнен отбор проб""
		|			КОГДА РегСертификация.СостояниеСертификации = &Отказ
		|				ТОГДА ""В сертификации отказано""
		|			КОГДА РегСертификация.СостояниеСертификации = &Есть
		|				ТОГДА ВЫБОР
		|						КОГДА РегСертификация.ДатаОкончания < &ДатаКонца
		|								И РегСертификация.ДатаОкончания <> &ПустДата
		|							ТОГДА ""Сертификат просрочен""
		|						КОГДА (РегСертификация.ДатаНачала <= &ДатаКонца
		|								ИЛИ РегСертификация.ДатаНачала = &ПустДата)
		|								И (РегСертификация.ДатаОкончания >= &ДатаКонца
		|									ИЛИ РегСертификация.ДатаОкончания = &ПустДата)
		|							ТОГДА ""Действует""
		|					КОНЕЦ
		|		КОНЕЦ
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СтатусВнешнСертификации,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.СостояниеСертификации
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СостояниеСертификацииВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.ДатаСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаСертификатаВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.НомерСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК НомерСертификатаВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.ДатаНачала
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаНачалаВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.ДатаОкончания
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаОкончанияВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		ВЫБОР
		|			КОГДА РегСертификация.СостояниеСертификации ЕСТЬ NULL 
		|				ТОГДА ""Нет данных о сертификации""
		|			КОГДА РегСертификация.СостояниеСертификации = &Заявка
		|				ТОГДА ""Подана заявка""
		|			КОГДА РегСертификация.СостояниеСертификации = &ОтборПроб
		|				ТОГДА ""Выполнен отбор проб""
		|			КОГДА РегСертификация.СостояниеСертификации = &Отказ
		|				ТОГДА ""В сертификации отказано""
		|			КОГДА РегСертификация.СостояниеСертификации = &Есть
		|				ТОГДА ВЫБОР
		|						КОГДА РегСертификация.ДатаОкончания < &ДатаКонца
		|								И РегСертификация.ДатаОкончания <> &ПустДата
		|							ТОГДА ""Сертификат просрочен""
		|						КОГДА (РегСертификация.ДатаНачала <= &ДатаКонца
		|								ИЛИ РегСертификация.ДатаНачала = &ПустДата)
		|								И (РегСертификация.ДатаОкончания >= &ДатаКонца
		|									ИЛИ РегСертификация.ДатаОкончания = &ПустДата)
		|							ТОГДА ""Действует""
		|					КОНЕЦ
		|		КОНЕЦ
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СтатусВнутрСертификации
		|{ВЫБРАТЬ
		|	Номенклатура.*,
		|	СерияНоменклатуры.*,
		|	КолОстаток,
		|	СостояниеСертификацииВнешн,
		|	ДатаСертификатаВнешн,
		|	НомерСертификатаВнешн,
		|	ДатаНачалаВнешн,
		|	ДатаОкончанияВнешн,
		|	СтатусВнешнСертификации,
		|	СостояниеСертификацииВнутр,
		|	ДатаСертификатаВнутр,
		|	НомерСертификатаВнутр,
		|	ДатаНачалаВнутр,
		|	ДатаОкончанияВнутр,
		|	СтатусВнутрСертификации}
		|ИЗ
		|	РегистрСведений.СертификацияНоменклатуры.СрезПоследних(&ДатаКон, {СерияНоменклатуры.* КАК СерияНоменклатуры, СерияНоменклатуры.Владелец.* КАК Номенклатура}) КАК РегСертификация
		|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|			&ДатаКон,
		|			{СерияНоменклатуры.* КАК СерияНоменклатуры, СерияНоменклатуры.Владелец.* КАК Номенклатура}) КАК РегОстаткиТоваров
		|		ПО РегОстаткиТоваров.СерияНоменклатуры.Владелец = РегСертификация.СерияНоменклатуры.Владелец
		|		 И РегОстаткиТоваров.СерияНоменклатуры          = РегСертификация.СерияНоменклатуры}
		|ГДЕ
		|	(&ФлагТолькоОстатки И НЕ РегОстаткиТоваров.СерияНоменклатуры ЕСТЬ NULL)
		|   ИЛИ НЕ &ФлагТолькоОстатки
		|
		|{ГДЕ
		|	ВЫРАЗИТЬ(ЕСТЬNULL(РегСертификация.СерияНоменклатуры.Владелец, РегОстаткиТоваров.СерияНоменклатуры.Владелец) КАК Справочник.Номенклатура).* КАК Номенклатура,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(РегСертификация.СерияНоменклатуры, РегОстаткиТоваров.СерияНоменклатуры) КАК Справочник.СерииНоменклатуры).* КАК СерияНоменклатуры,
		|	ЕСТЬNULL(РегОстаткиТоваров.КоличествоОстаток, 0) КАК КолОстаток,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.СостояниеСертификации
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СостояниеСертификацииВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.ДатаСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаСертификатаВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.НомерСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ  КАК НомерСертификатаВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.ДатаНачала
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаНачалаВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		РегСертификация.ДатаОкончания
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаОкончанияВнешн,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.СостояниеСертификации
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СостояниеСертификацииВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.ДатаСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаСертификатаВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.НомерСертификата
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК НомерСертификатаВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.ДатаНачала
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаНачалаВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		РегСертификация.ДатаОкончания
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК ДатаОкончанияВнутр,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнешнСертификат ТОГДА
		|		ВЫБОР
		|			КОГДА РегСертификация.СостояниеСертификации ЕСТЬ NULL 
		|				ТОГДА ""Нет данных о сертификации""
		|			КОГДА РегСертификация.СостояниеСертификации = &Заявка
		|				ТОГДА ""Подана заявка""
		|			КОГДА РегСертификация.СостояниеСертификации = &ОтборПроб
		|				ТОГДА ""Выполнен отбор проб""
		|			КОГДА РегСертификация.СостояниеСертификации = &Отказ
		|				ТОГДА ""В сертификации отказано""
		|			КОГДА РегСертификация.СостояниеСертификации = &Есть
		|				ТОГДА ВЫБОР
		|						КОГДА РегСертификация.ДатаОкончания < &ДатаКонца
		|								И РегСертификация.ДатаОкончания <> &ПустДата
		|							ТОГДА ""Сертификат просрочен""
		|						КОГДА (РегСертификация.ДатаНачала <= &ДатаКонца
		|								ИЛИ РегСертификация.ДатаНачала = &ПустДата)
		|								И (РегСертификация.ДатаОкончания >= &ДатаКонца
		|									ИЛИ РегСертификация.ДатаОкончания = &ПустДата)
		|							ТОГДА ""Действует""
		|					КОНЕЦ
		|		КОНЕЦ
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СтатусВнешнСертификации,
		|	ВЫБОР КОГДА РегСертификация.ВидСертификата = &ВнутрСертификат ТОГДА
		|		ВЫБОР
		|			КОГДА РегСертификация.СостояниеСертификации ЕСТЬ NULL 
		|				ТОГДА ""Нет данных о сертификации""
		|			КОГДА РегСертификация.СостояниеСертификации = &Заявка
		|				ТОГДА ""Подана заявка""
		|			КОГДА РегСертификация.СостояниеСертификации = &ОтборПроб
		|				ТОГДА ""Выполнен отбор проб""
		|			КОГДА РегСертификация.СостояниеСертификации = &Отказ
		|				ТОГДА ""В сертификации отказано""
		|			КОГДА РегСертификация.СостояниеСертификации = &Есть
		|				ТОГДА ВЫБОР
		|						КОГДА РегСертификация.ДатаОкончания < &ДатаКонца
		|								И РегСертификация.ДатаОкончания <> &ПустДата
		|							ТОГДА ""Сертификат просрочен""
		|						КОГДА (РегСертификация.ДатаНачала <= &ДатаКонца
		|								ИЛИ РегСертификация.ДатаНачала = &ПустДата)
		|								И (РегСертификация.ДатаОкончания >= &ДатаКонца
		|									ИЛИ РегСертификация.ДатаОкончания = &ПустДата)
		|							ТОГДА ""Действует""
		|					КОНЕЦ
		|		КОНЕЦ
		|	ИНАЧЕ
		|		NULL
		|	КОНЕЦ КАК СтатусВнутрСертификации}
		|{УПОРЯДОЧИТЬ ПО
		|	Номенклатура.*,
		|	СерияНоменклатуры.*,
		|	КолОстаток,
		|	СостояниеСертификацииВнешн,
		|	ДатаСертификатаВнешн,
		|	НомерСертификатаВнешн,
		|	ДатаНачалаВнешн,
		|	ДатаОкончанияВнешн,
		|	СтатусВнешнСертификации,
		|	СостояниеСертификацииВнутр,
		|	ДатаСертификатаВнутр,
		|	НомерСертификатаВнутр,
		|	ДатаНачалаВнутр,
		|	ДатаОкончанияВнутр,
		|	СтатусВнутрСертификации}
		|ИТОГИ
		|	СУММА(КолОстаток),
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(СостояниеСертификацииВнешн)
		|	КОНЕЦ КАК СостояниеСертификацииВнешн,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(СтатусВнешнСертификации)
		|	КОНЕЦ КАК СтатусВнешнСертификации,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(ДатаСертификатаВнешн)
		|	КОНЕЦ КАК ДатаСертификатаВнешн,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(НомерСертификатаВнешн)
		|	КОНЕЦ КАК НомерСертификатаВнешн,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(ДатаНачалаВнешн)
		|	КОНЕЦ КАК ДатаНачалаВнешн,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(ДатаОкончанияВнешн)
		|	КОНЕЦ КАК ДатаОкончанияВнешн,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(СостояниеСертификацииВнутр)
		|	КОНЕЦ КАК СостояниеСертификацииВнутр,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(ДатаСертификатаВнутр)
		|	КОНЕЦ КАК ДатаСертификатаВнутр,
		|	МАКСИМУМ(ДатаСертификатаВнутр),
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(НомерСертификатаВнутр)
		|	КОНЕЦ КАК НомерСертификатаВнутр,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(ДатаНачалаВнутр)
		|	КОНЕЦ КАК ДатаНачалаВнутр,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(ДатаОкончанияВнутр)
		|	КОНЕЦ КАК ДатаОкончанияВнутр,
		|	ВЫБОР КОГДА СерияНоменклатуры ЕСТЬ NULL ТОГДА
		|		""""
		|	ИНАЧЕ
		|		МАКСИМУМ(СтатусВнутрСертификации)
		|	КОНЕЦ КАК СтатусВнутрСертификации
		|	ПО ОБЩИЕ,
		|		Номенклатура,
		|		СерияНоменклатуры
		|{ИТОГИ ПО
		|	Номенклатура.*,
		|	СерияНоменклатуры.*}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияНоменклатуры",          "Серия номенклатуры");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолОстаток",                 "Остаток на складе");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатусВнешнСертификации",    "Статус сертификации (внешн. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаНачалаВнешн",            "Дата с (внешн. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаОкончанияВнешн",         "Дата по (внешн. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СостояниеСертификацииВнешн", "Состояние сертификации (внешн. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаСертификатаВнешн",       "Дата выдачи сертификата (внешн. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерСертификатаВнешн",      "Номер сертификата (внешн. сертификация)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатусВнутрСертификации",    "Статус сертификации (внутр. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаНачалаВнутр",            "Дата с (внутр. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаОкончанияВнутр",         "Дата по (внутр. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СостояниеСертификацииВнутр", "Состояние сертификации (внутр. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДатаСертификатаВнутр",       "Дата выдачи сертификата (внутр. сертификация)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НомерСертификатаВнутр",      "Номер сертификата (внутр. сертификация)");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель("КолОстаток",                 "Остаток на складе", ФлагИспользоватьОстатки, "ЧЦ=15; ЧДЦ=3; ЧН=-",);
	
	УниверсальныйОтчет.ДобавитьПоказатель("СтатусВнешнСертификации",    "Статус сертификации",     Истина,,                               "ВнешнСерт", "Внешняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("ДатаНачалаВнешн",            "Дата с",                  Истина, "ДЛФ=D; ДП='Без ограничений'", "ВнешнСерт", "Внешняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("ДатаОкончанияВнешн",         "Дата по",                 Истина, "ДЛФ=D; ДП='Без ограничений'", "ВнешнСерт", "Внешняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("СостояниеСертификацииВнешн", "Состояние сертификации",    Ложь,,                               "ВнешнСерт", "Внешняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("ДатаСертификатаВнешн",       "Дата выдачи сертификата", Истина, "ДЛФ=D; ДП=-",                 "ВнешнСерт", "Внешняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("НомерСертификатаВнешн",      "Номер сертификата",       Истина,,                               "ВнешнСерт", "Внешняя сертификация");
	
	УниверсальныйОтчет.ДобавитьПоказатель("СтатусВнутрСертификации",    "Статус сертификации",     Истина,,                               "ВнутрСерт", "Внутренняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("ДатаНачалаВнутр",            "Дата с",                  Истина, "ДЛФ=D; ДП='Без ограничений'", "ВнутрСерт", "Внутренняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("ДатаОкончанияВнутр",         "Дата по",                 Истина, "ДЛФ=D; ДП='Без ограничений'", "ВнутрСерт", "Внутренняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("СостояниеСертификацииВнутр", "Состояние сертификации",    Ложь,,                               "ВнутрСерт", "Внутренняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("ДатаСертификатаВнутр",       "Дата выдачи сертификата", Истина, "ДЛФ=D; ДП=-",                 "ВнутрСерт", "Внутренняя сертификация");
	УниверсальныйОтчет.ДобавитьПоказатель("НомерСертификатаВнутр",      "Номер сертификата",       Истина,,                               "ВнутрСерт", "Внутренняя сертификация");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	УниверсальныйОтчет.ДобавитьОтбор("СерияНоменклатуры");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	Параметры = УниверсальныйОтчет.ПостроительОтчета.Параметры;
	Параметры.Вставить( "ПустДата",        '00010101000000');
	Параметры.Вставить( "ВнутрСертификат",   Перечисления.ВидыСертификацииНоменклатуры.ВнутренняяСертификация);
	Параметры.Вставить( "ВнешнСертификат",   Перечисления.ВидыСертификацииНоменклатуры.ВнешняяСертификация);
	Параметры.Вставить( "Заявка",            Перечисления.СостоянияСертификацииНоменклатуры.Заявка);
	Параметры.Вставить( "ОтборПроб",         Перечисления.СостоянияСертификацииНоменклатуры.ОтборПроб);
	Параметры.Вставить( "Есть",              Перечисления.СостоянияСертификацииНоменклатуры.Есть);
	Параметры.Вставить( "Отказ",             Перечисления.СостоянияСертификацииНоменклатуры.Отказ);
	Параметры.Вставить( "ФлагТолькоОстатки", ФлагИспользоватьОстатки);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;
УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
