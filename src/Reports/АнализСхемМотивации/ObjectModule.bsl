#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем НП Экспорт;  				  // Настройка периода

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//	ЕстьОшибки - флаг того, что при формировании произошли ошибки
//
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0) Экспорт
	
	ДокументРезультат.Очистить();
	
	// Определим значения переменных объекта
	мМакет = ПолучитьМакет("Макет");	
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ПериодРегистрации", 	   ДатаНач);
	Запрос.УстановитьПараметр("КонецПериодаРегистрации", КонецДня(ДатаКон));	
	
	ТекстУсловияПоВидуСхемыМотивации = "";
	Если ОтборВидСхемыМотивации Тогда
		
		Запрос.УстановитьПараметр("ВидСхемыМотивации", ВидСхемыМотивации);
		
		Если ВидСравненияВидСхемыМотивации = ВидСравнения.Равно Тогда
			ЗапросВидСравненияВидСхемыМотивации = " = &ВидСхемыМотивации" 
		ИначеЕсли ВидСравненияВидСхемыМотивации = ВидСравнения.НеРавно Тогда
			ЗапросВидСравненияВидСхемыМотивации = " <> &ВидСхемыМотивации"
		ИначеЕсли ВидСравненияВидСхемыМотивации = ВидСравнения.ВСписке Тогда
			ЗапросВидСравненияВидСхемыМотивации = " В (&ВидСхемыМотивации)"
		ИначеЕсли ВидСравненияВидСхемыМотивации = ВидСравнения.НеВСписке Тогда
			ЗапросВидСравненияВидСхемыМотивации = " НЕ В (&ВидСхемыМотивации)"
		ИначеЕсли ВидСравненияВидСхемыМотивации = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ЗапросВидСравненияВидСхемыМотивации = ВидСравнения.ВИерархии Тогда
			ЗапросВидСравненияВидСхемыМотивации = " В ИЕРАРХИИ (&ВидСхемыМотивации)"
		ИначеЕсли ВидСравненияВидСхемыМотивации = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ЗапросВидСравненияВидСхемыМотивации = ВидСравнения.НеВИерархии Тогда
			ЗапросВидСравненияВидСхемыМотивации = " НЕ В ИЕРАРХИИ (&ВидСхемыМотивации)"
		КонецЕсли; 
		
		ТекстУсловияПоВидуСхемыМотивации = Символы.ПС + Символы.Таб + "И <имя таблицы>ВидСхемыМотивации " + ЗапросВидСравненияВидСхемыМотивации;
		
	КонецЕсли;	
	
	ТекстУсловияПоФизЛицу = "";
	Если ОтборФизЛицо Тогда
		
		Запрос.УстановитьПараметр("Работники", ФизЛицо);
		
		Если ВидСравненияФизЛицо = ВидСравнения.Равно Тогда
			ЗапросВидСравненияФизЛицо = " = &Работники" 
		ИначеЕсли ВидСравненияФизЛицо = ВидСравнения.НеРавно Тогда
			ЗапросВидСравненияФизЛицо = " <> &Работники"
		ИначеЕсли ВидСравненияФизЛицо = ВидСравнения.ВСписке Тогда
			ЗапросВидСравненияФизЛицо = " В (&Работники)"
		ИначеЕсли ВидСравненияФизЛицо = ВидСравнения.НеВСписке Тогда
			ЗапросВидСравненияФизЛицо = " НЕ В (&Работники)"
		ИначеЕсли ВидСравненияФизЛицо = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ЗапросВидСравненияФизЛицо = ВидСравнения.ВИерархии Тогда
			ЗапросВидСравненияФизЛицо = " В ИЕРАРХИИ (&Работники)"
		ИначеЕсли ВидСравненияФизЛицо = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ЗапросВидСравненияФизЛицо = ВидСравнения.НеВИерархии Тогда
			ЗапросВидСравненияФизЛицо = " НЕ В ИЕРАРХИИ (&Работники)"
		КонецЕсли; 
		
		ТекстУсловияПоФизЛицу = Символы.ПС + Символы.Таб + "И <имя таблицы>ФизЛицо " + ЗапросВидСравненияФизЛицо;
		
	КонецЕсли; 	
	
	ТекстУсловияПоПодразделению = "";
	Если ОтборПодразделения Тогда
		
		Запрос.УстановитьПараметр("Подразделения", Подразделение);
		
		Если ВидСравненияПодразделения = ВидСравнения.Равно Тогда
			ЗапросВидСравненияПодразделение = " = &Подразделения" 
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеРавно Тогда
			ЗапросВидСравненияПодразделение = " <> &Подразделения"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСписке Тогда
			ЗапросВидСравненияПодразделение = " В (&Подразделения)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСписке Тогда
			ЗапросВидСравненияПодразделение = " НЕ В (&Подразделения)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.ВСпискеПоИерархии ИЛИ 
			ЗапросВидСравненияПодразделение = ВидСравнения.ВИерархии Тогда
			ЗапросВидСравненияПодразделение = " В ИЕРАРХИИ (&Подразделения)"
		ИначеЕсли ВидСравненияПодразделения = ВидСравнения.НеВСпискеПоИерархии ИЛИ 
			ЗапросВидСравненияПодразделение = ВидСравнения.НеВИерархии Тогда
			ЗапросВидСравненияПодразделение = " НЕ В ИЕРАРХИИ (&Подразделения)"
		КонецЕсли; 
		
		ТекстУсловияПоПодразделению = Символы.ПС + Символы.Таб + "И <имя таблицы>Подразделение " + ЗапросВидСравненияПодразделение;
		
	КонецЕсли; 	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИтоговыеНачисленияИУдержания.ФизЛицо КАК ФизЛицо,
	|	ИтоговыеНачисленияИУдержания.ВидСхемыМотивации КАК ВидСхемыМотивации,
	|	СУММА(ЕСТЬNULL(ИтоговыеНачисленияИУдержания.Результат,0)) КАК Результат,
	|	СУММА(ИтоговыеНачисленияИУдержания.Показатель1) КАК Показатель1,
	|	СУММА(ИтоговыеНачисленияИУдержания.Показатель2) КАК Показатель2,
	|	СУММА(ИтоговыеНачисленияИУдержания.Показатель3) КАК Показатель3,
	|	СУММА(ИтоговыеНачисленияИУдержания.Показатель4) КАК Показатель4,
	|	СУММА(ИтоговыеНачисленияИУдержания.Показатель5) КАК Показатель5,
	|	СУММА(ИтоговыеНачисленияИУдержания.Показатель6) КАК Показатель6,	
	|	ИтоговыеНачисленияИУдержания.Показатели1Показатель  КАК Показатели1Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели2Показатель  КАК Показатели2Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели3Показатель  КАК Показатели3Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели4Показатель  КАК Показатели4Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели5Показатель  КАК Показатели5Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели6Показатель  КАК Показатели6Показатель,	
	|	ИтоговыеНачисленияИУдержания.ВидРасчета КАК ВидРасчета,
	|	ИтоговыеНачисленияИУдержания.ФормулаРасчета КАК ФормулаРасчета,
	|	ИтоговыеНачисленияИУдержания.Регистратор
	|{ВЫБРАТЬ
	|	ФизЛицо,
	|	ВидСхемыМотивации,
	|	Результат,
	|	Показатель1,
	|	Показатель2,
	|	Показатель3,
	|	Показатель4,
	|	Показатель5,
	|	Показатель6,
	|	Показатели1Показатель,	
	|	Показатели2Показатель,	
	|	Показатели3Показатель,	
	|	Показатели4Показатель,	
	|	Показатели5Показатель,	
	|	Показатели6Показатель,		
	|	Регистратор}
	|ИЗ
	|	(ВЫБРАТЬ
	|		НачисленияИУдержания.ВидРегистра КАК ВидРегистра,
	|		НачисленияИУдержания.ФизЛицо КАК ФизЛицо,
	|		НачисленияИУдержания.ВидСхемыМотивации КАК ВидСхемыМотивации,
	|		НачисленияИУдержания.Результат КАК Результат,
	|		НачисленияИУдержания.Показатель1 КАК Показатель1,
	|		НачисленияИУдержания.Показатель2 КАК Показатель2,
	|		НачисленияИУдержания.Показатель3 КАК Показатель3,
	|		НачисленияИУдержания.Показатель4 КАК Показатель4,
	|		НачисленияИУдержания.Показатель5 КАК Показатель5,
	|		НачисленияИУдержания.Показатель6 КАК Показатель6,
	|		НачисленияИУдержания.Показатели1Показатель КАК Показатели1Показатель,
	|		НачисленияИУдержания.Показатели2Показатель КАК Показатели2Показатель,
	|		НачисленияИУдержания.Показатели3Показатель КАК Показатели3Показатель,
	|		НачисленияИУдержания.Показатели4Показатель КАК Показатели4Показатель,
	|		НачисленияИУдержания.Показатели5Показатель КАК Показатели5Показатель,
	|		НачисленияИУдержания.Показатели6Показатель КАК Показатели6Показатель,	
	|		НачисленияИУдержания.ВидРасчета КАК ВидРасчета,
	|		ПОДСТРОКА(НачисленияИУдержания.ВидРасчета.ФормулаРасчета, 1, 100) КАК ФормулаРасчета,
	|		НачисленияИУдержания.Подразделение КАК Подразделение,
	|		НачисленияИУдержания.Регистратор
	|	ИЗ
	|		(ВЫБРАТЬ
	|			1 КАК ВидРегистра,
	|			УправленческиеНачисления.ФизЛицо КАК ФизЛицо,
	|			ВЫБОР
	|				КОГДА НЕ УправленческиеНачисления.ПоВременнойСхемеМотивации
	|					ТОГДА "" Действующая схема мотивации""
	|				КОГДА УправленческиеНачисления.ВидСхемыМотивации = ЗНАЧЕНИЕ(Справочник.ВариантыCхемМотивации.ПустаяСсылка)
	|						ТОГДА "" Схема мотивации не выбрана""
	|				ИНАЧЕ УправленческиеНачисления.ВидСхемыМотивации
	|			КОНЕЦ КАК ВидСхемыМотивации,
	|			УправленческиеНачисления.Результат КАК Результат,
	|			ВЫБОР
	|				КОГДА Показатели1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)
	|					ТОГДА УправленческиеНачисления.ОтработаноДней
	|				КОГДА Показатели1.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
	|					ТОГДА УправленческиеНачисления.ОтработаноЧасов
	|				ИНАЧЕ
	|					УправленческиеНачисления.Показатель1
	|			КОНЕЦ КАК Показатель1,	
	|			Показатели1.Показатель.Наименование КАК Показатели1Показатель,
	|			ВЫБОР
	|				КОГДА Показатели2.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)
	|					ТОГДА УправленческиеНачисления.ОтработаноДней
	|				КОГДА Показатели2.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
	|					ТОГДА УправленческиеНачисления.ОтработаноЧасов
	|				ИНАЧЕ
	|					УправленческиеНачисления.Показатель2
	|			КОНЕЦ КАК Показатель2,		
	|			Показатели2.Показатель.Наименование КАК Показатели2Показатель,
	|			ВЫБОР
	|				КОГДА Показатели3.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)
	|					ТОГДА УправленческиеНачисления.ОтработаноДней
	|				КОГДА Показатели3.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
	|					ТОГДА УправленческиеНачисления.ОтработаноЧасов
	|				ИНАЧЕ
	|					УправленческиеНачисления.Показатель3
	|			КОНЕЦ КАК Показатель3,
	|			Показатели3.Показатель.Наименование КАК Показатели3Показатель,
	|			ВЫБОР
	|				КОГДА Показатели4.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)
	|					ТОГДА УправленческиеНачисления.ОтработаноДней
	|				КОГДА Показатели4.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
	|					ТОГДА УправленческиеНачисления.ОтработаноЧасов
	|				ИНАЧЕ
	|					УправленческиеНачисления.Показатель4
	|			КОНЕЦ КАК Показатель4,	
	|			Показатели4.Показатель.Наименование КАК Показатели4Показатель,
	|			ВЫБОР
	|				КОГДА Показатели5.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)
	|					ТОГДА УправленческиеНачисления.ОтработаноДней
	|				КОГДА Показатели5.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
	|					ТОГДА УправленческиеНачисления.ОтработаноЧасов
	|				ИНАЧЕ
	|					УправленческиеНачисления.Показатель5
	|			КОНЕЦ КАК Показатель5,	
	|			Показатели5.Показатель.Наименование КАК Показатели5Показатель,
	|			ВЫБОР
	|				КОГДА Показатели6.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВДнях)
	|					ТОГДА УправленческиеНачисления.ОтработаноДней
	|				КОГДА Показатели6.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.ВремяВЧасах)
	|					ТОГДА УправленческиеНачисления.ОтработаноЧасов
	|				ИНАЧЕ
	|					УправленческиеНачисления.Показатель6
	|			КОНЕЦ КАК Показатель6,		
	|			Показатели6.Показатель.Наименование КАК Показатели6Показатель,
	|			УправленческиеНачисления.ВидРасчета КАК ВидРасчета,
	|			УправленческиеНачисления.Подразделение КАК Подразделение,
	|			УправленческиеНачисления.Регистратор
	|		ИЗ
	|			РегистрРасчета.УправленческиеНачисления КАК УправленческиеНачисления
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели1
	|			ПО  УправленческиеНачисления.ВидРасчета = Показатели1.Ссылка
	|			И	Показатели1.НомерСтроки = 1
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели2
	|			ПО  УправленческиеНачисления.ВидРасчета = Показатели2.Ссылка
	|			И	Показатели2.НомерСтроки = 2
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели3
	|			ПО  УправленческиеНачисления.ВидРасчета = Показатели3.Ссылка
	|			И	Показатели3.НомерСтроки = 3	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели4
	|			ПО  УправленческиеНачисления.ВидРасчета = Показатели4.Ссылка
	|			И	Показатели4.НомерСтроки = 4	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели5
	|			ПО  УправленческиеНачисления.ВидРасчета = Показатели5.Ссылка
	|			И	Показатели5.НомерСтроки = 5	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеНачисления.Показатели КАК Показатели6
	|			ПО  УправленческиеНачисления.ВидРасчета = Показатели6.Ссылка
	|			И	Показатели6.НомерСтроки = 6	
	|
	|		ГДЕ
	|			УправленческиеНачисления.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";	
	
	Если ОтборФизЛицо Тогда
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстУсловияПоФизЛицу,"<имя таблицы>","УправленческиеНачисления.")
	КонецЕсли;
	Если ОтборПодразделения Тогда
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстУсловияПоПодразделению,"<имя таблицы>","УправленческиеНачисления.")
	КонецЕсли;	
	Если ОтборВидСхемыМотивации Тогда
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстУсловияПоВидуСхемыМотивации,"<имя таблицы>","УправленческиеНачисления.")
	КонецЕсли;
	
	ТекстЗапроса = ТекстЗапроса	+"
	
	|		ОБЪЕДИНИТЬ
	|		
	|		ВЫБРАТЬ
	|			2,
	|			УправленческиеУдержания.ФизЛицо,
	|			ВЫБОР
	|				КОГДА НЕ УправленческиеУдержания.ПоВременнойСхемеМотивации
	|					ТОГДА "" Действующая схема мотивации""
	|				КОГДА УправленческиеУдержания.ВидСхемыМотивации = ЗНАЧЕНИЕ(Справочник.ВариантыCхемМотивации.ПустаяСсылка)
	|					ТОГДА "" Схема мотивации не выбрана""
	|				ИНАЧЕ УправленческиеУдержания.ВидСхемыМотивации
	|			КОНЕЦ,	
	|			-УправленческиеУдержания.Результат,
	|			УправленческиеУдержания.Показатель1,
	|			Показатели1.Показатель.Наименование КАК Показатели1Показатель,
	|			УправленческиеУдержания.Показатель2,
	|			Показатели2.Показатель.Наименование КАК Показатели2Показатель,
	|			УправленческиеУдержания.Показатель3,
	|			Показатели3.Показатель.Наименование КАК Показатели3Показатель,
	|			УправленческиеУдержания.Показатель4,
	|			Показатели4.Показатель.Наименование КАК Показатели4Показатель,
	|			УправленческиеУдержания.Показатель5,
	|			Показатели5.Показатель.Наименование КАК Показатели5Показатель,
	|			УправленческиеУдержания.Показатель6,	
	|			Показатели6.Показатель.Наименование КАК Показатели6Показатель,
	|			УправленческиеУдержания.ВидРасчета,
	|			УправленческиеУдержания.Подразделение,
	|			УправленческиеУдержания.Регистратор
	|		ИЗ
	|			РегистрРасчета.УправленческиеУдержания КАК УправленческиеУдержания		
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели1
	|			ПО  УправленческиеУдержания.ВидРасчета = Показатели1.Ссылка
	|			И	Показатели1.НомерСтроки = 1
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели2
	|			ПО  УправленческиеУдержания.ВидРасчета = Показатели2.Ссылка
	|			И	Показатели2.НомерСтроки = 2
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели3
	|			ПО  УправленческиеУдержания.ВидРасчета = Показатели3.Ссылка
	|			И	Показатели3.НомерСтроки = 3	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели4
	|			ПО  УправленческиеУдержания.ВидРасчета = Показатели4.Ссылка
	|			И	Показатели4.НомерСтроки = 4	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели5
	|			ПО  УправленческиеУдержания.ВидРасчета = Показатели5.Ссылка
	|			И	Показатели5.НомерСтроки = 5	
	|			ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.УправленческиеУдержания.Показатели КАК Показатели6
	|			ПО  УправленческиеУдержания.ВидРасчета = Показатели6.Ссылка
	|			И	Показатели6.НомерСтроки = 6		
	|		ГДЕ
	|			УправленческиеУдержания.ПериодРегистрации МЕЖДУ &ПериодРегистрации И &КонецПериодаРегистрации";	
	
	Если ОтборФизЛицо Тогда
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстУсловияПоФизЛицу,"<имя таблицы>","УправленческиеУдержания.")
	КонецЕсли;
	Если ОтборПодразделения Тогда
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстУсловияПоПодразделению,"<имя таблицы>","УправленческиеУдержания.")
	КонецЕсли;		
	Если ОтборВидСхемыМотивации Тогда
		ТекстЗапроса = ТекстЗапроса + СтрЗаменить(ТекстУсловияПоВидуСхемыМотивации,"<имя таблицы>","УправленческиеУдержания.")
	КонецЕсли;	
	
	ТекстЗапроса = ТекстЗапроса	+"	
	|		) КАК НачисленияИУдержания) КАК ИтоговыеНачисленияИУдержания
	|{ГДЕ
	|	ИтоговыеНачисленияИУдержания.ВидСхемыМотивации,
	|	ИтоговыеНачисленияИУдержания.ФизЛицо,
	|	ИтоговыеНачисленияИУдержания.Подразделение}
	|
	|СГРУППИРОВАТЬ ПО
	|	ИтоговыеНачисленияИУдержания.ФизЛицо,
	|	ИтоговыеНачисленияИУдержания.ВидРасчета,
	|	ИтоговыеНачисленияИУдержания.ВидСхемыМотивации,
	|	ИтоговыеНачисленияИУдержания.Показатели1Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели2Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели3Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели4Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели5Показатель,	
	|	ИтоговыеНачисленияИУдержания.Показатели6Показатель,	
	|	ИтоговыеНачисленияИУдержания.ФормулаРасчета,
	|	ИтоговыеНачисленияИУдержания.Регистратор
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета,
	|	ВидСхемыМотивации,
	|	Регистратор
	|{УПОРЯДОЧИТЬ ПО
	|	ФизЛицо,
	|	ВидРасчета,
	|	ВидСхемыМотивации,
	|	Регистратор}
	|ИТОГИ
	|	СУММА(Результат),
	|	СУММА(Показатель1),
	|	СУММА(Показатель2),
	|	СУММА(Показатель3),
	|	СУММА(Показатель4),
	|	СУММА(Показатель5),
	|	СУММА(Показатель6)	
	|ПО
	|	ОБЩИЕ,
	|	ФизЛицо,
	|	ВидСхемыМотивации,
	|	ВидРасчета,
	|	Регистратор
	|{ИТОГИ ПО
	|	ФизЛицо,
	|	ВидРасчета,
	|	ВидСхемыМотивации,
	|	Регистратор}"; 
	
	
	
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса	= Запрос.Выполнить();	
	
	Выборка			= РезультатЗапроса.Выбрать();		
	Выборка.Следующий();
	
	Если Выборка.Показатель1 = 0 Или Выборка.Показатель1 = Неопределено Тогда
		ЕстьПоказатель1 = Ложь; 
	Иначе
		ЕстьПоказатель1 = Истина;
	КонецЕсли;	
	Если Выборка.Показатель2 = 0 Или Выборка.Показатель2 = Неопределено Тогда
		ЕстьПоказатель2 = Ложь; 
	Иначе
		ЕстьПоказатель2 = Истина;
	КонецЕсли;	 	
	Если Выборка.Показатель3 = 0 Или Выборка.Показатель3 = Неопределено Тогда
		ЕстьПоказатель3 = Ложь; 
	Иначе
		ЕстьПоказатель3 = Истина;
	КонецЕсли;	 	
	Если Выборка.Показатель4 = 0 Или Выборка.Показатель4 = Неопределено Тогда
		ЕстьПоказатель4 = Ложь; 
	Иначе
		ЕстьПоказатель4 = Истина;
	КонецЕсли;	 
	
	Если Выборка.Показатель5 = 0 Или Выборка.Показатель5 = Неопределено Тогда
		ЕстьПоказатель5 = Ложь; 
	Иначе
		ЕстьПоказатель5 = Истина;
	КонецЕсли;		
	
	Если Выборка.Показатель6 = 0 Или Выборка.Показатель6 = Неопределено Тогда
		ЕстьПоказатель6 = Ложь; 
	Иначе
		ЕстьПоказатель6 = Истина;
	КонецЕсли;		
	
	
	// вывод шапки по имеющимся с видам схем мотивации и показателям
	ОбластьШапкиРаботника = мМакет.ПолучитьОбласть("ЗаголовокШапка|Работник");			
	ОбластьШапкиРаботника.Параметры.ДатаНач = ДатаНач;
	ОбластьШапкиРаботника.Параметры.ДатаКон = ДатаКон;
	
	
	ВыводПоказателей = Новый Соответствие;
	
	ПерваяСтрока = Истина;
	Высота = 6;
	НесколькоВидовСхемМотивации = Ложь;
	ВыборкаПоВидамМотивации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидСхемыМотивации");
	Пока ВыборкаПоВидамМотивации.Следующий() Цикл
		
		Если ВыборкаПоВидамМотивации.ВидСхемыМотивации = Справочники.ВариантыCхемМотивации.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПерваяСтрока Тогда
			ДокументРезультат.Вывести(ОбластьШапкиРаботника);		
			ПерваяСтрока = Ложь;
		Иначе
			НесколькоВидовСхемМотивации = Истина;
		КонецЕсли;
		
		ОбластьШапкиРаботника = мМакет.ПолучитьОбласть("ЗаголовокШапка|Начисление");	
		ОбластьШапкиРаботника.Параметры.ВидСхемыМотивации = ВыборкаПоВидамМотивации.ВидСхемыМотивации;
		
		
		ДокументРезультат.Присоединить(ОбластьШапкиРаботника);
		ДокументРезультат.НачатьГруппуКолонок(ВыборкаПоВидамМотивации.ВидСхемыМотивации, Ложь);
		
		Ширина	= ДокументРезультат.ШиринаТаблицы;
		
		Если ЕстьПоказатель1 и ВыборкаПоВидамМотивации.Показатель1 <> 0 Тогда			
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель1"), Истина);
			ОбластьШапкиПоказатель1 = мМакет.ПолучитьОбласть("ЗаголовокШапка|Показатель1");	
			ДокументРезультат.Присоединить(ОбластьШапкиПоказатель1);
		Иначе
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель1"), Ложь);
		КонецЕсли;		
		Если ЕстьПоказатель2 и ВыборкаПоВидамМотивации.Показатель2 <> 0 Тогда
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель2"), Истина);
			ОбластьШапкиПоказатель2 = мМакет.ПолучитьОбласть("ЗаголовокШапка|Показатель2");	
			ДокументРезультат.Присоединить(ОбластьШапкиПоказатель2);
		Иначе
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель2"), Ложь);
		КонецЕсли;
		Если ЕстьПоказатель3 и ВыборкаПоВидамМотивации.Показатель3 <> 0 Тогда
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель3"), Истина);
			ОбластьШапкиПоказатель3 = мМакет.ПолучитьОбласть("ЗаголовокШапка|Показатель3");	
			ДокументРезультат.Присоединить(ОбластьШапкиПоказатель3);
		Иначе
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель3"), Ложь);
		КонецЕсли;
		Если ЕстьПоказатель4 и ВыборкаПоВидамМотивации.Показатель4 <> 0 Тогда
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель4"), Истина);
			ОбластьШапкиПоказатель4 = мМакет.ПолучитьОбласть("ЗаголовокШапка|Показатель4");	
			ДокументРезультат.Присоединить(ОбластьШапкиПоказатель4);
		Иначе
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель4"), Ложь);
		КонецЕсли;
		Если ЕстьПоказатель5 и ВыборкаПоВидамМотивации.Показатель5 <> 0 Тогда
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель5"), Истина);
			ОбластьШапкиПоказатель5 = мМакет.ПолучитьОбласть("ЗаголовокШапка|Показатель5");	
			ДокументРезультат.Присоединить(ОбластьШапкиПоказатель5);
		Иначе
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель5"), Ложь);
		КонецЕсли;
		Если ЕстьПоказатель6 и ВыборкаПоВидамМотивации.Показатель6 <> 0 Тогда
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель6"), Истина);
			ОбластьШапкиПоказатель6 = мМакет.ПолучитьОбласть("ЗаголовокШапка|Показатель6");	
			ДокументРезультат.Присоединить(ОбластьШапкиПоказатель6);
		Иначе
			ВыводПоказателей.Вставить(ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель6"), Ложь);
		КонецЕсли;		
		
		ДокументРезультат.Область(Высота, Ширина, Высота, ДокументРезультат.ШиринаТаблицы).Объединить();
		
		ДокументРезультат.ЗакончитьГруппуКолонок();
		
	КонецЦикла;
	
	// вывод строк отчета
	ВыборкаПоФизЛицу = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ФизЛицо");	
	Пока ВыборкаПоФизЛицу.Следующий() Цикл
		
		ОбластьСотрудника = мМакет.ПолучитьОбласть("Сотрудник|Работник");
		Если ВыборкаПоФизЛицу.Физлицо = Null Тогда
			Продолжить;
		КонецЕсли;
		
		ОбластьСотрудника.Параметры.Сотрудник			= ВыборкаПоФизЛицу.Физлицо;
		ДокументРезультат.Вывести(ОбластьСотрудника);
		
		ДокументРезультат.НачатьГруппуСтрок(ВыборкаПоФизЛицу.Физлицо);
		
		МаксимальноеЗначение				=  0;
		КоординатыМаксимумаВысота			= ДокументРезультат.ВысотаТаблицы;
		КоординатыШиренаНачало				= 1;
		КоординатыШиренаОкончание			= 1;
		КоординатыМаксимумаШиренаНачало		= Неопределено;
		КоординатыМаксимумаШиренаОкончание	= Неопределено;
		
		
		ВыборкаПоВидамМотивации = ВыборкаПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидСхемыМотивации", "ВСЕ");		
		Пока ВыборкаПоВидамМотивации.Следующий() Цикл
			
			ОбластьСотрудникаНачислено = мМакет.ПолучитьОбласть("Сотрудник|Начисление");	
			ОбластьСотрудникаНачислено.Параметры.Начислено			= ВыборкаПоВидамМотивации.Результат;						
			
			ДокументРезультат.Присоединить(ОбластьСотрудникаНачислено);									
			
			КоординатыШиренаОкончание	= КоординатыШиренаОкончание + 1;			
			КоординатыШиренаНачало		= КоординатыШиренаОкончание;
			
			Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель1")] Тогда
				ОбластьСотрудникаПоказатель1 = мМакет.ПолучитьОбласть("Сотрудник|Показатель1");			
				ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель1);
				КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
			КонецЕсли;		
			Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель2")] Тогда
				ОбластьСотрудникаПоказатель2 = мМакет.ПолучитьОбласть("Сотрудник|Показатель2");							
				ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель2);
				КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
			КонецЕсли;
			Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель3")] Тогда
				ОбластьСотрудникаПоказатель3 = мМакет.ПолучитьОбласть("Сотрудник|Показатель3");							
				ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель3);
				КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
			КонецЕсли;
			Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель4")] Тогда
				ОбластьСотрудникаПоказатель4 = мМакет.ПолучитьОбласть("Сотрудник|Показатель4");							
				ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель4);
				КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
			КонецЕсли;
			Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель5")] Тогда
				ОбластьСотрудникаПоказатель5 = мМакет.ПолучитьОбласть("Сотрудник|Показатель5");							
				ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель5);
				КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
			КонецЕсли;				
			Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель6")] Тогда
				ОбластьСотрудникаПоказатель6 = мМакет.ПолучитьОбласть("Сотрудник|Показатель6");							
				ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель6);
				КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
			КонецЕсли;							
			
			Если ВыборкаПоВидамМотивации.Результат <> Null И ВыборкаПоВидамМотивации.Результат > МаксимальноеЗначение Тогда
				МаксимальноеЗначение = ВыборкаПоВидамМотивации.Результат;
				КоординатыМаксимумаШиренаНачало		= КоординатыШиренаНачало;
				КоординатыМаксимумаШиренаОкончание	= КоординатыШиренаОкончание;
			КонецЕсли;			
			
		КонецЦикла;
		
		Если КоординатыМаксимумаШиренаНачало <> Неопределено и НесколькоВидовСхемМотивации Тогда
			ДокументРезультат.Область(КоординатыМаксимумаВысота, КоординатыМаксимумаШиренаНачало, КоординатыМаксимумаВысота, КоординатыМаксимумаШиренаОкончание).ЦветФона = WebЦвета.Коралловый;
		КонецЕсли;
		
		// вывод видов расчетов
		ВыборкаПоВидамРасчетов = ВыборкаПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидРасчета" ,);		
		Пока ВыборкаПоВидамРасчетов.Следующий() Цикл						
			
			ВидРасчета	= ВыборкаПоВидамРасчетов.ВидРасчета;
			ОбластьВидРасчета = мМакет.ПолучитьОбласть("ВидРасчета|Работник");			
			ОбластьВидРасчета.Параметры.ВидРасчета	= Строка(ВидРасчета) + " "+ Строка(ВыборкаПоВидамРасчетов.ФормулаРасчета);			
			ДокументРезультат.Вывести(ОбластьВидРасчета);                                                             			
			
			КоординатыШиренаНачало		= 1;
			КоординатыШиренаОкончание	= 1;
			КоординатыВысота			= ДокументРезультат.ВысотаТаблицы;
			
			ВыборкаПоВидамМотивации = ВыборкаПоВидамРасчетов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидСхемыМотивации", "ВСЕ");
			
			Пока ВыборкаПоВидамМотивации.Следующий() Цикл
				
				ОбластьСотрудникаНачислено = мМакет.ПолучитьОбласть("ВидРасчета|Начисление");	
				ОбластьСотрудникаНачислено.Параметры.Начислено			= ВыборкаПоВидамМотивации.Результат;							
				
				ДокументРезультат.Присоединить(ОбластьСотрудникаНачислено);
				
				КоординатыШиренаОкончание	= КоординатыШиренаОкончание + 1;				
				КоординатыШиренаНачало		= КоординатыШиренаОкончание;				
				
				Регистратор = null;
				ВыборкаПоРегистраторам = ВыборкаПоВидамМотивации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Регистратор");				
				Пока ВыборкаПоРегистраторам.Следующий() Цикл
					Регистратор			= ВыборкаПоРегистраторам.Регистратор;								
				КонецЦикла;
					
				Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель1")] Тогда
					ОбластьСотрудникаПоказатель1 = мМакет.ПолучитьОбласть("ВидРасчета|Показатель1");								
					
					Если ВыборкаПоВидамМотивации.Показатель1 =  Null Тогда
						ОбластьСотрудникаПоказатель1.Параметры.НазваниеПоказателя1	= "Не предусмотрена";						
					ИначеЕсли ВыборкаПоВидамМотивации.Показатель1 <>  Null И ВыборкаПоВидамМотивации.Показатель1 <> 0  Тогда
						ОбластьСотрудникаПоказатель1.Параметры.НазваниеПоказателя1	= ВыборкаПоРегистраторам.Показатели1Показатель;
					КонецЕсли;
					ОбластьСотрудникаПоказатель1.Параметры.СуммаПоказателя1		= ВыборкаПоВидамМотивации.Показатель1;
					ОбластьСотрудникаПоказатель1.Параметры.Регистратор			= Регистратор;
										
					ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель1);
					КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
				КонецЕсли;						
				Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель2")] Тогда
					ОбластьСотрудникаПоказатель2 = мМакет.ПолучитьОбласть("ВидРасчета|Показатель2");			
					Если ВыборкаПоВидамМотивации.Показатель2 =  Null Тогда
						ОбластьСотрудникаПоказатель2.Параметры.НазваниеПоказателя2	= "Не предусмотрена";						
					ИначеЕсли ВыборкаПоВидамМотивации.Показатель2 <>  Null И ВыборкаПоВидамМотивации.Показатель2 <> 0  Тогда
						ОбластьСотрудникаПоказатель2.Параметры.НазваниеПоказателя2	= ВыборкаПоРегистраторам.Показатели2Показатель;						
					КонецЕсли;
					ОбластьСотрудникаПоказатель2.Параметры.СуммаПоказателя2		= ВыборкаПоВидамМотивации.Показатель2;
					ОбластьСотрудникаПоказатель2.Параметры.Регистратор			= Регистратор;
					ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель2);
					КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
				КонецЕсли;
				Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель3")] Тогда
					ОбластьСотрудникаПоказатель3 = мМакет.ПолучитьОбласть("ВидРасчета|Показатель3");
					Если ВыборкаПоВидамМотивации.Показатель3 =  Null Тогда
						ОбластьСотрудникаПоказатель3.Параметры.НазваниеПоказателя3	= "Не предусмотрена";
					ИначеЕсли ВыборкаПоВидамМотивации.Показатель3 <>  Null И ВыборкаПоВидамМотивации.Показатель3 <> 0  Тогда
						ОбластьСотрудникаПоказатель3.Параметры.НазваниеПоказателя3	= ВыборкаПоРегистраторам.Показатели3Показатель;						
					КонецЕсли;
					ОбластьСотрудникаПоказатель3.Параметры.СуммаПоказателя3		= ВыборкаПоВидамМотивации.Показатель3;
					ОбластьСотрудникаПоказатель3.Параметры.Регистратор			= Регистратор;
					ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель3);
					КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
				КонецЕсли;
				Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель4")] Тогда
					ОбластьСотрудникаПоказатель4 = мМакет.ПолучитьОбласть("ВидРасчета|Показатель4");			
					Если ВыборкаПоВидамМотивации.Показатель4 =  Null Тогда
						ОбластьСотрудникаПоказатель4.Параметры.НазваниеПоказателя4	= "Не предусмотрена";						
					ИначеЕсли ВыборкаПоВидамМотивации.Показатель4 <>  Null И ВыборкаПоВидамМотивации.Показатель4 <> 0  Тогда
						ОбластьСотрудникаПоказатель4.Параметры.НазваниеПоказателя4	= ВыборкаПоРегистраторам.Показатели4Показатель;						
					КонецЕсли;
					ОбластьСотрудникаПоказатель4.Параметры.СуммаПоказателя4		= ВыборкаПоВидамМотивации.Показатель4;
					ОбластьСотрудникаПоказатель4.Параметры.Регистратор			= Регистратор;
					ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель4);
					КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
				КонецЕсли;				
				Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель5")] Тогда
					ОбластьСотрудникаПоказатель5 = мМакет.ПолучитьОбласть("ВидРасчета|Показатель5");
					Если ВыборкаПоВидамМотивации.Показатель5 =  Null Тогда
						ОбластьСотрудникаПоказатель5.Параметры.НазваниеПоказателя5	= "Не предусмотрена";
					ИначеЕсли ВыборкаПоВидамМотивации.Показатель5 <>  Null И ВыборкаПоВидамМотивации.Показатель5 <> 0  Тогда
						ОбластьСотрудникаПоказатель5.Параметры.НазваниеПоказателя5	= ВыборкаПоРегистраторам.Показатели5Показатель;						
					КонецЕсли;
					ОбластьСотрудникаПоказатель5.Параметры.СуммаПоказателя5		= ВыборкаПоВидамМотивации.Показатель5;
					ОбластьСотрудникаПоказатель5.Параметры.Регистратор			= Регистратор;
					ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель5);
					КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
				КонецЕсли;
				Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель6")] Тогда
					ОбластьСотрудникаПоказатель6 = мМакет.ПолучитьОбласть("ВидРасчета|Показатель6");			
					Если ВыборкаПоВидамМотивации.Показатель6 =  Null Тогда
						ОбластьСотрудникаПоказатель6.Параметры.НазваниеПоказателя6	= "Не предусмотрена";						
					ИначеЕсли ВыборкаПоВидамМотивации.Показатель6 <>  Null И ВыборкаПоВидамМотивации.Показатель6 <> 0  Тогда
						ОбластьСотрудникаПоказатель6.Параметры.НазваниеПоказателя6	= ВыборкаПоРегистраторам.Показатели6Показатель;						
					КонецЕсли;
					ОбластьСотрудникаПоказатель6.Параметры.СуммаПоказателя6		= ВыборкаПоВидамМотивации.Показатель6;
					ОбластьСотрудникаПоказатель6.Параметры.Регистратор			= Регистратор;
					ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель6);
					КоординатыШиренаОкончание = КоординатыШиренаОкончание + 2;
				КонецЕсли;
				
				
				Если ВыборкаПоВидамМотивации.Результат = Null Тогда
					// ВР не предусмотрен
					ДокументРезультат.Область(КоординатыВысота, КоординатыШиренаНачало, КоординатыВысота, КоординатыШиренаОкончание).Объединить();
					ДокументРезультат.Область(КоординатыВысота, КоординатыШиренаНачало, КоординатыВысота, КоординатыШиренаОкончание).Текст = "Вид расчета не предусмотрен";
					ДокументРезультат.Область(КоординатыВысота, КоординатыШиренаНачало, КоординатыВысота, КоординатыШиренаОкончание).ГоризонтальноеПоложение = ГоризонтальноеПоложение.Центр;
				КонецЕсли;
				
			КонецЦикла;	
		КонецЦикла;
		
		ДокументРезультат.ЗакончитьГруппуСтрок();
		
	КонецЦикла;	
	
	// вывод итогов			
	ПерваяСтрока = Истина;
	ВыборкаПоВидамМотивации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ВидСхемыМотивации", "ВСЕ");
	Пока ВыборкаПоВидамМотивации.Следующий() Цикл
		
		Если ВыборкаПоВидамМотивации.ВидСхемыМотивации = Справочники.ВариантыCхемМотивации.ПустаяСсылка() Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПерваяСтрока Тогда
			ОбластьИтогиРаботника = мМакет.ПолучитьОбласть("Итог|Работник");					
			ДокументРезультат.Вывести(ОбластьИтогиРаботника);		
			ПерваяСтрока = Ложь;
		КонецЕсли;
		
		ОбластьИтогиНачислено = мМакет.ПолучитьОбласть("Итог|Начисление");					
		ОбластьИтогиНачислено.Параметры.Начислено	= ВыборкаПоВидамМотивации.Результат;
		ДокументРезультат.Присоединить(ОбластьИтогиНачислено);		
		
		Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель1")] Тогда
			ОбластьСотрудникаПоказатель1 = мМакет.ПолучитьОбласть("Итог|Показатель1");			
			ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель1);
		КонецЕсли;		
		Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель2")] Тогда
			ОбластьСотрудникаПоказатель2 = мМакет.ПолучитьОбласть("Итог|Показатель2");			
			ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель2);
		КонецЕсли;
		Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель3")] Тогда
			ОбластьСотрудникаПоказатель3 = мМакет.ПолучитьОбласть("Итог|Показатель3");			
			ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель3);
		КонецЕсли;
		Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель4")] Тогда
			ОбластьСотрудникаПоказатель4 = мМакет.ПолучитьОбласть("Итог|Показатель4");			
			ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель4);
		КонецЕсли;
		Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель5")] Тогда
			ОбластьСотрудникаПоказатель5 = мМакет.ПолучитьОбласть("Итог|Показатель5");			
			ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель5);
		КонецЕсли;
		Если ВыводПоказателей[ПолучитьКлючПоВидуСхемыМотивации(ВыборкаПоВидамМотивации.ВидСхемыМотивации,"Показатель6")] Тогда
			ОбластьСотрудникаПоказатель6 = мМакет.ПолучитьОбласть("Итог|Показатель6");			
			ДокументРезультат.Присоединить(ОбластьСотрудникаПоказатель6);
		КонецЕсли;
		
		
	КонецЦикла;	
	
	Если ЕстьПоказатель1 Или ЕстьПоказатель2 Или ЕстьПоказатель3 Или ЕстьПоказатель4 Тогда
		ДокументРезультат.ФиксацияСверху	= 7;
		ДокументРезультат.ФиксацияСлева		= 1;
		ДокументРезультат.ТолькоПросмотр	= Истина;
	
		ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;	
	КонецЕсли;
	
КонецПроцедуры //СформироватьОтчет

Функция ПолучитьКлючПоВидуСхемыМотивации(ВидСхемыМотивации,Показатель)
	
	Если ТипЗнч(ВидСхемыМотивации) = Тип("Строка") Тогда
		Возврат Строка(ВидСхемыМотивации)+Показатель
	Иначе
		Возврат Строка(ВидСхемыМотивации.Код)+Показатель
	КонецЕсли;
	
КонецФункции //ПолучитьКлючПоВидуСхемыМотивации

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;
НП.ВариантНастройки = ВариантНастройкиПериода.Период;
#КонецЕсли
