#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьНМАОстаткиИОбороты.НематериальныйАктив                                                              КАК НематериальныйАктив,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток                                                        КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток                                                         КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот                                                                  КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток                                                      КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток                                                       КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот                                                                КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ
	|	СтоимостьНМАОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {НематериальныйАктив.* КАК НематериальныйАктив}) КАК СтоимостьНМАОстаткиИОбороты
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбНМА.НематериальныйАктив         КАК НематериальныйАктив,
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	РегСведенияОбНМА.ЛиквидационнаяСтоимость 	 КАК ЛиквидационнаяСтоимость,
	|	РегСведенияОбНМА.ПервоначальнаяСтоимость     КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ
	|	РегСведенияОбНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМА.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбНМА
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеНМА.НематериальныйАктив 	КАК НематериальныйАктив,
	|	МестонахождениеНМА.МОЛ              	КАК МОЛ,
	|	МестонахождениеНМА.Местонахождение  	КАК Местонахождение
	|ПОМЕСТИТЬ
	|	МестонахождениеНМА
	|ИЗ
	|	РегистрСведений.МестонахождениеНМА.СрезПоследних(&ДатаКон, ) КАК МестонахождениеНМА
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьНМАОстаткиИОбороты.НематериальныйАктив КАК НематериальныйАктив,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьНМАОстаткиИОбороты.НематериальныйАктив),
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеНМА.Период КАК ДатаВводаВЭксплуатацию,
	|	РегСостояниеСписаниеНМА.Период КАК ДатаСписания,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	РегСведенияОбНМА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	РегСведенияОбНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	МестонахождениеНМА.МОЛ КАК МОЛ,
	|	МестонахождениеНМА.Местонахождение КАК Подразделение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	НематериальныйАктив.*,
	|	МОЛ.*,
	|	Подразделение.*,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ДатаСписания,
	|	ЛиквидационнаяСтоимость,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	СтоимостьНМАОстаткиИОбороты
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМА КАК РегСостояниеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСостояниеНМА.НематериальныйАктив
	|			И (РегСостояниеНМА.Состояние = &СостояниеВводВЭксплуатацию)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМА КАК РегСостояниеСписаниеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСостояниеСписаниеНМА.НематериальныйАктив
	|			И (РегСостояниеСписаниеНМА.Состояние = &СостояниеСписание)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСведенияОбНМА.НематериальныйАктив}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив}
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеНМА.Период КАК ДатаВводаВЭксплуатацию,
	|	РегСостояниеСписаниеНМА.Период КАК ДатаСписания,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбНМА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	РегСведенияОбНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	МестонахождениеНМА.МОЛ.* КАК МОЛ,
	|	МестонахождениеНМА.Местонахождение.*  КАК Подразделение
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО
	|	НематериальныйАктив.*,
	|	МОЛ.*,
	|	Подразделение.*,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ДатаСписания,
	|	ЛиквидационнаяСтоимость,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	МАКСИМУМ(ДатаСписания),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(Подразделение),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(АмортизацияОборот),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ЛиквидационнаяСтоимость),
	|	СУММА(ПервоначальнаяСтоимость)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	НематериальныйАктив.*,
	|	СпособНачисления.*,
	|	Подразделение.*,
	|	МОЛ.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	
	//// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьНМАОстаткиИОбороты.НематериальныйАктив" , "НематериальныйАктив","Нематериальный актив", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
	//	 
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("МестонахождениеНМА.Местонахождение" , "Подразделение", "Подразделение", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Подразделения);
	//	// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НематериальныйАктив",       "Нематериальный актив");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости НМА");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата принятия к учету");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаСписания", 			"Дата списания");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ЛиквидационнаяСтоимость","Ликвидационная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЛиквидационнаяСтоимость",   "ликвидационная",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НематериальныйАктив");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("НематериальныйАктив");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаСписания", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "НематериальныйАктив");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаСписания",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиУпр()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиБух(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьНМАОстаткиИОбороты.НематериальныйАктив                                                              КАК НематериальныйАктив,
	|	СтоимостьНМАОстаткиИОбороты.Организация                                                                      КАК Организация,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток                                                        КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток                                                         КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот                                                                  КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток                                                      КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток                                                       КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот                                                                КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ
	|	СтоимостьНМАОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьНМАБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {НематериальныйАктив.* КАК НематериальныйАктив}) КАК СтоимостьНМАОстаткиИОбороты
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбНМА.НематериальныйАктив            КАК НематериальныйАктив,
	|	РегСведенияОбНМА.СпособНачисленияАмортизации 	КАК СпособНачисленияАмортизации,
	|	РегСведенияОбНМА.ЛиквидационнаяСтоимость     	КАК ЛиквидационнаяСтоимость,
	|	РегСведенияОбНМА.ПервоначальнаяСтоимость     	КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ
	|	РегСведенияОбНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбНМА
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеНМА.НематериальныйАктив 	КАК НематериальныйАктив,
	|	МестонахождениеНМА.МОЛ              	КАК МОЛ,
	|	МестонахождениеНМА.Местонахождение  	КАК Местонахождение
	|ПОМЕСТИТЬ
	|	МестонахождениеНМА
	|ИЗ
	|	РегистрСведений.МестонахождениеНМАБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК МестонахождениеНМА
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьНМАОстаткиИОбороты.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМАОстаткиИОбороты.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьНМАОстаткиИОбороты.НематериальныйАктив),
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеНМА.Период КАК ДатаВводаВЭксплуатацию,
	|	РегСостояниеСписаниеНМА.Период КАК ДатаСписания,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбНМА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	РегСведенияОбНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	МестонахождениеНМА.МОЛ КАК МОЛ,
	|	МестонахождениеНМА.Местонахождение КАК Подразделение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	НематериальныйАктив.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Подразделение.*,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ДатаСписания,
	|	ЛиквидационнаяСтоимость,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	СтоимостьНМАОстаткиИОбороты
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК РегСостояниеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСостояниеНМА.НематериальныйАктив
	|			И (РегСостояниеНМА.Состояние = &СостояниеВводВЭксплуатацию)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК РегСостояниеСписаниеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСостояниеСписаниеНМА.НематериальныйАктив
	|			И (РегСостояниеСписаниеНМА.Состояние = &СостояниеСписание)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСведенияОбНМА.НематериальныйАктив}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = МестонахождениеНМА.НематериальныйАктив}
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	СтоимостьНМАОстаткиИОбороты.Организация.* КАК Организация,
	|	МестонахождениеНМА.МОЛ.* КАК МОЛ,
	|	МестонахождениеНМА.Местонахождение.* КАК Подразделение, 
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеНМА.Период КАК ДатаВводаВЭксплуатацию,
	|	РегСостояниеСписаниеНМА.Период КАК ДатаСписания,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбНМА.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	РегСведенияОбНМА.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО
	|	НематериальныйАктив.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Подразделение.*,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ДатаСписания,
	|	ЛиквидационнаяСтоимость,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	МАКСИМУМ(ДатаСписания),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(Подразделение),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(АмортизацияОборот),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ЛиквидационнаяСтоимость),
	|	СУММА(ПервоначальнаяСтоимость)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	НематериальныйАктив.*,
	|	Организация.*,
	|	СпособНачисления.*,
	|	Подразделение.*,
	|	МОЛ.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	
	//// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьНМАОстаткиИОбороты.НематериальныйАктив" , "НематериальныйАктив","Нематериальный актив", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("МестонахождениеНМА.Местонахождение" , "Подразделение", "Подразделение", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ПодразделенияОрганизаций);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НематериальныйАктив",       "Нематериальный актив");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости НМА");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата принятия к учету");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаСписания", 			"Дата списания");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ЛиквидационнаяСтоимость","Ликвидационная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЛиквидационнаяСтоимость",   "ликвидационная",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НематериальныйАктив");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("НематериальныйАктив");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Подразделение", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаСписания", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "НематериальныйАктив");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаСписания",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиБух()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиНал(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьНМАОстаткиИОбороты.НематериальныйАктив                                                              КАК НематериальныйАктив,
	|	СтоимостьНМАОстаткиИОбороты.Организация                                                                      КАК Организация,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНУНачальныйОстаток                                                        КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНУКонечныйОстаток                                                         КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНУОборот                                                                  КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНУНачальныйОстаток                                                      КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНУКонечныйОстаток                                                       КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНУОборот                                                                КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНУКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияНУКонечныйОстаток КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ
	|	СтоимостьНМАОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьНМАБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {НематериальныйАктив.* КАК НематериальныйАктив}) КАК СтоимостьНМАОстаткиИОбороты
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбНМА.НематериальныйАктив            КАК НематериальныйАктив,
	|	РегСведенияОбНМА.СпособНачисленияАмортизации 	КАК СпособНачисленияАмортизации
	|ПОМЕСТИТЬ
	|	РегСведенияОбНМА
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбНМА
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбНМАНУ.НематериальныйАктив 			КАК НематериальныйАктив,
	|	РегСведенияОбНМАНУ.ПервоначальнаяСтоимость     	КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбНМАНУ.СрокПолезногоИспользования 	КАК СрокПолезногоИспользования,
	|	РегСведенияОбНМАНУ.НалоговаяГруппаОС     		КАК НалоговаяГруппаОС,
	|	РегСведенияОбНМАНУ.НалоговоеНазначение     		КАК НалоговоеНазначение
	|ПОМЕСТИТЬ
	|	РегСведенияОбНМАНУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияНМАНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбНМАНУ
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьНМАОстаткиИОбороты.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМАОстаткиИОбороты.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьНМАОстаткиИОбороты.НематериальныйАктив),
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеНМА.Период КАК ДатаВводаВЭксплуатацию,
	|	РегСостояниеСписаниеНМА.Период КАК ДатаСписания,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбНМАНУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбНМАНУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	РегСведенияОбНМАНУ.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	РегСведенияОбНМАНУ.НалоговоеНазначение КАК НалоговоеНазначение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	НематериальныйАктив.*,
	|	Организация.*,
	|	НалоговоеНазначение.*,
	|	НалоговаяГруппаОС.*,
	|	СрокПолезногоИспользования,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ДатаСписания,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	СтоимостьНМАОстаткиИОбороты
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК РегСостояниеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСостояниеНМА.НематериальныйАктив
	|			И (РегСостояниеНМА.Состояние = &СостояниеВводВЭксплуатацию)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций КАК РегСостояниеСписаниеНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСостояниеСписаниеНМА.НематериальныйАктив
	|			И (РегСостояниеСписаниеНМА.Состояние = &СостояниеСписание)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбНМА
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСведенияОбНМА.НематериальныйАктив}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбНМАНУ
	|		ПО СтоимостьНМАОстаткиИОбороты.НематериальныйАктив = РегСведенияОбНМАНУ.НематериальныйАктив}
	|	//СОЕДИНЕНИЯ
	|{ГДЕ
	|	СтоимостьНМАОстаткиИОбороты.Организация.* КАК Организация,
	|	РегСведенияОбНМА.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеНМА.Период КАК ДатаВводаВЭксплуатацию,
	|	РегСостояниеСписаниеНМА.Период КАК ДатаСписания,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьНМАОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьНМАОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьНМАОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбНМАНУ.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	РегСведенияОбНМАНУ.НалоговоеНазначение КАК НалоговоеНазначение,
	|	РегСведенияОбНМАНУ.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	РегСведенияОбНМАНУ.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО
	|	НематериальныйАктив.*,
	|	Организация.*,
	|	НалоговоеНазначение.*,
	|	НалоговаяГруппаОС,
	|	СпособНачисления,
	|	СрокПолезногоИспользования,
	|	ДатаВводаВЭксплуатацию,
	|	ДатаСписания,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	МАКСИМУМ(ДатаСписания),
	|	МАКСИМУМ(НалоговаяГруппаОС),
	|	МАКСИМУМ(НалоговоеНазначение),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(АмортизацияОборот),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(СрокПолезногоИспользования),
	|	СУММА(ПервоначальнаяСтоимость)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	НематериальныйАктив.*,
	|	Организация.*,
	|	СпособНачисления.*,
	|	НалоговаяГруппаОС.*,
	|	НалоговоеНазначение.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	
	//// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	// Добавление свойств и категорий поля запроса в таблицу полей.
	//	// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
	//	
	//	// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
	//	УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьНМАОстаткиИОбороты.НематериальныйАктив" , "НематериальныйАктив","Нематериальный актив", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
	//	
	//	// Добавление свойств и категорий в исходный текст запроса.
	//	УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
	//	
	//КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НематериальныйАктив",       "Нематериальный актив");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости НМА");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата принятия к учету");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаСписания", 			"Дата списания");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НалоговаяГруппаОС","Налоговая группа ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НалоговоеНазначение","Налоговое назначение");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НалоговоеНазначение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НалоговаяГруппаОС");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НематериальныйАктив");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("НематериальныйАктив");
	УниверсальныйОтчет.ДобавитьОтбор("НалоговаяГруппаОС");
	УниверсальныйОтчет.ДобавитьОтбор("НалоговоеНазначение");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаСписания", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("НалоговаяГруппаОС", "НематериальныйАктив");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("НалоговоеНазначение", "НематериальныйАктив");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаСписания",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиНал()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "";

	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;  //Коновалова 27122012 +
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	Если      ВидУчета = 1 Тогда // Бух.
		УстановитьНачальныеНастройкиБух(ДополнительныеПараметры);
	ИначеЕсли ВидУчета = 2 Тогда // Нал.
		УстановитьНачальныеНастройкиНал(ДополнительныеПараметры);
	Иначе // Упр
		УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	КонДата = Дата(УниверсальныйОтчет.ДатаКон);
	КонДата = КонецДня(?(КонДата = Дата('00010101000000'), Дата('39991231235959'), КонДата));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "НачДата", Дата(УниверсальныйОтчет.ДатаНач));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "КонДата", КонДата);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "СостояниеВводВЭксплуатацию", Перечисления.ВидыСостоянийНМА.ПринятКУчету);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "СостояниеСписание", Перечисления.ВидыСостоянийНМА.Списан);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "СчетУчета", ПланыСчетов.Налоговый.ПервоначальнаяСтоимостьНМА);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "СчетАмортизации", ПланыСчетов.Налоговый.АмортизацияНМА);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
