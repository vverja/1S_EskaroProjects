#Если Клиент Тогда
// Настройка периода
Перем НП Экспорт;

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	// не выводим общие
	ОбщийОтчет.мСтруктураНевыводимыхГруппировок.Вставить("Общие", 1);

	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "ДатаНач"              , ОбщийОтчет.ДатаНач);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "ДатаКон"              , КонецДня(ОбщийОтчет.ДатаКон));
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "СостояниеВвода"       , Перечисления.СостоянияОС.ВведеноВЭксплуатацию);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "СостояниеСнятияСУчета", Перечисления.СостоянияОС.СнятоСУчета);
	
	МассивСчетов = Новый Массив(3);
	МассивСчетов[0] = ПланыСчетов.Налоговый.ОсновныеСредстваУчетПоОбъектам;
	МассивСчетов[1] = ПланыСчетов.Налоговый.НепроизводственныеОсновныеСредства;
	МассивСчетов[2] = ПланыСчетов.Налоговый.ОсновныеСредстваВыведенныеИзЭксплуатации;
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "СчетаУчета", МассивСчетов);
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить( "СчетВР",     ПланыСчетов.Налоговый.ВаловыеРасходы); 
	
	ОбщийОтчет.ВыводитьДополнительныеПоляВОтдельнойКолонке = Истина;
	
	ОбщийОтчет.СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок);

КонецПроцедуры // СформироватьОтчет()

// Процедура - заполняет начальные настройки отчета
//
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	Текст = 
	"ВЫБРАТЬ
	|	Стоимость.Организация                                   КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Стоимость.Организация)                    КАК ОрганизацияПредставление,
	|	Стоимость.Счет                                          КАК СчетУчета,
	|	ПРЕДСТАВЛЕНИЕ(Стоимость.Счет)                           КАК СчетУчетаПредставление,
	|	Стоимость.Субконто1                                     КАК ВидНалоговойДеятельности,
	|	ПРЕДСТАВЛЕНИЕ(Стоимость.Субконто1)                      КАК ВидНалоговойДеятельностиПредставление,
	|	Стоимость.Субконто2                                     КАК ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(Стоимость.Субконто2)                      КАК ОсновноеСредствоПредставление,
	|	РегСостоянияОС.ДатаВводаВЭксплуатацию                   КАК ДатаВводаВЭксплуатацию,
	|	РегСостоянияОС.ДатаСнятияСУчета                         КАК ДатаСнятияСУчета,
	|	СоставОС.ВСоставе                                       КАК ОСРодитель,
	|	ПРЕДСТАВЛЕНИЕ(СоставОС.ВСоставе)                        КАК ОСРодительПредставление,
	|	СУММА(ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ) КАК ПервоначальнаяСтоимость,
	|	СУММА(Стоимость.СуммаНачальныйОстаток)                  КАК СтоимостьНачальныйОстаток,
	|	СУММА(Стоимость.СуммаОборотДт)                          КАК СтоимостьОборотДт,
	|	СУММА(Стоимость.СуммаОборотКт)                          КАК СтоимостьСАмортизациейОборотКт,
	|	СУММА(Стоимость.СуммаОборот)                            КАК СтоимостьСАмортизациейОборот,
	|	СУММА(Амортизация.СуммаОборот)                          КАК АмортизацияОборот,
	|	СУММА(Стоимость.СуммаОборотКт) 
	|		- ЕСТЬNULL(СУММА(Амортизация.СуммаОборот), 0)       КАК СтоимостьОборотКт,
	|	СУММА(Стоимость.СуммаОборот) 
	|		- ЕСТЬNULL(СУММА(Амортизация.СуммаОборот), 0)       КАК СтоимостьОборот,
	|	СУММА(Стоимость.СуммаКонечныйОстаток)                   КАК СтоимостьКонечныйОстаток,
	|	ПервоначальныеСведения.НалоговаяГруппаОС                КАК НалоговаяГруппаОС,
	|	ПРЕДСТАВЛЕНИЕ(ПервоначальныеСведения.НалоговаяГруппаОС) КАК НалоговаяГруппаОСПредставление,
	|	Стоимость.Субконто2.Код                                 КАК КодОС
	|{ВЫБРАТЬ
	|	Стоимость.Организация.*            КАК Организация,
	|	Стоимость.Субконто1                КАК ВидНалоговойДеятельности,
	|	Стоимость.Субконто2                КАК ОсновноеСредство,
	|	Стоимость.Субконто2.Изготовитель   КАК Изготовитель,
	|	Стоимость.Субконто2.НомерПаспорта  КАК НомерПаспорта,
	|	Стоимость.Субконто2.ЗаводскойНомер КАК ЗаводскойНомер,
	|	Стоимость.Субконто2.ДатаВыпуска    КАК ДатаВыпуска,
	|	Стоимость.Субконто2.Модель         КАК Модель,
	|	ДатаВводаВЭксплуатацию             КАК ДатаВводаВЭксплуатацию,
	|	ДатаСнятияСУчета                   КАК ДатаСнятияСУчета,
	|	ОСРодитель.*                       КАК ОСРодитель,
	|	СчетУчета.*                        КАК СчетУчета,
	|	НалоговаяГруппаОС                  КАК НалоговаяГруппаОС,
	|	Стоимость.Субконто2.Код            КАК КодОС}
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , ,
	|	                   Счет В (&СчетаУчета) {Счет КАК СчетУчета}, , 
	|	                   {Субконто2 КАК ОсновноеСредство, Организация.* КАК Организация,
	|	                   Субконто1 КАК ВидНалоговойДеятельности}) КАК Стоимость
	|		ЛЕВОЕ СОЕДИНЕНИЕ (
	|			ВЫБРАТЬ
	|				НалоговыеНазначенияОС.Организация              						КАК Организация,
	|				НалоговыеНазначенияОС.ОсновноеСредство         						КАК ОсновноеСредство,
	|				НалоговыеНазначенияОС.НалоговоеНазначение.ВидНалоговойДеятельности 	КАК ВидНалоговойДеятельности,
	|				ПервоначальныеСведения.НалоговаяГруппаОС           КАК НалоговаяГруппаОС,
	|				ПервоначальныеСведения.ПервоначальнаяСтоимостьНУ   КАК ПервоначальнаяСтоимостьНУ
	|			ИЗ
	|				РегистрСведений.НалоговыеНазначенияОС.СрезПоследних(&ДатаКон,
	|				                {ОсновноеСредство КАК ОсновноеСредство, 
	|				                Организация.* КАК Организация}) КАК НалоговыеНазначенияОС
	|					ЛЕВОЕ СОЕДИНЕНИЕ 
	|						РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|						                &ДатаКон, {ОсновноеСредство КАК ОсновноеСредство,
	|						                Организация.* КАК Организация}) КАК ПервоначальныеСведения
	|					ПО НалоговыеНазначенияОС.Организация = ПервоначальныеСведения.Организация
	|					   И НалоговыеНазначенияОС.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство) КАК ПервоначальныеСведения
	|		ПО Стоимость.Организация = ПервоначальныеСведения.Организация
	|			И Стоимость.Субконто1 = ПервоначальныеСведения.ВидНалоговойДеятельности
	|			И Стоимость.Субконто2 = ПервоначальныеСведения.ОсновноеСредство
	|			И Стоимость.Субконто3 = ПервоначальныеСведения.НалоговаяГруппаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			(ВЫБРАТЬ
	|				СостоянияОС.Организация      КАК Организация,
	|				СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|				МАКСИМУМ(ВЫБОР
	|						 	КОГДА СостоянияОС.Состояние = &СостояниеВвода
	|								ТОГДА СостоянияОС.ДатаСостояния
	|						 	ИНАЧЕ NULL
	|					     КОНЕЦ) КАК ДатаВводаВЭксплуатацию,
	|				МАКСИМУМ(ВЫБОР
	|						 	КОГДА СостоянияОС.Состояние = &СостояниеСнятияСУчета
	|								ТОГДА СостоянияОС.ДатаСостояния
	|						 	ИНАЧЕ NULL
	|					     КОНЕЦ) КАК ДатаСнятияСУчета
	|			ИЗ
	|				РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОС
	|			{ГДЕ
	|				СостоянияОС.Организация.*,
	|				СостоянияОС.ОсновноеСредство}
	|		
	|			СГРУППИРОВАТЬ ПО
	|				СостоянияОС.Организация,
	|				СостоянияОС.ОсновноеСредство) КАК РегСостоянияОС
	|		ПО Стоимость.Организация = РегСостоянияОС.Организация
	|			И Стоимость.Субконто2 = РегСостоянияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ 
	|			РегистрБухгалтерии.Налоговый.ОборотыДтКт(&ДатаНач, 
	|			                   &ДатаКон, , СчетДт = &СчетВР, , 
	|			                   СчетКт В (&СчетаУчета) {СчетКт КАК СчетУчета}, ,
	|			                   {СубконтоКт2 КАК ОсновноеСредство, Организация.* КАК Организация}) КАК Амортизация
	|		ПО Стоимость.Организация = Амортизация.Организация
	|			И Стоимость.Субконто1 = Амортизация.СубконтоКт1
	|			И Стоимость.Субконто2 = Амортизация.СубконтоКт2
	|			И Стоимость.Субконто3 = Амортизация.СубконтоКт3
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СоставОС.СрезПоследних(, {ОсновноеСредство}) КАК СоставОС
	|		ПО Стоимость.Субконто2 = СоставОС.ОсновноеСредство
	|{ГДЕ
	|	РегСостоянияОС.ДатаВводаВЭксплуатацию    КАК ДатаВводаВЭксплуатацию,
	|	РегСостоянияОС.ДатаСнятияСУчета          КАК ДатаСнятияСУчета,
	|	ПервоначальныеСведения.НалоговаяГруппаОС КАК НалоговаяГруппаОС,
	|	СоставОС.ВСоставе.*                      КАК ОСРодитель}
	|
	|СГРУППИРОВАТЬ ПО
	|	Стоимость.Организация,
	|	Стоимость.Субконто1,
	|	Стоимость.Субконто2,
	|	РегСостоянияОС.ДатаВводаВЭксплуатацию,
	|	РегСостоянияОС.ДатаСнятияСУчета,
	|	СоставОС.ВСоставе,
	|	Стоимость.Счет,
	|	ПервоначальныеСведения.НалоговаяГруппаОС
	|{УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	ВидНалоговойДеятельности,
	|	ОсновноеСредство,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьОборотДт,
	|	СтоимостьСАмортизациейОборотКт,
	|	СтоимостьСАмортизациейОборот,
	|	СтоимостьКонечныйОстаток,
	|	АмортизацияОборот,
	|	СтоимостьОборотКт,
	|	СтоимостьОборот,
	|	СчетУчета.*,
	|	НалоговаяГруппаОС.*}
	|ИТОГИ
	|	СУММА(ПервоначальнаяСтоимость),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьОборотДт),
	|	СУММА(СтоимостьСАмортизациейОборотКт),
	|	СУММА(СтоимостьСАмортизациейОборот),
	|	СУММА(АмортизацияОборот),
	|	СУММА(СтоимостьОборотКт),
	|	СУММА(СтоимостьОборот),
	|	СУММА(СтоимостьКонечныйОстаток)
	|ПО
	|	ОБЩИЕ,
	|	Организация,
	|	СчетУчета,
	|	ВидНалоговойДеятельности
	|{ИТОГИ ПО
	|	Организация,
	|	СчетУчета.*,
	|	ВидНалоговойДеятельности,
	|	ОСРодитель,
	|	ОсновноеСредство,
	|	НалоговаяГруппаОС}
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	СтруктураПредставлениеПолей = Новый Структура;
	СтруктураПредставлениеПолей.Вставить( "Организация",                    "Организация");
	СтруктураПредставлениеПолей.Вставить( "ОрганизацияГоловнаяОрганизация", "Головная организация");
	СтруктураПредставлениеПолей.Вставить( "ОрганизацияЮрФизЛицо",           "Юр. / физ. лицо");
	СтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",               "Основное средство");
	СтруктураПредставлениеПолей.Вставить( "Изготовитель",                   "Изготовитель");
	СтруктураПредставлениеПолей.Вставить( "НомерПаспорта",                  "Номер паспорта ОС");
	СтруктураПредставлениеПолей.Вставить( "ЗаводскойНомер",                 "Заводской номер ОС");
	СтруктураПредставлениеПолей.Вставить( "ДатаВыпуска",                    "Дата выпуска (постройки)");
	СтруктураПредставлениеПолей.Вставить( "Модель",                         "Модель, тип, марка");
	СтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию",         "Дата ввода в эксплуатацию");
	СтруктураПредставлениеПолей.Вставить( "ВидНалоговойДеятельности",       "Вид налоговой деятельности");
	СтруктураПредставлениеПолей.Вставить( "НалоговаяГруппаОС",              "Налоговая группа");
	СтруктураПредставлениеПолей.Вставить( "ОСРодитель",                     "В составе ОС");
	СтруктураПредставлениеПолей.Вставить( "КодОС",                          "Код ОС");
	
	СтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость",        "Первоначальная стоимость");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток",      "Стоимость на начало периода");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьОборотДт",              "Стоимость (приход)");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьСАмортизациейОборотКт", "Стоимость с аморт.(расход)");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьСАмортизациейОборот",   "Изменение стоим. ОС с уч. аморт.");
	СтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",              "Амортизация за период");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьОборотКт",              "Стоимость (расход)");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",                "Изменение стоимости");
	СтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток",       "Стоимость на конец периода");
	
	ПостроительОтчета.Текст = Текст;
		
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	УправлениеОтчетами.ОчиститьДополнительныеПоляПостроителя(ПостроительОтчета);
	
	ОбщийОтчет.ЗаполнитьПоказатели( "ПервоначальнаяСтоимость",        "Первоначальная стоимость",            Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьНачальныйОстаток",      "Стоимость на начало периода",         Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьОборотДт",              "Стоимость (приход)",                  Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьСАмортизациейОборотКт", "Стоимость с аморт.(расход)",          Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьСАмортизациейОборот",   "Изменение стоим. ОС с уч. аморт.",    Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "АмортизацияОборот",              "Амортизация за период",               Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьОборотКт",              "Стоимость (расход)",                  Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьОборот",                "Изменение стоимости",                 Истина, "ЧЦ=15; ЧДЦ=2");
	ОбщийОтчет.ЗаполнитьПоказатели( "СтоимостьКонечныйОстаток",       "Стоимость на конец периода",          Истина, "ЧЦ=15; ЧДЦ=2");
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("Организация");
	МассивОтбора.Добавить("ОсновноеСредство");
	
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
	ОбщийОтчет.ВыводитьПоказателиВСтроку = Истина;
	ОбщийОтчет.РаскрашиватьИзмерения     = Истина;
	
КонецПроцедуры // ЗаполнитьНачальныеНастройки()

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры // Настроить()

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет  = ЭтотОбъект;
	
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет=Неопределено) Экспорт
	
	// Если отчет, вызвавший процедуру, не передан, то считаем, что ее вызвал этот отчет
	Если Отчет = Неопределено Тогда
		Отчет = ЭтотОбъект;
	КонецЕсли;

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок, Отчет);
	
КонецПроцедуры

ОбщийОтчет.ИмяРегистра = "Налоговый";
ОбщийОтчет.мНазваниеОтчета = "Ведомость амортизации объектов ОС (налоговый учет)";
ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
ОбщийОтчет.мРежимВводаПериода = 0;
ОбщийОтчет.мВыбиратьИспользованиеСвойств = Ложь;

#КонецЕсли
