#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегБрак.Подразделение КАК Подразделение,
		|	РегБрак.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.Подразделение),
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.СтатьяЗатрат),
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ГОД) КАК ПериодГод,
		|	РегБрак.СуммаНачальныйОстаток КАК СуммаНачОст,
		|	РегБрак.СуммаПриход КАК СуммаПриход,
		|	РегБрак.СуммаРасход КАК СуммаРасход,
		|	РегБрак.СуммаКонечныйОстаток КАК СуммаКонОст
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|{ВЫБРАТЬ
		|	Подразделение.*,
		|	РегБрак.СтатьяЗатрат.*,
		|	РегБрак.НоменклатурнаяГруппа.*,
		|	РегБрак.Заказ.*,
		|	РегБрак.Продукция.*,
		|	РегБрак.ХарактеристикаПродукции.*,
		|	РегБрак.СерияПродукции.*,
		|	РегБрак.Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	СуммаНачОст,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонОст
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИЗ
		|	РегистрНакопления.БракВПроизводстве.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность},, {Подразделение.*, СтатьяЗатрат.*, НоменклатурнаяГруппа.*, Заказ.*, Продукция.*, ХарактеристикаПродукции.*, СерияПродукции.*}) КАК РегБрак
		|	//СОЕДИНЕНИЯ
		|{ГДЕ
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ГОД) КАК ПериодГод,
		|	РегБрак.СуммаНачальныйОстаток КАК СуммаНачОст,
		|	РегБрак.СуммаПриход КАК СуммаПриход,
		|	РегБрак.СуммаРасход КАК СуммаРасход,
		|	РегБрак.СуммаКонечныйОстаток КАК СуммаКонОст
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|{УПОРЯДОЧИТЬ ПО
		|	РегБрак.Регистратор.*,
		|	РегБрак.Подразделение.*,
		|	РегБрак.СтатьяЗатрат.*,
		|	РегБрак.НоменклатурнаяГруппа.*,
		|	РегБрак.Заказ.*,
		|	РегБрак.Продукция.*,
		|	РегБрак.ХарактеристикаПродукции.*,
		|	РегБрак.СерияПродукции.*,
		|	СуммаНачОст,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонОст,
		|	Регистратор,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИТОГИ
		|	СУММА(СуммаНачОст),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход),
		|	СУММА(СуммаКонОст)
		|	//ИТОГИ_СВОЙСТВА
		|	//ИТОГИ_КАТЕГОРИИ
		|ПО
		|	ОБЩИЕ
		|
		|{ИТОГИ ПО
		|	Период,
		|	Регистратор,
		|	Подразделение.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Заказ.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	СерияПродукции.*,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|АВТОУПОРЯДОЧИВАНИЕ";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегБрак.Продукция" ,               "Продукция",               "Продукция",                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегБрак.ХарактеристикаПродукции" , "ХарактеристикаПродукции", "Характеристика продукции", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НоменклатурнаяГруппа",    "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтатьяЗатрат",            "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияПродукции",          "Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНачОст",             "Сумма начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаПриход",             "Сумма приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаРасход",             "Сумма расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаКонОст",             "Сумма конечный остаток");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачОст", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриход", "Приход",      Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасход", "Расход",      Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонОст", "Конечный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	
	// Добавление предопредедленных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");

	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиУпр()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиБух(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегБрак.Организация КАК Организация,
		|	РегБрак.Подразделение КАК Подразделение,
		|	РегБрак.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.Организация),
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.Подразделение),
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.СтатьяЗатрат),
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ГОД) КАК ПериодГод,
		|	РегБрак.СуммаНачальныйОстаток КАК СуммаНачОст,
		|	РегБрак.СуммаПриход КАК СуммаПриход,
		|	РегБрак.СуммаРасход КАК СуммаРасход,
		|	РегБрак.СуммаКонечныйОстаток КАК СуммаКонОст,
		|	РегБрак.СуммаНУНачальныйОстаток КАК СуммаНУНачОст,
		|	РегБрак.СуммаНУПриход КАК СуммаНУПриход,
		|	РегБрак.СуммаНУРасход КАК СуммаНУРасход,
		|	РегБрак.СуммаНУКонечныйОстаток КАК СуммаНУКонОст,
		|	РегБрак.НДСВходящийНачальныйОстаток 	  КАК НДСВходящийНачОст,
		|	РегБрак.НДСВходящийПриход           	  КАК НДСВходящийПриход,
		|	РегБрак.НДСВходящийРасход				  КАК НДСВходящийРасход,
		|	РегБрак.НДСВходящийКонечныйОстаток  	  КАК НДСВходящийКонОст,
		|	РегБрак.НДСКредитНачальныйОстаток 	  	  КАК НДСКредитНачОст,
		|	РегБрак.НДСКредитПриход           	  	  КАК НДСКредитПриход,
		|	РегБрак.НДСКредитРасход				  	  КАК НДСКредитРасход,
		|	РегБрак.НДСКредитКонечныйОстаток  	  	  КАК НДСКредитКонОст
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|{ВЫБРАТЬ
		|	Организация.*,
		|	Подразделение.*,
		|	РегБрак.СтатьяЗатрат.*,
		|	РегБрак.НоменклатурнаяГруппа.*,
		|	РегБрак.Заказ.*,
		|	РегБрак.Продукция.*,
		|	РегБрак.ХарактеристикаПродукции.*,
		|	РегБрак.СерияПродукции.*,
		|	РегБрак.НалоговоеНазначение.*,
		|	РегБрак.СчетУчета,
		|	РегБрак.Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	СуммаНачОст,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонОст,
		|	СуммаНУНачОст,
		|	СуммаНУПриход,
		|	СуммаНУРасход,
		|	СуммаНУКонОст,
		|	НДСВходящийНачОст,
		|	НДСВходящийПриход,
		|	НДСВходящийРасход,
		|	НДСВходящийКонОст,
		|	НДСКредитНачОст,
		|	НДСКредитПриход,
		|	НДСКредитРасход,
		|	НДСКредитКонОст
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИЗ
		|	РегистрНакопления.БракВПроизводствеБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность},, {Организация.* КАК Организация, Подразделение.*, СтатьяЗатрат.*, НоменклатурнаяГруппа.*, Заказ.*, Продукция.*, ХарактеристикаПродукции.*, СерияПродукции.*, СчетУчета}) КАК РегБрак
		|	//СОЕДИНЕНИЯ
		|{ГДЕ
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ГОД) КАК ПериодГод,
		|	РегБрак.СуммаНачальныйОстаток КАК СуммаНачОст,
		|	РегБрак.СуммаПриход КАК СуммаПриход,
		|	РегБрак.СуммаРасход КАК СуммаРасход,
		|	РегБрак.СуммаКонечныйОстаток КАК СуммаКонОст,
		|	РегБрак.СуммаНУНачальныйОстаток КАК СуммаНУНачОст,
		|	РегБрак.СуммаНУПриход КАК СуммаНУПриход,
		|	РегБрак.СуммаНУРасход КАК СуммаНУРасход,
		|	РегБрак.СуммаНУКонечныйОстаток КАК СуммаНУКонОст,
		|	РегБрак.НДСВходящийНачальныйОстаток 	  КАК НДСВходящийНачОст,
		|	РегБрак.НДСВходящийПриход           	  КАК НДСВходящийПриход,
		|	РегБрак.НДСВходящийРасход				  КАК НДСВходящийРасход,
		|	РегБрак.НДСВходящийКонечныйОстаток  	  КАК НДСВходящийКонОст,
		|	РегБрак.НДСКредитНачальныйОстаток 	  	  КАК НДСКредитНачОст,
		|	РегБрак.НДСКредитПриход           	  	  КАК НДСКредитПриход,
		|	РегБрак.НДСКредитРасход				  	  КАК НДСКредитРасход,
		|	РегБрак.НДСКредитКонечныйОстаток  	  	  КАК НДСКредитКонОст
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|{УПОРЯДОЧИТЬ ПО
		|	РегБрак.Регистратор.*,
		|	РегБрак.Организация.*,
		|	РегБрак.Подразделение.*,
		|	РегБрак.СтатьяЗатрат.*,
		|	РегБрак.НоменклатурнаяГруппа.*,
		|	РегБрак.Заказ.*,
		|	РегБрак.Продукция.*,
		|	РегБрак.ХарактеристикаПродукции.*,
		|	РегБрак.СерияПродукции.*,
		|	РегБрак.НалоговоеНазначение.*,
		|	РегБрак.СчетУчета,
		|	СуммаНачОст,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонОст,
		|	СуммаНУНачОст,
		|	СуммаНУПриход,
		|	СуммаНУРасход,
		|	СуммаНУКонОст,
 		|	НДСВходящийНачОст,
		|	НДСВходящийПриход,
		|	НДСВходящийРасход,
		|	НДСВходящийКонОст,
		|	НДСКредитНачОст,
		|	НДСКредитПриход,
		|	НДСКредитРасход,
		|	НДСКредитКонОст,
		|	Регистратор,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИТОГИ
		|	СУММА(СуммаНачОст),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход),
		|	СУММА(СуммаКонОст),
		|	СУММА(СуммаНУНачОст),
		|	СУММА(СуммаНУПриход),
		|	СУММА(СуммаНУРасход),
		|	СУММА(СуммаНУКонОст),
		|	СУММА(НДСВходящийНачОст),
		|	СУММА(НДСВходящийПриход),
		|	СУММА(НДСВходящийРасход),
		|	СУММА(НДСВходящийКонОст),
		|	СУММА(НДСКредитНачОст),
		|	СУММА(НДСКредитПриход),
		|	СУММА(НДСКредитРасход),
		|	СУММА(НДСКредитКонОст)
		|	//ИТОГИ_СВОЙСТВА
		|	//ИТОГИ_КАТЕГОРИИ
		|ПО
		|	ОБЩИЕ
		|
		|{ИТОГИ ПО
		|	Период,
		|	Регистратор,
		|	Организация.*,
		|	Подразделение.*,
		|	СтатьяЗатрат.*,
		|	СчетУчета,
		|	НоменклатурнаяГруппа.*,
		|	Заказ.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	СерияПродукции.*,
		|	РегБрак.НалоговоеНазначение.*,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|АВТОУПОРЯДОЧИВАНИЕ";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегБрак.Организация" ,  "Организация",   "Организация",              ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегБрак.Продукция" ,               "Продукция",               "Продукция",                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегБрак.ХарактеристикаПродукции" , "ХарактеристикаПродукции", "Характеристика продукции", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Организация",   "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НоменклатурнаяГруппа",    "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтатьяЗатрат",            "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияПродукции",          "Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НалоговоеНазначение",     "Налоговое назначение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СчетУчета",               "Счет учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНачОст",             "Сумма начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаПриход",             "Сумма приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаРасход",             "Сумма расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаКонОст",             "Сумма конечный остаток");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНУНачОст",             "Сумма начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНУПриход",             "Сумма приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНУРасход",             "Сумма расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНУКонОст",             "Сумма конечный остаток");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСВходящийНачОст",  	 "Сумма входящего НДС (нач. остаток)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСВходящийПриход",  	 "Сумма входящего НДС (приход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСВходящийРасход",  	 "Сумма входящего НДС (расход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСВходящийКонОст", 		 "Сумма входящего НДС (кон остаток)");

	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСКредитНачОст",  		 "Сумма налогового кредита (нач. остаток)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСКредитПриход",  		 "Сумма налогового кредита (приход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСКредитРасход", 		 "Сумма налогового кредита (расход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НДСКредитКонОст",  		 "Сумма налогового кредита (кон остаток)");	
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачОст", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриход", "Приход",      Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасход", "Расход",      Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонОст", "Конечный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаНУНачОст", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-", "СуммаНУ", "Сумма налогового учета");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаНУПриход", "Приход",            Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-", "СуммаНУ", "Сумма налогового учета");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаНУРасход", "Расход",            Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-", "СуммаНУ", "Сумма налогового учета");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаНУКонОст", "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-", "СуммаНУ", "Сумма налогового учета");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСВходящийНачОст",  	  "Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСВходящийПриход",  	  "Приход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСВходящийРасход",  	  "Расход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСВходящийКонОст",  	  "Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСКредитНачОст",	  	  "Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСКредитПриход",  	  	  "Приход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСКредитРасход",  	  	  "Расход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
	УниверсальныйОтчет.ДобавитьПоказатель( "НДСКредитКонОст", 		  "Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	
	// Добавление предопредедленных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	УниверсальныйОтчет.УстановитьСвязьПолей("Организация", "Подразделение");

	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиБух()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиМСФО(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегБрак.Подразделение КАК Подразделение,
		|	РегБрак.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.Подразделение),
		|	ПРЕДСТАВЛЕНИЕ(РегБрак.СтатьяЗатрат),
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ГОД) КАК ПериодГод,
		|	РегБрак.СуммаНачальныйОстаток КАК СуммаНачОст,
		|	РегБрак.СуммаПриход КАК СуммаПриход,
		|	РегБрак.СуммаРасход КАК СуммаРасход,
		|	РегБрак.СуммаКонечныйОстаток КАК СуммаКонОст
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|{ВЫБРАТЬ
		|	Подразделение.*,
		|	РегБрак.СтатьяЗатрат.*,
		|	РегБрак.НоменклатурнаяГруппа.*,
		|	РегБрак.Заказ.*,
		|	РегБрак.Продукция.*,
		|	РегБрак.ХарактеристикаПродукции.*,
		|	РегБрак.СерияПродукции.*,
		|	РегБрак.СчетУчета,
		|	РегБрак.Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	СуммаНачОст,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонОст
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИЗ
		|	РегистрНакопления.БракВПроизводствеМеждународныйУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность},, {Подразделение.*, СтатьяЗатрат.*, НоменклатурнаяГруппа.*, Заказ.*, Продукция.*, ХарактеристикаПродукции.*, СерияПродукции.*, СчетУчета}) КАК РегБрак
		|	//СОЕДИНЕНИЯ
		|{ГДЕ
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегБрак.Период, ГОД) КАК ПериодГод,
		|	РегБрак.СуммаНачальныйОстаток КАК СуммаНачОст,
		|	РегБрак.СуммаПриход КАК СуммаПриход,
		|	РегБрак.СуммаРасход КАК СуммаРасход,
		|	РегБрак.СуммаКонечныйОстаток КАК СуммаКонОст
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|{УПОРЯДОЧИТЬ ПО
		|	РегБрак.Регистратор.*,
		|	РегБрак.Подразделение.*,
		|	РегБрак.СтатьяЗатрат.*,
		|	РегБрак.НоменклатурнаяГруппа.*,
		|	РегБрак.Заказ.*,
		|	РегБрак.Продукция.*,
		|	РегБрак.ХарактеристикаПродукции.*,
		|	РегБрак.СерияПродукции.*,
		|	РегБрак.СчетУчета,
		|	СуммаНачОст,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонОст,
		|	Регистратор,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИТОГИ
		|	СУММА(СуммаНачОст),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход),
		|	СУММА(СуммаКонОст)
		|	//ИТОГИ_СВОЙСТВА
		|	//ИТОГИ_КАТЕГОРИИ
		|ПО
		|	ОБЩИЕ
		|
		|{ИТОГИ ПО
		|	Период,
		|	Регистратор,
		|	Подразделение.*,
		|	СтатьяЗатрат.*,
		|	СчетУчета,
		|	НоменклатурнаяГруппа.*,
		|	Заказ.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	СерияПродукции.*,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|АВТОУПОРЯДОЧИВАНИЕ";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегБрак.Продукция" ,               "Продукция",               "Продукция",                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегБрак.ХарактеристикаПродукции" , "ХарактеристикаПродукции", "Характеристика продукции", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НоменклатурнаяГруппа",    "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтатьяЗатрат",            "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияПродукции",          "Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СчетУчета",               "Счет учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНачОст",             "Сумма начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаПриход",             "Сумма приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаРасход",             "Сумма расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаКонОст",             "Сумма конечный остаток");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаНачОст", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаПриход", "Приход",      Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаРасход", "Расход",      Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	УниверсальныйОтчет.ДобавитьПоказатель("СуммаКонОст", "Конечный остаток", Истина, "ЧЦ=15; ЧДЦ=2; ЧН=-");
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	
	// Добавление предопредедленных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");

	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиМСФО()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Ложь;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Ложь;
	
	Если      ВидУчета = 1 Тогда // Бух.
		УстановитьНачальныеНастройкиБух(ДополнительныеПараметры);
	ИначеЕсли ВидУчета = 3 Тогда // МСФО
		УстановитьНачальныеНастройкиМСФО(ДополнительныеПараметры);
	Иначе // Упр
		УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	ТекстСправкиФормы = "";
	
	Если глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") Тогда
		НачалоИспользования = Формат(глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат"), "ДФ=dd.MM.yyyy");
		
		ТекстСправкиФормы = "<P>С " + НачалоИспользования + " установлено использование расширенной аналитики учета затрат."
					+ "<BR><b>Использование отчета для расширенной аналитики не поддерживается</b>."
					+ "<BR>Можно воспользоваться отчетом ""Ведомость по учету затрат"".<P>";
	КонецЕсли; 
	
	Возврат ТекстСправкиФормы;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
