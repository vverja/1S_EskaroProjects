#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегЗатратыНаВыпуск.Подразделение КАК Подразделение,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Подразделение),
		|	РегЗатратыНаВыпуск.Продукция КАК Продукция,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Продукция),
		|	РегЗатратыНаВыпуск.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.ХарактеристикаПродукции),
		|	РегЗатратыНаВыпуск.Заказ КАК Заказ,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Заказ),
		|	РегЗатратыНаВыпуск.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.СтатьяЗатрат),
		|	РегЗатратыНаВыпуск.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.НоменклатурнаяГруппа),
		|	РегЗатратыНаВыпуск.Затрата КАК Затрата,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Затрата),
		|	РегЗатратыНаВыпуск.ХарактеристикаЗатраты КАК ХарактеристикаЗатраты,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.ХарактеристикаЗатраты),
		|	РегЗатратыНаВыпуск.СерияЗатраты КАК СерияЗатраты,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.СерияЗатраты),
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	РегЗатратыНаВыпуск.КоличествоПриход КАК КоличествоПриход,
		|	РегЗатратыНаВыпуск.КоличествоРасход КАК КоличествоРасход,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолНачОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолПриходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолРасходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолКонОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолНачОстБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолПриходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолРасходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолКонОстБазовЕд,
		|	РегЗатратыНаВыпуск.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	РегЗатратыНаВыпуск.СуммаПриход КАК СуммаПриход,
		|	РегЗатратыНаВыпуск.СуммаРасход КАК СуммаРасход,
		|	РегЗатратыНаВыпуск.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	РегЗатратыНаВыпуск.Регистратор КАК Регистратор,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Регистратор),
		|	РегЗатратыНаВыпуск.Период КАК Период,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ГОД) КАК ПериодГод
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|{ВЫБРАТЬ
		|	Подразделение.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	Заказ.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Затрата.*,
		|	ХарактеристикаЗатраты.*,
		|	СерияЗатраты.*,
		|	КоличествоНачальныйОстаток,
		|	КоличествоПриход,
		|	КоличествоРасход,
		|	КоличествоКонечныйОстаток,
		|	СуммаНачальныйОстаток,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонечныйОстаток,
		|	Регистратор КАК Регистратор,
		|	Период КАК Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	КолНачОстЕдОтчетов,
		|	КолПриходЕдОтчетов,
		|	КолРасходЕдОтчетов,
		|	КолКонОстЕдОтчетов,
		|	КолНачОстБазовЕд,
		|	КолПриходБазовЕд,
		|	КолРасходБазовЕд,
		|	КолКонОстБазовЕд
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИЗ
		|	РегистрНакопления.ЗатратыНаВыпускПродукцииНаработка.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, , {Подразделение.* КАК Подразделение, Продукция.* КАК Продукция, ХарактеристикаПродукции.* КАК ХарактеристикаПродукции, Заказ.* КАК Заказ, СтатьяЗатрат.* КАК СтатьяЗатрат, НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Затрата.* КАК Затрата, ХарактеристикаЗатраты.* КАК ХарактеристикаЗатраты, СерияЗатраты.* КАК СерияЗатраты}) КАК РегЗатратыНаВыпуск
		|	//СОЕДИНЕНИЯ
						   
		|{ГДЕ
		|	РегЗатратыНаВыпуск.Регистратор.*,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток,
		|	РегЗатратыНаВыпуск.КоличествоПриход,
		|	РегЗатратыНаВыпуск.КоличествоРасход,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток,
		|	РегЗатратыНаВыпуск.СуммаНачальныйОстаток,
		|	РегЗатратыНаВыпуск.СуммаПриход,
		|	РегЗатратыНаВыпуск.СуммаРасход,
		|	РегЗатратыНаВыпуск.СуммаКонечныйОстаток,
		|	РегЗатратыНаВыпуск.Период,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ГОД) КАК ПериодГод,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолНачОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолПриходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолРасходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолКонОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолНачОстБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолПриходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолРасходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолКонОстБазовЕд
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|{УПОРЯДОЧИТЬ ПО
		|	Подразделение.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	Заказ.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Затрата.*,
		|	ХарактеристикаЗатраты.*,
		|	СерияЗатраты.*,
		|	КоличествоНачальныйОстаток,
		|	КоличествоПриход,
		|	КоличествоРасход,
		|	КоличествоКонечныйОстаток,
		|	СуммаНачальныйОстаток,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонечныйОстаток,
		|	Регистратор,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	КолНачОстЕдОтчетов,
		|	КолПриходЕдОтчетов,
		|	КолРасходЕдОтчетов,
		|	КолКонОстЕдОтчетов,
		|	КолНачОстБазовЕд,
		|	КолПриходБазовЕд,
		|	КолРасходБазовЕд,
		|	КолКонОстБазовЕд
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход),
		|	СУММА(КоличествоКонечныйОстаток),
		|	СУММА(КолНачОстЕдОтчетов),
		|	СУММА(КолПриходЕдОтчетов),
		|	СУММА(КолРасходЕдОтчетов),
		|	СУММА(КолКонОстЕдОтчетов),
		|	СУММА(КолНачОстБазовЕд),
		|	СУММА(КолПриходБазовЕд),
		|	СУММА(КолРасходБазовЕд),
		|	СУММА(КолКонОстБазовЕд),
		|	СУММА(СуммаНачальныйОстаток),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход),
		|	СУММА(СуммаКонечныйОстаток)
		|	//ИТОГИ_СВОЙСТВА
		|	//ИТОГИ_КАТЕГОРИИ
		|ПО
		|	ОБЩИЕ
		|{ИТОГИ ПО
		|	Подразделение.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	Заказ.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Затрата.*,
		|	ХарактеристикаЗатраты.*,
		|	СерияЗатраты.*,
		|	Регистратор.*,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.Продукция" ,               "Продукция",               "Продукция",                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.ХарактеристикаПродукции" , "ХарактеристикаПродукции", "Характеристика продукции", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.Затрата" ,                 "Затрата",                 "Затрата",                  ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.ХарактеристикаЗатраты" ,   "ХарактеристикаЗатраты",   "Характеристика затраты",   ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияПродукции",          "Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаЗатраты",   "Характеристика затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияЗатраты",            "Серия затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтатьяЗатрат",            "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НоменклатурнаяГруппа",    "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СчетУчета",               "Счет учета");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНачальныйОстаток",      "Сумма нач. остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаПриход",                "Сумма приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаРасход",                "Сумма расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаКонечныйОстаток",       "Сумма кон. остаток");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоНачальныйОстаток", "Количество нач. остаток (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоПриход",           "Количество приход (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоРасход",           "Количество расход (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоКонечныйОстаток",  "Количество кон. остаток (ед. хран.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолНачОстБазовЕд",   "Количество нач. остаток (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолПриходБазовЕд",   "Количество приход (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолРасходБазовЕд",   "Количество расход (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолКонОстБазовЕд",   "Количество кон. остаток (баз. ед. изм.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолНачОстЕдОтчетов", "Количество нач. остаток (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолПриходЕдОтчетов", "Количество приход (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолРасходЕдОтчетов", "Количество расход (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолКонОстЕдОтчетов", "Количество кон. остаток (ед. отчетов)");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаНачальныйОстаток",      "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаПриход",                "Приход",            Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаРасход",                "Расход",            Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаКонечныйОстаток",       "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоНачальныйОстаток", "Начальный остаток",   Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоПриход",           "Приход",              Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоРасход",           "Расход",              Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоКонечныйОстаток",  "Конечный остаток",    Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КолНачОстБазовЕд",           "Начальный остаток",   Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолПриходБазовЕд",           "Приход",              Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолРасходБазовЕд",           "Расход",              Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолКонОстБазовЕд",           "Конечный остаток",    Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КолНачОстЕдОтчетов",         "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолПриходЕдОтчетов",         "Приход",            Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолРасходЕдОтчетов",         "Расход",            Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолКонОстЕдОтчетов",         "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Продукция");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Затрата");
	
	// Добавление предопредедленных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Продукция");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьОтбор("Затрата");
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиУпр()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиБух(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = "
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РегЗатратыНаВыпуск.Организация КАК Организация,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Организация),
		|	РегЗатратыНаВыпуск.Подразделение КАК Подразделение,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Подразделение),
		|	РегЗатратыНаВыпуск.СчетУчета КАК СчетУчета,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.СчетУчета),
		|	РегЗатратыНаВыпуск.Продукция КАК Продукция,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Продукция),
		|	РегЗатратыНаВыпуск.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.ХарактеристикаПродукции),
		|	РегЗатратыНаВыпуск.Заказ КАК Заказ,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Заказ),
		|	РегЗатратыНаВыпуск.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.СтатьяЗатрат),
		|	РегЗатратыНаВыпуск.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.НоменклатурнаяГруппа),
		|	РегЗатратыНаВыпуск.Затрата КАК Затрата,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Затрата),
		|	РегЗатратыНаВыпуск.ХарактеристикаЗатраты КАК ХарактеристикаЗатраты,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.ХарактеристикаЗатраты),
		|	РегЗатратыНаВыпуск.СерияЗатраты КАК СерияЗатраты,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.СерияЗатраты),
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
		|	РегЗатратыНаВыпуск.КоличествоПриход КАК КоличествоПриход,
		|	РегЗатратыНаВыпуск.КоличествоРасход КАК КоличествоРасход,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолНачОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолПриходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолРасходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|		КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|			ТОГДА 1
		|		ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|	КОНЕЦ КАК КолКонОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолНачОстБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолПриходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолРасходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолКонОстБазовЕд,
		|	РегЗатратыНаВыпуск.СуммаНачальныйОстаток КАК СуммаНачальныйОстаток,
		|	РегЗатратыНаВыпуск.СуммаПриход КАК СуммаПриход,
		|	РегЗатратыНаВыпуск.СуммаРасход КАК СуммаРасход,
		|	РегЗатратыНаВыпуск.СуммаКонечныйОстаток КАК СуммаКонечныйОстаток,
		|	РегЗатратыНаВыпуск.Регистратор КАК Регистратор,
		|	ПРЕДСТАВЛЕНИЕ(РегЗатратыНаВыпуск.Регистратор),
		|	РегЗатратыНаВыпуск.Период КАК Период,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ГОД) КАК ПериодГод
		|	//ПОЛЯ_СВОЙСТВА
		|	//ПОЛЯ_КАТЕГОРИИ
		|{ВЫБРАТЬ
		|	Организация.*,
		|	Подразделение.*,
		|	СчетУчета.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	Заказ.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Затрата.*,
		|	ХарактеристикаЗатраты.*,
		|	СерияЗатраты.*,
		|	КоличествоНачальныйОстаток,
		|	КоличествоПриход,
		|	КоличествоРасход,
		|	КоличествоКонечныйОстаток,
		|	СуммаНачальныйОстаток,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонечныйОстаток,
		|	Регистратор КАК Регистратор,
		|	Период КАК Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	КолНачОстЕдОтчетов,
		|	КолПриходЕдОтчетов,
		|	КолРасходЕдОтчетов,
		|	КолКонОстЕдОтчетов,
		|	КолНачОстБазовЕд,
		|	КолПриходБазовЕд,
		|	КолРасходБазовЕд,
		|	КолКонОстБазовЕд
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИЗ
		|	РегистрНакопления.ЗатратыНаВыпускПродукцииНаработкаБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность}, , {Организация.* КАК Организация, Подразделение.* КАК Подразделение, СчетУчета.* КАК СчетУчета, Продукция.* КАК Продукция, ХарактеристикаПродукции.* КАК ХарактеристикаПродукции, Заказ.* КАК Заказ, СтатьяЗатрат.* КАК СтатьяЗатрат, НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа, Затрата.* КАК Затрата, ХарактеристикаЗатраты.* КАК ХарактеристикаЗатраты, СерияЗатраты.* КАК СерияЗатраты}) КАК РегЗатратыНаВыпуск
		|	//СОЕДИНЕНИЯ
						   
		|{ГДЕ
		|	РегЗатратыНаВыпуск.Организация.*,
		|	РегЗатратыНаВыпуск.Регистратор.*,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток,
		|	РегЗатратыНаВыпуск.КоличествоПриход,
		|	РегЗатратыНаВыпуск.КоличествоРасход,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток,
		|	РегЗатратыНаВыпуск.СуммаНачальныйОстаток,
		|	РегЗатратыНаВыпуск.СуммаПриход,
		|	РегЗатратыНаВыпуск.СуммаРасход,
		|	РегЗатратыНаВыпуск.СуммаКонечныйОстаток,
		|	РегЗатратыНаВыпуск.Период,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕНЬ) КАК ПериодДень,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, НЕДЕЛЯ) КАК ПериодНеделя,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ДЕКАДА) КАК ПериодДекада,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, МЕСЯЦ) КАК ПериодМесяц,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, КВАРТАЛ) КАК ПериодКвартал,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
		|	НАЧАЛОПЕРИОДА(РегЗатратыНаВыпуск.Период, ГОД) КАК ПериодГод,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолНачОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолПриходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолРасходЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
		|			КОГДА РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
		|				ТОГДА 1
		|			ИНАЧЕ ЕСТЬNULL(РегЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
		|		КОНЕЦ КАК КолКонОстЕдОтчетов,
		|	РегЗатратыНаВыпуск.КоличествоНачальныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолНачОстБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоПриход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолПриходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоРасход * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолРасходБазовЕд,
		|	РегЗатратыНаВыпуск.КоличествоКонечныйОстаток * РегЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолКонОстБазовЕд
		|	//УСЛОВИЯ_СВОЙСТВА
		|	//УСЛОВИЯ_КАТЕГОРИИ
		|}

		|{УПОРЯДОЧИТЬ ПО
		|	Организация.*,
		|	Подразделение.*,
		|	СчетУчета.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	Заказ.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Затрата.*,
		|	ХарактеристикаЗатраты.*,
		|	СерияЗатраты.*,
		|	КоличествоНачальныйОстаток,
		|	КоличествоПриход,
		|	КоличествоРасход,
		|	КоличествоКонечныйОстаток,
		|	СуммаНачальныйОстаток,
		|	СуммаПриход,
		|	СуммаРасход,
		|	СуммаКонечныйОстаток,
		|	Регистратор,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод,
		|	КолНачОстЕдОтчетов,
		|	КолПриходЕдОтчетов,
		|	КолРасходЕдОтчетов,
		|	КолКонОстЕдОтчетов,
		|	КолНачОстБазовЕд,
		|	КолПриходБазовЕд,
		|	КолРасходБазовЕд,
		|	КолКонОстБазовЕд
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}

		|ИТОГИ
		|	СУММА(КоличествоНачальныйОстаток),
		|	СУММА(КоличествоПриход),
		|	СУММА(КоличествоРасход),
		|	СУММА(КоличествоКонечныйОстаток),
		|	СУММА(КолНачОстЕдОтчетов),
		|	СУММА(КолПриходЕдОтчетов),
		|	СУММА(КолРасходЕдОтчетов),
		|	СУММА(КолКонОстЕдОтчетов),
		|	СУММА(КолНачОстБазовЕд),
		|	СУММА(КолПриходБазовЕд),
		|	СУММА(КолРасходБазовЕд),
		|	СУММА(КолКонОстБазовЕд),
		|	СУММА(СуммаНачальныйОстаток),
		|	СУММА(СуммаПриход),
		|	СУММА(СуммаРасход),
		|	СУММА(СуммаКонечныйОстаток)
		|	//ИТОГИ_СВОЙСТВА
		|	//ИТОГИ_КАТЕГОРИИ
		|ПО
		|	ОБЩИЕ
		|{ИТОГИ ПО
		|	Организация.*,
		|	Подразделение.*,
		|	СчетУчета.*,
		|	Продукция.*,
		|	ХарактеристикаПродукции.*,
		|	Заказ.*,
		|	СтатьяЗатрат.*,
		|	НоменклатурнаяГруппа.*,
		|	Затрата.*,
		|	ХарактеристикаЗатраты.*,
		|	СерияЗатраты.*,
		|	Регистратор.*,
		|	Период,
		|	ПериодДень,
		|	ПериодНеделя,
		|	ПериодДекада,
		|	ПериодМесяц,
		|	ПериодКвартал,
		|	ПериодПолугодие,
		|	ПериодГод
		|	//ПСЕВДОНИМЫ_СВОЙСТВА
		|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
		|}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.Организация" ,  "Организация",   "Организация",              ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.Продукция" ,               "Продукция",               "Продукция",                ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.ХарактеристикаПродукции" , "ХарактеристикаПродукции", "Характеристика продукции", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.Затрата" ,                 "Затрата",                 "Затрата",                  ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "РегЗатратыНаВыпуск.ХарактеристикаЗатраты" ,   "ХарактеристикаЗатраты",   "Характеристика затраты",   ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Организация",   "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияПродукции",          "Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ХарактеристикаЗатраты",   "Характеристика затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СерияЗатраты",            "Серия затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтатьяЗатрат",            "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НоменклатурнаяГруппа",    "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СчетУчета",               "Счет учета");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаНачальныйОстаток",      "Сумма нач. остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаПриход",                "Сумма приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаРасход",                "Сумма расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СуммаКонечныйОстаток",       "Сумма кон. остаток");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоНачальныйОстаток", "Количество нач. остаток (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоПриход",           "Количество приход (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоРасход",           "Количество расход (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КоличествоКонечныйОстаток",  "Количество кон. остаток (ед. хран.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолНачОстБазовЕд",   "Количество нач. остаток (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолПриходБазовЕд",   "Количество приход (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолРасходБазовЕд",   "Количество расход (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолКонОстБазовЕд",   "Количество кон. остаток (баз. ед. изм.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолНачОстЕдОтчетов", "Количество нач. остаток (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолПриходЕдОтчетов", "Количество приход (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолРасходЕдОтчетов", "Количество расход (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "КолКонОстЕдОтчетов", "Количество кон. остаток (ед. отчетов)");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаНачальныйОстаток",      "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаПриход",                "Приход",            Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаРасход",                "Расход",            Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	УниверсальныйОтчет.ДобавитьПоказатель( "СуммаКонечныйОстаток",       "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=2", "Сумма", "Сумма");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоНачальныйОстаток", "Начальный остаток",   Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоПриход",           "Приход",              Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоРасход",           "Расход",              Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоКонечныйОстаток",  "Конечный остаток",    Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КолНачОстБазовЕд", "Начальный остаток",             Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолПриходБазовЕд", "Приход",                        Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолРасходБазовЕд", "Расход",                        Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолКонОстБазовЕд", "Конечный остаток",              Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КолНачОстЕдОтчетов", "Начальный остаток",         Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолПриходЕдОтчетов", "Приход",                    Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолРасходЕдОтчетов", "Расход",                    Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "КолКонОстЕдОтчетов", "Конечный остаток",          Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Продукция");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Затрата");
	
	// Добавление предопредедленных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Продукция");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьОтбор("Затрата");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	УниверсальныйОтчет.УстановитьСвязьПолей("Организация", "Подразделение");
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиБух()

//

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)","(управленческий учет)");
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	Если      ВидУчета = 1 Тогда // Бух.
		УстановитьНачальныеНастройкиБух(ДополнительныеПараметры);
	Иначе // Упр
		УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	ТекстСправкиФормы = "";
	
	Если глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") Тогда
		НачалоИспользования = Формат(глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат"), "ДФ=dd.MM.yyyy");
		
		ТекстСправкиФормы = "<P>С " + НачалоИспользования + " установлено использование расширенной аналитики учета затрат."
					+ "<BR><b>Использование отчета для расширенной аналитики не поддерживается</b>."
					+ "<BR>Можно воспользоваться отчетом ""Ведомость по учету затрат"".<P>";
	КонецЕсли; 
	
	Возврат ТекстСправкиФормы;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
