#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	// Настройка общих параметров универсального отчета
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит значение используемого режима ввода периода.
	// Тип: Число.
	// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
	// Значение по умолчанию: 0
	// Пример:
	// УниверсальныйОтчет.мРежимВводаПериода = 0;
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Истина;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Ложь;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Удержания.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(Удержания.Организация),
	|	Удержания.ПериодРегистрации КАК ПериодРегистрации,
	|	Удержания.Результат КАК Результат,
	|	Удержания.ПочтовыйСбор КАК ПочтовыйСбор,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	ПРЕДСТАВЛЕНИЕ(Сотрудники.Сотрудник) КАК СотрудникПредставление,
	|	ФактическийАдрес.Представление КАК ФактическийАдрес,
	|	Удержания.Размер КАК Размер,
	|	Удержания.ДокументОснование КАК ДокументОснование,
	|	ПРЕДСТАВЛЕНИЕ(Удержания.ДокументОснование),
	|	Удержания.ПорядокРасчета КАК ПорядокРасчета,
	|	Удержания.ДокументОснование.Получатель КАК Получатель,
	|	ПРЕДСТАВЛЕНИЕ(Удержания.ДокументОснование.Получатель) КАК ПолучательПредставление,
	|	Удержания.ДокументОснование.ВидИсполнительногоДокумента КАК ВидИсполнительногоДокумента,
	|	Удержания.ДокументОснование.ТарифПочты КАК ТарифПочты
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|
	|{ВЫБРАТЬ
	|	Организация.*,
	|	ПериодРегистрации,
	|	Результат,
	|	ПочтовыйСбор,
	|	Сотрудник.*,
	|	ФактическийАдрес,
	|	Размер,
	|	ДокументОснование.*,
	|	ПорядокРасчета,
	|	Получатель.*,
	|	ВидИсполнительногоДокумента,
	|	ТарифПочты
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ}
	|ИЗ
	|	(ВЫБРАТЬ
	|		УдержанияРаботниковОрганизаций.Сотрудник.ФизЛицо КАК ФизЛицо,
	|		СУММА(ВЫБОР
	|				КОГДА УдержанияРаботниковОрганизаций.ВидРасчета = &ПочтовыйСборПоИЛ
	|					ТОГДА 0
	|				ИНАЧЕ УдержанияРаботниковОрганизаций.Результат
	|			КОНЕЦ) КАК Результат,
	|		СУММА(ВЫБОР
	|				КОГДА УдержанияРаботниковОрганизаций.ВидРасчета = &ПочтовыйСборПоИЛ
	|					ТОГДА УдержанияРаботниковОрганизаций.Результат
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК ПочтовыйСбор,
	|		УдержанияРаботниковОрганизаций.Показатель1 КАК Размер,
	|		УдержанияРаботниковОрганизаций.ДокументОснование КАК ДокументОснование,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета = &ПочтовыйСборПоИЛ
	|				ТОГДА ""% от удержанных сумм""
	|			КОГДА УдержанияРаботниковОрганизаций.ДокументОснование.СпособРасчетаИЛ = 1
	|				ТОГДА ""% заработка""
	|			ИНАЧЕ ""фиксированная сумма""
	|		КОНЕЦ КАК ПорядокРасчета,
	|		УдержанияРаботниковОрганизаций.Организация КАК Организация,
	|		УдержанияРаботниковОрганизаций.ПериодРегистрации КАК ПериодРегистрации
	|	ИЗ
	|		РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизаций
	|	ГДЕ
	|		УдержанияРаботниковОрганизаций.ВидРасчета В(&ВидыРасчетаПоИЛ)
	|		И УдержанияРаботниковОрганизаций.ПериодРегистрации МЕЖДУ &ДатаНачала И &ДатаКонец
	|	{ГДЕ
	|		УдержанияРаботниковОрганизаций.Организация КАК Организация,
	|		УдержанияРаботниковОрганизаций.ДокументОснование}
	|	
	|	СГРУППИРОВАТЬ ПО
	|		УдержанияРаботниковОрганизаций.Сотрудник.ФизЛицо,
	|		УдержанияРаботниковОрганизаций.Показатель1,
	|		УдержанияРаботниковОрганизаций.ДокументОснование,
	|		УдержанияРаботниковОрганизаций.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА УдержанияРаботниковОрганизаций.ВидРасчета = &ПочтовыйСборПоИЛ
	|				ТОГДА ""% от удержанных сумм""
	|			КОГДА УдержанияРаботниковОрганизаций.ДокументОснование.СпособРасчетаИЛ = 1
	|				ТОГДА ""% заработка""
	|			ИНАЧЕ ""фиксированная сумма""
	|		КОНЕЦ,
	|		УдержанияРаботниковОрганизаций.Организация) КАК Удержания
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК ФактическийАдрес
	|		ПО (ФактическийАдрес.Тип = &Адрес)
	|			И (ФактическийАдрес.Вид = &ФактическийАдрес)
	|			И Удержания.ДокументОснование.Получатель = ФактическийАдрес.Объект}
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(СписокСотрудников.Сотрудник) КАК Сотрудник,
	|			СписокСотрудников.Физлицо КАК Физлицо,
	|			СписокСотрудников.ПериодРегистрации КАК ПериодРегистрации
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизаций.Сотрудник) КАК Сотрудник,
	|				РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|				1 КАК Приоритет,
	|				ПериодыРаботников.ПериодРегистрации КАК ПериодРегистрации
	|			ИЗ
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|					РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|					Периоды.ПериодРегистрации КАК ПериодРегистрации
	|				ИЗ
	|					РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|						ИЗ
	|							РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|						ГДЕ
	|							РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаКонец) КАК Периоды
	|						ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
	|				ГДЕ
	|					РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|					И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизаций.Сотрудник.Физлицо,
	|					Периоды.ПериодРегистрации) КАК ПериодыРаботников
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО ПериодыРаботников.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|						И ПериодыРаботников.Период = РаботникиОрганизаций.Период
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Сотрудник.Физлицо,
	|				ПериодыРаботников.ПериодРегистрации
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизаций.Сотрудник),
	|				РаботникиОрганизаций.Сотрудник.Физлицо,
	|				2,
	|				ПериодыРаботников.ПериодРегистрации
	|			ИЗ
	|				(ВЫБРАТЬ
	|					МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|					РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|					Периоды.ПериодРегистрации КАК ПериодРегистрации
	|				ИЗ
	|					РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|						ИЗ
	|							РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|						ГДЕ
	|							РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаКонец) КАК Периоды
	|						ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
	|				ГДЕ
	|					РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					И РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|					И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|				
	|				СГРУППИРОВАТЬ ПО
	|					РаботникиОрганизаций.Сотрудник.Физлицо,
	|					Периоды.ПериодРегистрации) КАК ПериодыРаботников
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ПО ПериодыРаботников.Период = РаботникиОрганизаций.Период
	|						И ПериодыРаботников.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Сотрудник.Физлицо,
	|				ПериодыРаботников.ПериодРегистрации
	|			
	|			ОБЪЕДИНИТЬ
	|			
	|			ВЫБРАТЬ
	|				МАКСИМУМ(СотрудникиДУ.Ссылка),
	|				СотрудникиДУ.Физлицо,
	|				3,
	|				ПериодыРаботников.ПериодРегистрации
	|			ИЗ
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|				ИЗ
	|					РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|				ГДЕ
	|					РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаКонец) КАК ПериодыРаботников,
	|				Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
	|			ГДЕ
	|				(СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
	|						ИЛИ СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор))
	|			
	|			СГРУППИРОВАТЬ ПО
	|				СотрудникиДУ.Физлицо,
	|				ПериодыРаботников.ПериодРегистрации) КАК СписокСотрудников
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|					СписокФизическихЛиц.Физлицо КАК Физлицо,
	|					МИНИМУМ(СписокФизическихЛиц.Приоритет) КАК Приоритет,
	|					СписокФизическихЛиц.ПериодРегистрации КАК ПериодРегистрации
	|				ИЗ
	|					(ВЫБРАТЬ
	|						МАКСИМУМ(РаботникиОрганизаций.Сотрудник) КАК Сотрудник,
	|						РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|						1 КАК Приоритет,
	|						ПериодыРаботников.ПериодРегистрации КАК ПериодРегистрации
	|					ИЗ
	|						(ВЫБРАТЬ
	|							МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|							РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|							Периоды.ПериодРегистрации КАК ПериодРегистрации
	|						ИЗ
	|							РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|								ИЗ
	|									РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|								ГДЕ
	|									РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаКонец) КАК Периоды
	|								ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
	|						ГДЕ
	|							РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|							И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы)
	|						
	|						СГРУППИРОВАТЬ ПО
	|							РаботникиОрганизаций.Сотрудник.Физлицо,
	|							Периоды.ПериодРегистрации) КАК ПериодыРаботников
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|							ПО ПериодыРаботников.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|								И ПериодыРаботников.Период = РаботникиОрганизаций.Период
	|					
	|					СГРУППИРОВАТЬ ПО
	|						РаботникиОрганизаций.Сотрудник.Физлицо,
	|						ПериодыРаботников.ПериодРегистрации
	|					
	|					ОБЪЕДИНИТЬ
	|					
	|					ВЫБРАТЬ
	|						МАКСИМУМ(РаботникиОрганизаций.Сотрудник),
	|						РаботникиОрганизаций.Сотрудник.Физлицо,
	|						2,
	|						ПериодыРаботников.ПериодРегистрации
	|					ИЗ
	|						(ВЫБРАТЬ
	|							МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|							РаботникиОрганизаций.Сотрудник.Физлицо КАК ФизЛицо,
	|							Периоды.ПериодРегистрации КАК ПериодРегистрации
	|						ИЗ
	|							РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|								ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|									НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|								ИЗ
	|									РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|								ГДЕ
	|									РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаКонец) КАК Периоды
	|								ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(Периоды.ПериодРегистрации, МЕСЯЦ))
	|						ГДЕ
	|							РаботникиОрганизаций.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|							И РаботникиОрганизаций.Сотрудник.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор)
	|							И РаботникиОрганизаций.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|						
	|						СГРУППИРОВАТЬ ПО
	|							РаботникиОрганизаций.Сотрудник.Физлицо,
	|							Периоды.ПериодРегистрации) КАК ПериодыРаботников
	|							ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|							ПО ПериодыРаботников.Период = РаботникиОрганизаций.Период
	|								И ПериодыРаботников.ФизЛицо = РаботникиОрганизаций.Сотрудник.Физлицо
	|					
	|					СГРУППИРОВАТЬ ПО
	|						РаботникиОрганизаций.Сотрудник.Физлицо,
	|						ПериодыРаботников.ПериодРегистрации
	|					
	|					ОБЪЕДИНИТЬ
	|					
	|					ВЫБРАТЬ
	|						МАКСИМУМ(СотрудникиДУ.Ссылка),
	|						СотрудникиДУ.Физлицо,
	|						3,
	|						ПериодыРаботников.ПериодРегистрации
	|					ИЗ
	|						(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|							НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|						ИЗ
	|							РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|						ГДЕ
	|							РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаКонец) КАК ПериодыРаботников,
	|						Справочник.СотрудникиОрганизаций КАК СотрудникиДУ
	|					ГДЕ
	|						(СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ДоговорУправленческий)
	|								ИЛИ СотрудникиДУ.ВидДоговора = ЗНАЧЕНИЕ(Перечисление.ВидыДоговоровСФизЛицами.ТрудовойДоговор))
	|					
	|					СГРУППИРОВАТЬ ПО
	|						СотрудникиДУ.Физлицо,
	|						ПериодыРаботников.ПериодРегистрации) КАК СписокФизическихЛиц
	|				
	|				СГРУППИРОВАТЬ ПО
	|					СписокФизическихЛиц.Физлицо,
	|					СписокФизическихЛиц.ПериодРегистрации) КАК СписокФизическихЛиц
	|				ПО СписокСотрудников.Приоритет = СписокФизическихЛиц.Приоритет
	|					И СписокСотрудников.Физлицо = СписокФизическихЛиц.Физлицо
	|					И СписокСотрудников.ПериодРегистрации = СписокФизическихЛиц.ПериодРегистрации
	|		
	|		СГРУППИРОВАТЬ ПО
	|			СписокСотрудников.Физлицо,
	|			СписокСотрудников.ПериодРегистрации) КАК Сотрудники
	|		ПО Удержания.ФизЛицо = Сотрудники.Физлицо
	|			И Удержания.ПериодРегистрации = Сотрудники.ПериодРегистрации
	|//СОЕДИНЕНИЯ
	|
	|{ГДЕ
	|	Удержания.Организация КАК Организация,
	|	Сотрудники.Сотрудник КАК Сотрудник,
	|	Удержания.ДокументОснование КАК ДокументОснование	
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|{УПОРЯДОЧИТЬ ПО
	|	Сотрудник.*,
	|	ДокументОснование.*,
	|	Получатель.*,
	|	Размер	
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИТОГИ
	|	СУММА(Результат),
	|	СУММА(ПочтовыйСбор)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	Удержания.Организация.*,
	|	Удержания.ПериодРегистрации,
	|	Сотрудник.*,
	|	ДокументОснование.*	
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";	

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "Сотрудники.Сотрудник" ,   "Сотрудник",   "Работник",   ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_СотрудникиОрганизаций);

		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация","Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодРегистрации","Месяц начисления");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Результат","Удержано по исполнительным листам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПочтовыйСбор","Почтовый сбор");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Сотрудник","Работник");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ФактическийАдрес","Адрес получателя");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Размер","Размер удержания");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументОснование","Исполнительный документ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПорядокРасчета","Порядок расчета удержания");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Получатель","Получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВидИсполнительногоДокумента","Вид исполнительного документа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТарифПочты","тариф почты");
	
	УниверсальныйОтчет.мСтруктураФорматаПолей.Вставить("ПериодРегистрации", "ДФ = ""ММММ гггг """"г.""""""");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("Результат", "Удержано по исполнительным листам", Истина, "ЧЦ=15; ЧДЦ=2");
	УниверсальныйОтчет.ДобавитьПоказатель("ПочтовыйСбор", "Почтовый сбор", Истина, "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	 УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	 УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ПериодРегистрации");
	 УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Сотрудник");

	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	 УниверсальныйОтчет.ДобавитьОтбор("Организация");
	 УниверсальныйОтчет.ДобавитьОтбор("Сотрудник");
	 
	УниверсальныйОтчет.ДобавитьПорядок("Сотрудник");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	 УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	 УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.

	ВидыРасчетаПоИЛ = Новый Массив;
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентом);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛПроцентомДоПредела);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммой);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ИЛФиксированнойСуммойДоПредела);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.АлиментыПроцентом);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.АлиментыПроцентомДоПредела);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммой);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела);
	ВидыРасчетаПоИЛ.Добавить(ПланыВидовРасчета.УдержанияОрганизаций.ПочтовыйСбор);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ВидыРасчетаПоИЛ", ВидыРасчетаПоИЛ);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПочтовыйСборПоИЛ", ПланыВидовРасчета.УдержанияОрганизаций.ПочтовыйСбор);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("Адрес", Перечисления.ТипыКонтактнойИнформации.Адрес);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ФактическийАдрес", Справочники.ВидыКонтактнойИнформации.ФактАдресКонтрагента);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНачала", УниверсальныйОтчет.ДатаНач);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКонец", УниверсальныйОтчет.ДатаКон);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);

КонецПроцедуры // СформироватьОтчет()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно перередать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: // (-1) - не выбирать период, 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли