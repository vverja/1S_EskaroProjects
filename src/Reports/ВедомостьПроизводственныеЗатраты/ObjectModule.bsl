#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Функция заменяет комментарии в тексте запроса в зависимости от отражения в учете.
//
// Параметры
//  ИсходныхТекстЗапроса – Строка – Текст запроса.
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска".
//
// Возвращаемое значение:
//   Строка – Текст запроса, в котором заменены комментарии.
//
Функция ЗаменитьКомментарииВТекстеЗапроса(ИсходныйТекстЗапроса)
	
	Если ВидУчета = 2 Тогда
		ВидУчета = 1;
	КонецЕсли; 
	
	// Управленческий учет
	Если ВидУчета = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляУпрУчета", "");
		
	// Бухгалтерский учет	
	ИначеЕсли ВидУчета = 1 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "БухгалтерскийУчет");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляБухУчета", "");
		
	// Налоговый учет	
	ИначеЕсли ВидУчета = 2 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "НалоговыйУчет");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляНалУчета", "");
		
	// Международный учет	
	ИначеЕсли ВидУчета = 3 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "МеждународныйУчет");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции // ЗаменитьКомментарииВТекстеЗапроса()

// Функция формирует текст запроса.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапроса()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	//ДляРеглУчета РегНЗП.Организация КАК ПодразделеОрганизацияниеВладелец,
	|	//ДляРеглУчета ПРЕДСТАВЛЕНИЕ(РегНЗП.Организация),
	|	//ДляРеглУчета РегНЗП.СчетУчета КАК СчетУчета,
	|	//ДляРеглУчета ПРЕДСТАВЛЕНИЕ(РегНЗП.СчетУчета),   
	|	//ДляБухУчета  РегНЗП.НалоговоеНазначение КАК НалоговоеНазначение,     
	|	//ДляБухУчета  ПРЕДСТАВЛЕНИЕ(РегНЗП.НалоговоеНазначение), 
	|
	|	РегНЗП.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.Подразделение),
	|	РегНЗП.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.СтатьяЗатрат),
	|	РегНЗП.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.НоменклатурнаяГруппа),
	|	РегНЗП.Заказ КАК Заказ,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.Заказ),
	|	РегНЗП.Затрата КАК Затрата,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.Затрата),
	|	РегНЗП.ХарактеристикаЗатраты КАК ХарактеристикаЗатраты,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.ХарактеристикаЗатраты),
	|	РегНЗП.СерияЗатраты КАК СерияЗатраты,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.СерияЗатраты),
	|	РегНЗП.НеУчитыватьВРасчетеБазы КАК НеУчитыватьВРасчетеБазы, 
	|	РегНЗП.НеУчитыватьДвиженияПриРасчетеСебестоимости КАК НеУчитыватьДвиженияПриРасчетеСебестоимости,
	|
	|	РегНЗП.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	|	РегНЗП.КоличествоПриход КАК КоличествоПриход,
	|	РегНЗП.КоличествоРасход КАК КоличествоРасход,
	|	РегНЗП.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	РегНЗП.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	РегНЗП.СтоимостьПриход КАК СтоимостьПриход,
	|	РегНЗП.СтоимостьРасход КАК СтоимостьРасход,
	|	РегНЗП.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|
	|	РегНЗП.Регистратор КАК Регистратор,
	|	ПРЕДСТАВЛЕНИЕ(РегНЗП.Регистратор),
	|
	|	РегНЗП.КоличествоНачальныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|	КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|		ТОГДА 1
	|	ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КолНачОстЕдОтчетов,
	|	РегНЗП.КоличествоПриход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|	КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|		ТОГДА 1
	|	ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КолПриходЕдОтчетов,
	|	РегНЗП.КоличествоРасход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|	КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|		ТОГДА 1
	|	ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КолРасходЕдОтчетов,
	|	РегНЗП.КоличествоКонечныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|	КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|		ТОГДА 1
	|	ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КолКонОстЕдОтчетов,
	|
	|	РегНЗП.КоличествоНачальныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолНачОстБазовЕд,
	|	РегНЗП.КоличествоПриход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолПриходБазовЕд,
	|	РегНЗП.КоличествоРасход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолРасходБазовЕд,
	|	РегНЗП.КоличествоКонечныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолКонОстБазовЕд,
	|
	|  //ДляБухУчета РегНЗП.СтоимостьНУНачальныйОстаток КАК СтоимостьНУНачОст,
	|  //ДляБухУчета РегНЗП.СтоимостьНУПриход КАК СтоимостьНУПриход,
	|  //ДляБухУчета РегНЗП.СтоимостьНУРасход КАК СтоимостьНУРасход,
	|  //ДляБухУчета РегНЗП.СтоимостьНУКонечныйОстаток КАК СтоимостьНУКонОст,
	|  //ДляБухУчета РегНЗП.НДСВходящийНачальныйОстаток КАК НДСВходящийНачОст,
	|  //ДляБухУчета РегНЗП.НДСВходящийПриход КАК НДСВходящийПриход,
    |  //ДляБухУчета РегНЗП.НДСВходящийРасход КАК НДСВходящийРасход,
    |  //ДляБухУчета РегНЗП.НДСВходящийКонечныйОстаток КАК НДСВходящийКонОст,    	
	|  //ДляБухУчета РегНЗП.НДСКредитНачальныйОстаток КАК НДСКредитНачОст,
	|  //ДляБухУчета РегНЗП.НДСКредитПриход КАК НДСКредитПриход,
	|  //ДляБухУчета РегНЗП.НДСКредитРасход КАК НДСКредитРасход,
	|  //ДляБухУчета РегНЗП.НДСКредитКонечныйОстаток КАК НДСКредитКонОст,
	|
	|	РегНЗП.Период КАК Период,
	|	НачалоПериода(РегНЗП.Период, День) КАК ПериодДень,
	|	НачалоПериода(РегНЗП.Период, Неделя) КАК ПериодНеделя,
	|	НачалоПериода(РегНЗП.Период, Декада) КАК ПериодДекада,
	|	НачалоПериода(РегНЗП.Период, Месяц) КАК ПериодМесяц,
	|	НачалоПериода(РегНЗП.Период, Квартал) КАК ПериодКвартал,
	|	НачалоПериода(РегНЗП.Период, Полугодие) КАК ПериодПолугодие,
	|	НачалоПериода(РегНЗП.Период, Год) КАК ПериодГод
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	//ДляРеглУчета Организация.*,
	|	//ДляРеглУчета СчетУчета.*,
	|	//ДляБухУчета  НалоговоеНазначение.*,
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Затрата.*,
	|	ХарактеристикаЗатраты.*,
	|	СерияЗатраты.*,
	|	КоличествоНачальныйОстаток,
	|	КоличествоПриход,
	|	КоличествоРасход,
	|	КоличествоКонечныйОстаток,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьПриход,
	|	СтоимостьРасход,
	|	СтоимостьКонечныйОстаток,
	|	Регистратор КАК Регистратор,
	|	КолНачОстЕдОтчетов,
	|	КолПриходЕдОтчетов,
	|	КолРасходЕдОтчетов,
	|	КолКонОстЕдОтчетов,
	|	КолНачОстБазовЕд,
	|	КолПриходБазовЕд,
	|	КолРасходБазовЕд,
	|	КолКонОстБазовЕд,
	|
	|  //ДляБухУчета СтоимостьНУНачОст,
	|  //ДляБухУчета СтоимостьНУПриход,
	|  //ДляБухУчета СтоимостьНУРасход,
	|  //ДляБухУчета СтоимостьНУКонОст,
	|  //ДляБухУчета НДСВходящийНачОст,
	|  //ДляБухУчета НДСВходящийПриход,
    |  //ДляБухУчета НДСВходящийРасход,
    |  //ДляБухУчета НДСВходящийКонОст,    	
	|  //ДляБухУчета НДСКредитНачОст,
	|  //ДляБухУчета НДСКредитПриход,
	|  //ДляБухУчета НДСКредитРасход,
	|  //ДляБухУчета НДСКредитКонОст,  
	|
	|	Период КАК Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	РегистрНакопления.НезавершенноеПроизводство%СуффиксУчета%.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор {&Периодичность},, 
	|		{
	|		//ДляРеглУчета Организация.* КАК Организация,
	|		//ДляРеглУчета СчетУчета.* КАК СчетУчета,
	|		//ДляБухУчета  НалоговоеНазначение.* КАК НалоговоеНазначение, 
	|		Подразделение.* КАК Подразделение,
	|		СтатьяЗатрат.* КАК СтатьяЗатрат,
	|		НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа,
	|		Заказ.* КАК Заказ,
	|		Затрата.* КАК Затрата,
	|		ХарактеристикаЗатраты.* КАК ХарактеристикаЗатраты,
	|		СерияЗатраты.* КАК СерияЗатраты,
	|	     НеУчитыватьВРасчетеБазы КАК НеУчитыватьВРасчетеБазы, 
	|	     НеУчитыватьДвиженияПриРасчетеСебестоимости КАК НеУчитыватьДвиженияПриРасчетеСебестоимости
	|		}
	|	) КАК РегНЗП
	|
	|//СОЕДИНЕНИЯ
	|{ГДЕ
	|	РегНЗП.КоличествоНачальныйОстаток КАК КоличествоНачальныйОстаток,
	|	РегНЗП.КоличествоПриход КАК КоличествоПриход,
	|	РегНЗП.КоличествоРасход КАК КоличествоРасход,
	|	РегНЗП.КоличествоКонечныйОстаток КАК КоличествоКонечныйОстаток,
	|	РегНЗП.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	РегНЗП.СтоимостьПриход КАК СтоимостьПриход,
	|	РегНЗП.СтоимостьРасход КАК СтоимостьРасход,
	|	РегНЗП.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|
	|  //ДляБухУчета РегНЗП.СтоимостьНУНачальныйОстаток КАК СтоимостьНУНачОст,
	|  //ДляБухУчета РегНЗП.СтоимостьНУПриход,
	|  //ДляБухУчета РегНЗП.СтоимостьНУРасход,
	|  //ДляБухУчета РегНЗП.СтоимостьНУКонечныйОстаток КАК СтоимостьНУКонОст,
	|  //ДляБухУчета РегНЗП.НДСВходящийНачальныйОстаток КАК НДСВходящийНачОст,
	|  //ДляБухУчета РегНЗП.НДСВходящийПриход,
    |  //ДляБухУчета РегНЗП.НДСВходящийРасход,
    |  //ДляБухУчета РегНЗП.НДСВходящийКонечныйОстаток КАК НДСВходящийКонОст,    	
	|  //ДляБухУчета РегНЗП.НДСКредитНачальныйОстаток КАК НДСКредитНачОст,
	|  //ДляБухУчета РегНЗП.НДСКредитПриход,
	|  //ДляБухУчета РегНЗП.НДСКредитРасход,
	|  //ДляБухУчета РегНЗП.НДСКредитКонечныйОстаток КАК НДСКредитКонОст,
	|
	|	РегНЗП.Регистратор КАК Регистратор,
	|	РегНЗП.Период КАК Период,
	|	НачалоПериода(РегНЗП.Период, День) КАК ПериодДень,
	|	НачалоПериода(РегНЗП.Период, Неделя) КАК ПериодНеделя,
	|	НачалоПериода(РегНЗП.Период, Декада) КАК ПериодДекада,
	|	НачалоПериода(РегНЗП.Период, Месяц) КАК ПериодМесяц,
	|	НачалоПериода(РегНЗП.Период, Квартал) КАК ПериодКвартал,
	|	НачалоПериода(РегНЗП.Период, Полугодие) КАК ПериодПолугодие,
	|	НачалоПериода(РегНЗП.Период, Год) КАК ПериодГод,
	|	РегНЗП.КоличествоНачальныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|			КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|		КОНЕЦ КАК КолНачОстЕдОтчетов,
	|	РегНЗП.КоличествоПриход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|			КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|		КОНЕЦ КАК КолПриходЕдОтчетов,
	|	РегНЗП.КоличествоРасход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|			КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|		КОНЕЦ КАК КолРасходЕдОтчетов,
	|	РегНЗП.КоличествоКонечныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|			КОГДА РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент = 0
	|				ТОГДА 1
	|			ИНАЧЕ ЕСТЬNULL(РегНЗП.Затрата.ЕдиницаДляОтчетов.Коэффициент, 1)
	|		КОНЕЦ КАК КолКонОстЕдОтчетов,
	|	РегНЗП.КоличествоНачальныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолНачОстБазовЕд,
	|	РегНЗП.КоличествоПриход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолПриходБазовЕд,
	|	РегНЗП.КоличествоРасход * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолРасходБазовЕд,
	|	РегНЗП.КоличествоКонечныйОстаток * РегНЗП.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КолКонОстБазовЕд
	|		//УСЛОВИЯ_СВОЙСТВА
	|		//УСЛОВИЯ_КАТЕГОРИИ
	|}
    |
	|{УПОРЯДОЧИТЬ ПО
	|	//ДляРеглУчета Организация.*,
	|	//ДляРеглУчета СчетУчета.*,
	|	//ДляБухУчета НалоговоеНазначение.*, 
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Затрата.*,
	|	ХарактеристикаЗатраты.*,
	|	СерияЗатраты.*,
	|	КоличествоНачальныйОстаток,
	|	КоличествоПриход,
	|	КоличествоРасход,
	|	КоличествоКонечныйОстаток,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьПриход,
	|	СтоимостьРасход,
	|	СтоимостьКонечныйОстаток,
	|
	|  //ДляБухУчета СтоимостьНУНачОст,
	|  //ДляБухУчета СтоимостьНУПриход,
	|  //ДляБухУчета СтоимостьНУРасход,
	|  //ДляБухУчета СтоимостьНУКонОст,
	|  //ДляБухУчета НДСВходящийНачОст,
	|  //ДляБухУчета НДСВходящийПриход,
    |  //ДляБухУчета НДСВходящийРасход,
    |  //ДляБухУчета НДСВходящийКонОст,    	
	|  //ДляБухУчета НДСКредитНачОст,
	|  //ДляБухУчета НДСКредитПриход,
	|  //ДляБухУчета НДСКредитРасход,
	|  //ДляБухУчета НДСКредитКонОст,
	|
	|	Регистратор,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод,
	|	КолНачОстЕдОтчетов,
	|	КолПриходЕдОтчетов,
	|	КолРасходЕдОтчетов,
	|	КолКонОстЕдОтчетов,
	|	КолНачОстБазовЕд,
	|	КолПриходБазовЕд,
	|	КолРасходБазовЕд,
	|	КолКонОстБазовЕд
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |
	|ИТОГИ
	|	СУММА(КоличествоНачальныйОстаток),
	|	СУММА(КоличествоПриход),
	|	СУММА(КоличествоРасход),
	|	СУММА(КоличествоКонечныйОстаток),
	|	СУММА(КолНачОстЕдОтчетов),
	|	СУММА(КолПриходЕдОтчетов),
	|	СУММА(КолРасходЕдОтчетов),
	|	СУММА(КолКонОстЕдОтчетов),
	|	СУММА(КолНачОстБазовЕд),
	|	СУММА(КолПриходБазовЕд),
	|	СУММА(КолРасходБазовЕд),
	|	СУММА(КолКонОстБазовЕд),
	|
	|  //ДляБухУчета СУММА(СтоимостьНУНачОст),
	|  //ДляБухУчета СУММА(СтоимостьНУПриход),
	|  //ДляБухУчета СУММА(СтоимостьНУРасход),
	|  //ДляБухУчета СУММА(СтоимостьНУКонОст),
	|  //ДляБухУчета СУММА(НДСВходящийНачОст),
	|  //ДляБухУчета СУММА(НДСВходящийПриход),
	|  //ДляБухУчета СУММА(НДСВходящийРасход),
	|  //ДляБухУчета СУММА(НДСВходящийКонОст),    	
	|  //ДляБухУчета СУММА(НДСКредитНачОст),
	|  //ДляБухУчета СУММА(НДСКредитПриход),
	|  //ДляБухУчета СУММА(НДСКредитРасход),
	|  //ДляБухУчета СУММА(НДСКредитКонОст),	
	|
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьПриход),
	|	СУММА(СтоимостьРасход),
	|	СУММА(СтоимостьКонечныйОстаток)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	//ДляРеглУчета Организация.*,
	|	//ДляРеглУчета СчетУчета.*,
	|	//ДляБухУчета НалоговоеНазначение.*, 
	|	Подразделение.*,
	|	СтатьяЗатрат.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Затрата.*,
	|	ХарактеристикаЗатраты.*,
	|	СерияЗатраты.*,
	|	Регистратор,
	|	Период,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодДекада,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодПолугодие,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапроса()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	ТекстЗапросаСКомментариями = СформироватьТекстЗапроса();
	ТекстЗапроса = ЗаменитьКомментарииВТекстеЗапроса(ТекстЗапросаСКомментариями);
		
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		Если ВидУчета <> 0 Тогда
			УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегНЗП.Организация", "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		КонецЕсли;
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегНЗП.Затрата", "Затрата", "Затрата", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("РегНЗП.ХарактеристикаЗатраты", "ХарактеристикаЗатраты", "Характеристика затраты", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация", "Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияЗатраты", "Серия затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаЗатраты", "Характеристика затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяЗатрат", "Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппа", "Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СчетУчета", "Счет учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НалоговоеНазначение", "Налоговое назначение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НеУчитыватьВРасчетеБазы", "Не учитывать в расчете базы");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НеУчитыватьДвиженияПриРасчетеСебестоимости", "Не учитывать движения при расчете себестоимости");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьНачальныйОстаток",  "Стоимость нач. остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьПриход",            "Стоимость приход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьРасход",            "Стоимость расход");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьКонечныйОстаток",   "Стоимость кон. остаток");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоНачальныйОстаток", "Количество нач. остаток (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоПриход",           "Количество приход (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоРасход",           "Количество расход (ед. хран.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоКонечныйОстаток",  "Количество кон. остаток (ед. хран.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолНачОстБазовЕд",           "Количество нач. остаток (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолПриходБазовЕд",           "Количество приход (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолРасходБазовЕд",           "Количество расход (баз. ед. изм.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолКонОстБазовЕд",           "Количество кон. остаток (баз. ед. изм.)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолНачОстЕдОтчетов",         "Количество нач. остаток (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолПриходЕдОтчетов",         "Количество приход (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолРасходЕдОтчетов",         "Количество расход (ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КолКонОстЕдОтчетов",         "Количество кон. остаток (ед. отчетов)");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьНУНачОст",		"Стоимость (НУ) (нач. остаток)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьНУПриход",		"Стоимость (НУ) (приход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьНУРасход",		"Стоимость (НУ) (расход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьНУКонОст", 		"Стоимость (НУ) (кон остаток)");
    	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСВходящийНачОст",  	"Сумма входящего НДС (нач. остаток)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСВходящийПриход",  	"Сумма входящего НДС (приход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСВходящийРасход",  	"Сумма входящего НДС (расход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСВходящийКонОст", 	"Сумма входящего НДС (кон остаток)");

	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСКредитНачОст",  	"Сумма налогового кредита (нач. остаток)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСКредитПриход",     "Сумма налогового кредита (приход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСКредитРасход", 	"Сумма налогового кредита (расход)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСКредитКонОст",  	"Сумма налогового кредита (кон остаток)");	


	Если ВидУчета = 0 Тогда // Управленческий учет
		Валюта = глЗначениеПеременной("ВалютаУправленческогоУчета");
		
	ИначеЕсли ВидУчета = 1 // Бухгалтерский учет 
	Тогда
		Валюта = глЗначениеПеременной("ВалютаРегламентированногоУчета");
		
	ИначеЕсли ВидУчета = 3 Тогда // Международный
		Валюта = глЗначениеПеременной("ВалютаМеждународногоУчета");
	КонецЕсли;
	
	// Добавление показателей.
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНачальныйОстаток", "Начальный остаток", Истина, "ЧЦ=15; ЧДЦ=2", "Стоимость", "Стоимость (" + Валюта + ")");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьПриход",           "Приход",            Истина, "ЧЦ=15; ЧДЦ=2", "Стоимость", "Стоимость (" + Валюта + ")");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьРасход",           "Расход",            Истина, "ЧЦ=15; ЧДЦ=2", "Стоимость", "Стоимость (" + Валюта + ")");
	УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьКонечныйОстаток",  "Конечный остаток",  Истина, "ЧЦ=15; ЧДЦ=2", "Стоимость", "Стоимость (" + Валюта + ")");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоНачальныйОстаток", "Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоПриход",           "Приход",            Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоРасход",           "Расход",            Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоКонечныйОстаток",  "Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=3", "Количество", "Количество в единицах хранения");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КолНачОстБазовЕд", "Начальный остаток",           Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель("КолПриходБазовЕд", "Приход",                      Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель("КолРасходБазовЕд", "Расход",                      Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	УниверсальныйОтчет.ДобавитьПоказатель("КолКонОстБазовЕд", "Конечный остаток",            Ложь, "ЧЦ=15; ЧДЦ=3", "КолБазЕд", "Количество в базовых единицах");
	
	УниверсальныйОтчет.ДобавитьПоказатель("КолНачОстЕдОтчетов", "Начальный остаток",         Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель("КолПриходЕдОтчетов", "Приход",                    Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель("КолРасходЕдОтчетов", "Расход",                    Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель("КолКонОстЕдОтчетов", "Конечный остаток",          Истина, "ЧЦ=15; ЧДЦ=3", "КолЕдОтчетов", "Количество в единицах отчетов");
	
	Если ВидУчета = 1 Тогда // Бухгалтерский учет  
		
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНУНачОст",	"Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=2", "СтоимостьНУ", "Стоимость (НУ)");
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНУПриход",	"Приход",            Ложь, "ЧЦ=15; ЧДЦ=2", "СтоимостьНУ", "Стоимость (НУ)");
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНУРасход",	"Расход",            Ложь, "ЧЦ=15; ЧДЦ=2", "СтоимостьНУ", "Стоимость (НУ)");
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНУКонОст",	"Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=2", "СтоимостьНУ", "Стоимость (НУ)");
		
		УниверсальныйОтчет.ДобавитьПоказатель("НДСВходящийНачОст",	"Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
		УниверсальныйОтчет.ДобавитьПоказатель("НДСВходящийПриход",	"Приход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
		УниверсальныйОтчет.ДобавитьПоказатель("НДСВходящийРасход",	"Расход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
		УниверсальныйОтчет.ДобавитьПоказатель("НДСВходящийКонОст",	"Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=2", "НДСВходящий", "Сумма входящего НДС");
		
		УниверсальныйОтчет.ДобавитьПоказатель("НДСКредитНачОст",	"Начальный остаток", Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
		УниверсальныйОтчет.ДобавитьПоказатель("НДСКредитПриход",	"Приход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
		УниверсальныйОтчет.ДобавитьПоказатель("НДСКредитРасход",	"Расход",            Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
		УниверсальныйОтчет.ДобавитьПоказатель("НДСКредитКонОст",	"Конечный остаток",  Ложь, "ЧЦ=15; ЧДЦ=2", "НДСКредит", "Сумма налогового кредита");
		
	КонецЕсли;
	
	
	// Добавление предопредедленных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	Если ВидУчета <> 0 Тогда
		УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	КонецЕсли;
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Затрата");
	
	// Добавление предопредедленных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	Если ВидУчета <> 0 Тогда
		УниверсальныйОтчет.ДобавитьОтбор("Организация");
	КонецЕсли;
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьОтбор("Затрата");
	УниверсальныйОтчет.ДобавитьОтбор("НеУчитыватьВРасчетеБазы", Истина, ВидСравнения.Равно, Ложь);
	УниверсальныйОтчет.ДобавитьОтбор("НеУчитыватьДвиженияПриРасчетеСебестоимости", Истина, ВидСравнения.Равно, Ложь);
	
	// Установка связи подчиненных и родительских полей
	Если ВидУчета <> 0 Тогда
		УниверсальныйОтчет.УстановитьСвязьПолей("Организация", "Подразделение");
	КонецЕсли;
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Затрата.ЕдиницаХраненияОстатков");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	ТекстСправкиФормы = "";
	
	Если глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") Тогда
		НачалоИспользования = Формат(глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат"), "ДФ=dd.MM.yyyy");
		
		ТекстСправкиФормы = "<P>С " + НачалоИспользования + " установлено использование расширенной аналитики учета затрат."
					+ "<BR><b>Использование отчета для расширенной аналитики не поддерживается</b>."
					+ "<BR>Можно воспользоваться отчетом ""Ведомость по учету затрат"".<P>";
	КонецЕсли; 
	
	Возврат ТекстСправкиФормы;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
