#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Подразделение 					КАК Подразделение,
	|	НоменклатурнаяГруппа 			КАК НоменклатурнаяГруппа,
	|	Продукция						КАК Продукция,
	|	ХарактеристикаПродукции 		КАК ХарактеристикаПродукции,
	|	СерияПродукции 					КАК СерияПродукции,
	|	Спецификация 					КАК Спецификация,
	|	ДокументВыпуска 				КАК ДокументВыпуска,
	|	Заказ 							КАК Заказ,
	|	Качество 						КАК Качество,
	|	ВариантВыпускаПродукции			КАК ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель 		КАК ПодразделениеПолучатель,
	|	ЗаказПолучатель 				КАК ЗаказПолучатель,
	|	СтатьяЗатратПолучатель 			КАК СтатьяЗатратПолучатель,
	|	НоменклатурнаяГруппаПолучатель	КАК НоменклатурнаяГруппаПолучатель,
	|	СкладПолучатель 				КАК СкладПолучатель,
	|	КодОперации 					КАК КодОперации,
	|
	|	Период,
	|	Регистратор,
	|
	|	ПРЕДСТАВЛЕНИЕ(Подразделение),
	|	ПРЕДСТАВЛЕНИЕ(НоменклатурнаяГруппа),
	|	ПРЕДСТАВЛЕНИЕ(Продукция),
	|	ПРЕДСТАВЛЕНИЕ(ХарактеристикаПродукции),
	|	ПРЕДСТАВЛЕНИЕ(СерияПродукции),
	|	ПРЕДСТАВЛЕНИЕ(Спецификация),
	|	ПРЕДСТАВЛЕНИЕ(ДокументВыпуска),
	|	ПРЕДСТАВЛЕНИЕ(Заказ),
	|	ПРЕДСТАВЛЕНИЕ(Качество),
	|	ПРЕДСТАВЛЕНИЕ(ВариантВыпускаПродукции),
	|
	|	ПРЕДСТАВЛЕНИЕ(ПодразделениеПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(ЗаказПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СтатьяЗатратПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(НоменклатурнаяГруппаПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СкладПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(КодОперации),
	|
	|	Период,
	|	ПРЕДСТАВЛЕНИЕ(Регистратор),
	|
	|	НачалоПериода(Период, День)    КАК ПериодДень ,
	|	НачалоПериода(Период, Неделя)  КАК ПериодНеделя ,
	|	НачалоПериода(Период, Месяц)   КАК ПериодМесяц ,
	|	НачалоПериода(Период, Квартал) КАК ПериодКвартал ,
	|	НачалоПериода(Период, Год) 	   КАК ПериодГод,
	|	ВыпускПродукции.Количество 		КАК Количество,
	|	ВыпускПродукции.КоличествоДоделка КАК КоличествоДоделка,
	|	ВыпускПродукции.Стоимость 		КАК Стоимость,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ КАК Цена,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоЕдОтчетов,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоДоделкаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовЕд,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоДоделкаБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕд
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Подразделение.*,
	|	НоменклатурнаяГруппа.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	КодОперации,
	|
	|	Период,
	|	Регистратор.*,
	|	ПериодДень ,
	|	ПериодНеделя ,
	|	ПериодМесяц ,
	|	ПериодКвартал ,
	|	ПериодГод,
	|
	|	Количество,
	|	КоличествоДоделка,
	|	Стоимость,
	|	Цена,
	|	КоличествоЕдОтчетов,
	|	КоличествоДоделкаЕдОтчетов,
	|	ЦенаЕдОтчетов,
	|	КоличествоБазовЕд,
	|	КоличествоДоделкаБазовЕд,
	|	ЦенаБазовЕд
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	РегистрНакопления.ВыпускПродукции КАК ВыпускПродукции
	|	//СОЕДИНЕНИЯ
	|ГДЕ
	|	ВыпускПродукции.КодОперации НЕ В(&СписокКодовОпераций)
	|	И ВыпускПродукции.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	|
    |{ГДЕ
	|	Период,
	|	Регистратор.*,
	|
	|	Подразделение.* 					КАК Подразделение,
	|	Продукция.* 						КАК Продукция,
	|	ХарактеристикаПродукции.* 			КАК ХарактеристикаПродукции,
	|	СерияПродукции.* 					КАК СерияПродукции,
	|	Спецификация.* 						КАК Спецификация,
	|	ДокументВыпуска.* 					КАК ДокументВыпуска,
	|	НоменклатурнаяГруппа.* 				КАК НоменклатурнаяГруппа,
	|	Заказ.* 							КАК Заказ,
	|	Качество.* 							КАК Качество,
	|	ВариантВыпускаПродукции				КАК ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.* 			КАК ПодразделениеПолучатель,
	|	ЗаказПолучатель.* 					КАК ЗаказПолучатель,
	|	СтатьяЗатратПолучатель.* 			КАК СтатьяЗатратПолучатель,
	|	НоменклатурнаяГруппаПолучатель.*	КАК НоменклатурнаяГруппаПолучатель,
	|	СкладПолучатель.* 					КАК СкладПолучатель,
	|	КодОперации 						КАК КодОперации,
	|
	|	Количество 							КАК Количество,
	|	КоличествоДоделка 					КАК КоличествоДоделка,
	|	Стоимость 							КАК Стоимость,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ 								КАК Цена,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоЕдОтчетов,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоДоделкаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовЕд,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоДоделкаБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕд
	|
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО 
	|	Подразделение.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	КодОперации,
	|
	|	Количество,
	|	КоличествоДоделка,
	|	Стоимость,
	|	Цена,
	|	КоличествоЕдОтчетов,
	|	КоличествоДоделкаЕдОтчетов,
	|	ЦенаЕдОтчетов,
	|	КоличествоБазовЕд,
	|	КоличествоДоделкаБазовЕд,
	|	ЦенаБазовЕд,
	|
	|	Период,
	|	Регистратор.*,
	|	ПериодДень ,
	|	ПериодНеделя ,
	|	ПериодМесяц ,
	|	ПериодКвартал ,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|{ИТОГИ ПО
	|	Подразделение.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	КодОперации,
	|
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодГод,
	|	Период,
	|	Регистратор.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоДоделка),
	|	СУММА(Стоимость),
	|	ВЫБОР
	|		КОГДА СУММА(Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(Стоимость) / СУММА(Количество)
	|	КОНЕЦ КАК Цена,
	|	СУММА(КоличествоЕдОтчетов),
	|	СУММА(КоличествоДоделкаЕдОтчетов),
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоЕдОтчетов) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(Стоимость) / СУММА(КоличествоЕдОтчетов)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	СУММА(КоличествоБазовЕд),
	|	СУММА(КоличествоДоделкаБазовЕд),
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоБазовЕд) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(Стоимость) / СУММА(КоличествоБазовЕд)
	|	КОНЕЦ КАК ЦенаБазовЕд
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО ОБЩИЕ
	|";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.Продукция", "Продукция", "Продукция",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ХарактеристикаПродукции", "ХарактеристикаПродукции", "Характеристика продукции",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ДокументВыпуска", "ДокументВыпуска", "Документ выпуска",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.Заказ", "Заказ", "Заказ",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ЗаказПолучатель", "ЗаказПолучатель", "Заказ - получатель",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.СкладПолучатель", "СкладПолучатель", "Склад - получатель",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение",        	"Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппа", 	"Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Продукция", 				"Продукция");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияПродукции", 			"Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Спецификация",            "Спецификация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументВыпуска",         "Документ выпуска");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказ",                	"Заказ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Качество",                "Качество");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВариантВыпускаПродукции", "Вариант выпуска продукции");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПодразделениеПолучатель", "Подразделение - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗаказПолучатель", 		"Заказ - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяЗатратПолучатель",	"Статья затрат - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппаПолучатель", "Номенклатурная группа - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СкладПолучатель", 		"Склад - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КодОперации", 			"Код операции");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Период",        "Период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодДень",    "По дням");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодНеделя",  "По неделям");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодМесяц",   "По месяцам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодКвартал", "По кварталам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодГод",     "По годам");

	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Регистратор",   "Документ движения (Регистратор)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Периодичность", "Периодичность разворота итогов");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоДоделка", "в т.ч. доделка");

	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель( "Количество",        		"Количество",     Истина, 	"ЧЦ=15; ЧДЦ=3", "ЕдХр", 	"В ед. хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "Цена",         				"Цена",      	  Истина, 	"ЧЦ=15; ЧДЦ=2", "ЕдХр", 	"В ед. хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоДоделка", 		"в т.ч. доделка", Ложь,   	"ЧЦ=15; ЧДЦ=3", "ЕдХр", 	"В ед. хранения");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоБазовЕд",        	"Количество",     Ложь, 	"ЧЦ=15; ЧДЦ=3", "БазЕд", 	"В базовых ед.");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаБазовЕд",         		"Цена",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "БазЕд", 	"В базовых ед.");	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоДоделкаБазовЕд", 	"в т.ч. доделка", Ложь, 	"ЧЦ=15; ЧДЦ=3", "БазЕд", 	"В базовых ед.");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоЕдОтчетов",       "Количество",     Ложь, 	"ЧЦ=15; ЧДЦ=3", "ЕдОтчетов","В ед. отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаЕдОтчетов",         	"Цена",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "ЕдОтчетов","В ед. отчетов");	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоДоделкаЕдОтчетов", "в т.ч. доделка",Ложь,		"ЧЦ=15; ЧДЦ=3", "ЕдОтчетов","В ед. отчетов");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "Стоимость",         "Стоимость",      Истина, "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Продукция");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Продукция");
	УниверсальныйОтчет.ДобавитьОтбор("Заказ");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПолей("ПодразделениеВладелец", "Подразделение");
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиУпр()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиБух(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация 					КАК Организация,
	|	Подразделение 					КАК Подразделение,
	|	НоменклатурнаяГруппа 			КАК НоменклатурнаяГруппа,
	|	Продукция						КАК Продукция,
	|	ХарактеристикаПродукции 		КАК ХарактеристикаПродукции,
	|	СерияПродукции 					КАК СерияПродукции,
	|	Спецификация 					КАК Спецификация,
	|	ДокументВыпуска 				КАК ДокументВыпуска,
	|	Заказ 							КАК Заказ,
	|	Качество 						КАК Качество,
	|	ВариантВыпускаПродукции			КАК ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель 		КАК ПодразделениеПолучатель,
	|	ЗаказПолучатель 				КАК ЗаказПолучатель,
	|	СтатьяЗатратПолучатель 			КАК СтатьяЗатратПолучатель,
	|	НоменклатурнаяГруппаПолучатель	КАК НоменклатурнаяГруппаПолучатель,
	|	СкладПолучатель 				КАК СкладПолучатель,
	|	СчетУчетаНЗП                    КАК СчетУчетаНЗП,
	|	НалоговоеНазначение             КАК НалоговоеНазначение,
	|	КодОперации 					КАК КодОперации,
	|
	|	СчетДт 		КАК СчетДт,
	|	СубконтоДт1 КАК СубконтоДт1,
	|	СубконтоДт2 КАК СубконтоДт2,
	|	СубконтоДт3 КАК СубконтоДт3,
	|	НалоговоеНазначениеПолучатель   КАК НалоговоеНазначениеПолучатель,
	|
	|	Период,
	|	Регистратор,
	|
	|	ПРЕДСТАВЛЕНИЕ(Организация),
	|	ПРЕДСТАВЛЕНИЕ(Подразделение),
	|	ПРЕДСТАВЛЕНИЕ(НоменклатурнаяГруппа),
	|	ПРЕДСТАВЛЕНИЕ(Продукция),
	|	ПРЕДСТАВЛЕНИЕ(ХарактеристикаПродукции),
	|	ПРЕДСТАВЛЕНИЕ(СерияПродукции),
	|	ПРЕДСТАВЛЕНИЕ(Спецификация),
	|	ПРЕДСТАВЛЕНИЕ(ДокументВыпуска),
	|	ПРЕДСТАВЛЕНИЕ(Заказ),
	|	ПРЕДСТАВЛЕНИЕ(Качество),
	|	ПРЕДСТАВЛЕНИЕ(ВариантВыпускаПродукции),
	|
	|	ПРЕДСТАВЛЕНИЕ(ПодразделениеПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(ЗаказПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СтатьяЗатратПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(НоменклатурнаяГруппаПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СкладПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СчетУчетаНЗП),
	|	ПРЕДСТАВЛЕНИЕ(НалоговоеНазначение),
	|	ПРЕДСТАВЛЕНИЕ(КодОперации),
	|
	|	ПРЕДСТАВЛЕНИЕ(СчетДт),
	|	ПРЕДСТАВЛЕНИЕ(СубконтоДт1),
	|	ПРЕДСТАВЛЕНИЕ(СубконтоДт2),
	|	ПРЕДСТАВЛЕНИЕ(СубконтоДт3),
	|	ПРЕДСТАВЛЕНИЕ(НалоговоеНазначениеПолучатель),
	|
	|	Период,
	|	ПРЕДСТАВЛЕНИЕ(Регистратор),
	|
	|	НачалоПериода(Период, День)    КАК ПериодДень ,
	|	НачалоПериода(Период, Неделя)  КАК ПериодНеделя ,
	|	НачалоПериода(Период, Месяц)   КАК ПериодМесяц ,
	|	НачалоПериода(Период, Квартал) КАК ПериодКвартал ,
	|	НачалоПериода(Период, Год) 	   КАК ПериодГод,
	
	|	ВыпускПродукции.Количество 		КАК Количество,
	|	ВыпускПродукции.КоличествоДоделка КАК КоличествоДоделка,
	|	ВыпускПродукции.Стоимость 		КАК Стоимость,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ КАК Цена,
	|	ВыпускПродукции.СтоимостьНУ 		КАК СтоимостьНУ,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.СтоимостьНУ / ВыпускПродукции.Количество
	|	КОНЕЦ КАК ЦенаНУ,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоЕдОтчетов,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоДоделкаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.СтоимостьНУ / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетовНУ,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовЕд,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоДоделкаБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.СтоимостьНУ / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕдНУ
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Организация.*,
	|	Подразделение.*,
	|	НоменклатурнаяГруппа.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	СчетУчетаНЗП,
	|   НалоговоеНазначение,
	|	КодОперации,
	|
	|	СчетДт.*,
	|	СубконтоДт1.*,
	|	СубконтоДт2.*,
	|	СубконтоДт3.*,
	|   НалоговоеНазначениеПолучатель,
	|
	|	Период,
	|	Регистратор.*,
	|	ПериодДень ,
	|	ПериодНеделя ,
	|	ПериодМесяц ,
	|	ПериодКвартал ,
	|	ПериодГод,
	|
	|	Количество,
	|	КоличествоДоделка,
	|	Стоимость,
	|	Цена,
	|	СтоимостьНУ,
	|	ЦенаНУ,
    |	КоличествоЕдОтчетов,
	|	КоличествоДоделкаЕдОтчетов,
	|	ЦенаЕдОтчетов,
	|	ЦенаЕдОтчетовНУ,
    |	КоличествоБазовЕд,
	|	КоличествоДоделкаБазовЕд,
	|	ЦенаБазовЕд,
	|	ЦенаБазовЕдНУ
    |	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииБухгалтерскийУчет КАК ВыпускПродукции
	|	//СОЕДИНЕНИЯ
	|ГДЕ
	|	ВыпускПродукции.КодОперации НЕ В(&СписокКодовОпераций)
	|	И ВыпускПродукции.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	|
    |{ГДЕ
	|	Период,
	|	Регистратор.*,
	|
	|	Организация.* 						КАК Организация,
	|	Подразделение.* 					КАК Подразделение,
	|	Продукция.* 						КАК Продукция,
	|	ХарактеристикаПродукции.* 			КАК ХарактеристикаПродукции,
	|	СерияПродукции.* 					КАК СерияПродукции,
	|	Спецификация.* 						КАК Спецификация,
	|	ДокументВыпуска.* 					КАК ДокументВыпуска,
	|	НоменклатурнаяГруппа.* 				КАК НоменклатурнаяГруппа,
	|	Заказ.* 							КАК Заказ,
	|	Качество.* 							КАК Качество,
	|	ВариантВыпускаПродукции				КАК ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.* 			КАК ПодразделениеПолучатель,
	|	ЗаказПолучатель.* 					КАК ЗаказПолучатель,
	|	СтатьяЗатратПолучатель.* 			КАК СтатьяЗатратПолучатель,
	|	НоменклатурнаяГруппаПолучатель.*	КАК НоменклатурнаяГруппаПолучатель,
	|	СкладПолучатель.* 					КАК СкладПолучатель,
	|	СчетУчетаНЗП                        КАК СчетУчетаНЗП,
	|	НалоговоеНазначение                 КАК НалоговоеНазначение,
	|	КодОперации 	                    КАК КодОперации,
	|
	|	СчетДт.* 							КАК СчетДт,
	|	СубконтоДт1.* 						КАК СубконтоДт1,
	|	СубконтоДт2.* 						КАК СубконтоДт2,
	|	СубконтоДт3.* 						КАК СубконтоДт3,
	|	НалоговоеНазначениеПолучатель       КАК НалоговоеНазначениеПолучатель,
	|
	|	Количество 							КАК Количество,
	|	КоличествоДоделка 					КАК КоличествоДоделка,
	|	Стоимость 							КАК Стоимость,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ 								КАК Цена,
	|	СтоимостьНУ 		КАК СтоимостьНУ,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.СтоимостьНУ / ВыпускПродукции.Количество
	|	КОНЕЦ КАК ЦенаНУ,
  	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоЕдОтчетов,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоДоделкаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.СтоимостьНУ / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетовНУ,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовЕд,
	|	ВыпускПродукции.КоличествоДоделка * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоДоделкаБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.СтоимостьНУ / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕдНУ
    |	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО 
	|	Организация.*,
	|	Подразделение.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	СчетУчетаНЗП,
	|	НалоговоеНазначение,
	|	КодОперации,
	|
	|	СчетДт.*,
	|	СубконтоДт1.*,
	|	СубконтоДт2.*,
	|	СубконтоДт3.*,
	|	НалоговоеНазначениеПолучатель,
	|
	|	Количество,
	|	КоличествоДоделка,
	|	Стоимость,
	|	Цена,
	|	СтоимостьНУ,
	|	ЦенаНУ,
	|	КоличествоЕдОтчетов,
	|	КоличествоДоделкаЕдОтчетов,
	|	ЦенаЕдОтчетов,
	|	ЦенаЕдОтчетовНУ,
    |	КоличествоБазовЕд,
	|	КоличествоДоделкаБазовЕд,
	|	ЦенаБазовЕд,
	|	ЦенаБазовЕдНУ,
	|	Период,
	|	Регистратор.*,
	|	ПериодНеделя ,
	|	ПериодМесяц ,
	|	ПериодКвартал ,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|{ИТОГИ ПО
	|	Организация.*,
	|	Подразделение.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	СчетУчетаНЗП,
	|	НалоговоеНазначение,
	|	КодОперации,
	|
	|	СчетДт.*,
	|	СубконтоДт1.*,
	|	СубконтоДт2.*,
	|	СубконтоДт3.*,
	|	НалоговоеНазначениеПолучатель,
	|
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодГод,
	|	Период,
	|	Регистратор.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоДоделка),
	|	СУММА(Стоимость),
	|	ВЫБОР
	|		КОГДА СУММА(Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(Стоимость) / СУММА(Количество)
	|	КОНЕЦ КАК Цена,
	|	СУММА(СтоимостьНУ),
	|	ВЫБОР
	|		КОГДА СУММА(Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(СтоимостьНУ) / СУММА(Количество)
	|	КОНЕЦ КАК ЦенаНУ,
	|	СУММА(КоличествоЕдОтчетов),
	|	СУММА(КоличествоДоделкаЕдОтчетов),
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоЕдОтчетов) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(Стоимость) / СУММА(КоличествоЕдОтчетов)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоЕдОтчетов) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(СтоимостьНУ) / СУММА(КоличествоЕдОтчетов)
	|	КОНЕЦ КАК ЦенаЕдОтчетовНУ,
    |	СУММА(КоличествоБазовЕд),
	|	СУММА(КоличествоДоделкаБазовЕд),
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоБазовЕд) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(Стоимость) / СУММА(КоличествоБазовЕд)
	|	КОНЕЦ КАК ЦенаБазовЕд,
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоБазовЕд) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(СтоимостьНУ) / СУММА(КоличествоБазовЕд)
	|	КОНЕЦ КАК ЦенаБазовЕдНУ
    |	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО ОБЩИЕ
	|";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( 
			"ВыпускПродукции.Организация" , "Организация", "Организация",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);

		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.Продукция", "Продукция", "Продукция",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ХарактеристикаПродукции", "ХарактеристикаПродукции", "Характеристика продукции",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ДокументВыпуска", "ДокументВыпуска", "Документ выпуска",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.Заказ", "Заказ", "Заказ",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ЗаказПолучатель", "ЗаказПолучатель", "Заказ - получатель",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.СкладПолучатель", "СкладПолучатель", "Склад - получатель",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация",   			"Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение",        	"Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппа", 	"Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Продукция", 				"Продукция");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияПродукции", 			"Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Спецификация",            "Спецификация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументВыпуска",         "Документ выпуска");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказ",                	"Заказ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Качество",                "Качество");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВариантВыпускаПродукции", "Вариант выпуска продукции");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПодразделениеПолучатель", "Подразделение - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗаказПолучатель", 		"Заказ - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяЗатратПолучатель",	"Статья затрат - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппаПолучатель", "Номенклатурная группа - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СкладПолучатель", 		"Склад - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КодОперации", 			"Код операции");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СчетУчетаНЗП", "Счет учета НЗП");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СчетДт",       "Счет дебета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СубконтоДт1",  "Субконто дебета 1");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СубконтоДт2",  "Субконто дебета 2");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СубконтоДт3",  "Субконто дебета 3");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НалоговоеНазначение", "Налоговое назначение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НалоговоеНазначениеПолучатель", "Налоговое назначение - получатель");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Период",        "Период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодДень",    "По дням");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодНеделя",  "По неделям");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодМесяц",   "По месяцам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодКвартал", "По кварталам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодГод",     "По годам");

	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Регистратор",   "Документ движения (Регистратор)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Периодичность", "Периодичность разворота итогов");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоДоделка", "в т.ч. доделка");

	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель( "Количество",        		"Количество",     Истина, 	"ЧЦ=15; ЧДЦ=3", "ЕдХр", 	"В ед. хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "Цена",         				"Цена",      	  Истина, 	"ЧЦ=15; ЧДЦ=2", "ЕдХр", 	"В ед. хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаНУ",         				"Цена налоговый учет",      	  Истина, 	"ЧЦ=15; ЧДЦ=2", "ЕдХр", 	"В ед. хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоДоделка", 		"в т.ч. доделка", Ложь,   	"ЧЦ=15; ЧДЦ=3", "ЕдХр", 	"В ед. хранения");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоБазовЕд",        	"Количество",     Ложь, 	"ЧЦ=15; ЧДЦ=3", "БазЕд", 	"В базовых ед.");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаБазовЕд",         		"Цена",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "БазЕд", 	"В базовых ед.");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаБазовЕдНУ",         		"Цена налоговый учет",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "БазЕд", 	"В базовых ед.");
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоДоделкаБазовЕд", 	"в т.ч. доделка", Ложь, 	"ЧЦ=15; ЧДЦ=3", "БазЕд", 	"В базовых ед.");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоЕдОтчетов",       "Количество",     Ложь, 	"ЧЦ=15; ЧДЦ=3", "ЕдОтчетов","В ед. отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаЕдОтчетов",         	"Цена",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "ЕдОтчетов","В ед. отчетов");	
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаЕдОтчетовНУ",         	"Цена налоговый учет",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "ЕдОтчетов","В ед. отчетов");	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоДоделкаЕдОтчетов", "в т.ч. доделка",Ложь,		"ЧЦ=15; ЧДЦ=3", "ЕдОтчетов","В ед. отчетов");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "Стоимость",         "Стоимость",      Истина, "ЧЦ=15; ЧДЦ=2");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНУ",         "Стоимость налоговый учет",      Истина, "ЧЦ=15; ЧДЦ=2");

	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Продукция");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Продукция");
	УниверсальныйОтчет.ДобавитьОтбор("Заказ");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПолей("Организация", "Подразделение");
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиБух()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиМСФО(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организация 					КАК Организация,
	|	Подразделение 					КАК Подразделение,
	|	НоменклатурнаяГруппа 			КАК НоменклатурнаяГруппа,
	|	Продукция						КАК Продукция,
	|	ХарактеристикаПродукции 		КАК ХарактеристикаПродукции,
	|	СерияПродукции 					КАК СерияПродукции,
	|	Спецификация 					КАК Спецификация,
	|	ДокументВыпуска 				КАК ДокументВыпуска,
	|	Заказ 							КАК Заказ,
	|	Качество 						КАК Качество,
	|	ВариантВыпускаПродукции			КАК ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель 		КАК ПодразделениеПолучатель,
	|	ЗаказПолучатель 				КАК ЗаказПолучатель,
	|	СтатьяЗатратПолучатель 			КАК СтатьяЗатратПолучатель,
	|	НоменклатурнаяГруппаПолучатель	КАК НоменклатурнаяГруппаПолучатель,
	|	СкладПолучатель 				КАК СкладПолучатель,
	|	СчетУчетаНЗП                    КАК СчетУчетаНЗП,
	|	КодОперации                     КАК КодОперации,
	|
	|	СчетДт 		КАК СчетДт,
	|	СубконтоДт1 КАК СубконтоДт1,
	|	СубконтоДт2 КАК СубконтоДт2,
	|	СубконтоДт3 КАК СубконтоДт3,
	|
	|	Период,
	|	Регистратор,
	|
	|	ПРЕДСТАВЛЕНИЕ(Организация),
	|	ПРЕДСТАВЛЕНИЕ(Подразделение),
	|	ПРЕДСТАВЛЕНИЕ(НоменклатурнаяГруппа),
	|	ПРЕДСТАВЛЕНИЕ(Продукция),
	|	ПРЕДСТАВЛЕНИЕ(ХарактеристикаПродукции),
	|	ПРЕДСТАВЛЕНИЕ(СерияПродукции),
	|	ПРЕДСТАВЛЕНИЕ(Спецификация),
	|	ПРЕДСТАВЛЕНИЕ(ДокументВыпуска),
	|	ПРЕДСТАВЛЕНИЕ(Заказ),
	|	ПРЕДСТАВЛЕНИЕ(Качество),
	|	ПРЕДСТАВЛЕНИЕ(ВариантВыпускаПродукции),
	|
	|	ПРЕДСТАВЛЕНИЕ(ПодразделениеПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(ЗаказПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СтатьяЗатратПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(НоменклатурнаяГруппаПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СкладПолучатель),
	|	ПРЕДСТАВЛЕНИЕ(СчетУчетаНЗП),
	|	ПРЕДСТАВЛЕНИЕ(КодОперации),
	|
	|	ПРЕДСТАВЛЕНИЕ(СчетДт),
	|	ПРЕДСТАВЛЕНИЕ(СубконтоДт1),
	|	ПРЕДСТАВЛЕНИЕ(СубконтоДт2),
	|	ПРЕДСТАВЛЕНИЕ(СубконтоДт3),
	|
	|	Период,
	|	ПРЕДСТАВЛЕНИЕ(Регистратор),
	|
	|	НачалоПериода(Период, День)    КАК ПериодДень ,
	|	НачалоПериода(Период, Неделя)  КАК ПериодНеделя ,
	|	НачалоПериода(Период, Месяц)   КАК ПериодМесяц ,
	|	НачалоПериода(Период, Квартал) КАК ПериодКвартал ,
	|	НачалоПериода(Период, Год) 	   КАК ПериодГод,
	
	|	ВыпускПродукции.Количество 		КАК Количество,
	|	ВыпускПродукции.Стоимость 		КАК Стоимость,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ КАК Цена,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕд
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	Организация.*,
	|	Подразделение.*,
	|	НоменклатурнаяГруппа.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	СчетУчетаНЗП,
	|	КодОперации,
	|
	|	СчетДт.*,
	|	СубконтоДт1.*,
	|	СубконтоДт2.*,
	|	СубконтоДт3.*,
	|
	|	Период,
	|	Регистратор.*,
	|	ПериодДень ,
	|	ПериодНеделя ,
	|	ПериодМесяц ,
	|	ПериодКвартал ,
	|	ПериодГод,
	|
	|	Количество,
	|	Стоимость,
	|	Цена,
	|	КоличествоЕдОтчетов,
	|	ЦенаЕдОтчетов,
	|	КоличествоБазовЕд,
	|	ЦенаБазовЕд
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	РегистрНакопления.ВыпускПродукцииМеждународныйУчет КАК ВыпускПродукции
	|	//СОЕДИНЕНИЯ
	|ГДЕ
	|	ВыпускПродукции.КодОперации НЕ В(&СписокКодовОпераций)
	|	И ВыпускПродукции.Период МЕЖДУ &ДатаНачала И &ДатаКонца
	|
    |{ГДЕ
	|	Период,
	|	Регистратор.*,
	|
	|	Организация.* 						КАК Организация,
	|	Подразделение.* 					КАК Подразделение,
	|	Продукция.* 						КАК Продукция,
	|	ХарактеристикаПродукции.* 			КАК ХарактеристикаПродукции,
	|	СерияПродукции.* 					КАК СерияПродукции,
	|	Спецификация.* 						КАК Спецификация,
	|	ДокументВыпуска.* 					КАК ДокументВыпуска,
	|	НоменклатурнаяГруппа.* 				КАК НоменклатурнаяГруппа,
	|	Заказ.* 							КАК Заказ,
	|	Качество.* 							КАК Качество,
	|	ВариантВыпускаПродукции				КАК ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.* 			КАК ПодразделениеПолучатель,
	|	ЗаказПолучатель.* 					КАК ЗаказПолучатель,
	|	СтатьяЗатратПолучатель.* 			КАК СтатьяЗатратПолучатель,
	|	НоменклатурнаяГруппаПолучатель.*	КАК НоменклатурнаяГруппаПолучатель,
	|	СкладПолучатель.* 					КАК СкладПолучатель,
	|	СчетУчетаНЗП                        КАК СчетУчетаНЗП,
	|	КодОперации      	                КАК КодОперации,
	|
	|	СчетДт.* 							КАК СчетДт,
	|	СубконтоДт1.* 						КАК СубконтоДт1,
	|	СубконтоДт2.* 						КАК СубконтоДт2,
	|	СубконтоДт3.* 						КАК СубконтоДт3,
	|
	|	ВыпускПродукции.Количество 			КАК Количество,
	|	ВыпускПродукции.Стоимость 			КАК Стоимость,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ 								КАК Цена,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК КоличествоЕдОтчетов,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент / ВЫБОР
	|		КОГДА ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент = 0
	|			ТОГДА 1
	|		ИНАЧЕ ЕСТЬNULL(ВыпускПродукции.Продукция.ЕдиницаДляОтчетов.Коэффициент, 1)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	ВыпускПродукции.Количество * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовЕд,
	|	ВЫБОР
	|	КОГДА ВыпускПродукции.Количество = 0
	|		ТОГДА 0
	|	ИНАЧЕ ВыпускПродукции.Стоимость / ВыпускПродукции.Количество
	|	КОНЕЦ * ВыпускПродукции.Продукция.ЕдиницаХраненияОстатков.Коэффициент КАК ЦенаБазовЕд
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО 
	|	Организация.*,
	|	Подразделение.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	СчетУчетаНЗП,
	|	КодОперации,
	|
	|	СчетДт.*,
	|	СубконтоДт1.*,
	|	СубконтоДт2.*,
	|	СубконтоДт3.*,
	|
	|	Количество,
	|	Стоимость,
	|	Цена,
	|	КоличествоЕдОтчетов,
	|	ЦенаЕдОтчетов,
	|	КоличествоБазовЕд,
	|	ЦенаБазовЕд,	
	|
	|	Период,
	|	Регистратор.*,
	|	ПериодНеделя ,
	|	ПериодМесяц ,
	|	ПериодКвартал ,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|{ИТОГИ ПО
	|	Организация.*,
	|	Подразделение.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	ДокументВыпуска.*,
	|	НоменклатурнаяГруппа.*,
	|	Заказ.*,
	|	Качество.*,
	|	ВариантВыпускаПродукции,
	|
	|	ПодразделениеПолучатель.*,
	|	ЗаказПолучатель.*,
	|	СтатьяЗатратПолучатель.*,
	|	НоменклатурнаяГруппаПолучатель.*,
	|	СкладПолучатель.*,
	|	СчетУчетаНЗП,
	|	КодОперации,
	|
	|	СчетДт.*,
	|	СубконтоДт1.*,
	|	СубконтоДт2.*,
	|	СубконтоДт3.*,
	|
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодГод,
	|	Период,
	|	Регистратор.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(Стоимость),
	|	ВЫБОР
	|		КОГДА СУММА(Количество) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(Стоимость) / СУММА(Количество)
	|	КОНЕЦ КАК Цена,
	|	СУММА(КоличествоЕдОтчетов),
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоЕдОтчетов) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(Стоимость) / СУММА(КоличествоЕдОтчетов)
	|	КОНЕЦ КАК ЦенаЕдОтчетов,
	|	СУММА(КоличествоБазовЕд),
	|	ВЫБОР
	|	КОГДА СУММА(КоличествоБазовЕд) = 0
	|		ТОГДА 0
	|	ИНАЧЕ СУММА(Стоимость) / СУММА(КоличествоБазовЕд)
	|	КОНЕЦ КАК ЦенаБазовЕд
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО ОБЩИЕ
	|";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.Продукция", "Продукция", "Продукция",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ХарактеристикаПродукции", "ХарактеристикаПродукции", "Характеристика продукции",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ДокументВыпуска", "ДокументВыпуска", "Документ выпуска",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.Заказ", "Заказ", "Заказ",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.ЗаказПолучатель", "ЗаказПолучатель", "Заказ - получатель",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Документы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(
			"ВыпускПродукции.СкладПолучатель", "СкладПолучатель", "Склад - получатель",
			ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация",   			"Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение",        	"Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппа", 	"Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Продукция", 				"Продукция");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияПродукции", 			"Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Спецификация",            "Спецификация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументВыпуска",         "Документ выпуска");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказ",                	"Заказ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Качество",                "Качество");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ВариантВыпускаПродукции", "Вариант выпуска продукции");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПодразделениеПолучатель", "Подразделение - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗаказПолучатель", 		"Заказ - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяЗатратПолучатель",	"Статья затрат - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппаПолучатель", "Номенклатурная группа - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СкладПолучатель", 		"Склад - получатель");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КодОперации", 			"Код операции");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СчетУчетаНЗП", "Счет учета НЗП");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СчетДт",       "Счет дебета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СубконтоДт1",  "Субконто дебета 1");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СубконтоДт2",  "Субконто дебета 2");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СубконтоДт3",  "Субконто дебета 3");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Период",        "Период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодДень",    "По дням");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодНеделя",  "По неделям");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодМесяц",   "По месяцам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодКвартал", "По кварталам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодГод",     "По годам");

	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Регистратор",   "Документ движения (Регистратор)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Периодичность", "Периодичность разворота итогов");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель( "Количество",        		"Количество",     Истина, 	"ЧЦ=15; ЧДЦ=3", "ЕдХр", 	"В ед. хранения");
	УниверсальныйОтчет.ДобавитьПоказатель( "Цена",         				"Цена",      	  Истина, 	"ЧЦ=15; ЧДЦ=2", "ЕдХр", 	"В ед. хранения");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоБазовЕд",        	"Количество",     Ложь, 	"ЧЦ=15; ЧДЦ=3", "БазЕд", 	"В базовых ед.");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаБазовЕд",         		"Цена",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "БазЕд", 	"В базовых ед.");	
	
	УниверсальныйОтчет.ДобавитьПоказатель( "КоличествоЕдОтчетов",       "Количество",     Ложь, 	"ЧЦ=15; ЧДЦ=3", "ЕдОтчетов","В ед. отчетов");
	УниверсальныйОтчет.ДобавитьПоказатель( "ЦенаЕдОтчетов",         	"Цена",      	  Ложь, 	"ЧЦ=15; ЧДЦ=2", "ЕдОтчетов","В ед. отчетов");	
	
	УниверсальныйОтчет.ДобавитьПоказатель( "Стоимость",         "Стоимость",      Истина, "ЧЦ=15; ЧДЦ=2");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Продукция");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Продукция");
	УниверсальныйОтчет.ДобавитьОтбор("Заказ");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПолей("Организация", "Подразделение");
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройкиМСФО()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	
	// Содержит значение используемого режима ввода периода.
	// Тип: Число.
	// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
	// Значение по умолчанию: 0
	// Пример:
	// УниверсальныйОтчет.мРежимВводаПериода = 0;
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	Если      ВидУчета = 1 Тогда // Бух.
		УстановитьНачальныеНастройкиБух(ДополнительныеПараметры);
	ИначеЕсли ВидУчета = 3 Тогда // МСФО
		УстановитьНачальныеНастройкиМСФО(ДополнительныеПараметры);
	Иначе // Упр
		УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	СписокКодовОпераций = Новый СписокЗначений;
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч);
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс);
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗП);
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.СписаниеНЗПФикс);
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.ОприходованиеНЗП);	
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПРасч);
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкаНЗПФикс);
	СписокКодовОпераций.Добавить(Перечисления.КодыОперацийВыпускПродукции.КорректировкиНУ);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СписокКодовОпераций", СписокКодовОпераций);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	ТекстСправкиФормы = "";
	
	Если глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") Тогда
		НачалоИспользования = Формат(глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат"), "ДФ=dd.MM.yyyy");
		
		ТекстСправкиФормы = "<P>С " + НачалоИспользования + " установлено использование расширенной аналитики учета затрат."
					+ "<BR><b>Использование отчета для расширенной аналитики не поддерживается</b>."
					+ "<BR>Можно воспользоваться отчетом ""Выпуск продукции и услуг"".<P>";
	КонецЕсли; 
	
	Возврат ТекстСправкиФормы;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
