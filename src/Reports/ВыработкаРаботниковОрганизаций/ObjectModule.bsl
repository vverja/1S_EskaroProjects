////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки          Экспорт;

#Если Клиент ИЛИ ВнешнееСоединение Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Формирует отчет в табличный документ
//
// Параметры:
//  Результат         - табличный документ куда будет сформирован отчет
//  ДанныеРасшифровки - данные расшифровки отчета схемы компоновки данных
//  ВыводВФормуОтчета - признак вывода отчета в форму  
//
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	Возврат ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	
КонецФункции //СформироватьОтчет()
	
// В процедуре можно доработать компоновщик перед выводом в отчет
//
// Параметры:
//  Нет.
//
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	ТЗ = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	     |	ОсновныеНачисленияОрганизацийПоказатели.Ссылка КАК ВидРасчета,
	     |	ОсновныеНачисленияОрганизацийПоказатели.НомерСтроки
	     |ИЗ
	     |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК ОсновныеНачисленияОрганизацийПоказатели
	     |ГДЕ
	     |	ОсновныеНачисленияОрганизацийПоказатели.Показатель = ЗНАЧЕНИЕ(Справочник.ПоказателиСхемМотивации.СдельнаяВыработка)
	     |	И (НЕ ОсновныеНачисленияОрганизацийПоказатели.Ссылка.ПометкаУдаления)
	     |
	     |ОБЪЕДИНИТЬ
	     |
	     |ВЫБРАТЬ РАЗЛИЧНЫЕ
	     |	ОсновныеНачисленияОрганизаций.Ссылка,
	     |	NULL
	     |ИЗ
	     |	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	     |ГДЕ
	     |	ОсновныеНачисленияОрганизаций.Ссылка.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.СдельныйЗаработок)
	     |	И (НЕ ОсновныеНачисленияОрганизаций.ПометкаУдаления)
	     |";
		 
	Запрос = Новый Запрос(ТЗ);
	Выборка = Запрос.Выполнить().Выбрать();
	
	СписокВидовРасчета = Новый СписокЗначений;
	
	Пока Выборка.Следующий() Цикл
		Если "ИсходныеДанные.Показатель"+Выборка.НомерСтроки = СокрЛП(Выборка.ВидРасчета.ФормулаРасчета) тогда
			СписокВидовРасчета.Добавить(Выборка.ВидРасчета);
		ИначеЕсли Выборка.ВидРасчета.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок тогда
			СписокВидовРасчета.Добавить(Выборка.ВидРасчета);
		КонецЕсли;
	КонецЦикла;
	
	ТиповыеОтчеты.УстановитьПараметр(КомпоновщикНастроек, "ВидыРасчета", СписокВидовРасчета);

	
КонецПроцедуры //ДоработатьКомпоновщикПередВыводом()

#КонецЕсли

#Если Клиент Тогда

// Настройка отчета
//
// Параметры:
//  Отбор                              - отбор компоновки данных
//  КомпоновщикНастроекОсновногоОтчета - компоновщик настроек
//
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры //Настроить()

// Сохраняет настройки отчета
//
// Параметры:
//  Нет.
//
Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры //СохранитьНастройку()

// Заполняет параметры отчета по элементу справочника из переменной "СохраненнаяНастройка".
//
// Параметры:
//  Нет.
//
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры //ПрименитьНастройку()

// Инициализация отчета
//
// Параметры:
//  Нет.
//
Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.ИнициализацияТиповогоОтчета(ЭтотОбъект);
	
КонецПроцедуры //ИнициализацияОтчета()

Расшифровки = Новый СписокЗначений;

НастройкаПериода = Новый НастройкаПериода;

#КонецЕсли