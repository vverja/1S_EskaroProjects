#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Функция заменяет комментарии в тексте запроса в зависимости от отражения в учете.
//
// Параметры
//  ИсходныхТекстЗапроса – Строка – Текст запроса.
//  СтруктураШапкиДокумента – Структура - Реквизиты документа "Расчет себестоимости выпуска".
//
// Возвращаемое значение:
//   Строка – Текст запроса, в котором заменены комментарии.
//
Функция ЗаменитьКомментарииВТекстеЗапроса(ИсходныйТекстЗапроса)
	
	Если ВидУчета = 2 Тогда
		ВидУчета = 1;
	КонецЕсли; 
	
	// Управленческий учет
	Если ВидУчета = 0 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляУпрУчета", "");
		
	// Бухгалтерский учет	
	ИначеЕсли ВидУчета = 1 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "БухгалтерскийУчет");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляБухУчета", "");
		
	// Налоговый учет	
	ИначеЕсли ВидУчета = 2 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "НалоговыйУчет");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляНалУчета", "");
		
	// Международный учет	
	ИначеЕсли ВидУчета = 3 Тогда
		ТекстЗапроса = СтрЗаменить(ИсходныйТекстЗапроса, "%СуффиксУчета%", "МеждународныйУчет");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "//ДляРеглУчета", "");
		
	КонецЕсли;

	Возврат ТекстЗапроса;

КонецФункции // ЗаменитьКомментарииВТекстеЗапроса()

// Функция формирует текст запроса.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция СформироватьТекстЗапроса()
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	//ДляРеглУчета ЗатратыНаВыпуск.Организация КАК Организация,
	|	//ДляРеглУчета ЗатратыНаВыпуск.СчетУчета КАК СчетУчета,
    |	//ДляБухУчета  ЗатратыНаВыпуск.НалоговоеНазначениеПоФакту КАК НалоговоеНазначениеПоФакту, 
	|	ЗатратыНаВыпуск.ПодразделениеНЗП КАК ПодразделениеНЗП,
	|
	|	ЗатратыНаВыпуск.Подразделение КАК Подразделение,
	|	ЗатратыНаВыпуск.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	|	ЗатратыНаВыпуск.Продукция КАК Продукция,
	|	ЗатратыНаВыпуск.ХарактеристикаПродукции КАК ХарактеристикаПродукции,
	|	ЗатратыНаВыпуск.СерияПродукции КАК СерияПродукции,
	|	ЗатратыНаВыпуск.Спецификация КАК Спецификация,
	|	ЗатратыНаВыпуск.Заказ КАК Заказ,
	|	ЗатратыНаВыпуск.ДокументВыпуска КАК ДокументВыпуска,
	|	ЗатратыНаВыпуск.СтатьяЗатрат КАК СтатьяЗатрат,
	|	ЗатратыНаВыпуск.Затрата КАК Затрата,
	|	ЗатратыНаВыпуск.Затрата.БазоваяЕдиницаИзмерения КАК ЗатратаБазоваяЕдиницаИзмерения,
	|	ЗатратыНаВыпуск.ХарактеристикаЗатраты КАК ХарактеристикаЗатраты,
	|	ЗатратыНаВыпуск.СерияЗатраты КАК СерияЗатраты,
	|	ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП КАК НоменклатурнаяГруппаНЗП,
	|	ЗатратыНаВыпуск.ЗаказНЗП КАК ЗаказНЗП,
	|	ЗатратыНаВыпуск.ЗатратыВстречногоВыпуска КАК ЗатратыВстречногоВыпуска,
	|	ЗатратыНаВыпуск.КосвенныеЗатраты КАК КосвенныеЗатраты,
	|	ЗатратыНаВыпуск.Регистратор,
	|
	|	//ДляРеглУчета ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Организация),
	|	//ДляРеглУчета ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.СчетУчета),
    |	//ДляБухУчета ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.НалоговоеНазначениеПоФакту), 
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.ПодразделениеНЗП),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Подразделение),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.НоменклатурнаяГруппа),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Продукция),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.ХарактеристикаПродукции),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.СерияПродукции),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Спецификация),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Заказ),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.ДокументВыпуска),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.СтатьяЗатрат),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Затрата),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Затрата.БазоваяЕдиницаИзмерения),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.ХарактеристикаЗатраты),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.СерияЗатраты),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.ЗаказНЗП),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.ЗатратыВстречногоВыпуска),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.КосвенныеЗатраты),
	|	ПРЕДСТАВЛЕНИЕ(ЗатратыНаВыпуск.Регистратор),
	|	ЗатратыНаВыпуск.Период,
	|	НАЧАЛОПЕРИОДА(ЗатратыНаВыпуск.Период, ДЕНЬ) КАК ПериодДень,
	|	НАЧАЛОПЕРИОДА(ЗатратыНаВыпуск.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	|	НАЧАЛОПЕРИОДА(ЗатратыНаВыпуск.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	НАЧАЛОПЕРИОДА(ЗатратыНаВыпуск.Период, КВАРТАЛ) КАК ПериодКвартал,
	|	НАЧАЛОПЕРИОДА(ЗатратыНаВыпуск.Период, ГОД) КАК ПериодГод,
	|	ЗатратыНаВыпуск.Количество КАК Количество,
	|	ЗатратыНаВыпуск.Количество * ЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетов,
	|	ЗатратыНаВыпуск.Количество * ЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕд,
	|	//ДляБухУчета ЗатратыНаВыпуск.СуммаНУ КАК СтоимостьНУ,
	|	//ДляБухУчета ЗатратыНаВыпуск.НДСВходящий КАК НДСВходящий,
	|	//ДляБухУчета ЗатратыНаВыпуск.НДСКредит КАК НДСКредит,
	|	ЗатратыНаВыпуск.Сумма КАК Стоимость
	|		//ПОЛЯ_СВОЙСТВА
	|		//ПОЛЯ_КАТЕГОРИИ
    |
	|{ВЫБРАТЬ
	|	//ДляРеглУчета Организация.*,
	|	//ДляРеглУчета СчетУчета,
	|	//ДляБухУчета  НалоговоеНазначениеПоФакту.*, 
    |	ПодразделениеНЗП.*,
	|	Подразделение.*,
	|	НоменклатурнаяГруппа.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	Заказ.*,
	|	ДокументВыпуска.*,
	|	СтатьяЗатрат.*,
	|	Затрата.*,
	|	ЗатратаБазоваяЕдиницаИзмерения,
	|	ХарактеристикаЗатраты.*,
	|	СерияЗатраты.*,
	|	НоменклатурнаяГруппаНЗП.*,
	|	ЗаказНЗП.*,
	|	ЗатратыВстречногоВыпуска,
	|	КосвенныеЗатраты,
	|	Количество,
	|	КоличествоЕдиницОтчетов,
	|	КоличествоБазовыхЕд,
	|	Стоимость,
    |	//ДляБухУчета СтоимостьНУ,
	|	//ДляБухУчета НДСВходящий,
    |	//ДляБухУчета НДСКредит,
	|	Период,
	|	Регистратор.*,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
	|ИЗ
	|	РегистрНакопления.ЗатратыНаВыпускПродукции%СуффиксУчета% КАК ЗатратыНаВыпуск
	|	//СОЕДИНЕНИЯ
	|ГДЕ
	|	(НЕ ЗатратыНаВыпуск.КодОперации В (&СписокКодовОпераций))
	|	И ЗатратыНаВыпуск.Период МЕЖДУ &НачДата И &КонДата
	|{ГДЕ
	|	//ДляРеглУчета ЗатратыНаВыпуск.Организация.* КАК Организация,
	|	//ДляРеглУчета ЗатратыНаВыпуск.СчетУчета.* КАК СчетУчета,
    |	//ДляБухУчета ЗатратыНаВыпуск.НалоговоеНазначениеПоФакту.*,
    |	ЗатратыНаВыпуск.ПодразделениеНЗП.*,
	|	ЗатратыНаВыпуск.Период,
	|	ЗатратыНаВыпуск.Регистратор.*,
	|	ЗатратыНаВыпуск.Подразделение.* КАК Подразделение,
	|	ЗатратыНаВыпуск.Продукция.* КАК Продукция,
	|	ЗатратыНаВыпуск.ХарактеристикаПродукции.* КАК ХарактеристикаПродукции,
	|	ЗатратыНаВыпуск.СерияПродукции.* КАК СерияПродукции,
	|	ЗатратыНаВыпуск.Заказ.* КАК Заказ,
	|	ЗатратыНаВыпуск.НоменклатурнаяГруппа.* КАК НоменклатурнаяГруппа,
	|	ЗатратыНаВыпуск.Спецификация.* КАК Спецификация,
	|	ЗатратыНаВыпуск.ДокументВыпуска.* КАК ДокументВыпуска,
	|	ЗатратыНаВыпуск.СтатьяЗатрат.* КАК СтатьяЗатрат,
	|	ЗатратыНаВыпуск.Затрата.* КАК Затрата,
	|	ЗатратыНаВыпуск.ХарактеристикаЗатраты.* КАК ХарактеристикаЗатраты,
	|	ЗатратыНаВыпуск.СерияЗатраты.* КАК СерияЗатраты,
	|	ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП.* КАК НоменклатурнаяГруппаНЗП,
	|	ЗатратыНаВыпуск.ЗаказНЗП.* КАК ЗаказНЗП,
	|	ЗатратыНаВыпуск.ЗатратыВстречногоВыпуска КАК ЗатратыВстречногоВыпуска,
	|	ЗатратыНаВыпуск.КосвенныеЗатраты КАК КосвенныеЗатраты,
	|	ЗатратыНаВыпуск.Количество КАК Количество,
	|	ЗатратыНаВыпуск.Количество * ЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент / ЗатратыНаВыпуск.Затрата.ЕдиницаДляОтчетов.Коэффициент КАК КоличествоЕдиницОтчетов,
	|	ЗатратыНаВыпуск.Количество * ЗатратыНаВыпуск.Затрата.ЕдиницаХраненияОстатков.Коэффициент КАК КоличествоБазовыхЕд,
	|	//ДляБухУчета ЗатратыНаВыпуск.СуммаНУ КАК СтоимостьНУ,
	|	//ДляБухУчета ЗатратыНаВыпуск.НДСВходящий КАК НДСВходящий,
    |	//ДляБухУчета ЗатратыНаВыпуск.НДСКредит КАК НДСКредит, 
	|	ЗатратыНаВыпуск.Сумма КАК Стоимость
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}
	|
	|{УПОРЯДОЧИТЬ ПО
	|	//ДляРеглУчета Организация.*,
	|	//ДляРеглУчета СчетУчета.*,
    |	ЗатратыНаВыпуск.ПодразделениеНЗП.*,
    |	//ДляБухУчета НалоговоеНазначениеПоФакту.*,
	|	Подразделение.*,
	|	НоменклатурнаяГруппа.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	Заказ.*,
	|	ДокументВыпуска.*,
	|	СтатьяЗатрат.*,
	|	Затрата.*,
	|	ЗатратаБазоваяЕдиницаИзмерения,
	|	ХарактеристикаЗатраты.*,
	|	СерияЗатраты.*,
	|	НоменклатурнаяГруппаНЗП.*,
	|	ЗаказНЗП.*,
	|	ЗатратыВстречногоВыпуска,
	|	КосвенныеЗатраты,
	|	Количество,
	|	КоличествоЕдиницОтчетов,
	|	КоличествоБазовыхЕд,
	|	Стоимость,
	|	//ДляБухУчета СтоимостьНУ,
	|	//ДляБухУчета НДСВходящий,
    |	//ДляБухУчета НДСКредит,
	|	Период,
	|	Регистратор,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодГод
	|//ПСЕВДОНИМЫ_СВОЙСТВА
	|//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |
	|{ИТОГИ ПО
	|	//ДляРеглУчета Организация.*,
	|	//ДляРеглУчета СчетУчета.*,
	|	ЗатратыНаВыпуск.ПодразделениеНЗП.*,
    |	//ДляБухУчета НалоговоеНазначениеПоФакту.*,
	|	Подразделение.*,
	|	НоменклатурнаяГруппа.*,
	|	Продукция.*,
	|	ХарактеристикаПродукции.*,
	|	СерияПродукции.*,
	|	Спецификация.*,
	|	Заказ.*,
	|	ЗаказНЗП.*,
	|	НоменклатурнаяГруппаНЗП.*,
	|	СтатьяЗатрат.*,
	|	Затрата.*,
	|	ХарактеристикаЗатраты.*,
	|	СерияЗатраты.*,
	|	Регистратор,
	|	ПериодДень,
	|	ПериодНеделя,
	|	ПериодМесяц,
	|	ПериодКвартал,
	|	ПериодГод
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}
    |
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(КоличествоЕдиницОтчетов),
	|	СУММА(КоличествоБазовыхЕд),
	|	//ДляБухУчета СУММА(СтоимостьНУ),
	|	//ДляБухУчета СУММА(НДСВходящий),
    |	//ДляБухУчета СУММА(НДСКредит),
	|	СУММА(Стоимость)
	|//ИТОГИ_СВОЙСТВА
	|//ИТОГИ_КАТЕГОРИИ
    |
	|ПО
	|	ОБЩИЕ
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции // СформироватьТекстЗапроса()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	ТекстЗапросаСКомментариями = СформироватьТекстЗапроса();
	ТекстЗапроса = ЗаменитьКомментарииВТекстеЗапроса(ТекстЗапросаСКомментариями);
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.НоменклатурнаяГруппа", "НоменклатурнаяГруппа", "Номенклатурная группа", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_НоменклатурныеГруппы);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.НоменклатурнаяГруппаНЗП", "НоменклатурнаяГруппаНЗП", "Номенклатурная группа НЗП", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_НоменклатурныеГруппы);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.Продукция", "Продукция", "Продукция", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.ХарактеристикаПродукции", "ХарактеристикаПродукции",   "Характеристика продукции", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.Затрата", "Затрата", "Затрата", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
        УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.ХарактеристикаЗатраты", "ХарактеристикаЗатраты", "Характеристика затраты", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		
		Если ВидУчета <> 0 Тогда
			УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("ЗатратыНаВыпуск.Организация", "Организация", "Организация", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Организации);
		КонецЕсли;

		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Организация",   			"Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение",        	"Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппа", 	"Номенклатурная группа");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Продукция", 				"Продукция");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаПродукции", "Характеристика продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияПродукции", 			"Серия продукции");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Спецификация",            "Спецификация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Заказ",                	"Заказ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтатьяЗатрат",         	"Статья затрат");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Затрата", 				"Затрата");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗатратаБазоваяЕдиницаИзмерения", "Базовая единица измерения");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаЗатраты", 	"Характеристика затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СерияЗатраты", 			"Серия затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СчетУчета",               "Счет учета");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НоменклатурнаяГруппаНЗП", "Номенклатурная группа НЗП");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПодразделениеНЗП",        "Подразделение НЗП");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НалоговоеНазначениеПоФакту",		"Налоговое назначение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗаказНЗП", 				"Заказ НЗП");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ЗатратыВстречногоВыпуска","Затраты встречного выпуска");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КосвенныеЗатраты", 		"Косвенные затраты");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ДокументВыпуска",         "Документ выпуска");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Период",        "Период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодДень",    "По дням");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодНеделя",  "По неделям");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодМесяц",   "По месяцам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодКвартал", "По кварталам");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ПериодГод",     "По годам");

	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Регистратор",   "Документ движения (Регистратор)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Периодичность", "Периодичность разворота итогов");
	
	Если ВидУчета = 0 Тогда // Управленческий учет
		Валюта = глЗначениеПеременной("ВалютаУправленческогоУчета");
		
	ИначеЕсли ВидУчета = 1 // Бухгалтерский учет 
		ИЛИ ВидУчета = 2 // Налоговый учет
	Тогда
		Валюта = глЗначениеПеременной("ВалютаРегламентированногоУчета");
		
	ИначеЕсли ВидУчета = 3 Тогда // Международный
		Валюта = глЗначениеПеременной("ВалютаМеждународногоУчета");
	КонецЕсли;
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Количество",              "Количество (в ед. хранения)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КоличествоБазовыхЕд",     "Количество (в базовых ед.)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Стоимость",               "Стоимость в " + Валюта);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("СтоимостьНУ", 		"Стоимость (НУ)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСВходящий", 	"НДС входящий");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("НДСКредит", 		"НДС кредит");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	УниверсальныйОтчет.ДобавитьПоказатель("Количество",              "Количество (в ед. хранения)", Ложь,   "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоЕдиницОтчетов", "Количество (в ед. отчетов)",  Ложь,   "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("КоличествоБазовыхЕд",     "Количество (в базовых ед.)",  Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("Стоимость",               "Стоимость в " + Валюта,       Истина, "ЧЦ=15; ЧДЦ=2");
	
	Если ВидУчета = 1 Тогда
		УниверсальныйОтчет.ДобавитьПоказатель("СтоимостьНУ", 		"Стоимость (НУ)", Истина, "ЧЦ=15; ЧДЦ=2", , );
		УниверсальныйОтчет.ДобавитьПоказатель("НДСВходящий", 	"НДС входящий", Истина, "ЧЦ=15; ЧДЦ=2", , );
		УниверсальныйОтчет.ДобавитьПоказатель("НДСКредит", 		"НДС кредит", Истина, "ЧЦ=15; ЧДЦ=2", , );
	КонецЕсли;
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	Если ВидУчета <> 0 Тогда
		УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	КонецЕсли;
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Продукция");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяЗатрат");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	Если ВидУчета <> 0 Тогда
		УниверсальныйОтчет.ДобавитьОтбор("Организация");
	КонецЕсли;
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Продукция");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяЗатрат");
	УниверсальныйОтчет.ДобавитьОтбор("Заказ");
	
	// Установка связи подчиненных и родительских полей
	УниверсальныйОтчет.УстановитьСвязьПолей("Организация", "Подразделение");

	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	КонДата = Дата(УниверсальныйОтчет.ДатаКон);
	КонДата = КонецДня(?(КонДата = Дата('00010101000000'), Дата('39991231235959'), КонДата));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "НачДата", Дата(УниверсальныйОтчет.ДатаНач));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "КонДата", КонДата);
	
	СписокКодовОпераций = Новый Массив;
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ВозвратМатериаловИзПроизводстваРасч);
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ВозвратМатериаловИзПроизводстваФикс);
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.СписаниеНЗП);
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.СписаниеНЗПФикс);
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.ОприходованиеНЗП);
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.КорректировкаНЗПРасч);
	СписокКодовОпераций.Добавить( Перечисления.КодыОперацийЗатратыНаВыпускПродукции.КорректировкаНЗПФикс);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СписокКодовОпераций", СписокКодовОпераций);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	ТекстСправкиФормы = "";
	
	Если глЗначениеПеременной("ИспользоватьРасширеннуюАналитикуУчетаНоменклатурыИЗатрат") Тогда
		НачалоИспользования = Формат(глЗначениеПеременной("ДатаНачалаИспользованияРасширеннойАналитикиУчетаНоменклатурыИЗатрат"), "ДФ=dd.MM.yyyy");
		
		ТекстСправкиФормы = "<P>С " + НачалоИспользования + " установлено использование расширенной аналитики учета затрат."
					+ "<BR><b>Использование отчета для расширенной аналитики не поддерживается</b>."
					+ "<BR>Можно воспользоваться отчетом ""Ведомость по учету затрат"".<P>";
	КонецЕсли; 
	
	Возврат ТекстСправкиФормы;
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
