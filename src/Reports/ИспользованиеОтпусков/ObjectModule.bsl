Перем СохраненнаяНастройка Экспорт;
Перем Расшифровки Экспорт;
Перем ТаблицаПериодов Экспорт;

#Если Клиент ИЛИ ВнешнееСоединение Тогда

Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ТаблицаПериодов", ТаблицаПериодов);
		
	Возврат ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета, ВнешниеНаборыДанных);
	
КонецФункции

Процедура СформироватьВнешнийИсточникДанных(ДатаОтчета)Экспорт
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаОтчета", ДатаОтчета);
	
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	РаботникиОрганизации.Сотрудник,
	|	РаботникиОрганизации.организация	КАК Организация,
	|	&ДатаОтчета КАК ДатаОкончания,
	|	ПоложенныеОтпуска.ВидОтпуска
	|	
	|ПОМЕСТИТЬ
	|	ВТРаботникиОрганизации
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПервых() КАК РаботникиОрганизации
	|ЛЕВОЕ СОЕДИНЕНИЕ 
	|	РегистрСведений.ПоложенныеЕжегодныеОтпускаРаботников.СрезПоследних(&ДатаОтчета) КАК ПоложенныеОтпуска
	|ПО
	|	РаботникиОрганизации.Сотрудник = ПоложенныеОтпуска.Сотрудник
	|	И РаботникиОрганизации.Организация = ПоложенныеОтпуска.Организация
	|	
	|";
	Запрос.Выполнить();
	//Запрос.Текст = "ВЫБРАТЬ * ИЗ ВТРаботникиОрганизации";
	//Запрос.Выполнить().Выгрузить().ВыбратьСтроку();
	
	//Получаем таблицу остатков отпусков
	ПроцедурыУправленияПерсоналом.ПолучитьТаблицуОстатковДнейОтпуска(Запрос.МенеджерВременныхТаблиц);
	
	
		//Запрос по использованным дням отпуска
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ОборотыОтпусков.Сотрудник 	КАК Сотрудник,
	|	ОборотыОтпусков.Организация	КАК Организация,
	|	ОборотыОтпусков.РабочийПериодНачало КАК РабочийПериодНачало,
	|	ОборотыОтпусков.РабочийПериодОкончание КАК РабочийПериодОкончание,
	|	ОборотыОтпусков.ВидОтпуска	КАК ВидОтпуска,
	|	ОборотыОтпусков.ПоложеноДнейОтпуска КАК ПоложеноДнейОтпуска,
	|	ОборотыОтпусков.ИспользованоДнейОтпуска КАК ИспользованоДнейОтпуска,
	|	ОборотыОтпусков.КомпенсированоДнейОтпуска КАК КомпенсированоДнейОтпуска,
	|	ЕстьNULL(ОборотыОтпусков.ПоложеноДнейОтпуска,0) -  ЕстьNULL(ОборотыОтпусков.ИспользованоДнейОтпуска,0) - ЕстьNULL(ОборотыОтпусков.КомпенсированоДнейОтпуска,0) КАК ОстатокОтпуска,
	|	ВЫБОР КОГДА
	|		ОборотыОтпусков.ВидОтпуска.ОтпускНеПереноситсяНаСледующийГод ТОГДА
	|			ВЫБОР КОГДА &ДатаОтчета МЕЖДУ ОборотыОтпусков.РабочийПериодНачало И ОборотыОтпусков.РабочийПериодОкончание ТОГДА
	|				ЕстьNULL(ОборотыОтпусков.ПоложеноДнейОтпуска,0) -  ЕстьNULL(ОборотыОтпусков.ИспользованоДнейОтпуска,0) - ЕстьNULL(ОборотыОтпусков.КомпенсированоДнейОтпуска,0) 
	|			ИНАЧЕ
	|				0
	|			КОНЕЦ
	|		ИНАЧЕ
	|			ЕстьNULL(ОборотыОтпусков.ПоложеноДнейОтпуска,0) -  ЕстьNULL(ОборотыОтпусков.ИспользованоДнейОтпуска,0) - ЕстьNULL(ОборотыОтпусков.КомпенсированоДнейОтпуска,0)
	|	КОНЕЦ КАК ДоступныйОстатокОтпуска
					                     
	|ИЗ
	|(
	|  ВЫБРАТЬ
	|	ВТПоложеноДнейОтпуска.Сотрудник					КАК Сотрудник,
	|	ВТПоложеноДнейОтпуска.Организация				КАК Организация,
	|	ВТПоложеноДнейОтпуска.РабочийПериодНачало 		КАК РабочийПериодНачало,
	|	ВТПоложеноДнейОтпуска.РабочийПериодОкончание	КАК РабочийПериодОкончание,
	|	ВТПоложеноДнейОтпуска.ВидОтпуска				КАК ВидОтпуска,
	|	МАКСИМУМ(ВТПоложеноДнейОтпуска.ПоложеноДнейОтпуска)		КАК ПоложеноДнейОтпуска,
	|	СУММА(ВЫБОР 
	|		КОГДА ИспользованиеОтпусков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтпускаОрганизаций.КомпенсацияОтпуска) ТОГДА
	|			0
	|		ИНАЧЕ                                        
	|			ИспользованиеОтпусков.ИспользованоОсновного
	|	 КОНЕЦ ) КАК ИспользованоДнейОтпуска,	
	|	СУММА(ВЫБОР                         
	|		КОГДА ИспользованиеОтпусков.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийОтпускаОрганизаций.КомпенсацияОтпуска) ТОГДА
	|			ИспользованиеОтпусков.ИспользованоОсновного	
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ) КАК КомпенсированоДнейОтпуска
	|ИЗ
	|	ВТПоложеноДнейОтпуска КАК ВТПоложеноДнейОтпуска
	|ЛЕВОЕ СОЕДИНЕНИЕ	
	|	(ВЫБРАТЬ
	|		ИспользованиеОтпусков.Сотрудник					КАК Сотрудник,
	|		ИспользованиеОтпусков.ВидОтпуска				КАК ВидОтпуска,
	|		ИспользованиеОтпусков.Организация 				КАК Организация,
	|		ИспользованиеОтпусков.РабочийПериодНачало 		КАК РабочийПериодНачало,
	|		ИспользованиеОтпусков.РабочийПериодОкончание 	КАК РабочийПериодОкончание,
	|		ИспользованиеОтпусков.ВидОперации 				КАК ВидОперации,
	|		СУММА(ИспользованиеОтпусков.ИспользованоОсновного) КАК ИспользованоОсновного
	|	ИЗ
	|	РегистрНакопления.ИспользованиеЕжегодныхОтпусковРаботников КАК ИспользованиеОтпусков
	|	СГРУППИРОВАТЬ ПО
	|		ИспользованиеОтпусков.Сотрудник,
	|		ИспользованиеОтпусков.ВидОтпуска,
	|		ИспользованиеОтпусков.Организация,
	|		ИспользованиеОтпусков.РабочийПериодНачало,
	|		ИспользованиеОтпусков.РабочийПериодОкончание,
	|		ИспользованиеОтпусков.ВидОперации
	|	)КАК ИспользованиеОтпусков
	|
	|ПО
	|	ВТПоложеноДнейОтпуска.Сотрудник = ИспользованиеОтпусков.Сотрудник	       
	|	И ИспользованиеОтпусков.РабочийПериодНачало >= ВтПоложеноДнейОтпуска.РабочийПериодНачало
	|	И ИспользованиеОтпусков.РабочийПериодОкончание <= ВтПоложеноДнейОтпуска.РабочийПериодОкончание
	|	И ВТПоложеноДнейОтпуска.Организация = ИспользованиеОтпусков.Организация
	|	И ВТПоложеноДнейОтпуска.ВидОтпуска = ИспользованиеОтпусков.ВидОтпуска
	|СГРУППИРОВАТЬ ПО
	|	ВТПоложеноДнейОтпуска.Сотрудник,
	|	ВТположеноДнейОтпуска.Организация,
	|	ВТПоложеноДнейОтпуска.РабочийПериодНачало,
	|	ВТПоложеноДнейОтпуска.РабочийПериодОкончание,
	|	ВТПоложеноДнейОтпуска.ВидОтпуска
	|) КАК ОборотыОтпусков
	|";
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТаблицаПериодов.Очистить();
	
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = ТаблицаПериодов.Добавить();
		НоваяСтрока.Сотрудник = Выборка.Сотрудник;
		НоваяСтрока.Организация	 = Выборка.Организация;
		НоваяСтрока.ВидОтпуска = Выборка.ВидОтпуска;
		НоваяСтрока.РабочийПериодНачало = Выборка.РабочийПериодНачало;
		НоваяСтрока.РабочийПериодОкончание = Выборка.РабочийПериодОкончание;
		НоваяСтрока.ПоложеноДнейОтпуска = Выборка.ПоложеноДнейОтпуска;
		НоваяСтрока.ИспользованоДнейОтпуска = Выборка.ИспользованоДнейОтпуска;
		НоваяСтрока.КомпенсированоДнейОтпуска = Выборка.КомпенсированоДнейОтпуска;
		НоваяСтрока.ОстатокОтпуска	= Выборка.ОстатокОтпуска;
		НоваяСтрока.ДоступныйОстатокОтпуска = Выборка.ДоступныйОстатокОтпуска;
	КонецЦикла;
			
КонецПроцедуры


// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	
КонецПроцедуры

#КонецЕсли

#Если Клиент Тогда
	
// Для настройки отчета (расшифровка и др.)
Процедура Настроить(Отбор, КомпоновщикНастроекОсновногоОтчета = Неопределено) Экспорт
	
	ТиповыеОтчеты.НастроитьТиповойОтчет(ЭтотОбъект, Отбор, КомпоновщикНастроекОсновногоОтчета);
	
КонецПроцедуры

Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
	
КонецПроцедуры

Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.ИнициализацияТиповогоОтчета(ЭтотОбъект);
	
КонецПроцедуры

Расшифровки = Новый СписокЗначений;
//Расшифровки.Добавить("ШаблонТиповогоОтчета", "ШаблонТиповогоОтчета");

НастройкаПериода = Новый НастройкаПериода;

ТаблицаПериодов = Новый ТаблицаЗначений;
ТаблицаПериодов.Колонки.Добавить("Сотрудник");
ТаблицаПериодов.Колонки.Добавить("Организация");
ТаблицаПериодов.Колонки.Добавить("ВидОтпуска");
ТаблицаПериодов.Колонки.Добавить("РабочийПериодНачало");
ТаблицаПериодов.Колонки.Добавить("РабочийПериодОкончание");
ТаблицаПериодов.Колонки.Добавить("ПоложеноДнейОтпуска");
ТаблицаПериодов.Колонки.Добавить("ИспользованоДнейОтпуска");
ТаблицаПериодов.Колонки.Добавить("КомпенсированоДнейОтпуска");
ТаблицаПериодов.Колонки.Добавить("ОстатокОтпуска");
ТаблицаПериодов.Колонки.Добавить("ДоступныйОстатокОтпуска");

#КонецЕсли
