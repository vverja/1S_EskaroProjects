#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЛимитыОтпускаМатериалов.Подразделение 			КАК Подразделение,
	|	ЛимитыОтпускаМатериалов.Номенклатура            КАК Номенклатура,
	|	ЛимитыОтпускаМатериалов.ЛимитОтпуска 			КАК Лимит,
	|	ВЫБОР КОГДА ЛимитноЗаборныеКарты.ОтпущеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ОтпущеноОборот
	|			КОНЕЦ
	|	КАК Отпущено,
	|	ВЫБОР КОГДА ЛимитноЗаборныеКарты.ОтпущеноСверхЛимитаОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ОтпущеноСверхЛимитаОборот
	|			КОНЕЦ
	|	КАК ОтпущеноСверхЛимита,
	|	ВЫБОР КОГДА ЛимитноЗаборныеКарты.ВозвращеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ВозвращеноОборот
	|			КОНЕЦ
	|	КАК Возвращено,
	|	ЛимитыОтпускаМатериалов.ЛимитОтпуска -
	|			ВЫБОР КОГДА ЛимитноЗаборныеКарты.ОтпущеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ОтпущеноОборот
	|			КОНЕЦ +
	|			ВЫБОР КОГДА ЛимитноЗаборныеКарты.ВозвращеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ВозвращеноОборот
	|			КОНЕЦ
	|	КАК ОстатокЛимита
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	ЛимитыОтпускаМатериалов.Подразделение.* 				КАК Подразделение,
	|	ЛимитыОтпускаМатериалов.Склад.* 						КАК Склад,
	|	ЛимитыОтпускаМатериалов.Номенклатура.* 					КАК Номенклатура,
	|	ЛимитыОтпускаМатериалов.ХарактеристикаНоменклатуры.* 	КАК ХарактеристикаНоменклатуры,
	|	Лимит,
	|	Отпущено,
	|	ОтпущеноСверхЛимита,
	|	Возвращено,
	|	ОстатокЛимита
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	РегистрСведений.ЛимитыОтпускаМатериалов.СрезПоследних(&ДатаКон, Периодичность = &Периодичность
	|													{
	|													Подразделение.* 			КАК Подразделение,
	|													Склад.* 					КАК Склад,
	|													Номенклатура.* 				КАК Номенклатура,
	|													ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры
	|													}
	|												) КАК ЛимитыОтпускаМатериалов
	|	//СОЕДИНЕНИЯ
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ЛимитноЗаборныеКарты.Обороты(&ДатаНач, &ДатаКон, Период,
	|													{
	|													Подразделение.* 			КАК Подразделение,
	|													Склад.* 					КАК Склад,
	|													Номенклатура.* 				КАК Номенклатура,
	|													ХарактеристикаНоменклатуры.* КАК ХарактеристикаНоменклатуры
	|													}
	|												) КАК ЛимитноЗаборныеКарты
	|	ПО
	|		ЛимитноЗаборныеКарты.Подразделение 					= ЛимитыОтпускаМатериалов.Подразделение
	|		И ЛимитноЗаборныеКарты.Склад 						= ЛимитыОтпускаМатериалов.Склад
	|		И ЛимитноЗаборныеКарты.Номенклатура 				= ЛимитыОтпускаМатериалов.Номенклатура
	|		И ЛимитноЗаборныеКарты.ХарактеристикаНоменклатуры 	= ЛимитыОтпускаМатериалов.ХарактеристикаНоменклатуры
	|
	|{ГДЕ
	|	ЛимитыОтпускаМатериалов.Подразделение.* 				КАК Подразделение,
	|	ЛимитыОтпускаМатериалов.Склад.* 						КАК Склад,
	|	ЛимитыОтпускаМатериалов.Номенклатура.* 					КАК Номенклатура,
	|	ЛимитыОтпускаМатериалов.ХарактеристикаНоменклатуры.* 	КАК ХарактеристикаНоменклатуры,
	|	ЛимитыОтпускаМатериалов.КонтролироватьЛимит 			КАК КонтролироватьЛимит,
	|	ЛимитыОтпускаМатериалов.ЛимитОтпуска 					КАК Лимит,
	|	ВЫБОР КОГДА ЛимитноЗаборныеКарты.ОтпущеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ОтпущеноОборот
	|			КОНЕЦ
	|	КАК Отпущено,
	|	ВЫБОР КОГДА ЛимитноЗаборныеКарты.ОтпущеноСверхЛимитаОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ОтпущеноСверхЛимитаОборот
	|			КОНЕЦ
	|	КАК ОтпущеноСверхЛимита,
	|	ВЫБОР КОГДА ЛимитноЗаборныеКарты.ВозвращеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ВозвращеноОборот
	|			КОНЕЦ
	|	КАК Возвращено,
	|	ЛимитыОтпускаМатериалов.ЛимитОтпуска -
	|			ВЫБОР КОГДА ЛимитноЗаборныеКарты.ОтпущеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ОтпущеноОборот
	|			КОНЕЦ +
	|			ВЫБОР КОГДА ЛимитноЗаборныеКарты.ВозвращеноОборот ЕСТЬ NULL ТОГДА
	|				0
	|			ИНАЧЕ
	|				ЛимитноЗаборныеКарты.ВозвращеноОборот
	|			КОНЕЦ
	|	КАК ОстатокЛимита
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО 
	|	ЛимитыОтпускаМатериалов.Подразделение.* 				КАК Подразделение,
	|	ЛимитыОтпускаМатериалов.Склад.* 						КАК Склад,
	|	ЛимитыОтпускаМатериалов.Номенклатура.* 					КАК Номенклатура,
	|	ЛимитыОтпускаМатериалов.ХарактеристикаНоменклатуры.* 	КАК ХарактеристикаНоменклатуры,
	|	Лимит,
	|	Отпущено,
	|	ОтпущеноСверхЛимита,
	|	Возвращено,
	|	ОстатокЛимита
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|{ИТОГИ ПО
	|	ЛимитыОтпускаМатериалов.Подразделение.* 				КАК Подразделение,
	|	ЛимитыОтпускаМатериалов.Склад.* 						КАК Склад,
	|	ЛимитыОтпускаМатериалов.Номенклатура.* 					КАК Номенклатура,
	|	ЛимитыОтпускаМатериалов.ХарактеристикаНоменклатуры.*	КАК ХарактеристикаНоменклатуры
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ СУММА(Лимит), СУММА(Отпущено), СУММА(ОтпущеноСверхЛимита), СУММА(Возвращено),
	|		СУММА(ОстатокЛимита)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО ОБЩИЕ
	|";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ЛимитыОтпускаМатериалов.Номенклатура", "Номенклатура", "Номенклатура", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Номенклатура);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ЛимитыОтпускаМатериалов.ХарактеристикаНоменклатуры", "ХарактеристикаНоменклатуры", "Характеристика номенклатуры", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ХарактеристикиНоменклатуры);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля( "ЛимитыОтпускаМатериалов.Склад", "Склад", "Склад", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_Склады);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Подразделение",        	"Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Склад",        			"Склад");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Номенклатура", 			"Номенклатура");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ХарактеристикаНоменклатуры", "Характеристика номенклатуры");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Периодичность", 			"Периодичность разворота итогов");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КонтролироватьЛимит", 	"Контролировать лимит");
	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Лимит", "Лимит");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Отпущено", "Отпущено");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОтпущеноСверхЛимита", "в т.ч. отпущено сверх лимита");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("Возвращено", "Возвращено");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ОстатокЛимита", "Остаток лимита");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	УниверсальныйОтчет.ДобавитьПоказатель("Отпущено", "Отпущено", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("ОтпущеноСверхЛимита", "в т.ч. отпущено сверх лимита", Ложь, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("Возвращено", "Возвращено", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("ОстатокЛимита", "Остаток лимита", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("Лимит", "Лимит", Истина, "ЧЦ=15; ЧДЦ=3");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Номенклатура");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("Склад");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	УниверсальныйОтчет.ДобавитьОтбор("КонтролироватьЛимит", Истина, ВидСравнения.Равно, Истина);
	
	// Установка представлений полей
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	Если НЕ ЗначениеЗаполнено(УниверсальныйОтчет.ДатаКон) Тогда
		ДатаКонца = ОбщегоНазначения.ПолучитьРабочуюДату();
	Иначе
		ДатаКонца = КонецДня(УниверсальныйОтчет.ДатаКон);
	КонецЕсли;
	
	Если Периодичность = Перечисления.Периодичность.День Тогда
		ДатаНачала = НачалоДня(ДатаКонца);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Неделя Тогда
		ДатаНачала = НачалоНедели(ДатаКонца);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Месяц Тогда
		ДатаНачала = НачалоМесяца(ДатаКонца);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Квартал Тогда
		ДатаНачала = НачалоКвартала(ДатаКонца);
	ИначеЕсли Периодичность = Перечисления.Периодичность.Год Тогда
		ДатаНачала = НачалоГода(ДатаКонца);
	Иначе
		ДатаНачала = НачалоМесяца(ДатаКонца);
	КонецЕсли;
	
	УниверсальныйОтчет.ДатаНач = ДатаНачала;
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "Периодичность", Периодичность);
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;
УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
