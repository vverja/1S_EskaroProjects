Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета

Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю

#Если Клиент ИЛИ ВнешнееСоединение Тогда
	
Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	ТиповыеОтчеты.СформироватьТиповойОтчет(ЭтотОбъект, Результат, ДанныеРасшифровки, ВыводВФормуОтчета);
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	
	ОбластьЭталонныйПериод = Неопределено;
	
	Если ДанныеОтчета.Количество() > 0 Тогда
		
		Пока Истина Цикл
			
			ОбластьЭталонныйПериод = Результат.НайтиТекст(ПолучитьПредставлениеДанных(ДанныеОтчета[0]), ОбластьЭталонныйПериод);
			
			Если ОбластьЭталонныйПериод = Неопределено Тогда
				
				Прервать;
				
			Иначе
				
				УдалитьПоказатели(Результат, ОбластьЭталонныйПериод, КомпоновщикНастроек.Настройки.Выбор.Элементы);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецФункции

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СтруктураНастроек.Вставить("ТаблицаДанныхОтчета", ДанныеОтчета.Выгрузить());
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
			Если СтруктураНастроек.Свойство("ТаблицаДанныхОтчета") Тогда
				ДанныеОтчета.Загрузить(СтруктураНастроек.ТаблицаДанныхОтчета);
			КонецЕсли;
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	СтруктураНатроек = Новый Структура();
	Возврат СтруктураНатроек;
	
КонецФункции

Процедура УдалитьПоказатели(ТабличныйДокумент, ОбластьЭталонныйПериод, Элементы)
	
	Линия = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Двойная);
	
	Для Каждого Показатель из Элементы Цикл
		
		Если ТипЗнч(Показатель) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") Тогда
			
			Если (Показатель.Заголовок = "Отклонение количества" ИЛИ Показатель.Заголовок = "Отклонение стоимости") И Показатель.Использование Тогда
				
				РезультатПоиска = ТабличныйДокумент.НайтиТекст(Показатель.Заголовок,, ТабличныйДокумент.Область(ОбластьЭталонныйПериод.Верх, ОбластьЭталонныйПериод.Лево, ТабличныйДокумент.ВысотаТаблицы, ТабличныйДокумент.ШиринаТаблицы));
				
				Если РезультатПоиска <> Неопределено Тогда
					
					Индекс = 0;
					
					Для каждого ТекущийПоказатель из Показатель.Элементы Цикл
						
						Если ТипЗнч(ТекущийПоказатель) = Тип("ВыбранноеПолеКомпоновкиДанных") Тогда
							
							Если ТекущийПоказатель.Использование Тогда
								
								ТабличныйДокумент.Область(, РезультатПоиска.Лево + Индекс, ТабличныйДокумент.ВысотаТаблицы, РезультатПоиска.Лево + Индекс).ШиринаКолонки = 0;
								Индекс = Индекс + 1;
								
							КонецЕсли;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецЕсли

#Если Клиент Тогда
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры

#КонецЕсли

Процедура УстановитьСхемуКомпоновки() Экспорт
	
	Если ДанныеОтчета.Количество() = 0 Тогда
		
		НоваяСтрока = ДанныеОтчета.Добавить();
		НоваяСтрока.ТипДанных = "Планы производства";
		
		НоваяСтрока = ДанныеОтчета.Добавить();
		НоваяСтрока.ТипДанных = "Фактическое производство";
		
	КонецЕсли;
	
	СхемаКомпоновки = ЭтотОбъект.ПолучитьМакет("ВспомогательныеСхемыКомпоновки");
	НаборДанныхОбъединение = СхемаКомпоновки.НаборыДанных.Найти("ОбъединениеДанных");
	НаборДанныхПланПлан = НаборДанныхОбъединение.Элементы.Найти("ПланПлан");
	НаборДанныхПланФакт = НаборДанныхОбъединение.Элементы.Найти("ПланФакт");
	НаборДанныхФактФакт = НаборДанныхОбъединение.Элементы.Найти("ФактФакт");
	НаборДанныхФактПлан = НаборДанныхОбъединение.Элементы.Найти("ФактПлан");
	
	//Определим шаблоны параметров
	ПараметрДатаНачТек = СхемаКомпоновки.Параметры["ДатаНачТек"];
	ПараметрДатаКонТек = СхемаКомпоновки.Параметры["ДатаКонТек"];
	ПараметрТипДанных = СхемаКомпоновки.Параметры["ТипДанных"];
	ПараметрСценарийТек = СхемаКомпоновки.Параметры["СценарийТек"];
	
	ЭталонныйТипДанных = ДанныеОтчета[0].ТипДанных;
	
	Для каждого СравниваемыеДанные из ДанныеОтчета Цикл
		
		СравниваемыйТипДанных = СравниваемыеДанные.ТипДанных;
		
		НовыйНабор = НаборДанныхОбъединение.Элементы.Добавить(Тип("НаборДанныхЗапросСхемыКомпоновкиДанных"));
		
		Если ЭталонныйТипДанных = "Планы производства" И СравниваемыйТипДанных = "Фактическое производство" Тогда
			
			ЗаполнитьЗначенияСвойств(НовыйНабор, НаборДанныхФактПлан);
			
		ИначеЕсли ЭталонныйТипДанных = "Фактическое производство" И СравниваемыйТипДанных = "Планы производства" Тогда
			
			ЗаполнитьЗначенияСвойств(НовыйНабор, НаборДанныхПланФакт);
			
		ИначеЕсли ЭталонныйТипДанных = "Планы производства" И СравниваемыйТипДанных = "Планы производства" Тогда
			
			ЗаполнитьЗначенияСвойств(НовыйНабор, НаборДанныхПланПлан);
			
		ИначеЕсли ЭталонныйТипДанных = "Фактическое производство" И СравниваемыйТипДанных = "Фактическое производство" Тогда
			
			ЗаполнитьЗначенияСвойств(НовыйНабор, НаборДанныхФактФакт);
			
		КонецЕсли;
		
		УстановитьПараметр(ПараметрТипДанных, СхемаКомпоновки, НовыйНабор, "ТипДанных" + Формат(СравниваемыеДанные.НомерСтроки, "ЧГ=0"), ПолучитьПредставлениеДанных(СравниваемыеДанные), "ТипДанных");
		УстановитьПараметр(ПараметрСценарийТек, СхемаКомпоновки, НовыйНабор, "Сценарий" + Формат(СравниваемыеДанные.НомерСтроки, "ЧГ=0"), ?(СравниваемыеДанные.Сценарий.Пустая(), Неопределено, СравниваемыеДанные.Сценарий), "СценарийТек");
		УстановитьПараметр(ПараметрДатаНачТек, СхемаКомпоновки, НовыйНабор, "ДатаНач" + Формат(СравниваемыеДанные.НомерСтроки, "ЧГ=0"), ?(СравниваемыеДанные.ДатаНач = Дата('00010101'), СравниваемыеДанные.ДатаНач, Новый Граница(НачалоДня(СравниваемыеДанные.ДатаНач), ВидГраницы.Включая)), "ДатаНачТек");
		УстановитьПараметр(ПараметрДатаКонТек, СхемаКомпоновки, НовыйНабор, "ДатаКон" + Формат(СравниваемыеДанные.НомерСтроки, "ЧГ=0"), ?(СравниваемыеДанные.ДатаКон = Дата('00010101'), СравниваемыеДанные.ДатаКон, Новый Граница(НачалоДня(СравниваемыеДанные.ДатаКон), ВидГраницы.Включая)), "ДатаКонТек");
		
	КонецЦикла;
	
	НаборДанныхОбъединение.Элементы.Удалить(НаборДанныхПланПлан);
	НаборДанныхОбъединение.Элементы.Удалить(НаборДанныхПланФакт);
	НаборДанныхОбъединение.Элементы.Удалить(НаборДанныхФактПлан);
	НаборДанныхОбъединение.Элементы.Удалить(НаборДанныхФактФакт);
	
	СхемаКомпоновкиДанных = СхемаКомпоновки;
	
КонецПроцедуры

Процедура УстановитьПараметр(ПараметрОснование, СхемаКомпоновки, НаборДанных = Неопределено, ИмяПараметра, ЗначениеПараметра, ИмяПараметраВТекстеЗапроса = "")
	
	//Устанавливаем параметр
	НовыйПараметр = СхемаКомпоновки.Параметры.Найти(ИмяПараметра);
	
	Если НовыйПараметр = Неопределено Тогда
		
		НовыйПараметр = СхемаКомпоновки.Параметры.Добавить();
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйПараметр, ПараметрОснование, , "Имя, Значение");
	НовыйПараметр.Имя = ИмяПараметра;
	НовыйПараметр.Значение = ЗначениеПараметра;
	
	//Вносим изменения в текст запроса набора данных
	Если ЗначениеЗаполнено(ИмяПараметраВТекстеЗапроса) И НаборДанных <> Неопределено Тогда
		
		НаборДанных.Запрос = СтрЗаменить(НаборДанных.Запрос, "&" + ИмяПараметраВТекстеЗапроса, "&" + ИмяПараметра);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьПредставлениеДанных(Данные)
	
	Результат = Формат(Данные.НомерСтроки, "ЧГ=0") + ". ";
	
	Если Данные.НомерСтроки = 1 Тогда
		
		Результат = Результат + "Эталонный период.";
		
	Иначе
		
		Результат = Результат + "Сравниваемый период.";
		
	КонецЕсли;
	
	Результат = Результат + Символы.ПС + Данные.ТипДанных + ". " + Символы.ПС;
	
	Если НЕ Данные.Сценарий.Пустая() Тогда
		
		Результат = Результат + Строка(Данные.Сценарий) + Символы.ПС;
		
	КонецЕсли;
	
	Если Данные.ДатаНач = Дата('00010101') И Данные.ДатаКон = Дата('00010101') Тогда
		
		Результат = Результат + "Без ограничения периода.";
		
	Иначе
		
		Результат = Результат + "С " + Формат(Данные.ДатаНач, "ДЛФ=Д; ДП = ""...""") + " по " + Формат(Данные.ДатаКон, "ДЛФ=Д; ДП = ""...""");
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции // ПолучитьПредставлениеДанных()

// Процедура запускается каждый раз перед формированием отчета. В ней содержиться код который обрабатывает настройки отчета 
// перед формированим отчета. К примеру подстановка периода отчета по умолчанию если пользователь не задал не период в отчете
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
	ПараметрНачалоПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("НачалоПериода"));
	
	Если ПараметрНачалоПериода <> Неопределено Тогда
		
		ПараметрНачалоПериода.Использование = Истина;
		
	КонецЕсли;
	
	ПараметрКонецПериода = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("КонецПериода"));
	
	Если ПараметрКонецПериода <> Неопределено Тогда
		
		ПараметрКонецПериода.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

УстановитьСхемуКомпоновки();

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;
