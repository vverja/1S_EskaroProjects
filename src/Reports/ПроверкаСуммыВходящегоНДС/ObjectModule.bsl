#Если Клиент Тогда

Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно перередать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент);
КонецПроцедуры // СформироватьОтчет()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "НДСПриобретений";
	УниверсальныйОтчет.ИмяРегистра = "";
	
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	//УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	// Описание исходного текста запроса.
	// При написании текста запроса рекомендуется следовать правилам, описанным в следующем шаблоне текста запроса:
	//
	//ВЫБРАТЬ
	//	<ПсевдонимТаблицы.Поле> КАК <ПсевдонимПоля>,
	//	ПРЕДСТАВЛЕНИЕ(<ПсевдонимТаблицы>.<Поле>),
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//{ВЫБРАТЬ
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//ИЗ
	//	<Таблица> КАК <ПсевдонимТаблицы>
	//	//СОЕДИНЕНИЯ
	//{ГДЕ
	//	<ПсевдонимТаблицы.Поле>.* КАК <ПсевдонимПоля>,
	//	<ПсевдонимТаблицы.Показатель> КАК <ПсевдонимПоказателя>,
	//	<ПсевдонимТаблицы>.Регистратор КАК Регистратор,
	//	<ПсевдонимТаблицы>.Период КАК Период,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕНЬ) КАК ПериодДень,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, НЕДЕЛЯ) КАК ПериодНеделя,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ДЕКАДА) КАК ПериодДекада,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, МЕСЯЦ) КАК ПериодМесяц,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, КВАРТАЛ) КАК ПериодКвартал,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ПОЛУГОДИЕ) КАК ПериодПолугодие,
	//	НАЧАЛОПЕРИОДА(<ПсевдонимТаблицы>.Период, ГОД) КАК ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//{УПОРЯДОЧИТЬ ПО
	//	<ПсевдонимПоля>.*,
	//	<ПсевдонимПоказателя>,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//УПОРЯДОЧИТЬ_СВОЙСТВА
	//	//УПОРЯДОЧИТЬ_КАТЕГОРИИ
	//}
	//ИТОГИ
	//	АГРЕГАТНАЯ_ФУНКЦИЯ(<ПсевдонимПоказателя>)
	//	//ИТОГИ_СВОЙСТВА
	//	//ИТОГИ_КАТЕГОРИИ
	//ПО
	//	ОБЩИЕ
	//{ИТОГИ ПО
	//	<ПсевдонимПоля>.*,
	//	Регистратор,
	//	Период,
	//	ПериодДень,
	//	ПериодНеделя,
	//	ПериодДекада,
	//	ПериодМесяц,
	//	ПериодКвартал,
	//	ПериодПолугодие,
	//	ПериодГод
	//	//ПОЛЯ_СВОЙСТВА
	//	//ПОЛЯ_КАТЕГОРИИ
	//}
	//АВТОУПОРЯДОЧИВАНИЕ
	ТекстЗапроса = 
		  "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		  |	ВложенныйЗапрос.Организация КАК Организация,
		  |	ВложенныйЗапрос.Контрагент КАК Контрагент,
		  |	ВложенныйЗапрос.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |	ВложенныйЗапрос.Сделка КАК Сделка,
		  | ВложенныйЗапрос.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
		  |	ВложенныйЗапрос.ЗаТару КАК ЗаТару,
		  |	ВложенныйЗапрос.ВидРасчетов КАК ВидРасчетов,
		  |	ВложенныйЗапрос.Схема КАК Схема,
		  |	ВложенныйЗапрос.ПериодДень КАК ПериодДень,
		  |	ВложенныйЗапрос.НалоговыйДокумент КАК НалоговыйДокумент,
		  |	ВложенныйЗапрос.ПервоеСобытие КАК ПервоеСобытие,
		  |	ВложенныйЗапрос.ВыписаноНН КАК ВыписаноНН,
		  |	ВложенныйЗапрос.ВыписаноНННДС КАК ВыписаноНННДС,
		  | ВложенныйЗапрос.ПервоеСобытие - ВложенныйЗапрос.ВыписаноНН КАК Отличие
		  |{ВЫБРАТЬ
		  |	Организация.*,
		  |	Контрагент.*,
		  |	ДоговорКонтрагента.*,
		  |	Сделка.*,
		  |	Валюта.*,
		  |	ЗаТару,
		  |	ВидРасчетов,
		  |	Схема,
		  |	ПериодДень,
		  |	НалоговыйДокумент.*,
  		  |	ПервоеСобытие,
		  |	ВыписаноНН,
		  | ВыписаноНННДС,
		  | Отличие}
		  |ИЗ
		  |	(ВЫБРАТЬ
		  |		Данные.Организация КАК Организация,
		  |		Данные.Контрагент КАК Контрагент,
		  |		Данные.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |		Данные.Сделка КАК Сделка,
		  |		Данные.ЗаТару КАК ЗаТару,
		  |		Данные.ВидРасчетов КАК ВидРасчетов,
		  |		Данные.Схема КАК Схема,
		  |		Данные.ПериодДень КАК ПериодДень,
		  |		Данные.НалоговыйДокумент КАК НалоговыйДокумент,
		  |		ВЫБОР
		  |			КОГДА Данные.Схема = &ПоОтгрузке
		  |				ТОГДА Данные.РасчетыОтгрузПрих
		  |			КОГДА Данные.Схема = &ПоОплате
		  |				ТОГДА Данные.РасчетыОплатаПрих
		  |			КОГДА Данные.Схема = &ПоПервомуСобытию
		  |				ТОГДА ВЫБОР
		  |						КОГДА Данные.РасчетыОтгрузНач + Данные.РасчетыОтгрузПрих > Данные.РасчетыОплатаНач + Данные.РасчетыОплатаПрих
		  |							ТОГДА Данные.РасчетыОтгрузНач + Данные.РасчетыОтгрузПрих
		  |						ИНАЧЕ Данные.РасчетыОплатаНач + Данные.РасчетыОплатаПрих
		  |					КОНЕЦ - ВЫБОР
		  |						КОГДА Данные.РасчетыОтгрузНач > Данные.РасчетыОплатаНач
		  |							ТОГДА Данные.РасчетыОтгрузНач
		  |						ИНАЧЕ Данные.РасчетыОплатаНач
		  |					КОНЕЦ
		  |			ИНАЧЕ 0
		  |		КОНЕЦ КАК ПервоеСобытие,
		  |		Данные.ВыписаноНН КАК ВыписаноНН,
		  |		Данные.ВыписаноНННДС КАК ВыписаноНННДС		  
		  |	ИЗ
		  |		(ВЫБРАТЬ
		  |			Суммы.Организация КАК Организация,
		  |			Суммы.ДоговорКонтрагента.Владелец КАК Контрагент,
		  |			Суммы.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |			Суммы.Сделка КАК Сделка,
		  |			ВЫБОР
		  |				КОГДА Суммы.ВозвратнаяТара = ИСТИНА
		  |					ТОГДА ""Возвратная тара""
		  |				ИНАЧЕ ""Товары""
		  |			КОНЕЦ КАК ЗаТару,
		  |			Суммы.ВидРасчетов КАК ВидРасчетов,
		  |			ВЫБОР
		  |				КОГДА Суммы.ВозвратнаяТара = ИСТИНА
		  |					ТОГДА Суммы.ДоговорКонтрагента.СхемаНалоговогоУчетаПоТаре.МоментОпределенияБазыНДСПоПокупкам
		  |				КОГДА Суммы.ВозвратнаяТара = ЛОЖЬ
		  |					ТОГДА Суммы.ДоговорКонтрагента.СхемаНалоговогоУчета.МоментОпределенияБазыНДСПоПокупкам
		  |			КОНЕЦ КАК Схема,
		  |			Суммы.ПериодДень КАК ПериодДень,
		  |			Суммы.НалоговыйДокумент КАК НалоговыйДокумент,
		  |			СУММА(Суммы.РасчетыОтгрузНач) КАК РасчетыОтгрузНач,
		  |			СУММА(Суммы.РасчетыОплатаНач) КАК РасчетыОплатаНач,
		  |			СУММА(Суммы.РасчетыОтгрузПрих) КАК РасчетыОтгрузПрих,
		  |			СУММА(Суммы.РасчетыОплатаПрих) КАК РасчетыОплатаПрих,
		  |			СУММА(Суммы.ВыписаноНН) КАК ВыписаноНН,
		  |			СУММА(Суммы.ВыписаноНННДС) КАК ВыписаноНННДС		  
		  |		ИЗ
		  |			(ВЫБРАТЬ
		  |				Продажи.Организация КАК Организация,
		  |				Продажи.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |				Продажи.Сделка КАК Сделка,
		  |				Продажи.ВозвратнаяТара КАК ВозвратнаяТара,
		  |				НАЧАЛОПЕРИОДА(Продажи.Период, ДЕНЬ) КАК ПериодДень,
		  |				Продажи.Регистратор КАК НалоговыйДокумент,
		  |				ВЫБОР
		  |					КОГДА Продажи.Событие В (&СобытияРасчет)
		  |						ТОГДА ""Реализация""
		  |					ИНАЧЕ ""Возврат""
		  |				КОНЕЦ КАК ВидРасчетов,
		  |				0 КАК РасчетыОтгрузНач,
		  |				0 КАК РасчетыОплатаНач,
		  |				ВЫБОР
		  |					КОГДА Продажи.Событие В (&СобытияОтгрузка)
		  |						ТОГДА Продажи.СуммаВзаиморасчетовПриход
		  |					ИНАЧЕ 0
		  |				КОНЕЦ КАК РасчетыОтгрузПрих,
		  |				ВЫБОР
		  |					КОГДА Продажи.Событие В (&СобытияОплата)
		  |						ТОГДА Продажи.СуммаВзаиморасчетовПриход
		  |					ИНАЧЕ 0
		  |				КОНЕЦ КАК РасчетыОплатаПрих,
		  |				0 КАК ВыписаноНН,
		  |				0 КАК ВыписаноНННДС
		  |			ИЗ
		  |				РегистрНакопления.ПриобретенияНалоговыйУчет.Обороты(
		  |					&ДатаНачала,
		  |					&ДатаКонца,
		  |					Регистратор,
		  |					(Событие В (&СобытияРасчет)
		  |					    ИЛИ Событие В (&СобытияВозврат))
		  |					    И ИСТИНА {Организация.*, ДоговорКонтрагента.Владелец.* КАК Контрагент,  ДоговорКонтрагента.*,  Сделка.*}) КАК Продажи
		  |			
		  |			ОБЪЕДИНИТЬ ВСЕ
		  |			
		  |			ВЫБРАТЬ
		  |				Остатки.Организация,
		  |				Остатки.ДоговорКонтрагента,
		  |				Остатки.Сделка,
		  |				Остатки.ВозвратнаяТара,
		  |				Остатки.Период,
		  |				Остатки.Регистратор,
		  |				ВЫБОР
		  |					КОГДА Остатки.Событие В (&СобытияРасчет)
		  |						ТОГДА ""Реализация""
		  |					ИНАЧЕ ""Возврат""
		  |				КОНЕЦ,
		  |				ВЫБОР
		  |					КОГДА Остатки.Событие В (&СобытияОтгрузка)
		  |						ТОГДА Остатки.НачальныйОстаток
		  |					ИНАЧЕ 0
		  |				КОНЕЦ,
		  |				ВЫБОР
		  |					КОГДА Остатки.Событие В (&СобытияОплата)
		  |						ТОГДА Остатки.НачальныйОстаток
		  |					ИНАЧЕ 0
		  |				КОНЕЦ,
		  |				0,
		  |				0,
		  |				0,
		  |				0
		  |			ИЗ
		  |				(ВЫБРАТЬ
		  |					Периоды.Организация КАК Организация,
		  |					Периоды.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |					Периоды.Сделка КАК Сделка,
		  |					Периоды.ВозвратнаяТара КАК ВозвратнаяТара,
		  |					Периоды.Период КАК Период,
		  |					Периоды.Регистратор КАК Регистратор,
		  |					Остатки.Событие КАК Событие,
		  |					ЕСТЬNULL(СУММА(Остатки.СуммаНач), 0) КАК НачальныйОстаток
		  |				ИЗ
		  |					(ВЫБРАТЬ РАЗЛИЧНЫЕ
		  |						Периоды.Организация КАК Организация,
		  |						Периоды.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |						Периоды.Сделка КАК Сделка,
		  |						Периоды.ВозвратнаяТара КАК ВозвратнаяТара,
		  |						НАЧАЛОПЕРИОДА(Периоды.Период, ДЕНЬ) КАК Период,
		  |						Периоды.Регистратор КАК Регистратор
		  |					ИЗ
		  |						РегистрНакопления.ПриобретенияНалоговыйУчет.Обороты(
		  |							&ДатаНачала,
		  |							&ДатаКонца,
		  |							Регистратор,
		  |							(Событие В (&СобытияРасчет)
		  |							    ИЛИ Событие В (&СобытияВозврат))
		  |							    И ИСТИНА {Организация.*, ДоговорКонтрагента.Владелец.* КАК Контрагент,  ДоговорКонтрагента.*,  Сделка.*}) КАК Периоды) КАК Периоды
		  |						ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		  |							ОстНаНач.Организация КАК Организация,
		  |							ОстНаНач.ДоговорКонтрагента КАК ДоговорКонтрагента,
		  |							ОстНаНач.Сделка КАК Сделка,
		  |							ОстНаНач.ВозвратнаяТара КАК ВозвратнаяТара,
		  |							ОстНаНач.Событие КАК Событие,
		  |							0 КАК Регистратор,
		  |							ОстНаНач.СуммаВзаиморасчетовОстаток КАК СуммаНач
		  |						ИЗ
		  |							РегистрНакопления.ПриобретенияНалоговыйУчет.Остатки(
		  |								&ДатаНачала,
		  |								(Событие В (&СобытияРасчет)
		  |								    ИЛИ Событие В (&СобытияВозврат))
		  |								    И ИСТИНА {Организация.*, ДоговорКонтрагента.Владелец.* КАК Контрагент,  ДоговорКонтрагента.*,  Сделка.*}) КАК ОстНаНач
		  |						
		  |						ОБЪЕДИНИТЬ ВСЕ
		  |						
		  |						ВЫБРАТЬ
		  |							Обороты.Организация,
		  |							Обороты.ДоговорКонтрагента,
		  |							Обороты.Сделка,
		  |							Обороты.ВозвратнаяТара,
		  |							Обороты.Событие,
		  |							Обороты.Регистратор,
		  |							Обороты.СуммаВзаиморасчетовОборот
		  |						ИЗ
		  |							РегистрНакопления.ПриобретенияНалоговыйУчет.Обороты(
		  |								&ДатаНачала,
		  |								&ДатаКонца,
		  |								Регистратор,
		  |								(Событие В (&СобытияРасчет)
		  |								    ИЛИ Событие В (&СобытияВозврат))
		  |								    И ИСТИНА {Организация.*, ДоговорКонтрагента.Владелец.* КАК Контрагент,  ДоговорКонтрагента.*,  Сделка.*}) КАК Обороты) КАК Остатки
		  |						ПО Остатки.Организация = Периоды.Организация
		  |							И Остатки.ДоговорКонтрагента = Периоды.ДоговорКонтрагента
		  |							И Остатки.Сделка = Периоды.Сделка
		  |							И Остатки.ВозвратнаяТара = Периоды.ВозвратнаяТара
		  |							И (Остатки.Регистратор = 0
		  |								ИЛИ Остатки.Регистратор.МоментВремени < Периоды.Регистратор.МоментВремени)
		  |				
		  |				СГРУППИРОВАТЬ ПО
		  |					Периоды.Организация,
		  |					Периоды.ДоговорКонтрагента,
		  |					Периоды.Сделка,
		  |					Периоды.ВозвратнаяТара,
		  |					Остатки.Событие,
		  |					Периоды.Период,
		  |					Периоды.Регистратор) КАК Остатки
		  |
		  |			ОБЪЕДИНИТЬ ВСЕ
		  |			
		  |			ВЫБРАТЬ
		  |				Документы.Организация,
		  |				Документы.ДоговорКонтрагента,
		  |				Документы.Сделка,
		  |				Документы.ВозвратнаяТара,
		  |				НАЧАЛОПЕРИОДА(Документы.Период, ДЕНЬ),
		  |				Документы.Регистратор,
		  |				ВЫБОР
		  |					КОГДА Документы.СобытиеНДС = &СобытияНДС_ОиП_Расчет
		  |						ТОГДА ""Реализация""
		  |					ИНАЧЕ ""Возврат""
		  |				КОНЕЦ,
		  |				0,
		  |				0,
		  |				0,
		  |				0,
		  |				Документы.СуммаНДСРасход + Документы.БазаНДСРасход,
		  |				Документы.СуммаНДСРасход
		  |			ИЗ
		  |				РегистрНакопления.ОжидаемыйИПодтвержденныйНДСПриобретений.Обороты(
		  |					&ДатаНачала,
		  |					&ДатаКонца,
		  |					Регистратор,
		  |					(СобытиеНДС = &СобытияНДС_ОиП_Расчет
		  |					    ИЛИ СобытиеНДС = &СобытияНДС_ОиП_Возврат)
		  |					    И ИСТИНА {Организация.*, ДоговорКонтрагента.Владелец.* КАК Контрагент,  ДоговорКонтрагента.*,  Сделка.*}) КАК Документы
		  |			
		  |			
		  |	) КАК Суммы
		  |
		  |		СГРУППИРОВАТЬ ПО
		  |			Суммы.Организация,
		  |			Суммы.ДоговорКонтрагента,
		  |			Суммы.Сделка,
		  |			ВЫБОР
		  |				КОГДА Суммы.ВозвратнаяТара = ИСТИНА
		  |					ТОГДА ""Возвратная тара""
		  |				ИНАЧЕ ""Товары""
		  |			КОНЕЦ,
		  |			Суммы.ВидРасчетов,
		  |			Суммы.ПериодДень,
		  |			Суммы.НалоговыйДокумент,
		  |			ВЫБОР
		  |				КОГДА Суммы.ВозвратнаяТара = ИСТИНА
		  |					ТОГДА Суммы.ДоговорКонтрагента.СхемаНалоговогоУчетаПоТаре.МоментОпределенияБазыНДСПоПокупкам
		  |				КОГДА Суммы.ВозвратнаяТара = ЛОЖЬ
		  |					ТОГДА Суммы.ДоговорКонтрагента.СхемаНалоговогоУчета.МоментОпределенияБазыНДСПоПокупкам
		  |			КОНЕЦ,
		  |			Суммы.ДоговорКонтрагента.Владелец) КАК Данные
		  |	ГДЕ
		  |		(ВЫБОР
		  |					КОГДА Данные.Схема = &ПоОтгрузке
		  |						ТОГДА Данные.РасчетыОтгрузПрих
		  |					КОГДА Данные.Схема = &ПоОплате
		  |						ТОГДА Данные.РасчетыОплатаПрих
		  |					КОГДА Данные.Схема = &ПоПервомуСобытию
		  |						ТОГДА ВЫБОР
		  |								КОГДА Данные.РасчетыОтгрузНач + Данные.РасчетыОтгрузПрих > Данные.РасчетыОплатаНач + Данные.РасчетыОплатаПрих
		  |									ТОГДА Данные.РасчетыОтгрузНач + Данные.РасчетыОтгрузПрих
		  |								ИНАЧЕ Данные.РасчетыОплатаНач + Данные.РасчетыОплатаПрих
		  |							КОНЕЦ - ВЫБОР
		  |								КОГДА Данные.РасчетыОтгрузНач > Данные.РасчетыОплатаНач
		  |									ТОГДА Данные.РасчетыОтгрузНач
		  |								ИНАЧЕ Данные.РасчетыОплатаНач
		  |							КОНЕЦ
		  |					ИНАЧЕ 0
		  |				КОНЕЦ >= 0
		  |				ИЛИ Данные.ВыписаноНН <> 0)) КАК ВложенныйЗапрос
		  |{ГДЕ
		  |	ВложенныйЗапрос.Организация.*,
		  |	ВложенныйЗапрос.Контрагент.*,
		  |	ВложенныйЗапрос.ДоговорКонтрагента.*,
		  |	ВложенныйЗапрос.ДоговорКонтрагента.ВалютаВзаиморасчетов.* КАК Валюта,
		  |	ВложенныйЗапрос.Сделка.*,
		  |	ВложенныйЗапрос.ЗаТару,
		  |	ВложенныйЗапрос.ВидРасчетов,
		  |	ВложенныйЗапрос.Схема.*,
		  |	ВложенныйЗапрос.ПериодДень,
		  |	ВложенныйЗапрос.НалоговыйДокумент.*}
		  |
		  |УПОРЯДОЧИТЬ ПО
		  |	ВидРасчетов УБЫВ
		  |{УПОРЯДОЧИТЬ ПО
		  |	Организация.*,
		  |	Контрагент.*,
		  |	ВидРасчетов,
		  |	ДоговорКонтрагента.*,
		  |	Сделка.*,
		  |	Схема,
		  |	ЗаТару,
		  |	ПериодДень,
		  |	НалоговыйДокумент.*}
		  |ИТОГИ
		  |	СУММА(ПервоеСобытие),
		  |	СУММА(ВыписаноНН),
		  |	СУММА(ВыписаноНННДС),
		  |	СУММА(Отличие)
		  |ПО
		  |	Организация,
		  |	Валюта,
		  |	Контрагент,
		  |	Схема,
		  |	ДоговорКонтрагента,
		  |	Сделка,
		  |	ЗаТару,
		  |	ПериодДень,
		  |	НалоговыйДокумент
		  |{ИТОГИ ПО
		  |	Организация.*,
		  |	Валюта.*,
		  |	Контрагент.*,
		  |	ДоговорКонтрагента.*,
		  |	Сделка.*,
		  |	ЗаТару,
		  |	ВидРасчетов,
		  |	Схема,
		  |	ПериодДень,
		  |	НалоговыйДокумент.*}";
 
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПоОтгрузке", 				Перечисления.МоментыОпределенияНалоговойБазы.ПоОтгрузке);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПоОплате",				Перечисления.МоментыОпределенияНалоговойБазы.ПоОплате);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ПоПервомуСобытию",		Перечисления.МоментыОпределенияНалоговойБазы.ПоПервомуСобытию);
	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("НеоблагаемыйВидДеятельностиНДС",		Перечисления.ВидыДеятельностиНДС.Необлагаемая);

	МассивСобытияРасчет = Новый Массив();
	МассивСобытияРасчет.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ОплатаПоставщику);
	МассивСобытияРасчет.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ПоступлениеОтПоставщика);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СобытияРасчет",			МассивСобытияРасчет);
	
	МассивСобытияВозврат = Новый Массив();
	МассивСобытияВозврат.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ВозвратОплатыПоставщиком);
	МассивСобытияВозврат.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ВозвратПоставщику);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СобытияВозврат",			МассивСобытияВозврат);
	
	МассивСобытияОтгрузка = Новый Массив();
	МассивСобытияОтгрузка.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ПоступлениеОтПоставщика);
	МассивСобытияОтгрузка.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ВозвратПоставщику);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СобытияОтгрузка",			МассивСобытияОтгрузка);
	
	МассивСобытияОплата = Новый Массив();
	МассивСобытияОплата.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ОплатаПоставщику);
	МассивСобытияОплата.Добавить(Перечисления.СобытияПриобретенияНалоговыйУчет.ВозвратОплатыПоставщиком);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СобытияОплата",			МассивСобытияОплата);

	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СобытияНДС_ОиП_Расчет",	Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Поступление);
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("СобытияНДС_ОиП_Возврат",	Перечисления.СобытияОжидаемыйИПодтвержденныйНДСПриобретений.Возврат);

	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ВалютаРегламентированногоУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоеСобытие",				"Сумма требующая подтверждания налоговыми документами");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ВыписаноНН",					"Выписано налоговых документов");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ВыписаноНННДС",				"Сумма НДС налоговых документов");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Отличие",					"Расхождение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Организация",				"Организация");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Схема",						"Момент определения базы НДС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Контрагент",					"Контрагент");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДоговорКонтрагента",			"Договор контрагента");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Сделка",						"Сделка");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Валюта",						"Валюта взаиморасчетов");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ЗаТару", 					"Возвратная тара");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПериодДень",					"Дата возникновения кредита");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "НалоговыйДокумент",			"Регистратор");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ВидРасчетов",				"Вид расчетов");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	УниверсальныйОтчет.ДобавитьПоказатель("ПервоеСобытие", "Сумма требующая подтверждания налоговыми документами", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("ВыписаноНН", "Выписано налоговых документов", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("ВыписаноНННДС", "Сумма НДС налоговых документов", Истина, "ЧЦ=15; ЧДЦ=3");
	УниверсальныйОтчет.ДобавитьПоказатель("Отличие", "Расхождение в сумме", Ложь, "ЧЦ=15; ЧДЦ=3");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ПостроительОтчета.ИзмеренияСтроки.Очистить();
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Контрагент");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ДоговорКонтрагента");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Сделка");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ПериодДень");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЗаТару");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("НалоговыйДокумент");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	УниверсальныйОтчет.ДобавитьИзмерениеКолонки("ВидРасчетов");
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Валюта");
	УниверсальныйОтчет.ДобавитьОтбор("Контрагент");
	УниверсальныйОтчет.ДобавитьОтбор("ДоговорКонтрагента");
	
	// Установка связи подчиненных и родительских полей
 	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);
	
КонецПроцедуры // УстановитьНачальныеНастройки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

#КонецЕсли