Перем спДанныеОтчета;
Перем спСхемы;
Перем КаталогОтчета;
Перем тбПоказателиШапка, тбПоказателиТело;
Перем КаталогДанныхФирмы;
Перем ДокЭкспорт;
Перем СтруктураМногострочныхРазделов;
Перем СлужебнаяСтруктура Экспорт;
Перем Элемент;
Перем ФорматОтчета Экспорт;
Перем Объект Экспорт;
Перем Док    Экспорт;
Перем ТекстВыгрузки Экспорт;
Перем ИмяФайла;

Перем Этап;
Перем СписокЭтапов Экспорт;
Перем Шаг;
Перем СписокШагов Экспорт;

Перем НомерСтраницы Экспорт;
Перем ВыполнениеШагов Экспорт;

Перем ГлобОшибкаВыгрузки;
Перем ГлобОшибкаЭЦП;
Перем ГлобОшибкаОтправки;

Перем НовыйДок Экспорт;

Перем СтрокаОбщегоФормата;

//Это предполагается структура
// - имя файла
// - содержимое файла
//эта структура будет записываться в документ ВыгрузкаРегламентированныхОтчетов
Перем ГлобСтруктФайловВыгрузки Экспорт;

//В этой переменной будет храниться признак того, по какому методу (старому или новому) будет идти формирование многострочных частей
Перем СтарыйТипВыгрузки;

Перем КаталогДанныхЭкспорта Экспорт;
Перем мC_DOC_TYPE Экспорт;
Перем мC_DOC_CNT Экспорт;
Перем мD_FILL Экспорт;
Перем мтбСхемы Экспорт;
Перем ТаблицаФайловВыгрузки Экспорт;

Перем Префикс Экспорт;

Перем мПолноеИмяФайлаВнешнейОбработки Экспорт;
Перем мЗаписьЗапрещена                Экспорт;

Перем ДлинаНомераВМногострочке Экспорт;
#Если Клиент Тогда
	
//-----------------------------------
Функция ПолучитьИзСтруктуры(Представление, Структура) Экспорт
	перем Значение;
	
	Найдено = Структура.Свойство(Представление,Значение);
	
	Если НЕ Найдено И ЗначениеЗаполнено(СлужебнаяСтруктура) Тогда
		Найдено = СлужебнаяСтруктура.Свойство(Представление,Значение);	
	КонецЕсли;
	Если Найдено Тогда	
		Возврат Значение
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции
	
//-----------------------------------
Функция СоздатьТаблицуПоказателей(Тело = 0)
	
	тбПоказатели = Новый ТаблицаЗначений;
	тбПоказатели.Колонки.Добавить("Имя");
	тбПоказатели.Колонки.Добавить("Тип");
	Если Тело<>0 Тогда
		тбПоказатели.Колонки.Добавить("Таблица");
	КонецЕсли;
	Возврат тбПоказатели;
КонецФункции
	
//-----------------------------------
// Осуществляет заполнение таблицы наименованиями показателей и их типами
// В некоторых случаях происходит переопределение типа показателя
Процедура ДобавитьПоказательВТаблицу(Табл, Узел);
	
	Если ВРЕГ(Узел.Attributes.GetNamedItem("name").nodeValue) = "LINKED_DOCS" Тогда
		Возврат;
	КонецЕсли;
	
	НоваяСтрока = Табл.Добавить();
	НоваяСтрока.Имя = Узел.Attributes.GetNamedItem("name").nodeValue;
	НоваяСтрока.Тип = Узел.Attributes.GetNamedItem("type").nodeValue;
	
	//иногда требуется переопределить тип 
	Если НоваяСтрока.Тип = "xs:int" Тогда
		nodeId = Узел.getAttribute("fixed");
		Если  (nodeId <> NULL) Тогда
			Если  Узел.Attributes.GetNamedItem("fixed").nodeValue = "1" Тогда
				//фактически это тип DGchk 
				НоваяСтрока.Тип = "DGchk";
			КонецЕсли
		КонецЕсли
		//ИначеЕсли 
	КонецЕсли;
	
КонецПроцедуры
	
//-----------------------------------
//Дополняет передаваемую строку Стр символами Чем до строки длиной Длина
//справа или слева в зависимости от значения переменной Режим  (1-слева, 2-справа)
Функция ДополнитьСтрокуСимволами(Стр,Чем,Длина,Режим=1) Экспорт
	Добавить=Длина-СтрДлина(Стр);
	Если Добавить>0  Тогда
		Добавок="";
		Для Сч = 1 По Добавить  Цикл
			Добавок=Добавок+Чем
		КонецЦикла;
		Возврат ?(Режим=1,Добавок+Стр,Стр+Добавок);
	Иначе
		Возврат	Стр;
	КонецЕсли;
КонецФункции
	
// Процедуры и Функции связаные с выгрузкой XML
//-----------------------------------
Функция ИмяПоказателяВТаблице(Показатель,ИндСтроки);
	Поз = Найти(Показатель,"XXXX");
	Если Поз = 0 Тогда
		Сообщить(НСтр("ru='Не удалось обработать имя показателя в таблице !';uk=""Не вдалося обробити ім'я показника в таблиці !"""));
		Рез = Показатель;
	Иначе
		Если НЕ ЗначениеЗаполнено(ДлинаНомераВМногострочке) Тогда
			ДлинаНомераВМногострочке = 4;
		КонецЕсли;
		
		Рез = Лев(Показатель,Поз-1)+ДополнитьСтрокуСимволами(Строка(ИндСтроки),"0",ДлинаНомераВМногострочке,1)+Сред(Показатель,Поз+4);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции
	
Функция ПолучитьИзСтруктурыГруппы(Показатель);
	Поз = Найти(Показатель,"XXXX");
	Если Поз = 0 Тогда
		Сообщить(НСтр("ru='Не удалось найти имя нужной группы в структуре многострочных разделов !';uk=""Не вдалося знайти ім'я потрібної групи в структурі багаторядкових розділів !"""));
		Рез = Показатель;
	Иначе
		Рез = Лев(Показатель,Поз-1);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

//-----------------------------------
Процедура ВыгрузитьПоказатель(Родитель, Имя, Значение, СтруктураАттрибутов = Неопределено)	
	Если Значение <> "&НеЗаписывать" Тогда
		элПоказатель = ДокЭкспорт.createElement(Имя);
		Родитель.appendChild(элПоказатель);
		Если Значение <> "&ПустоеЗначение" Тогда
			элПоказатель.text = Значение;
		КонецЕсли;
		
		Если ТипЗнч(СтруктураАттрибутов) = Тип("Структура") Тогда
			Для каждого Аттрибут Из СтруктураАттрибутов Цикл
				Если ВРЕГ(Аттрибут.Ключ) = "ROWNUM" Тогда
					элПоказатель.setAttribute(Аттрибут.Ключ,Формат(Аттрибут.Значение, "ЧГ="));
				ИначеЕсли ВРЕГ(Аттрибут.Ключ) = "QDATE" Тогда	
					элПоказатель.setAttribute(Аттрибут.Ключ,Формат(Аттрибут.Значение, "ЧГ=; ДФ=ddMMyyyy"));
				ИначеЕсли ВРЕГ(Аттрибут.Ключ) = "QNUM" ИЛИ ВРЕГ(Аттрибут.Ключ) = "RNUM" Тогда	
					элПоказатель.setAttribute(Аттрибут.Ключ,СокрЛП(Аттрибут.Значение));	
				Иначе
					элПоказатель.setAttribute(Аттрибут.Ключ,Формат(Аттрибут.Значение,СтрокаОбщегоФормата));
				КонецЕсли;
			КонецЦикла;
		ИначеЕсли НЕ СтруктураАттрибутов = Неопределено Тогда
			Сообщить("Неверный список аттрибутов записываемого элемента", СтатусСообщения.Важное);
		КонецЕсли;
		
		Элемент = элПоказатель;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыгрузкаПоСхеме(ИмяСхемы, НужнаяСтруктура, тбПоказателиШапка,тбПоказателиТело, фОшибка, Схема, ИмяТабличногоПоля, ТаблицаОшибок)
	перем ИмяНужнойГруппы, СтруктураНужнойГруппы;
	
	// формируем имя файла
	//данные всегда берутся из служебной области
	Если Сред (ИмяСхемы,1,4) = "JFSS" Тогда
		КодВФонде = СокрЛП(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаОтчетФССУтратаТрудосп.CSTRAX);
		ИмяФайла = "Z" + КодВФонде + ".xml";
	Иначе	
		КодНалоговой  = ДополнитьСтрокуСимволами(СокрЛП(Формат(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.C_STI,"ЧЦ=4;ЧГ=0")),"0",4 ,1); // дополним нулями слева
		
		КодФирмы 	  = ДополнитьСтрокуСимволами(СокрЛП(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.TIN),"0",10,1); // ЕДРПОУ
		
		МесяцПериода  = ДополнитьСтрокуСимволами(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.PERIOD_MONTH,"0",2 ,1);
		
		ГодПериода    = Формат(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.PERIOD_YEAR, "ЧЦ=4;ЧГ=;");
		
		Попытка
			СостояниеОтчета = ДополнитьСтрокуСимволами(НужнаяСтруктура.C_DOC_STAN,"0",1 ,1);
		Исключение
			СостояниеОтчета = ДополнитьСтрокуСимволами(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.C_DOC_STAN,"0",1 ,1);
		КонецПопытки;
		Если СостояниеОтчета = "0" Тогда
			СостояниеОтчета = "1";
		КонецЕсли;
		
		ТипОтчета = ДополнитьСтрокуСимволами(спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.C_DOC_TYPE,"0",2 ,1);
		
		КодНалоговойОриг = "";
		Если НЕ спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.Свойство("C_STI_ORIG", КодНалоговойОриг) Тогда
			КодНалоговойОриг = КодНалоговой; 
		КонецЕсли;
		КодНалоговойОриг = ДополнитьСтрокуСимволами(СокрЛП(Формат(КодНалоговойОриг,"ЧЦ=4;ЧГ=0")),"0",4 ,1);
		
		// поддержка выгрузки многостраничных отчетов
		текC_DOC_CNT = Неопределено;
		Если НужнаяСтруктура.Свойство("C_DOC_CNT", текC_DOC_CNT) Тогда
			НомерВПериоде = ДополнитьСтрокуСимволами(Строка(текC_DOC_CNT),"0",7 ,1);
		Иначе	
			НомерВПериоде = ДополнитьСтрокуСимволами(Строка(мC_DOC_CNT),"0",7 ,1);
		КонецЕсли;
		
		ТипПериода= "";
		Если НЕ спПараметры.ДанныеОтчета.ПолеТабличногоДокументаСлужебныеДанные.Свойство("PERIOD_TYPE", ТипПериода) Тогда
			ТипПериода = 1; 
		КонецЕсли;
		ТипПериода = СОКРЛП(Лев(ТипПериода,1));
		
		// новый порядок формирования имени файла
		ИмяФайла = КодНалоговой + КодФирмы + ИмяСхемы+ СостояниеОтчета + ТипОтчета + НомерВПериоде + ТипПериода + МесяцПериода + ГодПериода + КодНалоговойОриг + ".xml";
		
	КонецЕсли;
	
	Сообщить(НСтр("ru='- Начало выгрузки в файл ';uk='- Початок вивантаження у файл '")+ ИмяФайла);
	
	Попытка
		ДокЭкспорт = Новый COMОбъект("Msxml2.DOMDocument.4.0");
	Исключение
		Попытка
			ДокЭкспорт = Новый COMОбъект("Msxml2.DOMDocument.3.0");
		Исключение
			фОшибка = 1;
			Возврат;
		КонецПопытки;
	КонецПопытки;
	
	pi =ДокЭкспорт.createProcessingInstruction("xml", "version=""1.0"" encoding=""windows-1251""");
	ДокЭкспорт.insertBefore(pi, ДокЭкспорт.childNodes.item(0));
	
	Если Сред (ИмяСхемы,1,4) = "JFSS" Тогда  //Если это РегламентированныйОтчетФСС тогда
		//	ДокЭкспорт.createProcessingInstruction("encoding", "'windows-1251'");
		//Если это не первый квартал, то открываем уже сформированный файл и дописываем в него
		//если открыть не удалось - ошибка.
		Если НЕ ЗначениеЗаполнено(ПолучитьИзСтруктуры("P1", НужнаяСтруктура)) Тогда
			Если НЕ ДокЭкспорт.Load(КаталогДанныхЭкспорта + "\" + ИмяФайла) Тогда
				Сообщить(НСтр("ru='Не удалось открыть файл отчета за первый квартал для добавления данных!"
				"Для экспорта нужно создать новый файл!';uk='Не вдалося відкрити файл звіту за перший квартал для додавання даних!"
				"Для експорту потрібно створити новий файл!'"), СтатусСообщения.Важное);
				//---------------------------
				Если Вопрос(НСтр("ru='Создать новый файл?';uk='Створити новий файл?'"), РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Нет Тогда
					Возврат;
				КонецЕсли;
				// главный элемент F4
				элДокумента = ДокЭкспорт.createElement("F4");
				ДокЭкспорт.appendChild(элДокумента);
				
				Для Каждого СтрокаШапки из тбПоказателиШапка Цикл
					ВыгрузитьПоказатель(элДокумента, СтрокаШапки.Имя,
					ПреобразоватьТипXML(ПолучитьИзСтруктуры(СтрокаШапки.Имя, НужнаяСтруктура),СтрокаШапки.Тип,ИмяСхемы));
					Если  (СтрокаШапки.Имя = "DATA") Тогда
						НовыйЭлемент = ДокЭкспорт.createElement(СтрокаШапки.Имя);
						элДокумента.appendChild(НовыйЭлемент);
						ЭлементСДанными = НовыйЭлемент;
						Для Каждого СтрокаТела Из  тбПоказателиТело Цикл
							НовыйЭлемент = ДокЭкспорт.createElement(СтрокаТела.Имя);
							ЭлементСДанными.appendChild(НовыйЭлемент);
							
							ЭлементНужногоКвартала = НовыйЭлемент;
							тбПоказателиТаблицы = СтрокаТела.Таблица;
							Если ПолучитьИзСтруктуры(СтрокаТела.Имя, НужнаяСтруктура) = "" Тогда
								Для Каждого строка Из  тбПоказателиТаблицы Цикл
									ВыгрузитьПоказатель(ЭлементНужногоКвартала, строка.Имя,
									ПреобразоватьТипXML(Неопределено,строка.Тип,ИмяСхемы));
								КонецЦикла;
								ВыгрузитьПоказатель(ЭлементНужногоКвартала, строка.Имя, "0,");
							Иначе
								Для Каждого строка Из  тбПоказателиТаблицы Цикл
									ВыгрузитьПоказатель(ЭлементНужногоКвартала, строка.Имя,
									ПреобразоватьТипXML(ПолучитьИзСтруктуры(строка.Имя, НужнаяСтруктура),строка.Тип,ИмяСхемы));
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;	
					КонецЕсли;
				КонецЦикла;
				
				ВыгрузитьПоказатель(элДокумента, "DATAF14",);
				//---------------------------
			Иначе	
				// Тут нужно разбирать загруженный файл, и писать в него необходимые данные
				УзКорень=ДокЭкспорт.DocumentElement;
				//УзОтношенияСписок=УзКорень.SelectNodes("//*[name()='Data']");
				Для ИндКор=1 По УзКорень.childNodes.Length Цикл
					УзОтношение=УзКорень.childNodes.item(ИндКор-1);
					Если ВРег(УзОтношение.BaseName)=ВРег("Data") Тогда
						//Перебираем закладки P1-P4
						Для ИндКор2 = 1 По УзОтношение.childNodes.length Цикл
							УзелР = УзОтношение.childNodes.item(ИндКор2-1);
							//Теперь мы "внутри" одного из разделов
							//выбираем нужный, и пишем в него данные.
							Если НЕ ЗначениеЗаполнено(ПолучитьИзСтруктуры(тбПоказателиТело[ИндКор2-1].Имя, НужнаяСтруктура)) Тогда
								// сюда прописываем действия производимые с "другими периодами"
							Иначе
								Для Инд=1 По УзелР.childNodes.length Цикл
									УзелР.removechild(УзелР.childNodes.item(0));
								КонецЦикла;
								тбПоказателиТаблицы = тбПоказателиТело[ИндКор2-1].Таблица;
								Для Каждого строка Из  тбПоказателиТаблицы Цикл
									ВыгрузитьПоказатель(УзелР, строка.Имя,
									ПреобразоватьТипXML(ПолучитьИзСтруктуры(строка.Имя, НужнаяСтруктура),строка.Тип,ИмяСхемы));
								КонецЦикла
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Иначе // Если это первый квартал, то создаём новый файл
			
			// главный элемент F4
			элДокумента = ДокЭкспорт.createElement("F4");
			ДокЭкспорт.appendChild(элДокумента);
			
			Для Каждого СтрокаШапки из тбПоказателиШапка Цикл
				ВыгрузитьПоказатель(элДокумента, СтрокаШапки.Имя,
				ПреобразоватьТипXML(ПолучитьИзСтруктуры(СтрокаШапки.Имя, НужнаяСтруктура),СтрокаШапки.Тип,ИмяСхемы));
				Если  (СтрокаШапки.Имя = "DATA") Тогда
					НовыйЭлемент = ДокЭкспорт.createElement(СтрокаШапки.Имя);
					элДокумента.appendChild(НовыйЭлемент);
					ЭлементСДанными = НовыйЭлемент;
					Для Каждого СтрокаТела Из  тбПоказателиТело Цикл
						НовыйЭлемент = ДокЭкспорт.createElement(СтрокаТела.Имя);
						ЭлементСДанными.appendChild(НовыйЭлемент);
						ЭлементНужногоКвартала = НовыйЭлемент;
						тбПоказателиТаблицы = СтрокаТела.Таблица;
						Если ПолучитьИзСтруктуры(СтрокаТела.Имя, НужнаяСтруктура) = "" Тогда
							Для Каждого строка Из  тбПоказателиТаблицы Цикл
								ВыгрузитьПоказатель(ЭлементНужногоКвартала, строка.Имя,
								ПреобразоватьТипXML(Неопределено,строка.Тип,ИмяСхемы));
							КонецЦикла;
							ВыгрузитьПоказатель(ЭлементНужногоКвартала, строка.Имя, "0,");
						Иначе
							Для Каждого строка Из  тбПоказателиТаблицы Цикл
								ВыгрузитьПоказатель(ЭлементНужногоКвартала, строка.Имя,
								ПреобразоватьТипXML(ПолучитьИзСтруктуры(строка.Имя, НужнаяСтруктура),строка.Тип,ИмяСхемы));
							КонецЦикла;
						КонецЕсли;
					КонецЦикла;	
				КонецЕсли;
			КонецЦикла;
			
			ВыгрузитьПоказатель(элДокумента, "DATAF14",);
			
		КонецЕсли;
	Иначе
		
		//Если это не РегламентированныйОтчетФСС тогда
		// Данные, которые зависят от схемы
		СлужебнаяСтруктура.Вставить("C_DOC",	Сред(ИмяСхемы,1,3));
		СлужебнаяСтруктура.Вставить("C_DOC_SUB",Сред(ИмяСхемы,4,3));
		СлужебнаяСтруктура.Вставить("C_DOC_VER",Число(Сред(ИмяСхемы,7,2)));
		СлужебнаяСтруктура.Вставить("SOFTWARE", "SOFTWARE");
		
		// главный элемент DECLAR
		элДокумента = ДокЭкспорт.createElement("DECLAR");
		ДокЭкспорт.appendChild(элДокумента);
		
		элДокумента.setAttribute("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		элДокумента.setAttribute("xsi:noNamespaceSchemaLocation",ИмяСхемы+".xsd");
		
		элШапка = ДокЭкспорт.createElement("DECLARHEAD");
		элДокумента.appendChild(элШапка);
		
		Для Каждого СтрокаШапки из тбПоказателиШапка Цикл
			
			ОписаниеОшибки = "";
			ВыгрузитьПоказатель(элШапка, 
								СтрокаШапки.Имя,
								ПреобразоватьТипXML(ПолучитьИзСтруктуры(СтрокаШапки.Имя, НужнаяСтруктура),СтрокаШапки.Тип,ИмяСхемы,ОписаниеОшибки));
								
			Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
				СтрокаОшибки = ТаблицаОшибок.Добавить();
				СтрокаОшибки.ИмяТабличногоПоля 	= ?(НужнаяСтруктура.Свойство(СтрокаШапки.Имя),ИмяТабличногоПоля,"ПолеТабличногоДокументаСлужебныеДанные");;
				СтрокаОшибки.ИмяПоказателя 		= СтрокаШапки.Имя;
				СтрокаОшибки.ОписаниеОшибки 	= ОписаниеОшибки;
			КонецЕсли;								
			
		КонецЦикла;
		
		элТело = ДокЭкспорт.createElement("DECLARBODY");
		элДокумента.appendChild(элТело);
		
		СтруктураМногострочныхРазделов = спПараметры.ДанныеМногострочныхРазделов;
		
		Для Каждого СтрокаТела Из  тбПоказателиТело Цикл
			Если СтрокаТела.Тип = "Таблица" Тогда
				ИмяНужнойГруппы = "";
				
				тбПоказателиТаблицы = СтрокаТела.Таблица;
				Если Префикс = Неопределено Или Не ЗначениеЗаполнено(Префикс) Тогда 
					ИмяНужнойГруппы = ПолучитьИзСтруктурыГруппы(тбПоказателиТаблицы[0].Имя);
				Иначе 
					ИмяНужнойГруппы = ПолучитьИзСтруктурыГруппы(тбПоказателиТаблицы[0].Имя);
					ИмяНужнойГруппы = Префикс + ИмяНужнойГруппы;
				КонецЕсли;

				СтруктураМногострочныхРазделов.Свойство(ИмяНужнойГруппы,СтруктураНужнойГруппы);
				
				//здесь будет получение из структуры "ДанныеМногостсрочных разделов"
				//строка тела соответствует таблице значений с элементами одной группы
				РеальныйИндСтроки = 1;
				
				спСтроки = Новый СписокЗначений;
				Для ИндСтроки = 0 По СтруктураНужнойГруппы.Количество() - 1   Цикл // Максимально допустимое число строк
					
					спЗначенияXML = Новый Соответствие;
					Для Каждого строка Из  тбПоказателиТаблицы Цикл
						ИмяПоказателя = ИмяПоказателяВТаблице(строка.Имя,РеальныйИндСтроки);
						ИмяКолонки = СтрЗаменить(строка.Имя,"XXXX","");
						Данные = СтруктураНужнойГруппы[ИндСтроки][ИмяКолонки];				
						ОписаниеОшибки = "";
						ЗначениеXML = ПреобразоватьТипXML(Данные,строка.Тип,ИмяСхемы,ОписаниеОшибки);
						спЗначенияXML.Вставить(строка.Имя,ЗначениеXML);
						Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
							СтрокаОшибки = ТаблицаОшибок.Добавить();
							СтрокаОшибки.ИмяТабличногоПоля 	= ИмяТабличногоПоля;
							СтрокаОшибки.ИмяПоказателя 		= ИмяПоказателя;
							СтрокаОшибки.ОписаниеОшибки 	= ОписаниеОшибки;
						КонецЕсли;								
						
					КонецЦикла;
					
					Если СтарыйТипВыгрузки Тогда
						Для Инд = 0 По спЗначенияXML.Количество() - 1 Цикл
							ИмяПоказателя = тбПоказателиТаблицы[Инд].Имя;
							ЗначениеXML = спЗначенияXML[ИмяПоказателя];
							ВыгрузитьПоказатель(элТело, ИмяПоказателя, ЗначениеXML, Новый Структура("ROWNUM", РеальныйИндСтроки));
						КонецЦикла;
						РеальныйИндСтроки = РеальныйИндСтроки + 1;
					Иначе
						// Записываем в список
						спСтроки.Добавить(спЗначенияXML);
						РеальныйИндСтроки = РеальныйИндСтроки + 1;
					КонецЕсли;
				КонецЦикла;
				
				Если НЕ СтарыйТипВыгрузки Тогда
					// Выгружаем
					Для Каждого Показатель Из  тбПоказателиТаблицы Цикл
						ИмяПоказателя = Показатель.Имя;
						Для ИндС = 0 По спСтроки.Количество() - 1 Цикл
							спЗначенияXML = спСтроки[ИндС].Значение;
							// Выгружаем
							ЗначениеXML = спЗначенияXML[ИмяПоказателя];
							ВыгрузитьПоказатель(элТело, ИмяПоказателя, ЗначениеXML,  Новый Структура("ROWNUM",ИндС+1));
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			Иначе
				Если НЕ (ИмяСхемы = "R1201501" И СтрокаТела.Имя = "INN") Тогда
					
					ОписаниеОшибки = "";
					ВыгрузитьПоказатель(элТело, СтрокаТела.Имя,
										ПреобразоватьТипXML(ПолучитьИзСтруктуры(СтрокаТела.Имя, НужнаяСтруктура),
															СтрокаТела.Тип,
															ИмяСхемы,ОписаниеОшибки));
					
					Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
						СтрокаОшибки = ТаблицаОшибок.Добавить();
						СтрокаОшибки.ИмяТабличногоПоля 	= ?(НужнаяСтруктура.Свойство(СтрокаТела.Имя),ИмяТабличногоПоля,"ПолеТабличногоДокументаСлужебныеДанные");
						СтрокаОшибки.ИмяПоказателя 		= СтрокаТела.Имя;
						СтрокаОшибки.ОписаниеОшибки 	= ОписаниеОшибки;
					КонецЕсли;								
					
				Иначе	
					
					ТаблицаЗапроса = ПолучитьИзСтруктуры(СтрокаТела.Имя, НужнаяСтруктура);
				
					Если НЕ ТипЗнч(ТаблицаЗапроса) = Тип("ТаблицаЗначений")Тогда
						Продолжить;		
					КонецЕсли;
					
					Для каждого СтрокаТаблицы Из ТаблицаЗапроса Цикл
						
						ОписаниеОшибки = "";
						
						Значение = СтрокаТаблицы.T1ZINN;
						QDATE = СтрокаТаблицы.T1ZQDATE;
						QNUM  = СтрокаТаблицы.T1ZQNUM;
						RNUM  = СтрокаТаблицы.T1ZRNUM;
						ROWNUM = ТаблицаЗапроса.Индекс(СтрокаТаблицы) + 1;
						
						//<!--Загальний тип "Індивідуальний податковий номер "-->
						Если НЕ ЗначениеЗаполнено(Значение) Тогда
							Результат = 0;
						ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
							Результат = СтрЗаменить(Значение, " ", "");
							Результат = СтрЗаменить(Результат, ",", ".");
						ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
							Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
						Иначе
							Результат = СокрЛП(Строка(Значение));
						КонецЕсли;

						Попытка
							Контроль = Число(Результат);
							Если    Найти(Результат, ".") > 0
								ИЛИ Контроль < 1000 
								ИЛИ Контроль > 999999999999
								ИЛИ Цел(Контроль) <> Контроль Тогда
								ОписаниеОшибки = "Значение не является целым числом от 1000 до 999999999999";
							КонецЕсли;
						Исключение
							ОписаниеОшибки = "Значение не является целым числом от 1000 до 999999999999";
						КонецПопытки;
						
						Если ЗначениеЗаполнено(ОписаниеОшибки) Тогда
							СтрокаОшибки = ТаблицаОшибок.Добавить();
							СтрокаОшибки.ИмяТабличногоПоля 	= "ПолеТабличногоДокументаНалоговыйДокумент";
							СтрокаОшибки.ИмяПоказателя 		= "T1Z" + Формат(ТаблицаЗапроса.Индекс(СтрокаТаблицы) + 1,"ЧЦ=4;ЧВН=0;ЧГ=;") + "INN";
							СтрокаОшибки.ОписаниеОшибки 	= ОписаниеОшибки;
						КонецЕсли;				
						
						// проверка аттрибутов
						Если НЕ ЗначениеЗаполнено(QDATE) ИЛИ НЕ ТипЗнч(QDATE) = Тип("Дата") Тогда
							СтрокаОшибки = ТаблицаОшибок.Добавить();
							СтрокаОшибки.ИмяТабличногоПоля 	= "ПолеТабличногоДокументаНалоговыйДокумент";
							СтрокаОшибки.ИмяПоказателя 		= "T1Z" + Формат(ROWNUM,"ЧЦ=4;ЧВН=0;ЧГ=;") + "QDATE";
							СтрокаОшибки.ОписаниеОшибки 	= "Не заполнена дата";
						КонецЕсли;
						
						Если Не ЗначениеЗаполнено(QNUM) и НЕ ЗначениеЗаполнено(RNUM) Тогда
							СтрокаОшибки = ТаблицаОшибок.Добавить();
							СтрокаОшибки.ИмяТабличногоПоля 	= "ПолеТабличногоДокументаНалоговыйДокумент";
							СтрокаОшибки.ИмяПоказателя 		= "T1Z" + Формат(ROWNUM,"ЧЦ=4;ЧВН=0;ЧГ=;") + "QNUM";
							СтрокаОшибки.ОписаниеОшибки 	= "Не указан ни номер налоговой накладной ни номер расчета корретировки";
						КонецЕсли;
						
						ВыгрузитьПоказатель(элТело, СтрокаТела.Имя, Результат, Новый Структура("ROWNUM, QDATE, QNUM, RNUM", ROWNUM, QDATE, QNUM, RNUM));	
					КонецЦикла;
					
				КонецЕсли;				
				
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ДокЭкспорт.Save(КаталогДанныхЭкспорта +"\"+ИмяФайла);
	ГлобСтруктФайловВыгрузки.Вставить("FileName" + Лев(ИмяФайла, СтрДлина(ИмяФайла)-4), Новый ДвоичныеДанные(КаталогДанныхЭкспорта +"\" + ИмяФайла));
	
	ТекстВыгрузки = Строка(ТекстВыгрузки) + Символы.ПС + "------------------" + Символы.ПС + ДокЭкспорт.xml;
	Сообщить(НСтр("ru='- Отчет выгружен успешно!';uk='- Звіт вивантажений успішно!'"));
	
	Сообщить(НСтр("ru='-- Начало проверки отчета по xsd-схеме.';uk='-- Початок перевірки звіту по xsd-схемі.'"));
	
	Попытка
		фОшибка = 0;
		Попытка
			КэшСхем = Новый COMОбъект("Msxml2.XMLSchemaCache.4.0");
			КэшСхем.add("", Схема);
			ДокЭкспорт.Schemas = КэшСхем;
		Исключение		
		КонецПопытки;
		
		ДокЭкспорт.validateOnParse = Истина;
		ДокЭкспорт.async = Ложь;
		ДокЭкспорт.Load(КаталогДанныхЭкспорта +"\"+ИмяФайла);
		
		Error = ДокЭкспорт.parseError;
		Если Error.errorCode<>0 Тогда
			// есть ошибка
			фОшибка = 1;
			Сообщить(НСтр("ru = 'Ошибка:'; uk = 'Помилка:'"));
			Сообщить(Error.reason);
		КонецЕсли;
		
	Исключение
		фОшибка = 1;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Сообщить(НСтр("ru='-- Проверка завершена!';uk='-- Перевірка завершена!'"), ?(фОшибка = 1,СтатусСообщения.Важное, СтатусСообщения.Обычное));	
	
КонецПроцедуры
	
//-----------------------------------
// возвращает DomDocument - XSD схему
Функция РазборкаСхемы(ИмяСхемы, тбПоказателиШапка,тбПоказателиТело, фОшибка)
	
	Сообщить(НСтр("ru='-- Начало загрузки схемы (';uk='-- Початок завантаження схеми ('")+ИмяСхемы +".xsd)");
	
	Попытка
		НужныйМакет = ПолучитьМакет("ОбщиеТипыДляРегламентированнойОтчетности");
		ГдеСохранять = КаталогВременныхФайлов();
		ИмяФайлаСхемы = ГдеСохранять+"common_types.XSD";
		НужныйМакет.Записать(ИмяФайлаСхемы);
	Исключение
	КонецПопытки;
	
	Если Не ИмяНужногоОтчета = "РеестрНалоговыхНакладных" Тогда 
		НужныйМакет = РегламентированнаяОтчетность.РеглОтчеты(ИмяНужногоОтчета).ПолучитьМакет(ИмяСхемы);
	Иначе
		НужныйМакет = Отчеты[ИмяНужногоОтчета].ПолучитьМакет(ИмяСхемы);
	КонецЕсли;	
	ГдеСохранять = КаталогВременныхФайлов();
	ИмяФайлаСхемы = ГдеСохранять+ИмяСхемы+".XSD";
	НужныйМакет.Записать(ИмяФайлаСхемы);
	
	ФайлСхемы = Новый Файл (ИмяФайлаСхемы);
	Если не ФайлСхемы.Существует() Тогда
		
		Сообщить(Локализация.СтрШаблон(НСтр("ru='Не найден файл схемы ¤1¤!. Экспорт xml по данной схеме не будет выполнен !';uk='Не знайдений файл схеми ¤1¤!. Експорт xml за даною схемою не буде виконаний !'"), ИмяФайлаСхемы));
		фОшибка = 1;
		Возврат Неопределено;
	КонецЕсли;
	
	
	тбПоказателиШапка = СоздатьТаблицуПоказателей();
	тбПоказателиТело = СоздатьТаблицуПоказателей(1);
	фОшибка = 0;
	Попытка
		xmlDoc = Новый COMОбъект("Msxml2.DOMDocument.4.0");
	Исключение
		Попытка
			xmlDoc = Новый COMОбъект("Msxml2.DOMDocument.3.0");
		Исключение
			фОшибка = 1;
			Возврат Неопределено;
		КонецПопытки;
	КонецПопытки;
	
	xmlDoc.load(ИмяФайлаСхемы);
	
	root = xmlDoc.documentElement;
	rootChild = root.childNodes;
	
	СтарыйТипВыгрузки = Ложь;
	
	Для Инд1 = 0 по rootChild.length - 1 Цикл
		// УзелУр2 - это типы
		УзелУр2 = rootChild.item(Инд1);
		Если Врег(УзелУр2.baseName) = ВРег("complexType") Тогда
			Если Врег(УзелУр2.Attributes.GetNamedItem("name").nodeValue) = Врег("DHead") Тогда
				УзелУр3 = УзелУр2.firstChild; // это будет sequence
				УзелУр3Child = УзелУр3.childNodes;
				Для Инд3 = 0 по УзелУр3Child.length - 1 Цикл
					// УзелУр4 - это показатели
					УзелУр4 = УзелУр3Child.item(Инд3);
					Если Врег(УзелУр4.baseName) = Врег("element") Тогда
						ДобавитьПоказательВТаблицу(тбПоказателиШапка, УзелУр4); 
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли Врег(УзелУр2.Attributes.GetNamedItem("name").nodeValue) = Врег("DBody") 
				или (Врег(УзелУр2.Attributes.GetNamedItem("name").nodeValue) = Врег("DDBODY")) Тогда
				УзелУр3 =  УзелУр2.firstChild; // это будет sequence
				УзелУр3Child = УзелУр3.childNodes;
				ИмяТекущейТаблицы 	= "";
				тбВложеннаяТаблица	= Неопределено;
				ДобавленнаяСтрока	= Неопределено;
				Для Инд3 = 0 по УзелУр3Child.length - 1 Цикл
					// УзелУр4 - это показатели
					УзелУр4 = УзелУр3Child.item(Инд3);
					Если Врег(УзелУр4.baseName) = Врег("element") Тогда
						ИмяЭлемента = УзелУр4.Attributes.GetNamedItem("name").nodeValue;
						ПозицияXXXX = Найти(ИмяЭлемента,"XXXX");
						Если ПозицияXXXX >0 Тогда
							// если попали сюда, это новый метод формирования многострочных частей
							СтарыйТипВыгрузки = Ложь;
							
							//Первый элемент Таблицы
							//имя таблицы, это символы до XXXX
							ИмяТаблицы = Лев(ИмяЭлемента,ПозицияXXXX-1);
							Если ИмяТаблицы = ИмяТекущейТаблицы Тогда
								ДобавитьПоказательВТаблицу(ДобавленнаяСтрока.Таблица, УзелУр4)
							Иначе
								ИмяТекущейТаблицы = ИмяТаблицы;
								// Новая таблица
								ДобавленнаяСтрока = тбПоказателиТело.Добавить();
								ДобавленнаяСтрока.Тип = "Таблица"; 
								ДобавленнаяСтрока.Таблица = СоздатьТаблицуПоказателей();
								ДобавитьПоказательВТаблицу(ДобавленнаяСтрока.Таблица, УзелУр4)
							КонецЕсли;
						Иначе
							// просто элемент
							ДобавитьПоказательВТаблицу(тбПоказателиТело, УзелУр4);
						КонецЕсли;
					ИначеЕсли Врег(УзелУр4.baseName) = Врег("choice") Тогда
						УзелУр4Child = УзелУр4.childNodes;
						
						Для Инд4 = 0 по УзелУр4Child.length - 1 Цикл
							// УзелУр4 - это показатели
							УзелУр5 = УзелУр4Child.item(Инд4);
							Если Врег(УзелУр5.baseName) = Врег("element") Тогда
								ДобавитьПоказательВТаблицу(тбПоказателиТело, УзелУр5); 
							КонецЕсли;
						КонецЦикла;
						
					ИначеЕсли (Врег(УзелУр4.baseName) = Врег("sequence")) Тогда	// если попали сюда, значит старый метод формирования многострочных частей
						// вложенная таблица
						тбВложеннаяТаблица = СоздатьТаблицуПоказателей();
						УзелУр4Child = УзелУр4.childNodes;
						
						Для Инд4 = 0 по УзелУр4Child.length - 1 Цикл
							// УзелУр4 - это показатели
							УзелУр5 = УзелУр4Child.item(Инд4);
							Если Врег(УзелУр5.baseName) = Врег("element") Тогда
								СтарыйТипВыгрузки = Истина;
								ДобавитьПоказательВТаблицу(тбВложеннаяТаблица, УзелУр5); 
							КонецЕсли;
						КонецЦикла;
						НоваяСтрока = тбПоказателиТело.Добавить();
						НоваяСтрока.Тип = "Таблица"; 
						НоваяСтрока.Таблица = тбВложеннаяТаблица;
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли Врег(УзелУр2.Attributes.GetNamedItem("name").nodeValue) = Врег("F4Content") Тогда
				УзелУр3 =  УзелУр2.firstChild; // это будет sequence
				УзелУр3Child = УзелУр3.childNodes;
				Для Инд3 = 0 по УзелУр3Child.length - 1 Цикл
					// УзелУр4 - это показатели
					УзелУр4 = УзелУр3Child.item(Инд3);
					Если Врег(УзелУр4.baseName) = Врег("element") Тогда
						ДобавитьПоказательВТаблицу(тбПоказателиШапка, УзелУр4);
						
					ИначеЕсли(Врег(УзелУр4.baseName) = Врег("sequence")) Тогда
						// вложенная таблица
						тбВложеннаяТаблица = СоздатьТаблицуПоказателей();
						УзелУр4Child = УзелУр4.childNodes;
						
						Для Инд4 = 0 по УзелУр4Child.length - 1 Цикл
							// УзелУр4 - это показатели
							УзелУр5 = УзелУр4Child.item(Инд4);
							Если Врег(УзелУр5.baseName) = Врег("element") Тогда
								ДобавитьПоказательВТаблицу(тбВложеннаяТаблица, УзелУр5); 
							КонецЕсли;
						КонецЦикла;
						НоваяСтрока = тбПоказателиТело.Добавить();
						НоваяСтрока.Тип = "Таблица"; 
						НоваяСтрока.Таблица = тбВложеннаяТаблица;
					КонецЕсли;
					
				КонецЦикла;
			ИначеЕсли Врег(УзелУр2.Attributes.GetNamedItem("name").nodeValue) = Врег("DGDATA") Тогда  
				УзелУр3 =  УзелУр2.firstChild; // это будет sequence
				УзелУр3Child = УзелУр3.childNodes;
				тбВложеннаяТаблица = СоздатьТаблицуПоказателей();
				Для Инд3 = 0 по УзелУр3Child.length - 1 Цикл
					// УзелУр4 - это показатели
					УзелУр4 = УзелУр3Child.item(Инд3);
					Если Врег(УзелУр4.baseName) = Врег("element") Тогда
						ДобавитьПоказательВТаблицу(тбВложеннаяТаблица, УзелУр4);
						// вложенная таблица
					КонецЕсли;
				КонецЦикла;
				Для каждого строка из тбПоказателиТело Цикл
					Если строка.Тип =  "DGData" Тогда
						строка.Таблица = тбВложеннаяТаблица;
					КонецЕсли;	  
				КонецЦикла	   
				
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат xmlDoc;
	
	Сообщить(НСтр("ru='-- Схема загружена успешно!';uk='-- Схема завантажена успішно!'"));
КонецФункции    

//-----------------------------------
Функция ПреобразоватьТипXMLJ0100107(Значение,Тип,Результат,ОписаниеОшибки)
	
	фОбработано = 0;
	//Если ВРег(Тип) = ВРег("DGint5") Тогда
	//	Если ТипЗначенияСтр(Значение)="Число" Тогда
	//		Результат = Строка(Значение);
	//	КонецЕсли;
	//	Результат = ДополнитьСтроку(Результат,"0",5,1);
	//    фОбработано = 1;
	//КонецЕсли;
	
	Возврат фОбработано;
КонецФункции

Функция ПреобразоватьТипXMLx1201002(Значение,Тип,Результат,ОписаниеОшибки)
	// колонки 3S 4S 5 5S 6 - ДОЛЖНЫ БЫТЬ В ТЕКСТЕ ВЫГРУЗКИ ВСЕГДА (ДАЖЕ ЕСЛИ ОНИ НЕ ЗАПОЛНЕНЫ)
	
	фОбработано = 0;
	Если ВРег(Тип) = ВРег("Decimal3Column")Тогда
		//Загальний тип "Числові дані 3 знаки після коми
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			//Результат = "&НеЗаписывать";
			Результат = "0.000";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=3; ЧРД=.; ЧГ=0");	
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		Попытка
			Контроль = Число(Результат);
			Если    (Найти(Результат, ".") = 0 ИЛИ (Найти(Результат, ".") < СтрДлина(Результат) - 3))  
				ИЛИ Цел(Контроль*1000) <> Контроль*1000 Тогда
				ОписаниеОшибки = "Значение не является числом c тремя знаками после запятой";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c тремя знаками после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("Decimal4Column")Тогда
		//Загальний тип "Числові дані 3 знаки після коми
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			//Результат = "&НеЗаписывать";
			Результат = "0.0000";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=4; ЧРД=.; ЧГ=0");	
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		Попытка
			Контроль = Число(Результат);
			Если    (Найти(Результат, ".") = 0 ИЛИ (Найти(Результат, ".") < СтрДлина(Результат) - 4))  
				ИЛИ Цел(Контроль*10000) <> Контроль*10000 Тогда
				ОписаниеОшибки = "Значение не является числом c четырьмя знаками после запятой";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c четырьмя знаками после запятой";
		КонецПопытки;	
		
	ИначеЕсли (ВРег(Тип) = ВРег("StrColumn")) Тогда
		  
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			//Результат = "&НеЗаписывать";
			Результат = "&ПустоеЗначение";
			Возврат 1;
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат фОбработано;
	
КонецФункции

//-----------------------------------
Функция ПреобразоватьТипXMLОбщий(Значение,Тип,Результат,ОписаниеОшибки = "")
	
	фОбработано = 1;
	
	Если ВРег(Тип) = ВРег("DGMonth") 
	 ИЛИ ВРег(Тип) = ВРег("MonthColumn")
	 ИЛИ ВРег(Тип) = ВРег("DGMonth0") Тогда
	 
		 //<!--Загальний тип "Місяць"-->
		//<!--Загальний тип "Місяць в колонці"-->
		Если НЕ ЗначениеЗаполнено(Значение)
			ИЛИ Значение = "0" Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СокрЛП(Значение);
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=2; ЧДЦ=0; ЧГ=0");
		ИначеЕсли ТипЗнч(Значение)=Тип("Дата") Тогда
			Результат = Месяц(Значение);
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;			
		
		Попытка
			Контроль = Число(Результат);
			Если ВРег(Тип) = ВРег("DGMonth0") Тогда
				МинЗнач = 0;
			Иначе
				МинЗнач = 1;
			КонецЕсли;
			
			Если    Найти(Результат, ".") > 0
				ИЛИ	Контроль < МинЗнач 
				ИЛИ Контроль > 12
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от "+МинЗнач+" до 12 (номер месяца)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от "+МинЗнач+" до 12 (номер месяца)";
		КонецПопытки;
	ИначеЕсли ВРег(Тип) = ВРег("DG0Month") Тогда
	 
		//<!-- Загальний тип "Місяц з нолем на початку"
		Если НЕ ЗначениеЗаполнено(Значение)
			ИЛИ Значение = "0" Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СокрЛП(Значение);
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=2; ЧДЦ=0; ЧВН=; ЧГ=0");
		ИначеЕсли ТипЗнч(Значение)=Тип("Дата") Тогда
			Результат = Формат(Месяц(Значение), "ЧЦ=2; ЧДЦ=0; ЧВН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;			
		
		Попытка
			Контроль = Число(Результат);
			МинЗнач = 1;
			
			Если    Найти(Результат, ".") > 0
				ИЛИ	Контроль < МинЗнач 
				ИЛИ Контроль > 12
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от "+МинЗнач+" до 12 (номер месяца)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от "+МинЗнач+" до 12 (номер месяца)";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGPType") Тогда
		
		// тип периода, значение от 1 до 5
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		Результат = СокрЛП(Формат(Значение,"ЧЦ=1; ЧДЦ=0"));
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 5
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 5 (код периода)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 5 (код периода)";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGSTAN") Тогда
		
		//<!--Загальний тип "Код Стан документа (1, 2, 3) (1-звітний документ 2-новий звітний документ 3-уточнюючий документ)"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		Результат = СокрЛП(Формат(Значение,"ЧЦ=1; ЧДЦ=0"));
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 3
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 3 (1-звітний документ 2-новий звітний документ 3-уточнюючий документ)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 3 (1-звітний документ 2-новий звітний документ 3-уточнюючий документ)";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGsti") Тогда
		//<!--Загальний тип "Код ДПІ, використовується для обмеження коду області"-->
		// число, от 1 до 99
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Формат(Значение,"ЧЦ=2; ЧДЦ=0"));

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 99
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 99 (код ГНИ)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 99 (код ГНИ)";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGreg")
		  ИЛИ ВРег(Тип) = ВРег("RegColumn") Тогда
		//<!--Загальний тип "Код номера області"--> (1...29)
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Формат(Значение,"ЧЦ=2; ЧДЦ=0"));
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 29
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 29 (код номера области)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 29 (код номера области)";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("I8Column")) 
		  ИЛИ (ВРег(Тип) = ВРег("DGI8")) Тогда
		
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 10000000 
				ИЛИ Контроль > 99999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 10000000 до 99999999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 10000000 до 99999999";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGI7nomColumn")) 
		  ИЛИ (ВРег(Тип) = ВРег("DGI7nom")) Тогда
		
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 9999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 9999999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 9999999";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGInomColumn")) 
		  ИЛИ (ВРег(Тип) = ВРег("DGInom")) Тогда
		
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("IntColumn") Тогда
		//<!--Загальний тип "Цілі дані"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом";
		КонецПопытки;
		
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGLong12")) 
		  ИЛИ (ВРег(Тип) = ВРег("DGLong12Column")) 
		  ИЛИ (ВРег(Тип) = ВРег("DGHNPDV")) 
		  ИЛИ (ВРег(Тип) = ВРег("DGHIPN")) 
		  ИЛИ (ВРег(Тип) = ВРег("IndTaxNumColumn")) Тогда
		  
		//<!--Загальний тип "Індивідуальний податковий номер "-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1000 
				ИЛИ Контроль > 999999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1000 до 999999999999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1000 до 999999999999";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGI2i")) Тогда
		
		//<!--Загальний тип "Число від 0 до 99"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 99
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 0 до 99";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 0 до 99";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGI3i")) Тогда
		
		//<!--Загальний тип "Число від 0 до 999"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 0 до 999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 0 до 999";
		КонецПопытки;
		
	ИначеЕсли  (ВРег(Тип) = ВРег("DGI4nomColumn")) 
		   ИЛИ (ВРег(Тип) = ВРег("DGI4nom")) Тогда
		
		//<!--Загальний тип колонки таблиці "Число від 1 до ... 9999" [номер філії, кількість, №рядка]-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 9999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 9999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 9999";
		КонецПопытки;
		
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGI5i")) Тогда
		
		//<!--Загальний тип "Число від 1000 до 99999"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1000 
				ИЛИ Контроль > 99999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1000 до 99999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1000 до 99999";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGDate")	
		ИЛИ ВРег(Тип) = ВРег("DGHDDGVSD")
		ИЛИ ВРег(Тип) = ВРег("DGHDDGVUM")
		ИЛИ ВРег(Тип) = ВРег("DateColumn") Тогда
		//<!--Загальний тип "Дата у форматі ддммрррр"--> 
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Дата") Тогда
			Результат = Формат(Значение,"ДФ=ddMMyyyy");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Дата("" + Сред(Результат,5,4) + Сред(Результат,3,2) + Сред(Результат,1,2));
			Если    СтрДлина(Результат) <> 8 
				ИЛИ Контроль < '19000101' Тогда
				ОписаниеОшибки = "Значение не является датой (после 1900 года)";	
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является датой";
		КонецПопытки;			
		
	ИначеЕсли ВРег(Тип) = ВРег("DGMonthYear")	
		ИЛИ ВРег(Тип) = ВРег("DGMonthYearColumn") Тогда
		//<!--Загальний тип "Місяц і рік"-->
		//<xs:length value="6"/>
		//<xs:pattern value="(((0[1-9])|(1[0-2]))(20)\d{2})"/>
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Дата") Тогда
			Результат = Формат(Значение,"ДФ=MMyyyy");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Дата("" + Сред(Результат,3,4) + Сред(Результат,1,2) + "01");
			Если СтрДлина(Результат) <> 8 Тогда
				ОписаниеОшибки = "Значение не является месяцем и годом (в формате ММГГГГ)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является месяцем и годом (в формате ММГГГГ)";
		КонецПопытки;			
		
	ИначеЕсли ВРег(Тип) = ВРег("DGDateEndKv") Тогда
		//<!--Загальний тип Дата кінець квартала у форматі ддммрррр"
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Дата") Тогда
			Результат = Формат(Значение,"ДФ=ddMMyyyy");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Дата("" + Сред(Результат,5,4) + Сред(Результат,3,2) + Сред(Результат,1,2));
			Если КонецДня(Контроль) <> КонецКвартала(Контроль) Тогда
				ОписаниеОшибки = "Дата не является концом квартала";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является датой";
		КонецПопытки;			
		
	ИначеЕсли ВРег(Тип) = ВРег("DGchk") 
		  ИЛИ ВРег(Тип) = ВРег("ChkColumn") Тогда
		//чекбокс
		//<!--Загальний тип "Ознака"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение) = Тип("Булево") Тогда
			Если Значение Тогда
				Результат = 1;
			Иначе
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Если Значение = 1 Тогда
				Результат = 1;
			Иначе
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = 1;
		Иначе
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGint2") Тогда
		//<!--Загальний тип "2 значне ціле додатне число"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",2,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 99
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым двузначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым двузначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGint3") Тогда
		//<!--Загальний тип "3 значне ціле додатне число"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",3,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым трехзначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым трехзначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGint5") Тогда
		//<!--Загальний тип "5 значне ціле додатне число"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",5,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 99999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым пятизначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым пятизначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGKOATUU") Тогда
		//<!--Загальний тип "Код КОАТУУ (9-10 знаків)"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=10; ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",10,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 9999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является 9-и или 10-и значным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является 9-и или 10-и значным числом";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("xs:string"))
		  ИЛИ (ВРег(Тип) = ВРег("DGHNDGVUM"))
		  ИЛИ (ВРег(Тип) = ВРег("StrColumn")) Тогда
		  
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		  
	ИначеЕсли (ВРег(Тип) = ВРег("DGHNAME"))
		  ИЛИ (ВРег(Тип) = ВРег("DGHLOC"))
		  ИЛИ (ВРег(Тип) = ВРег("DGLOC"))
		  ИЛИ (ВРег(Тип) = ВРег("DGHSTI")) Тогда
		  
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе
			Результат = СокрП(Строка(Значение));
		КонецЕсли;
		
		Контроль = СтрДлина(Результат);
		Если Контроль = 0 Тогда
		
			ОписаниеОшибки = "Значение должно содержать хотя бы один символ";	
		
		КонецЕсли;
		
		
	ИначеЕсли (ВРег(Тип) = ВРег("xs:decimal"))  
		  ИЛИ (ВРег(Тип) = ВРег("DecimalColumn")) Тогда
		// десятичная дробь
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=2; ЧРД=.; ЧН=0.00; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
		Исключение
			ОписаниеОшибки = "Значение не является числом";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("xs:int"))
		  ИЛИ (ВРег(Тип) = ВРег("xs:integer")) Тогда
		
		//это показатели, имеющие целый тип, и значение лежащее в определенном диапазоне,
		//но сам показатель может не заполняться. 
		//Проблема: невозможно опеределить показатель равен нулю или "не заполнялся" если он числового типа. 
		//Поэтому, делаем такое предположение:
		//если в обработку передан показатель типа "Число" - он будет записан в выходной файл.
		//если тип = "Строка", показатель будет преобразован к числу и записан только если он не пуст.
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Если ПустаяСтрока(Значение) Тогда
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецЕсли;
			Попытка
				Результат = Формат(Число(Значение),"ЧДЦ=0; ЧГ=0");
			Исключение
				ОписаниеОшибки = "Значение не является целым числом";
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецПопытки
		Иначе
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");	
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если  Найти(Результат, ".") > 0
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом";
		КонецПопытки;			
		
	ИначеЕсли ВРег(Тип) = ВРег("xs:nonNegativeInteger") Тогда
		// целое, больше равно(?) нулю
		
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Если ПустаяСтрока(Значение) Тогда
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение, "ЧДЦ=0; ЧН=0; ЧГ=0");				
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым, неотрицательным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым, неотрицательным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("xs:unsignedInt") Тогда
		// целое, больше равно(?) нулю
		
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Если ПустаяСтрока(Значение) Тогда
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецЕсли;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение, "ЧДЦ=0; ЧН=0; ЧГ=0");				
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым, неотрицательным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым, неотрицательным числом";
		КонецПопытки;
		
		
		
	ИначеЕсли ВРег(Тип) = ВРег("DGOdoh")
		 ИЛИ  ВРег(Тип) = ВРег("OdohColumn")
		 ИЛИ  ВРег(Тип) = ВРег("DGOsp")
		 ИЛИ  ВРег(Тип) = ВРег("OspColumn")
		 ИЛИ  ВРег(Тип) = ВРег("DGOzn12")
		 ИЛИ  ВРег(Тип) = ВРег("Ozn2Column")
		 ИЛИ  ВРег(Тип) = ВРег("DGI2inom")
		 Тогда	
		//DGOdoh  Загальний тип "Ознака доходу від 1 до 66 для ДРФО"-->
		//DGOsp   Загальний тип "Код від 1 до 4 знаків ДРФО, ознака типу документа для Реєстра накладних"--> 
		//DGOzn12 Загальний тип "Код 1/2 для ДРФО"-->
		 
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если 	 ВРег(Тип) = ВРег("DGOdoh")
				 ИЛИ  ВРег(Тип) = ВРег("OdohColumn") Тогда
				МаксЗнач = 66;
			ИначеЕсли  ВРег(Тип) = ВРег("DGOsp")
				  ИЛИ  ВРег(Тип) = ВРег("OspColumn") Тогда
				МаксЗнач = 4;				 
			ИначеЕсли ВРег(Тип) = ВРег("DGOzn12")
				  ИЛИ  ВРег(Тип) = ВРег("Ozn2Column")
				  ИЛИ  ВРег(Тип) = ВРег("DGI2inom")
				  Тогда
				МаксЗнач = 2;  
			КонецЕсли;
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > МаксЗнач
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до "+МаксЗнач;
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом!";
		КонецПопытки;

	ИначеЕсли ВРег(Тип) = ВРег("DGOzn")
		  ИЛИ ВРег(Тип) = ВРег("OznColumn") Тогда
		//<!--Загальний тип "Код 0/1 для ДРФО"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 1
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 0 до 1";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом!";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGCodPilg") 
		  ИЛИ ВРег(Тип) = ВРег("CodPilgColumn") Тогда
		//<!--Загальний тип "Код пільги (8 знаків)"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=8; ЧДЦ=0; ЧРД=.; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",8,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 99999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым восьмизначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым восьмизначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGmfo") Тогда
		//<!--Загальний тип "Код МФО (6 знаків)"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=6; ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",6,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым шестизначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым шестизначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGTn-Zed")
		  ИЛИ ВРег(Тип) = ВРег("Tn-ZedColumn") Тогда
		//<!--Загальний тип "Код транспортного засобу (10 знаків)" с 11/12/2008-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=10; ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",10,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 9999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым десятизначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым десятизначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGUKTZED")
		  ИЛИ ВРег(Тип) = ВРег("UKTZEDColumn") Тогда
		//<!--Загальний тип "Код зовнішньоекономічної діяльності"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение," ","");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",10,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 9999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым десятизначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым десятизначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGkved") 
		  ИЛИ ВРег(Тип) = ВРег("DGkvedColumn") Тогда
		  
		//<!--Загальний тип "КВЕД"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = Значение;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=5; ЧДЦ=0; ЧВН=; ЧГ=0");
			Результат = Лев(Результат,2) + "." + Сред(Результат, 3,2) + "." + Прав(Результат,1);
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;	
		Результат = ДополнитьСтрокуСимволами(Результат,"0",7,1);
		
		Цифры = "0123456789";
		Контроль = 1;
		Для Сч = 1 По 7 Цикл
			Если Сч = 3 ИЛИ Сч = 6 Тогда
				Если Сред(Результат, Сч, 1) <> "." Тогда
					Контроль = 0;
					Прервать;
				КонецЕсли;
			Иначе
				Если Найти(Цифры, Сред(Результат, Сч,1)) = 0 Тогда
					Контроль = 0;
					Прервать;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла; 
		Если Контроль = 0 Тогда
			ОписаниеОшибки = "Значение не является кодом КВЕД (в формате: хх.xx.x)"
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGKv") Тогда
		//<!--Загальний тип "Квартал"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 4
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 4";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 4";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGNYear")
		   ИЛИ  ВРег(Тип) = ВРег("YearNColumn") Тогда
		//<!--Загальний тип "Рік народження"-->
		Если НЕ ЗначениеЗаполнено(Значение) 
			ИЛИ Значение = "0" Тогда 
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1900 
				ИЛИ Контроль > 2099
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1900 до 2099";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1900 до 2099";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGYear") 
		  ИЛИ ВРег(Тип) = ВРег("YearColumn") Тогда
		//<!--Загальний тип "Рік"-->
		Если НЕ ЗначениеЗаполнено(Значение) 
			ИЛИ Значение = "0" Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1991 
				ИЛИ Контроль > 2099
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1991 до 2099";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1991 до 2099";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHZIP") Тогда
		//<!--Загальний тип "Код міста"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение," ","");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		Результат = ДополнитьСтрокуСимволами(Результат,"0",5,1);
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 99999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым пятизначным числом";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым пятизначным числом";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHEMAIL") Тогда
		//<!--Загальний тип "Електронна пошта"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Контроль = 1;
		ПозицияСобачки = Найти(Результат, "@");
		Если ПозицияСобачки = 0 Тогда
			Контроль = 0;
		Иначе
			
			Если Найти(Сред(Результат, ПозицияСобачки + 1), "@") > 0 Тогда
				Контроль = 0;	
			КонецЕсли;
			
		КонецЕсли;
		
		Если Контроль = 0 Тогда
			ОписаниеОшибки = "Значение не адресом электронной почты (в формате <текст>@<текст>)";
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHTEL")
		  ИЛИ ВРег(Тип) = ВРег("DGHFAX") Тогда
		//<!--Загальний тип "Номер телефона"-->
		//<!--Загальний тип "Номер факса"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Контроль = 1;
		ДопустимыСимволы = "0 1 2 3 4 5 6 7 8 9 .,+-;()";
		Для Сч = 1 По СтрДлина(Результат) Цикл
			Если Найти(ДопустимыСимволы, Сред(Результат,Сч,1)) = 0 Тогда
				Контроль = 0;
				Прервать;
			КонецЕсли;	
		КонецЦикла;			
		
		Если Контроль = 0 Тогда
			ОписаниеОшибки = "Можно использовать только следующие символы: " + ДопустимыСимволы + "
							 |Длина должна быть более 4-х символов";
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal0")
		  ИЛИ ВРег(Тип) = ВРег("Decimal0Column")Тогда
		//<!--Загальний тип "Числові дані 0 знаки після коми"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧН=; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		
		Попытка
			Контроль = Число(Результат);
			Если (Найти(Результат, ".") > 0 И (Найти(Результат, ".") < СтрДлина(Результат)-2))
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом до 9000000000";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом до 9000000000";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal1")
		  ИЛИ ВРег(Тип) = ВРег("Decimal1Column")
		  ИЛИ ВРег(Тип) = ВРег("DGKODR") Тогда
		//<!--Загальний тип "Числові дані 1 знак після коми"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=1; ЧРД=.; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);

		Попытка
			Контроль = Число(Результат);
			Если   (Найти(Результат, ".") = 0 ИЛИ (Найти(Результат, ".") < СтрДлина(Результат)-2)) 
				//в схеме разрешено иметь два значащих знака после запятой...
				ИЛИ Цел(Контроль*10) <> Контроль*10 Тогда
				ОписаниеОшибки = "Значение не является числом c одним знаком после запятой";
			КонецЕсли;
			
			Если ВРег(Тип) = ВРег("DGKODR")
				И (Контроль > 99.9) Тогда
				ОписаниеОшибки = "Значение не является двузначным числом c одним знаком после запятой";	
			КонецЕсли;
			
		Исключение
			ОписаниеОшибки = "Значение не является числом c одним знаком после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal2")
		  ИЛИ ВРег(Тип) = ВРег("Decimal2Column")Тогда
		//<!--Загальний тип "Числові дані 2 знак після коми"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=2; ЧРД=.; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);

		Попытка
			Контроль = Число(Результат);
			Если    (Найти(Результат, ".") = 0 ИЛИ (Найти(Результат, ".") < СтрДлина(Результат)-2)) 
				ИЛИ Цел(Контроль*100) <> Контроль*100 Тогда
				ОписаниеОшибки = "Значение не является числом c двумя знаком после запятой меньшее 9000000000";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c двумя знаком после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGpercentAlloc") Тогда
		
		//<!--Загальний тип "проценти розподілу, питома вага, числові дані, можливо з 2 знаками після коми, від 0 до 100 включно"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=2; ЧРД=.; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);

		Попытка
			Контроль = Число(Результат);
			Если   (Найти(Результат, ".") < СтрДлина(Результат)-2) 
				ИЛИ Цел(Контроль*100) <> Контроль*100 
				ИЛИ Контроль >100 Тогда
				ОписаниеОшибки = "Значение не является числом c двумя знаком после запятой меньшее 9000000000";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c двумя знаком после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal3")
		  ИЛИ ВРег(Тип) = ВРег("Decimal3Column")Тогда
		//Загальний тип "Числові дані 3 знаки після коми
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=3; ЧРД=.; ЧГ=0");	
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		Попытка
			Контроль = Число(Результат);
			Если    (Найти(Результат, ".") = 0 ИЛИ (Найти(Результат, ".") < СтрДлина(Результат) - 3))  
				ИЛИ Цел(Контроль*1000) <> Контроль*1000 Тогда
				ОписаниеОшибки = "Значение не является числом c тремя знаками после запятой";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c тремя знаками после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal4")
		  ИЛИ ВРег(Тип) = ВРег("Decimal4Column") Тогда
		//Загальний тип "Числові дані 4 знаки після коми
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=4; ЧРД=.; ЧГ=0");
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		Попытка
			Контроль = Число(Результат);
			Если   Найти(Результат, ".") <> СтрДлина(Результат) - 4  
				ИЛИ Цел(Контроль*10000) <> Контроль*10000 Тогда
				ОписаниеОшибки = "Значение не является числом c четырьмя знаками после запятой";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c четырьмя знаками после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal5")
		  ИЛИ ВРег(Тип) = ВРег("Decimal5Column") Тогда
		//Загальний тип "Числові дані 5 знаки після коми
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=5; ЧРД=.; ЧГ=0");
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		Попытка
			Контроль = Число(Результат);
			Если   Найти(Результат, ".") <> СтрДлина(Результат) - 5  
				ИЛИ Цел(Контроль*100000) <> Контроль*100000 Тогда
				ОписаниеОшибки = "Значение не является числом c пятью знаками после запятой";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c пятью знаками после запятой";
		КонецПопытки;
			
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimal6")
		  ИЛИ ВРег(Тип) = ВРег("Decimal6Column") Тогда
		//Загальний тип "Числові дані 6 знаки після коми
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=6; ЧРД=.; ЧГ=0");
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;
		Результат = СокрЛП(Результат);
		
		Попытка
			Контроль = Число(Результат);
			Если   Найти(Результат, ".") <> СтрДлина(Результат) - 6  
				ИЛИ Цел(Контроль*1000000) <> Контроль*1000000 Тогда
				ОписаниеОшибки = "Значение не является числом c шестью знаками после запятой";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является числом c шестью знаками после запятой";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGDrfo") //<!--Загальний тип "Код ДРФО фізичної особи допускається числовий код, або № паспорта"-->
		ИЛИ ВРег(Тип) = ВРег("DGLong")   //<!--Загальний тип "Код ЄДРПОУ (ДРФО підприємця: числа, або № паспорта)"-->
		ИЛИ ВРег(Тип) = ВРег("DGHTINF")  //<!--Загальний тип "Код HTINF (Ідентифікаційний номер платника згідно з ДРФО)"-->
		ИЛИ ВРег(Тип) = ВРег("DGHTINSD") //<!--Загальний тип "Код HTINSD (Реєстраційний (обліковий) номер платника )"--> 
		ИЛИ ВРег(Тип) = ВРег("TinColumn")//<!--Загальний тип "Код ЕДРПОУ(ДРФО) в колонці"-->
		ИЛИ ВРег(Тип) = ВРег("DGHKBOS")  //<!--Загальний тип "Код ДРФО директора"-->
		ИЛИ ВРег(Тип) = ВРег("DGHKBUH")  //<!--Загальний тип "Код ДРФО бухгалтера"-->
		Тогда 
		//<xs:pattern value="([0-9]{5,10}|[АБВГДЕЄЖЗИІКЛМНОПРСТУФХЦЧШЩЮЯ]{2}[0-9]{6})"/>
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = Значение;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		КонецЕсли;
		Результат = СокрЛП(Значение);
		
		Контроль = 1;
		Если Найти("0123456789", Лев(Результат,1)) > 0 Тогда
			// начинается с цифр - значит от 5 до 10
			Если    СтрДлина(Результат) < 5
				ИЛИ СтрДлина(Результат) > 10 Тогда
				Контроль = 0;	
			Иначе
				// Дополним нулями до 10 знаков только для явных кодов ДРФО: чтобы TIN (тип DGLONG) 
				// для юр.лиц не был десятизначным. С точки зрения XML это нормально, но есть некоторые внешние нестыковки
				Если (ВРег(Тип) <> ВРег("DGLong"))//<!--Загальний тип "Код ЄДРПОУ (ДРФО підприємця: числа, або № паспорта)"-->
		          И  (ВРег(Тип) <> ВРег("TinColumn"))
				  И  (ВРег(Тип) <> ВРег("DGHTINSD")) Тогда
					Результат = ДополнитьСтрокуСимволами(Результат,"0",10,1);
				КонецЕсли;				
				Для Сч = 1 По СтрДлина(Результат) Цикл
					Если Найти("0123456789", Сред(Результат,Сч,1)) = 0 Тогда
						Контроль = 0;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		Иначе
			// должен быть номер паспорта
			Если    СтрДлина(Результат) <> 8
				ИЛИ	Найти("АБВГДЕЄЖЗИІКЛМНОПРСТУФХЦЧШЩЮЯ",Сред(Результат,1,1)) = 0
				ИЛИ Найти("АБВГДЕЄЖЗИІКЛМНОПРСТУФХЦЧШЩЮЯ",Сред(Результат,2,1)) = 0 
				ИЛИ Найти("0123456789",Сред(Результат,3,1)) = 0 
				ИЛИ Найти("0123456789",Сред(Результат,4,1)) = 0 
				ИЛИ Найти("0123456789",Сред(Результат,5,1)) = 0 
				ИЛИ Найти("0123456789",Сред(Результат,6,1)) = 0 
				ИЛИ Найти("0123456789",Сред(Результат,7,1)) = 0 
				ИЛИ Найти("0123456789",Сред(Результат,8,1)) = 0 Тогда
				Контроль = 0;				               
			КонецЕсли;
		КонецЕсли;
		
		Если Контроль = 0 Тогда
		
			ОписаниеОшибки = "Неправильно указан ИНН (код по ДРФО) либо Серия и номер паспорта для физ. лица, у которого нет кода.
							 |Паспорт указывается в формате ССНННННН (СС - серия, НННННН - номер паспорта)"
		
		КонецЕсли;
		
		
	ИначеЕсли ВРег(Тип) = ВРег("DGPass") //<!--Загальний тип "№ паспорта" (HPASS)-->
		Тогда 
		//<xs:pattern value="[АБВГДЕЄЖЗИІКЛМНОПРСТУФХЦЧШЩЮЯ]{2}[0-9]{6}"/>
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = Значение;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		КонецЕсли;
		Результат = СокрЛП(Значение);
		
		Контроль = 1;
		// должен быть номер паспорта
		Если    СтрДлина(Результат) <> 8
			ИЛИ	Найти("АБВГДЕЄЖЗИІКЛМНОПРСТУФХЦЧШЩЮЯ",Сред(Результат,1,1)) = 0
			ИЛИ Найти("АБВГДЕЄЖЗИІКЛМНОПРСТУФХЦЧШЩЮЯ",Сред(Результат,2,1)) = 0 
			ИЛИ Найти("0123456789",Сред(Результат,3,1)) = 0 
			ИЛИ Найти("0123456789",Сред(Результат,4,1)) = 0 
			ИЛИ Найти("0123456789",Сред(Результат,5,1)) = 0 
			ИЛИ Найти("0123456789",Сред(Результат,6,1)) = 0 
			ИЛИ Найти("0123456789",Сред(Результат,7,1)) = 0 
			ИЛИ Найти("0123456789",Сред(Результат,8,1)) = 0 Тогда
			Контроль = 0;				               
		КонецЕсли;
		
		Если Контроль = 0 Тогда
		
			ОписаниеОшибки = "Неправильно Серия и номер паспорта для физ. лица, у которого нет кода.
							 |Паспорт указывается в формате ССНННННН (СС - серия, НННННН - номер паспорта)"
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGNLong") //<!--Загальний тип "Код ЄДРПОУ (тiльки числа)"-->
		ИЛИ ВРег(Тип) = ВРег("DGHTINJ") //<!--Загальний тип " Код HTINJ (Ідентифікаційний код платника згідно з ЄДРПОУ)"-->
		ИЛИ ВРег(Тип) = ВРег("DGHTINNR")//<!--Загальний тип "Код HTINNR (Ідентифікаційний код представництвa нерезидента, що не має статусу юридичної особи)"--> 
		Тогда 
		//<xs:restriction base="xs:string">
		//<xs:pattern value="([0-9]{5,10})"/>
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = Значение;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		КонецЕсли;
		Результат = СокрЛП(Значение);
		// начинается с цифр - значить от 5 до 10
		Результат = ДополнитьСтрокуСимволами(Результат,"0",8,1);
		
		Контроль = 1;
		Если    СтрДлина(Результат) < 5
			ИЛИ СтрДлина(Результат) > 10 Тогда
			Контроль = 0;	
		Иначе
			Для Сч = 1 По СтрДлина(Результат) Цикл
				Если Найти("0123456789", Сред(Результат,Сч,1)) = 0 Тогда
					Контроль = 0;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	
		Если Контроль = 0 Тогда
		
			ОписаниеОшибки = "Неправильно указан код по ЕДРПОУ (допускаются только цифры от 5 до 10 символов)"
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHNDGVSD") Тогда
		//<!--Загальний тип "Код HNDGVSD (№ договору про спільну (сумісну) діяльність)"-->
		Если Не ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Строка(Значение));
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHNSPDV") Тогда
		//<!--Загальний тип "Код HNSPDV (номер свідоцтва про реєстрацію платника ПДВ)"-->
		//<!-- 30.12.2010 Внесено можливість вносити 0 відповідно до п.8 наказу ДПАУ від 21.12.2010 N969
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение," ","");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 9999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 0 до 9999999999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 0 до 9999999999";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHTINUM") Тогда
		//<!--Загальний тип "Код HTINUM (податковий номер платника, що проводить управління майном)"-->
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение," ","");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Результат) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 1 
				ИЛИ Контроль > 9999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 1 до 9999999999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 1 до 9999999999";
		КонецПопытки;
		
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHBOS")  //<!--Загальний тип "ПІБ директора"-->
		  ИЛИ ВРег(Тип) = ВРег("DGHBUH")  //<!--Загальний тип "ПІБ бухгалтера"-->
		  ИЛИ ВРег(Тип) = ВРег("DGHFO")   //<!--Загальний тип "ПІБ фізичної особи"-->
		  Тогда
		
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Строка(Значение));
		
		Если СтрДлина(Результат) = 0 Тогда
			ОписаниеОшибки = "Длина реквизита должна быть не менее одного символа";	
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("rowInt") Тогда
		//<!--Загальний тип атрибуту ROWNUM для вказання номеру строки в табличних даних-->
		Если ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
			ПозицияТочки = Найти(Результат, ".");
			Если ПозицияТочки > 0 Тогда
				Результат = Лев(Результат, СтрДлина(Результат) - ПозицияТочки - 1);
			КонецЕсли;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе
			Результат = Строка(Значение);
		КонецЕсли;	
		
		
	ИначеЕсли ВРег(Тип) = ВРег("DG5-10-15nmg") Тогда
		//<!--Загальний тип "5-10-15 неоподатковуваних мінімумів "-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧГ=0");
		Иначе	
			Результат = СокрЛП(Строка(Результат));		
		КонецЕсли;
		
		Если  Результат <> "5"
			И Результат <> "10"
			И Результат <> "15" Тогда
		
			ОписаниеОшибки = "Значением может быть либо 5 либо 10 либо 15"	
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGHNUM_N") Тогда
		//<!--Загальний тип "Номер для накладної - число, слеш і літери зц"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе	
			Результат = ВРЕГ(СокрЛП(Строка(Результат)));		
		КонецЕсли;
		
		ЕстьОшибка = Ложь;
		Контроль = Результат;
		Если Найти("0123456789", Лев(Контроль,1)) = 0 Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
		
		Если Найти(Контроль, "//") > 0 Тогда
			ЕстьОшибка = Истина;
		КонецЕсли;
		
		Если Не ЕстьОшибка Тогда
			Контроль = СтрЗаменить(Контроль, "/ЗЦ","");	
			Контроль = СтрЗаменить(Контроль, "/","");	
			Контроль = СтрЗаменить(Контроль, "0","");	
			Контроль = СтрЗаменить(Контроль, "1","");	
			Контроль = СтрЗаменить(Контроль, "2","");	
			Контроль = СтрЗаменить(Контроль, "3","");	
			Контроль = СтрЗаменить(Контроль, "4","");	
			Контроль = СтрЗаменить(Контроль, "5","");	
			Контроль = СтрЗаменить(Контроль, "6","");	
			Контроль = СтрЗаменить(Контроль, "7","");	
			Контроль = СтрЗаменить(Контроль, "8","");	
			Контроль = СтрЗаменить(Контроль, "9","");	
			Если СтрДлина(Контроль) > 0 Тогда
				ЕстьОшибка = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЕстьОшибка Тогда
		
			ОписаниеОшибки = "Номер накладной должен быть в виде числа, или в виде ""число/число"" или ""число/ЗЦ"" или ""число/число/ЗЦ"" и т. п.";			
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGKodDocROVPD3_1") 
		  ИЛИ ВРег(Тип) = ВРег("KodDocROVPD3_1Column") Тогда
		  
		//<!--Загальний тип "вид(код) документа" Реєстру отриманих та виданих податкових накладних" версія 3 розділ 1
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе	
			Результат = ВРЕГ(СокрЛП(Строка(Результат)));		
		КонецЕсли;
		
		Если  Результат <> "ПН"   И Результат <> "ПЗ"    И Результат <> "ЧКУ"
			И Результат <> "РК"   И Результат <> "ПО"    И Результат <> "ТКУ"
			И Результат <> "ВМД"  И Результат <> "ЗП"    И Результат <> "ГРУ" 
			И Результат <> "ЧК"   И Результат <> "ПНУ"   И Результат <> "ПЗУ"
			И Результат <> "ТК"   И Результат <> "РКУ"   И Результат <> "ПОУ" 
			И Результат <> "ГР"   И Результат <> "ВМДУ"  И Результат <> "ЗПУ" Тогда
		
			ОписаниеОшибки = "Значением может быть только одно из следующих: ПН, РК, ВМД, ЧК, ТК, ГР, ПЗ, ПО, ЗП, ПНУ, РКУ, ВМДУ, ЧКУ, ТКУ, ГРУ, ПЗУ, ПОУ, ЗПУ";	
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGKodDocROVPD3_2") 
		  ИЛИ ВРег(Тип) = ВРег("KodDocROVPD3_2Column") Тогда
		  
		//<!--Загальний тип "вид(код) документа" Реєстру отриманих та виданих податкових накладних" версія 3 розділ 2
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе	
			Результат = ВРЕГ(СокрЛП(Строка(Результат)));		
		КонецЕсли;
		
		Если  Результат <> "ПН"   И Результат <> "ПНУ" 
			И Результат <> "РК"   И Результат <> "РКУ" 
			И Результат <> "ВМД"  И Результат <> "ВМДУ"
			И Результат <> "ПП"   И Результат <> "ППУ"
			И Результат <> "ЗЦ"   И Результат <> "ЗЦУ" Тогда
		
			ОписаниеОшибки = "Значением может быть только одно из следующих: ПН, РК, ВМД, ПП, ЗЦ, ПНУ, РКУ, ВМДУ, ППУ, ЗЦУ";	
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGKodDocROVPD5_2") 
		  ИЛИ ВРег(Тип) = ВРег("DGKodDocROVPD5_2Column") Тогда
		  
		//<!--Загальний тип "вид(код) документа" Реєстру отриманих та виданих податкових накладних" версія 5 розділ 1
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе	
			Результат = ВРЕГ(СокрЛП(Строка(Результат)));		
		КонецЕсли;
		
		Если  Результат <> "ПН"   И Результат <> "ПЗ"    И Результат <> "ЧКУ"
			И Результат <> "РК"   И Результат <> "ПО"    И Результат <> "ТКУ"
			И Результат <> "ВМД"  И Результат <> "ЗП"    И Результат <> "ГРУ" 
			И Результат <> "ЧК"   И Результат <> "ПНУ"   И Результат <> "ПЗУ"
			И Результат <> "ТК"   И Результат <> "РКУ"   И Результат <> "ПОУ" 
			И Результат <> "ГР"   И Результат <> "ВМДУ"  И Результат <> "ЗПУ" 
			И Результат <> "НП"   И Результат <> "НПУ"
			И Результат <> "ПНР"   И Результат <> "ПЗР"    И Результат <> "ЧКРУ"
			И Результат <> "РКР"   И Результат <> "ПОР"    И Результат <> "ТКРУ"
			И Результат <> "ВМДР"  И Результат <> "ЗПР"    И Результат <> "ГРРУ" 
			И Результат <> "ЧКР"   И Результат <> "ПНРУ"   И Результат <> "ПЗРУ"
			И Результат <> "ТКР"   И Результат <> "РКРУ"   И Результат <> "ПОРУ" 
			И Результат <> "ГРР"   И Результат <> "ВМДРУ"  И Результат <> "ЗПРУ" 
			И Результат <> "НПР"   И Результат <> "НПРУ"			
			И Результат <> "БО"   И Результат <> "БОРУ"  И Результат <> "БОР" И Результат <> "БОУ"
			Тогда
		
			ОписаниеОшибки = "Значением может быть только одно из следующих: ПН, РК, ВМД, ЧК, ТК, ГР, ПЗ, ПО, ЗП, ПНУ, РКУ, ВМДУ, ЧКУ, ТКУ, ГРУ, ПЗУ, ПОУ, ЗПУ,
			|ПНР, РКР, ВМДР, ЧКР, ТКР, ГРР, ПЗР, ПОР, ЗПР, ПНРУ, РКРУ, ВМДРУ, ЧКРУ, ТКРУ, ГРРУ, ПЗРУ, ПОРУ, ЗПРУ, БОРУ,БО,БОР,БОУ";
		
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGKodDocROVPD5_1") 
		  ИЛИ ВРег(Тип) = ВРег("DGKodDocROVPD5_1Column") Тогда
		  
		//<!--Загальний тип "вид(код) документа" Реєстру отриманих та виданих податкових накладних" версія  розділ 2
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		Иначе	
			Результат = ВРЕГ(СокрЛП(Строка(Результат)));		
		КонецЕсли;
		
		Если  ЛЕВ(Результат,2) <> "ПН"
			И Результат <> "РК"   И Результат <> "РКУ" 
			И Результат <> "ВМД"  И Результат <> "ВМДУ"
			И Результат <> "БО"   И Результат <> "БОУ" Тогда
		
			ОписаниеОшибки = "Значением может быть только одно из следующих: ПН[01...11][У], РК, ВМД, ПП, ЗЦ, ПНУ, РКУ, ВМДУ, ППУ, ЗЦУ";	
			
		ИначеЕсли ЛЕВ(Результат,2) = "ПН" Тогда
			
			Серединка = Сред(Результат, 3);
			
			Если Прав(Серединка, 1) = "У" Тогда
				Серединка = Сред(Серединка, 1, СтрДлина(Серединка) - 1);
			КонецЕсли;
			
			Если Серединка = "" Тогда
			ИначеЕсли СтрДлина(Серединка) <> 2
				ИЛИ Найти("01", Лев(Серединка, 1)) 		   = 0
				ИЛИ Найти("0123456789", Прав(Серединка, 1)) = 0 
				ИЛИ (Лев(Серединка, 1) = "1" И Найти("01", Прав(Серединка, 1)) = 0) Тогда
			
					ОписаниеОшибки = "Значением может быть только одно из следующих: ПН[01...11][У], РК, ВМД, ПП, ЗЦ, ПНУ, РКУ, ВМДУ, ППУ, ЗЦУ";		
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGc_dpi") Тогда
		//<!--Загальний тип "Код ДПІ, використовується для обмеження коду області"-->
		// число, от 100 до 2799
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Формат(Значение,"ЧЦ=4; ЧДЦ=0; ЧГ="));

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 100 
				ИЛИ Контроль > 2799
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 100 до 2799 (код ГНИ)";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 100 до 2799 (код ГНИ)";
		КонецПопытки;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGspecNom") 
		  ИЛИ ВРег(Тип) = ВРег("DGspecNomColumn") Тогда
		//<!--Признак спеціальної податкової накладної"-->
		// строка, значение 2,3 или 4
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Формат(Значение,"ЧЦ=1; ЧДЦ=0"));

		Если  Результат<> "2"
			И Результат<> "3" 
			И Результат<> "4"Тогда
			ОписаниеОшибки = "Значение не является одним из значений: 2,3 или 4";
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGJ13001TypeDocColumn") Тогда
		//<!--Можливі варіанти Виду документа в запиті:
		//	ПН - податкова накладна;
		//	РК - розрахунок коригування до податкової накладної (додаток 2 до податкової накладної));"-->
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = ВРЕГ(СОКРЛП(Результат));
		
		Если  Результат<> "ПН"
			И Результат<> "РК" Тогда
			ОписаниеОшибки = "Значение не является одним из значений:ПН или РК";
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGPNtypr") Тогда
		
		//<!--Можливі значення значення 01, 02, ..., 11-->
		// строка
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Формат(Значение,"ЧЦ=2; ЧДЦ=0; ЧВН="));

		Если Результат = "" Тогда
		ИначеЕсли СтрДлина(Результат) <> 2
			ИЛИ Найти("01", Лев(Результат, 1)) 		    = 0
			ИЛИ Найти("0123456789", Прав(Результат, 1)) = 0 
			ИЛИ (Лев(Результат, 1) = "1" И Найти("01", Прав(Результат, 1)) = 0) Тогда
		
				ОписаниеОшибки = "Значением может быть только одно из 01...11";		
			
		КонецЕсли;
		
	ИначеЕсли ВРег(Тип) = ВРег("DGdecimalZero") Тогда
		//<!--Загальний тип "Числовий 0" 0, 0.0, або 0.00-->
		// строка
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;
		
		Результат = СокрЛП(Формат(Значение,"ЧЦ=1; ЧДЦ=0; ЧВН="));

		Если Результат = "" Тогда
		ИначеЕсли Результат <> "0"
			    И Результат <> "0.0"
			    И Результат <> "0.00" Тогда
				ОписаниеОшибки = "Значением может быть только ноль";		
		КонецЕсли;
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGHIPN0"))
	      ИЛИ (ВРег(Тип) = ВРег("HIPNColumn0"))
		Тогда
		
		//<!--Загальний тип "ІІндивідуальний податковий номер платника з можливістю внесення 0(нуля) "-->
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 0 
				ИЛИ Контроль > 999999999999
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 0 до 999999999999";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 0 до 999999999999";
		КонецПопытки;

	ИначеЕсли (ВРег(Тип) = ВРег("Odoh1DFColumn"))
	      ИЛИ (ВРег(Тип) = ВРег("DGOdoh1DF"))
		Тогда
		
		//<!--Загальний тип "Ознака доходу 1-ДФ з 01.01.2011"-->
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=0; ЧН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Контроль = Число(Результат);
			Если    Найти(Результат, ".") > 0
				ИЛИ Контроль < 101 
				ИЛИ Контроль > 178
				ИЛИ Цел(Контроль) <> Контроль Тогда
				ОписаниеОшибки = "Значение не является целым числом от 101 до 178";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является целым числом от 101 до 178";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("Oplg1DFColumn"))
	      ИЛИ (ВРег(Тип) = ВРег("DGOplg1DF"))
		Тогда
		
		//<!--Загальний тип "Ознака пільги 1-ДФ з 01.01.2011"-->
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=2; ЧДЦ=0; ЧВН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;

		Попытка
			Если  НЕ Результат =  ""
				И НЕ Результат =  "01"
				И НЕ Результат =  "02"
				И НЕ Результат =  "03"
				И НЕ Результат =  "04"  Тогда
				ОписаниеОшибки = "Значение не является кодом от 01 до 04";
			КонецЕсли;
		Исключение
			ОписаниеОшибки = "Значение не является кодом от 01 до 04";
		КонецПопытки;
		
	ИначеЕсли (ВРег(Тип) = ВРег("DGNPNColumn"))
	      ИЛИ (ВРег(Тип) = ВРег("DGNPN")) Тогда
		
		//////№ податкової накладної формат:
		////// nnnnnnN/nnnnn	де:
		////// - n необовязкове значення
		////// - N обовязкове значення
		////// (приклади значень: 125, 125/2, 125/012, 125/2012)
		Если ТипЗнч(Значение)=Тип("Строка") Тогда
			Результат = СтрЗаменить(Значение, " ", "");
			Результат = СтрЗаменить(Результат, ",", ".");
		ИначеЕсли ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧЦ=2; ЧДЦ=0; ЧВН=; ЧГ=0");
		Иначе
			Результат = СокрЛП(Строка(Значение));
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Результат) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		КонецЕсли;

		Попытка
			
			ПозицияСлэш = Найти(Результат,"/");
			Если ПозицияСлэш = 0 Тогда
			
				НомерНН = Результат;
				НомерПодрСпецРеж = "";	
			Иначе
				
				НомерНН = Лев(Результат, ПозицияСлэш - 1);
				НомерПодрСпецРеж = Сред(Результат, ПозицияСлэш + 1);
				
			КонецЕсли;
			
			// длина номера до 7 символов, только цифры, без ведущих нулей
			Если СтрДлина(НомерНН) > 7 Тогда
				ВызватьИсключение("");
			КонецЕсли;
			Для Инд = 1 По СтрДлина(НомерНН) Цикл
				Если (Инд = 1) И Найти("123456789", Сред(НомерНН, Инд, 1)) = 0 Тогда 
					ВызватьИсключение("");
				ИначеЕсли Найти("0123456789", Сред(НомерНН, Инд, 1)) = 0 Тогда
					ВызватьИсключение("");
				КонецЕсли;
			КонецЦикла;
			
			Если СтрДлина(НомерПодрСпецРеж) = 1 Тогда
				
				// только код спец режима = 2 или 3 или 4
				Если НЕ НомерПодрСпецРеж = "2" И
					 НЕ НомерПодрСпецРеж = "3" И
					 НЕ НомерПодрСпецРеж = "4" Тогда
					ВызватьИсключение("");				
				КонецЕсли;
				
			ИначеЕсли СтрДлина(НомерПодрСпецРеж) = 3 Тогда
				
				// только цифровой код подразделения
				Для Инд = 1 По 3 Цикл
					Если Найти("0123456789", Сред(НомерПодрСпецРеж, Инд, 1)) = 0 Тогда
						ВызватьИсключение("");
					КонецЕсли;
				КонецЦикла;
				
			ИначеЕсли СтрДлина(НомерПодрСпецРеж) = 4 Тогда
				// код спец режима = 2 или 3 или 4
				СпецРежим = Лев(НомерПодрСпецРеж,1);
				Если НЕ СпецРежим = "2" И
					 НЕ СпецРежим = "3" И
					 НЕ СпецРежим = "4" Тогда
					ВызватьИсключение("");				
				КонецЕсли;
				
				// цифровой код подразделения
				Для Инд = 2 По 4 Цикл
					Если Найти("0123456789", Сред(СпецРежим, Инд, 1)) = 0 Тогда
						ВызватьИсключение("");
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		Исключение
			ОписаниеОшибки = "Значение не корректным номером налогового документа: nnnnnnN/nnnnn, где n-необяз. значение, N - Обязательное; n и N - цифры.";
		КонецПопытки;

	ИначеЕсли ВРег(Тип) = ВРег("DGData")  или  ВРег(Тип) = ВРег("DDBODY") Тогда
	ИначеЕсли (ВРег(Тип) = ВРег("SimpleString")) Тогда
		Результат = Значение;
	ИначеЕсли ВРег(Тип) = ВРег("DGVYDZbora") Тогда
		//считаем, что пользователь должен заполнять правильно
	ИначеЕсли ВРег(Тип) = ВРег("DGSummaVKopejkah") Тогда
		// сумма в копейках
		Если ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение*100,"ЧДЦ=0; ЧН=0; ЧГ=0");
		КонецЕсли;
	ИначеЕсли ВРег(Тип) = ВРег("DGLCTRL") Тогда
		Если ТипЗнч(Значение)=Тип("Число") Тогда
			Результат = Формат(Значение,"ЧДЦ=2; ЧРД=,; ЧГ=0")
		КонецЕсли;	
	ИначеЕсли (ВРег(Тип) = ВРег("DGLongCSTRAX")) Тогда
		Если НЕ ЗначениеЗаполнено(Значение) Тогда
			Результат = "&НеЗаписывать";
			Возврат 1;
		ИначеЕсли ТипЗнч(Значение)=Тип("Строка") Тогда
			Попытка
				Результат = Формат(Число(Значение),"ЧЦ=12; ЧВН=; ЧГ=0");
			Исключение
				Результат = "&НеЗаписывать";
				Возврат 1;
			КонецПопытки
		КонецЕсли;
		
	Иначе
		Сообщить(НСтр("ru='Не поддерживаемый XML-тип ';uk='Не підтримуваний XML-Тип '")+Тип);
		
		ОписаниеОшибки = "Тип значения (" + Тип + ") не может быть преобразован!";
		фОбработано = 0;
		
	КонецЕсли;
	
	Возврат фОбработано;
	
КонецФункции
	
//-----------------------------------                 
Функция ПреобразоватьТипXML(Значение,Тип,ИмяСхемы,ОписаниеОшибки = "")
	
	// Если в списке переданных параметров отсутствует данный показатель, выгружать его не будем.
	Если Значение = Неопределено Тогда
		Возврат "&НеЗаписывать";
	КонецЕсли;
	
	Результат = Значение;
	
	фОбработано = 0;
	//Если необходима обработка какого либо из типов 
	// для отдельной схемы по другому, нужно добавить процедуру и обработчик
	Если ВРег(ИмяСхемы) = "J0100107" Тогда
		// пример, обработки "индивидуального" типа
		Если ПреобразоватьТипXMLJ0100107(Значение, Тип, Результат, ОписаниеОшибки) = 1 Тогда
			// обработано
			фОбработано = 1;
		КонецЕсли;
	КонецЕсли;
	
	// выгрузка налоговых документов
	Если    Сред(ИмяСхемы,2) = "1201002"
		ИЛИ Сред(ИмяСхемы,2) = "1201003" Тогда
		Если ПреобразоватьТипXMLx1201002(Значение, Тип, Результат, ОписаниеОшибки) = 1 Тогда
			// обработано
			фОбработано = 1;
		КонецЕсли;
	КонецЕсли; 
	
	Если фОбработано = 0 Тогда
		ПреобразоватьТипXMLОбщий(Значение, Тип, Результат, ОписаниеОшибки);
	КонецЕсли;
	
	Если ТипЗнч(Результат)<>Тип("Строка") Тогда
		
		Если    ТипЗнч(Результат)<>Тип("Число")
			ИЛИ ТипЗнч(Результат)<>Тип("Дата")
			ИЛИ ТипЗнч(Результат)<>Тип("Булево")Тогда
			
			Результат = Строка(Результат);
			
		Иначе	
			
			Результат = Формат(Результат,СтрокаОбщегоФормата);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Результат = СокрП(Результат);
	Если Результат = "" Тогда
		Результат = "&НеЗаписывать";
	КонецЕсли; 
	
	Если Результат = "SOFTWARE" Тогда
		Результат = "";
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции
//КонецПроцедур и Функций связаных с выгрузкой в XML
	
// Процедуры и функции связаные с выгрузкой в АРМ
Функция НомерМесяца(Месяц)

 ВрегМесяц = Врег(Месяц);
  Если Не ВрегМесяц = "" Тогда  	 
	Если  ВрегМесяц= "СІЧЕНЬ" Тогда
		номер = 1    ;
		Возврат номер ; 
	ИначеЕсли  ВрегМесяц = "ЛЮТИЙ" Тогда
		номер = 2    ;
		Возврат номер ;
	ИначеЕсли	 ВрегМесяц = "БЕРЕЗЕНЬ" Тогда
		номер = 3    ;
		Возврат номер ;
	ИначеЕсли	ВрегМесяц = "КВІТЕНЬ" Тогда
		номер = 4    ;
		Возврат номер ;
	ИначеЕсли	 ВрегМесяц = "ТРАВЕНЬ" Тогда
		номер = 5    ;
		Возврат номер ;
	ИначеЕсли	 ВрегМесяц = "ЧЕРВЕНЬ" Тогда
		номер = 6    ;
		Возврат номер ;
	ИначеЕсли	 ВрегМесяц = "ЛИПЕНЬ" Тогда
		номер = 7    ;
		Возврат номер ;
	ИначеЕсли	ВрегМесяц = "СЕРПЕНЬ" Тогда
		номер = 8    ;
		Возврат номер ;
	ИначеЕсли	ВрегМесяц = "ВЕРЕСЕНЬ" Тогда
		номер = 9    ;
		Возврат номер ;
	ИначеЕсли	 ВрегМесяц = "ЖОВТЕНЬ" Тогда
		номер = 10    ;
		Возврат номер ;
	ИначеЕсли	 ВрегМесяц = "ЛИСТОПАД" Тогда
		номер = 11    ;
		Возврат номер ;
	   ИначеЕсли	 ВрегМесяц = "ГРУДЕНЬ" Тогда
		номер = 12    ;
		Возврат номер;
	КонецЕсли;
КонецЕсли;

КонецФункции

Функция ПолучитьКодМесяца(Месяц)
	Если Месяц = 1 Тогда 
		КодМесяца = "1" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 2 Тогда 
		КодМесяца = "2" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 3 Тогда 
		КодМесяца = "3" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 4 Тогда 
		КодМесяца = "4" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 5 Тогда 
		КодМесяца = "5" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 6 Тогда 
		КодМесяца = "6" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 7 Тогда 
		КодМесяца = "7" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 8 Тогда 
		КодМесяца = "8" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 9 Тогда 
		КодМесяца = "9" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 10 Тогда 
		КодМесяца = "A" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 11 Тогда 
		КодМесяца = "B" ;
		Возврат КодМесяца;
	ИначеЕсли Месяц = 12 Тогда 
		КодМесяца = "C" ;
		Возврат КодМесяца;
	Иначе КодМесяца = "";
		Возврат КодМесяца; 
		
	КонецЕсли;	
КонецФункции
	
Функция ПривестиКТипу(Данные)
	Если ТипЗнч(Данные)=Тип("Строка") Тогда
		Возврат Данные;
	ИначеЕсли ТипЗнч(Данные)=Тип("Число") Тогда
		Если Данные = 0 Тогда 
			Данные = "0"
		Иначе 
			Данные = Формат(Данные,"ЧГ=0;");
		КонецЕсли;	
		Возврат Данные;
	ИначеЕсли ТипЗнч(Данные)=Тип("Дата") Тогда
		День   =ДополнитьСтрокуСимволами(Формат(День(Данные),"ЧЦ=2;ЧГ=0;"),"0",2,);
		Месяц  =ДополнитьСтрокуСимволами(Формат(Месяц(Данные),"ЧЦ=2;ЧГ=0;"),"0",2,);
		Год    =Формат(Год(Данные),"ЧЦ=4;ЧГ=0;");
		Данные = День +"."+ Месяц +"."+ Год;
		Возврат Данные;
	КонецЕсли;
КонецФункции
	
Процедура СоздатьТаблицуФайловВыгрузки()
	ОписаниеТиповСтрока60  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(60);
	ТаблицаФайловВыгрузки= новый ТаблицаЗначений();
	ТаблицаФайловВыгрузки.Колонки.Добавить("Номер", ОписаниеТиповСтрока60);
	ТаблицаФайловВыгрузки.Колонки.Добавить("ИмяФайла", ОписаниеТиповСтрока60 );
КонецПроцедуры 

Процедура ДобавитьФайлВыгрузкиВТаблицу(Номер,ИмяФайла)
	НоваяСтрока          = ТаблицаФайловВыгрузки.Добавить();
	Новаястрока.Номер    = Номер;
	НоваяСтрока.ИмяФайла = ИмяФайла;
КонецПроцедуры

Функция РазборМакета (ИмяМакета)
	
	ОписаниеТиповСтрока40  = ОбщегоНазначения.ПолучитьОписаниеТиповСтроки(40);
	НужныйМакет = РегламентированнаяОтчетность.РеглОтчеты(ИмяНужногоОтчета).ПолучитьМакет(ИмяМакета);
	ТаблицаНазванияВФайле = новый ТаблицаЗначений();
	ТаблицаНазванияВФайле.Колонки.Добавить("ИмяВФайле", ОписаниеТиповСтрока40);
	ТаблицаНазванияВФайле.Колонки.Добавить("ИмяВФорме", ОписаниеТиповСтрока40 );
	ТаблицаНазванияВФайле.Колонки.Добавить("Многострочность",ОписаниеТиповСтрока40);
	Для Инд = 0 По НужныйМакет.Области.Количество() - 1 Цикл
		ТекОбласть    = НужныйМакет.Области[Инд];
		ИмяСтраницы   = ТекОбласть.Имя;
		
		Для Ном = ТекОбласть.Верх По ТекОбласть.Низ Цикл
			// код показателя по форме отчете (имя ячейки в полях табличного документа формы)
			КодПоказателяВФайле  	    = СокрЛП(НужныйМакет.Область(Ном, 1).Текст);				
			КодПоказателяПоФорме 	    = СокрЛП(НужныйМакет.Область(Ном, 2).Текст);
			ПринадлежностьПоказателя    = СокрЛП(НужныйМакет.Область(Ном, 3).Текст);
			НоваяСтрока                 = ТаблицаНазванияВФайле.Добавить();
			НоваяСтрока.ИмяВФорме       = КодПоказателяПоФорме;
			НоваяСтрока.ИмяВФайле       = КодПоказателяВФайле;
			НоваяСтрока.Многострочность = ПринадлежностьПоказателя; 
		КонецЦикла;	
	КонецЦикла;
	Возврат ТаблицаНазванияВФайле;
КонецФункции

Процедура ВыгрузитьПоТаблице(ТаблицаЗначений,СтруктураДанных,фОшибка)
	Перем ДанныеФормы,ТаблицаМногострочнойЧасти,ТаблицаМногоСтраничнойЧасти,Значение;
	фОшибка = 0; 
	// Выгрузка содержащих многостраничные разделы	
	Если СтруктураДанных.Свойство("МногоСтраничнаяЧасть",ТаблицаМногоСтраничнойЧасти) Тогда 
		СтруктураДанных.Свойство("МногоСтраничнаяЧасть",ТаблицаМногоСтраничнойЧасти);
		СоздатьТаблицуФайловВыгрузки();
		ФормаМастера = ЭтотОбъект.ПолучитьФорму("Форма");
		ФормаМастера.ЭлементыФормы.Подробнее.Видимость = Истина ;		
		Для НСт = 1 По ТаблицаМногоСтраничнойЧасти.Количество() Цикл
			КодФормы = ТаблицаЗначений[0].ИмяВФайле;
			СтруктураДанных.Свойство("ИмяФайла",ИмяФайла);
			СтруктураДанныхТЧ = ТаблицаМногоСтраничнойЧасти[Нст - 1].Данные;
			СтруктураДанныхТЧ.Свойство("ИНН",Значение);
			ИмяФайла=Значение + "_" + ИмяФайла;
			ДобавитьФайлВыгрузкиВТаблицу(Нст,ИмяФайла);
			Попытка 
				Текст = Новый ЗаписьТекста(КаталогДанныхЭкспорта+"\"+ИмяФайла,"windows-1251");
				
				
				СчетчикТаблиц = 1 ;
				
				Для Нстр = 1 по  ТаблицаЗначений.Количество()-2 Цикл
					ИмяВФайле     = ТаблицаЗначений[Нстр].ИмяВФайле;
					ПредИмяВФайле = ТаблицаЗначений[Нстр-1].ИмяВФайле;
					СледИмяВФайле =ТаблицаЗначений[Нстр+1].ИмяВФайле;
					СтруктураДанных.Свойство(ТаблицаЗначений[Нстр].ИмяВФорме,ДанныеФормы);
					Если ДанныеФормы = Неопределено  Тогда 
						СтруктураДанныхТЧ.Свойство(ТаблицаЗначений[Нстр].ИмяВФорме,ДанныеФормы);
					КонецЕсли;
					ДанныеФормы = ПривестиКТипу(ДанныеФормы);
					Если Сред(ИмяВФайле,1,1) ="{"  и Не Сред(ПредИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" Тогда 
						Текст.ЗаписатьСтроку("GROUP" + """" + КодФормы +"." + строка(СчетчикТаблиц)+"""" );
						Если  Сред(ИмяВФайле, 1 , 2) =  "A1" Тогда 
							Текст.ЗаписатьСтроку( ИмяВФайле + "=" +ДанныеФормы);
							Если  Не ДанныеФормы = "" Тогда
								Текст.ЗаписатьСтроку(Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" + ПолучитьКодМесяца(ДанныеФормы));
							КонецЕсли
						Иначе
							Текст.ЗаписатьСтроку( ИмяВФайле + "=" +ДанныеФормы);
						КонецЕсли;
					ИначеЕсли  Сред(ИмяВФайле,1,1) ="{"  и Сред(ПредИмяВФайле,СтрДлина(ПредИмяВФайле),1) ="}" Тогда 
						Если  Сред(ИмяВФайле,(СтрДлина(ИмяВФайле)-1),2) =  "A1" Тогда 
							Текст.ЗаписатьСтроку("{" + КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)) + "=" +ДанныеФормы);
							Если  Не ДанныеФормы = "" Тогда
								Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" + ПолучитьКодМесяца(ДанныеФормы));
							КонецЕсли    
						Иначе
							Текст.ЗаписатьСтроку(КодФормы +"." + ИмяВФайле + "=" +ДанныеФормы);
						КонецЕсли;   
					ИначеЕсли Сред(ИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" И  Сред(СледИмяВФайле,1,1) ="{" Тогда
						Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,1,(СтрДлина(ИмяВФайле)-1)) + "=" + ДанныеФормы+"}" );
					ИначеЕсли Сред(ИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" И  НЕ Сред(СледИмяВФайле,1,1) ="{" Тогда
						Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,1,(СтрДлина(ИмяВФайле)-1)) + "=" + ДанныеФормы+"}"); 
						Текст.ЗаписатьСтроку("GROUP " + """"+ КодФормы +"." + строка(СчетчикТаблиц)+ """" + " END");
						СчетчикТаблиц = СчетчикТаблиц + 1;
					Иначе 
						Если ТаблицаЗначений[Нстр].ИмяВФайле = "PerType" Или ТаблицаЗначений[Нстр].ИмяВФайле = "Year" Или ТаблицаЗначений[Нстр].ИмяВФайле = "Encoding" Тогда   
							Текст.ЗаписатьСтроку( ТаблицаЗначений[Нстр].ИмяВФайле + "=" +ДанныеФормы);
						Иначе
							Текст.ЗаписатьСтроку(КодФормы + "." + СокрЛП(ТаблицаЗначений[Нстр].ИмяВФайле) + "=" +ДанныеФормы);
						КонецЕсли;
					КонецЕсли; 
				КонецЦикла; 
				
				Текст.Закрыть();
				
				
			Исключение 
				фОшибка=1;
			КонецПопытки ; 
			ГлобСтруктФайловВыгрузки.Вставить("FileName" + Лев(ИмяФайла, СтрДлина(ИмяФайла)-4), Новый ДвоичныеДанные(КаталогДанныхЭкспорта +"\"+ИмяФайла));
			
		КонецЦикла;
		// Выгрузка отчетов содержащая многострочные разделы		
	ИначеЕсли  СтруктураДанных.Свойство("МногострочнаяЧасть",ТаблицаМногострочнойЧасти) Тогда
		СтруктураДанных.Свойство("МногострочнаяЧасть",ТаблицаМногострочнойЧасти);
		КодФормы = ТаблицаЗначений[0].ИмяВФайле;
		СтруктураДанных.Свойство("ИмяФайла",ИмяФайла);
		Попытка 
			Текст = Новый ЗаписьТекста(КаталогДанныхЭкспорта+"\"+ИмяФайла,"windows-1251");
			
			Для Нстр = 1 по  ТаблицаЗначений.Количество()-2 Цикл
				ИмяВФайле     = ТаблицаЗначений[Нстр].ИмяВФайле;
				ПредИмяВФайле = ТаблицаЗначений[Нстр-1].ИмяВФайле;
				СледИмяВФайле = ТаблицаЗначений[Нстр+1].ИмяВФайле;
				ПринадлежностьПоказателя = ТаблицаЗначений[Нстр].Многострочность;
				СтруктураДанных.Свойство(ТаблицаЗначений[Нстр].ИмяВФорме,ДанныеФормы);
				ДанныеФормы = ПривестиКТипу(ДанныеФормы);
				Если ПринадлежностьПоказателя = "" Тогда
					СчетчикТаблиц = 2; 
					Если Сред(ИмяВФайле,1,1) ="{"  и Не Сред(ПредИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" Тогда 
						Текст.ЗаписатьСтроку("GROUP " + """" + КодФормы +"." + строка(СчетчикТаблиц)+"""" );
						Если  Сред(ИмяВФайле, СтрДлина(ИмяВФайле)-1 , 2) =  "A1" Тогда 
							Текст.ЗаписатьСтроку("{");
							Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)) + "=" +ДанныеФормы);
							Если  Не ДанныеФормы = "" Тогда
								Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" +НомерМесяца(ДанныеФормы));
							КонецЕсли
							
						Иначе
							Текст.ЗаписатьСтроку(КодФормы +"." + ИмяВФайле + "=" +ДанныеФормы);
						КонецЕсли;
					ИначеЕсли  Сред(ИмяВФайле,1,1) ="{"  и Сред(ПредИмяВФайле,СтрДлина(ПредИмяВФайле),1) ="}" Тогда 
						Если  Сред(ИмяВФайле,(СтрДлина(ИмяВФайле)-1),2) =  "A1" Тогда 
							Текст.ЗаписатьСтроку("{");
							Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)) +"="+ДанныеФормы);
							Если  Не ДанныеФормы = "" Тогда
								Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" +НомерМесяца(ДанныеФормы));
							КонецЕсли
							
						Иначе
							Текст.ЗаписатьСтроку( ИмяВФайле + "=" +ДанныеФормы);
						КонецЕсли;   
					ИначеЕсли Сред(ИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" И  Сред(СледИмяВФайле,1,1) ="{" Тогда
						Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,1,(СтрДлина(ИмяВФайле)-1)) + "=" + ДанныеФормы);
						Текст.ЗаписатьСтроку("}");
					ИначеЕсли Сред(ИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" И  НЕ Сред(СледИмяВФайле,1,1) ="{" Тогда
						Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,1,(СтрДлина(ИмяВФайле)-1))+ "=" + ДанныеФормы);
						Текст.ЗаписатьСтроку("}");
						Текст.ЗаписатьСтроку("GROUP " + """"+ КодФормы +"." + Строка(СчетчикТаблиц)+ """" + " END");
					Иначе 
						Если ТаблицаЗначений[Нстр].ИмяВФайле = "PerType" Или ТаблицаЗначений[Нстр].ИмяВФайле = "Year" Или ТаблицаЗначений[Нстр].ИмяВФайле = "Encoding" Тогда   
							Текст.ЗаписатьСтроку( ТаблицаЗначений[Нстр].ИмяВФайле + "=" +ДанныеФормы);
						Иначе
							Текст.ЗаписатьСтроку(КодФормы + "." + ТаблицаЗначений[Нстр].ИмяВФайле + "=" +ДанныеФормы);
						КонецЕсли;
					КонецЕсли; 
					
				КонецЕсли; 	
			КонецЦикла;	
			СчетчикТаблиц = 1;
			Текст.ЗаписатьСтроку("GROUP " + """" + КодФормы +"." + строка(СчетчикТаблиц)+"""" );
			
			Для СтрТабл = 1	По ТаблицаМногострочнойЧасти.Количество() Цикл				
				Для Нстр = 1 По  ТаблицаЗначений.Количество()-2 Цикл
					Если   ТаблицаЗначений[Нстр].Многострочность ="М" Тогда
						ИмяВФайле = ТаблицаЗначений[Нстр].ИмяВФайле;
						ИмяВФорме = ТаблицаЗначений[Нстр].ИмяВФорме;     
						Попытка 
							ДанныеВФорме =  ТаблицаМногострочнойЧасти[СтрТабл-1][ИмяВформе];
							ДанныеВФорме = ПривестиКТипу(ДанныеВФорме);

						Исключение 
							ДанныеВФорме = СтрТабл;
						КонецПопытки;	
						

						

						Если Сред(ИмяВФайле,(СтрДлина(ИмяВФайле)-1),2) = "A1" Тогда 
							
							Текст.ЗаписатьСтроку("{");
							Если ТипЗнч(ДанныеВФорме)= Тип("Строка") Тогда 
								
								Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)) +"="+ДанныеВФорме);
								Если  Не ДанныеВФорме = "" Тогда
									Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" +НомерМесяца(ДанныеВФорме));
								КонецЕсли
								
							Иначе
								Текст.ЗаписатьСтроку(КодФормы + "." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1)+"="+СтрТабл);
							КонецЕсли; 
						ИначеЕсли Сред(ИмяВФайле,(СтрДлина(ИмяВФайле)),1) = "}" Тогда
							ДанныеВФорме =  ТаблицаМногострочнойЧасти[СтрТабл-1][ИмяВформе];
							ДанныеВФорме = ПривестиКТипу(ДанныеВФорме);
							Текст.ЗаписатьСтроку(КодФормы + "." +Сред(ИмяВФайле,1,СтрДлина(ИмяВФайле)-1)+"="+ДанныеВФорме);
							Текст.ЗаписатьСтроку("}");
						Иначе
							ДанныеВФорме =  ТаблицаМногострочнойЧасти[СтрТабл-1][ИмяВформе];
							ДанныеВФорме = ПривестиКТипу(ДанныеВФорме);
							Текст.ЗаписатьСтроку(КодФормы + "." +ИмяВФайле + "=" + ДанныеВФорме);
						КонецЕсли 
					КонецЕсли
					
				КонецЦикла;
			КонецЦикла;   			
			
			Текст.ЗаписатьСтроку("GROUP " + """"+ КодФормы +"." + строка(СчетчикТаблиц)+ """" + " END");
			Текст.Закрыть();
			Проверка = Новый ТекстовыйДокумент;
			
		Исключение				
			фОшибка=1;
		КонецПопытки ;
		ГлобСтруктФайловВыгрузки.Вставить("FileName" + Лев(ИмяФайла, СтрДлина(ИмяФайла)-4), Новый ДвоичныеДанные(КаталогДанныхЭкспорта +"\"+ИмяФайла));
		
		// Выгрузка отчетов не содержащих многостраничные и многострочные разделы	
	ИначеЕсли (Не СтруктураДанных.Свойство("МногоСтраничнаяЧасть",ТаблицаМногоСтраничнойЧасти)) и  (Не СтруктураДанных.Свойство("МногострочнаяЧасть",ТаблицаМногострочнойЧасти)) Тогда
		КодФормы        = ТаблицаЗначений[0].ИмяВФайле;
		СтруктураДанных.Свойство("ИмяФайла",ИмяФайла);
		Попытка 
			Текст = Новый ЗаписьТекста(КаталогДанныхЭкспорта+"\"+ИмяФайла,"windows-1251");
			
			СчетчикТаблиц = 1 ;
			
			Для Нстр = 1 по  ТаблицаЗначений.Количество()-2 Цикл
				ИмяВФайле     = ТаблицаЗначений[Нстр].ИмяВФайле;
				ПредИмяВФайле = ТаблицаЗначений[Нстр-1].ИмяВФайле;
				СледИмяВФайле =ТаблицаЗначений[Нстр+1].ИмяВФайле;
				
				СтруктураДанных.Свойство(ТаблицаЗначений[Нстр].ИмяВФорме,ДанныеФормы);
				ДанныеФормы = ПривестиКТипу(ДанныеФормы);
				Если Сред(ИмяВФайле,1,1) ="{"  и Не Сред(ПредИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" Тогда 
					Текст.ЗаписатьСтроку("GROUP " + """" + КодФормы +"." + строка(СчетчикТаблиц)+"""" );
					Если  Сред(ИмяВФайле, СтрДлина(ИмяВФайле)-1 , 2) =  "A1" Тогда 
						Текст.ЗаписатьСтроку("{");
						Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)) + "=" +ДанныеФормы);
						Если  Не ДанныеФормы = "" Тогда
							Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" +НомерМесяца(ДанныеФормы));
						КонецЕсли
						
					Иначе
						Текст.ЗаписатьСтроку(КодФормы +"." + ИмяВФайле + "=" +ДанныеФормы);
					КонецЕсли;
				ИначеЕсли  Сред(ИмяВФайле,1,1) ="{"  и Сред(ПредИмяВФайле,СтрДлина(ПредИмяВФайле),1) ="}" Тогда 
					Если  Сред(ИмяВФайле,(СтрДлина(ИмяВФайле)-1),2) =  "A1" Тогда 
						Текст.ЗаписатьСтроку("{");
						Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)) +"="+ДанныеФормы);
						Если  Не ДанныеФормы = "" Тогда
							Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,2,СтрДлина(ИмяВФайле)-1) + "1" + "=" +НомерМесяца(ДанныеФормы));
						КонецЕсли
						
					Иначе
						Текст.ЗаписатьСтроку( ИмяВФайле + "=" +ДанныеФормы);
					КонецЕсли;   
				ИначеЕсли Сред(ИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" И  Сред(СледИмяВФайле,1,1) ="{" Тогда
					Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,1,(СтрДлина(ИмяВФайле)-1)) + "=" + ДанныеФормы);
					Текст.ЗаписатьСтроку("}");
				ИначеЕсли Сред(ИмяВФайле,СтрДлина(ИмяВФайле),1) ="}" И  НЕ Сред(СледИмяВФайле,1,1) ="{" Тогда
					Текст.ЗаписатьСтроку(КодФормы +"." + Сред(ИмяВФайле,1,(СтрДлина(ИмяВФайле)-1))+ "=" + ДанныеФормы);
					Текст.ЗаписатьСтроку("}");
					Текст.ЗаписатьСтроку("GROUP " + """"+ КодФормы +"." + Строка(СчетчикТаблиц)+ """" + " END");
					СчетчикТаблиц = СчетчикТаблиц + 1;
				Иначе 
					Если ТаблицаЗначений[Нстр].ИмяВФайле = "PerType" Или ТаблицаЗначений[Нстр].ИмяВФайле = "Year" Или ТаблицаЗначений[Нстр].ИмяВФайле = "Encoding" Тогда   
						Текст.ЗаписатьСтроку( ТаблицаЗначений[Нстр].ИмяВФайле + "=" +ДанныеФормы);
					Иначе
						Текст.ЗаписатьСтроку(КодФормы + "." + ТаблицаЗначений[Нстр].ИмяВФайле + "=" +ДанныеФормы);
					КонецЕсли;
				КонецЕсли; 
			КонецЦикла; 
			
			Текст.Закрыть();
			
		Исключение 
			фОшибка=1;
		КонецПопытки ;
		ГлобСтруктФайловВыгрузки.Вставить("FileName" + Лев(ИмяФайла, СтрДлина(ИмяФайла)-4), Новый ДвоичныеДанные(КаталогДанныхЭкспорта +"\"+ИмяФайла));
	КонецЕсли ;	
	
КонецПроцедуры	
	
Процедура ВыгрузитьАРМЗС() Экспорт
		
		перем	НужнаяСтруктура;
		ГлобОшибкаВыгрузки = Ложь;
		ГлобСтруктФайловВыгрузки.Очистить();
		
		НовыйДок = Документы.ВыгрузкаРегламентированныхОтчетов.СоздатьДокумент();
		СпДокОсн = Новый СписокЗначений;
		СпДокОсн.Добавить(Док);
		НовыйДок.Очистить = Истина;
		ФормаВыгрузки = НовыйДок.ПолучитьФорму(, Объект);
		
		//вносим в структуру со служебными данными 
		Попытка 
			СлужебнаяСтруктура.Вставить("C_DOC_TYPE", мC_DOC_TYPE);
			СлужебнаяСтруктура.Вставить("C_DOC_CNT", мC_DOC_CNT);
			СлужебнаяСтруктура.Вставить("D_FILL",мD_FILL);
		Исключение
			
		КонецПопытки;	
		фОшибкаВыгрузкиСхемы = 0;
		// делаем разбор схем
		СчетчикДокОсн = 0;
		Для Каждого стр Из мтбСхемы  Цикл
			
			Если стр.фВыгрузка = 0 Тогда
				//не выгружаем
				Продолжить
			КонецЕсли;
			
			ИмяСхемы = стр.ИмяСхемы;
			ПредставлениеСхемы = СокрЛП(стр.ПредставлениеСхемы);
			ИмяСтраницыПанели = СокрЛП(стр.НазваниеСтраницыПанели);
			ТаблицаЗначений = РазборМакета(ИмяСхемы);
			ИмяНужнойСтраницы = "ПолеТабличногоДокумента"+ИмяСтраницыПанели;
			Найдено = спПараметры.ДанныеОтчета.Свойство(ИмяНужнойСтраницы,НужнаяСтруктура);
			Если Найдено Тогда
				
				ВыгрузитьПоТаблице(ТаблицаЗначений,НужнаяСтруктура,фОшибкаВыгрузкиСхемы);
				
				стр.ФайлВыгрузки = ИмяФайла;
				стр.Статус = фОшибкаВыгрузкиСхемы;	
				
				СчетчикДокОсн = СчетчикДокОсн + 1;
				Если НЕ ФормаВыгрузки.СформироватьИЗаписать(СпДокОсн, КаталогДанныхЭкспорта +"\"+ИмяФайла,СчетчикДокОсн, , ,ФорматОтчета) 
					ИЛИ фОшибкаВыгрузкиСхемы Тогда
					ГлобОшибкаВыгрузки = ГлобОшибкаВыгрузки ИЛИ Истина;
					//Сообщить("Не удалось выгрузить отчет!", СтатусСообщения.Внимание);
				Иначе
					Сообщить(НСтр("ru='Отчет успешно выгружен!';uk='Звіт успішно вивантажений!'"), СтатусСообщения.Информация);
				КонецЕсли; 
			КонецЕсли;
		КонецЦикла; 
		НовыйДок.ИсходныйФайл = ГлобСтруктФайловВыгрузки;
		ВыполнениеШагов[НомерСтраницы] = НЕ (ГлобОшибкаВыгрузки);
		
	КонецПроцедуры	
//Конец процедур и Функций связаных с выгрузкой в АРМ

Процедура  ВыгрузитьXML(тбОшибкиПреобразованияТипов = Неопределено) Экспорт
	перем НужнаяСтруктура;
	
	ГлобОшибкаВыгрузки = Ложь;
	ГлобСтруктФайловВыгрузки.Очистить();
	
	НовыйДок = Документы.ВыгрузкаРегламентированныхОтчетов.СоздатьДокумент();
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(Док);
	НовыйДок.Очистить = Истина;
	ФормаВыгрузки = НовыйДок.ПолучитьФорму(, Объект);
	Попытка
		НовыйДок.Комментарий = Объект.Комментарий;
	Исключение;
	КонецПопытки;
	
	
	//вносим в структуру со служебными данными 
	Попытка 
		СлужебнаяСтруктура.Вставить("C_DOC_TYPE", мC_DOC_TYPE);
		СлужебнаяСтруктура.Вставить("C_DOC_CNT",  мC_DOC_CNT);
		СлужебнаяСтруктура.Вставить("D_FILL",     мD_FILL);
	Исключение
	КонецПопытки;	
	
	фОшибкаВыгрузкиСхемы = 0;
	// делаем разбор схем
	СчетчикДокОсн = 0;
	Если мтбСхемы.Колонки.Найти("Префикс") = Неопределено тогда 
		 мтбСхемы.Колонки.Добавить("Префикс",,,);
	КонецЕсли;	
	
	тбОшибкиПреобразованияТипов = Новый ТаблицаЗначений();
	тбОшибкиПреобразованияТипов.Колонки.Добавить("ИмяТабличногоПоля", Новый ОписаниеТипов("Строка"));
	тбОшибкиПреобразованияТипов.Колонки.Добавить("ИмяПоказателя", 	  Новый ОписаниеТипов("Строка"));
	тбОшибкиПреобразованияТипов.Колонки.Добавить("ОписаниеОшибки", 	  Новый ОписаниеТипов("Строка"));
	
	Для Каждого стр Из  мтбСхемы Цикл
		
		Если стр.фВыгрузка = 0 Тогда
			//не выгружаем
			Продолжить
		КонецЕсли;
		ИмяСхемы = стр.ИмяСхемы;
		
		Префикс  = Стр.Префикс; 
		
		ПредставлениеСхемы = СокрЛП(стр.ПредставлениеСхемы);
		ИмяСтраницыПанели = СокрЛП(стр.НазваниеСтраницыПанели);
		тбПоказателиШапка = 0;
		тбПоказателиТело = 0;
		фОшибкаРазборкиСхемы = 0;
		Сообщить("====== "+ПредставлениеСхемы);
		xsdСхема = РазборкаСхемы(ИмяСхемы, тбПоказателиШапка,тбПоказателиТело, фОшибкаРазборкиСхемы);
		Если фОшибкаРазборкиСхемы = 0 Тогда
			// выгружаем по схеме
			//сначала убеждаемся, что в стуктуре есть нужная подструктура с показателями
			ИмяНужнойСтраницы = "ПолеТабличногоДокумента"+ИмяСтраницыПанели;
			Найдено = спПараметры.ДанныеОтчета.Свойство(ИмяНужнойСтраницы,НужнаяСтруктура);
			Если Найдено Тогда
				ВыгрузкаПоСхеме(ИмяСхемы,НужнаяСтруктура, тбПоказателиШапка,тбПоказателиТело, фОшибкаВыгрузкиСхемы, xsdСхема, ИмяНужнойСтраницы, тбОшибкиПреобразованияТипов);
				
				стр.ФайлВыгрузки = ИмяФайла;
				стр.Статус = фОшибкаВыгрузкиСхемы;	
				
				СчетчикДокОсн = СчетчикДокОсн + 1;
				Если НЕ ФормаВыгрузки.СформироватьИЗаписать(СпДокОсн, КаталогДанныхЭкспорта +"\"+ИмяФайла,СчетчикДокОсн, , ,ФорматОтчета) 
					ИЛИ фОшибкаВыгрузкиСхемы Тогда
					ГлобОшибкаВыгрузки = ГлобОшибкаВыгрузки ИЛИ Истина;
					//Сообщить("Не удалось выгрузить отчет!", СтатусСообщения.Внимание);
				Иначе
					Сообщить(НСтр("ru='Отчет успешно выгружен!';uk='Звіт успішно вивантажений!'"), СтатусСообщения.Информация);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла; 
	
	НовыйДок.ИсходныйФайл = ГлобСтруктФайловВыгрузки;
	ВыполнениеШагов[НомерСтраницы] = НЕ (ГлобОшибкаВыгрузки);
	
КонецПроцедуры

Функция СохранитьФайлыВИБ(ПодготовленныеДанные) Экспорт
	Попытка
		НовыйДок.ИсходныйФайл = ПодготовленныеДанные;
		НовыйДок.Записать();
	Исключение
		
	КонецПопытки;
КонецФункции

Функция ВыполнитьОтправкуКомплекта(Знач ФайлыДляОтправки) Экспорт
	Попытка
		УчетнаяЗапись = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяУчетнаяЗапись");
		
		СтруктураВложений  		= Новый СписокЗначений;
		Если ФайлыДляОтправки.Количество() <> 0 Тогда
			Для Каждого Файл Из ФайлыДляОтправки Цикл
				Вложение           		= Новый Структура("Наименование, ИмяФайла, Хранилище");
				ВыбДвоичныеДанные 		= Новый ДвоичныеДанные(Файл.Файл);
				ВыбФайл 				= Новый Файл(Файл.Файл);
				Вложение.Хранилище 		= ВыбДвоичныеДанные;
				Вложение.Наименование   = ВыбФайл.ИмяБезРасширения;
				Вложение.ИмяФайла       = ВыбФайл.Имя;
				СтруктураВложений.Добавить(Вложение);
			КонецЦикла;	
		Иначе
			Для Каждого Файл Из ГлобСтруктФайловВыгрузки Цикл
				Вложение           		= Новый Структура("Наименование, ИмяФайла, Хранилище");
				Вложение.Хранилище 		= Файл.Значение;
				Вложение.Наименование   = Сред(Файл.Ключ, 9, СтрДлина(Файл.Ключ));
				Вложение.ИмяФайла       = Сред(Файл.Ключ, 9, СтрДлина(Файл.Ключ)) + ".xml";
				СтруктураВложений.Добавить(Вложение);
			КонецЦикла;
		КонецЕсли;
		
		ТекстПисьмаHTML = "<HTML><HEAD><META http-equiv=Content-Type content=""text/html; charset=utf-8""><META content=""MSHTML 6.00.2800.1476"" name=GENERATOR></HEAD><BODY><P>";
		ТекстПисьмаHTML = ТекстПисьмаHTML + "</P></BODY></HTML>";
		
		СтруктураНовогоПисьма                      = Новый Структура("Тело, Тема, СписокФайловВложений, Кому");
		СтруктураНовогоПисьма.Тело                 = ТекстПисьмаHTML;
		СтруктураНовогоПисьма.СписокФайловВложений = СтруктураВложений;
		
		
		//ЭлементГруппыПисемДерево = ПолучитьЭлементГруппыПисемДерево();
		
		Если ЗначениеЗаполнено(УчетнаяЗапись) Тогда
			СтруктураНовогоПисьма.Вставить("УчетнаяЗапись", УчетнаяЗапись);
		КонецЕсли;
		
		Если РегламентированнаяОтчетность.ИДКонфигурации() = "УПП" Или РегламентированнаяОтчетность.ИДКонфигурации()= "ЗУП" Тогда 
			УправлениеЭлектроннойПочтой.НаписатьПисьмо(СтруктураНовогоПисьма,,,,,,,ЛОЖЬ);
		Иначе
			УправлениеЭлектроннойПочтой.НаписатьПисьмо(глЗначениеПеременной("глТекущийПользователь"), СтруктураНовогоПисьма,,,,,,,ЛОЖЬ);
		КонецЕсли;
		 
		НовыйДок.ДатаОтправки = ТекущаяДата();
		НовыйДок.Статус = Перечисления.СтатусыРегламентированныхОтчетов.ЖдетПодтвержденияСтатуса;
	Исключение
		Возврат Истина;
	КонецПопытки;
	
	
	//Возвращаем признак присутствия ощибки!
	Возврат Ложь;	
КонецФункции

Функция ИнициализацияГлобСтруктФайловВыгрузки() Экспорт
	ГлобСтруктФайловВыгрузки = Новый Структура;
КонецФункции
#КонецЕсли

СтрокаОбщегоФормата = "ЧРД=.; ЧН=0.00; ЧГ=0; ЧО=1; ДФ=ddMMyyyy; ДП=; БЛ=0; БИ=1";