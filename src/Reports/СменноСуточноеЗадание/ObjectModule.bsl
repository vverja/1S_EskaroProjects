#Если Клиент Тогда
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ОбщийОтчет.мВыбиратьИмяРегистра = Ложь;
	ОбщийОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	ПостроительОтчета = ПолучитьПостроительОтчета();
	
	Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(ЗанятостьРЦ.Период, ДЕНЬ) КАК Период,
	|	ЗанятостьРЦ.РабочийЦентр.Подразделение КАК Подразделение,
	|	ЗанятостьРЦ.Смена КАК Смена,
	|	ЗанятостьРЦ.РабочийЦентр КАК РабочийЦентр,
	|	ЗанятостьРЦ.ТехОперация КАК ТехОперация,
	|	ЗанятостьРЦ.Спецификация КАК Спецификация,
	|	ЗанятостьРЦ.КонечнаяПродукция КАК КонечнаяПродукция,
	|	ЗанятостьРЦ.Заказ КАК Заказ,
	|	ЗанятостьРЦ.Проект КАК Проект,
	|	ЗанятостьРЦ.Номенклатура КАК Номенклатура,
	|	ЗанятостьРЦ.ХарактеристикаНоменклатуры КАК Характеристика,
	|	NULL КАК Серия,
	|	СУММА(ЗанятостьРЦ.Количество) КАК Количество,
	|	СУММА(РАЗНОСТЬДАТ(ЗанятостьРЦ.Период, ЗанятостьРЦ.ДатаОкончания, СЕКУНДА)) КАК Время
	|ИЗ
	|	РегистрСведений.ДанныеДляПланированияЗанятостиРабочихЦентров КАК ЗанятостьРЦ
	|
	|ГДЕ
	|	ЗанятостьРЦ.Состояние = &Состояние И
	|	ЗанятостьРЦ.Период >= &ПериодНачало И
	|	ЗанятостьРЦ.ДатаОкончания <= &ПериодОкончание
	|
	|{ГДЕ
	|	ЗанятостьРЦ.РабочийЦентр КАК РабочийЦентр,
	|	ЗанятостьРЦ.Заказ КАК Заказ,
	|	ЗанятостьРЦ.Проект КАК Проект,
	|	ЗанятостьРЦ.Номенклатура КАК Номенклатура
	|}
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(ЗанятостьРЦ.Период, ДЕНЬ),
	|	ЗанятостьРЦ.РабочийЦентр.Подразделение,
	|	ЗанятостьРЦ.Смена,
	|	ЗанятостьРЦ.РабочийЦентр,
	|	ЗанятостьРЦ.ТехОперация,
	|	ЗанятостьРЦ.Спецификация,
	|	ЗанятостьРЦ.КонечнаяПродукция,
	|	ЗанятостьРЦ.Заказ,
	|	ЗанятостьРЦ.Проект,
	|	ЗанятостьРЦ.Номенклатура,
	|	ЗанятостьРЦ.ХарактеристикаНоменклатуры
	|
	|ИТОГИ СУММА(Количество), МАКСИМУМ(Время) ПО
	|	Период,
	|	Подразделение,
	|	Смена,
	|	РабочийЦентр,
	|	ТехОперация,
	|	Спецификация,
	|	КонечнаяПродукция,
	|	Заказ,
	|	Проект";
	
	МассивОтбора = Новый Массив;
	МассивОтбора.Добавить("РабочийЦентр");
	МассивОтбора.Добавить("Заказ");
	МассивОтбора.Добавить("Проект");
	МассивОтбора.Добавить("Номенклатура");
	
	ПостроительОтчета.Текст = Текст;
	ПостроительОтчета.Параметры.Вставить("Состояние", Перечисления.СостоянияРабочихЦентров.Занят);
	
	ОбщийОтчет.мНазваниеОтчета = "Сменно-суточное задание";
	
	УправлениеОтчетами.ЗаполнитьОтбор(МассивОтбора, ПостроительОтчета);
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт

	ДокументРезультат.Очистить();
	
	Макет = ПолучитьМакет("Макет");
	ОбластьПериод                  = Макет.ПолучитьОбласть("Период");
	ОбластьПодразделение           = Макет.ПолучитьОбласть("Подразделение");
	ОбластьСмена                   = Макет.ПолучитьОбласть("Смена");
	ОбластьРабочийЦентр            = Макет.ПолучитьОбласть("РабочийЦентр");
	ОбластьТехнологическаяОперация = Макет.ПолучитьОбласть("ТехнологическаяОперация");
	ОбластьВыпускШапка             = Макет.ПолучитьОбласть("ВыпускШапка");
	ОбластьВыпуск                  = Макет.ПолучитьОбласть("Выпуск");

	ПостроительОтчета = ОбщийОтчет.ПостроительОтчета;
	
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПериодНачало", НачалоДня(ОбщийОтчет.ДатаНач));
	ОбщийОтчет.ПостроительОтчета.Параметры.Вставить("ПериодОкончание", КонецДня(ОбщийОтчет.ДатаКон));
	
	ПостроительОтчета.Выполнить();
	Результат = ПостроительОтчета.Результат;
	
	//Период
	ВыборкаПериод = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаПериод.Следующий() Цикл
		ОбластьПериод.Параметры.Период = ВыборкаПериод.Период;
		ДокументРезультат.Вывести(ОбластьПериод);
		//Подразделение
		ВыборкаПодразделение = ВыборкаПериод.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПодразделение.Следующий() Цикл
			ОбластьПодразделение.Параметры.Подразделение = ВыборкаПодразделение.Подразделение;
			ДокументРезультат.Вывести(ОбластьПодразделение);
			//Смена
			ВыборкаСмена = ВыборкаПодразделение.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаСмена.Следующий() Цикл
				ОбластьСмена.Параметры.Смена = ВыборкаСмена.Смена;
				ДокументРезультат.Вывести(ОбластьСмена);
				//РабочийЦентр
				ВыборкаРабочийЦентр = ВыборкаСмена.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				Пока ВыборкаРабочийЦентр.Следующий() Цикл
					ОбластьРабочийЦентр.Параметры.РабочийЦентр = ВыборкаРабочийЦентр.РабочийЦентр;
					ДокументРезультат.Вывести(ОбластьРабочийЦентр);
					//ТехОперация
					ВыборкаТехОперация = ВыборкаРабочийЦентр.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаТехОперация.Следующий() Цикл
						//Спецификация
						ВыборкаСпецификация = ВыборкаТехОперация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаСпецификация.Следующий() Цикл
							//КонечнаяПродукция
							ВыборкаКонечнаяПродукция = ВыборкаСпецификация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаКонечнаяПродукция.Следующий() Цикл
								//Заказ
								ВыборкаЗаказ = ВыборкаКонечнаяПродукция.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаЗаказ.Следующий() Цикл
									//Проект
									ВыборкаПроект = ВыборкаЗаказ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаПроект.Следующий() Цикл
										
										ОбластьТехнологическаяОперация.Параметры.ТехнологическаяОперация = ВыборкаПроект.ТехОперация;
										ОбластьТехнологическаяОперация.Параметры.Спецификация            = ВыборкаПроект.Спецификация;
										ОбластьТехнологическаяОперация.Параметры.КонечнаяПродукция       = ВыборкаПроект.КонечнаяПродукция;
										ОбластьТехнологическаяОперация.Параметры.Заказ                   = ВыборкаПроект.Заказ;
										ОбластьТехнологическаяОперация.Параметры.Проект                  = ВыборкаПроект.Проект;
										ОбластьТехнологическаяОперация.Параметры.ВремяВыполнения         = ВыборкаПроект.Время;
									
										ДокументРезультат.Вывести(ОбластьТехнологическаяОперация);
										
										//ДетальнаяЗапись
										//ВыборкаДетальнаяЗапись = ВыборкаПроект.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										ВыборкаДетальнаяЗапись = ВыборкаПроект.Выбрать();
										ДокументРезультат.Вывести(ОбластьВыпускШапка);
										Если ВыборкаДетальнаяЗапись.Количество() Тогда
											Пока ВыборкаДетальнаяЗапись.Следующий() Цикл
												ОбластьВыпуск.Параметры.ИзделиеХарактеристика = СокрЛП(ВыборкаДетальнаяЗапись.Номенклатура) + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаДетальнаяЗапись);
												ОбластьВыпуск.Параметры.КоличествоВыпуска     = ВыборкаДетальнаяЗапись.Количество;
											
												ДокументРезультат.Вывести(ОбластьВыпуск);
											КонецЦикла;
										КонецЕсли;
										
									КонецЦикла;
								КонецЦикла;
							КонецЦикла;
						КонецЦикла;
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

// Читает свойство Построитель отчета
//
// Параметры
//	Нет
//
Функция ПолучитьПостроительОтчета() Экспорт

	Возврат ОбщийОтчет.ПолучитьПостроительОтчета();

КонецФункции // ПолучитьПостроительОтчета()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	ОбщийОтчет.Настроить(Параметры, ЭтотОбъект);

КонецПроцедуры

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	
	ОснФорма = ПолучитьФорму();
	ОснФорма.ОбщийОтчет = ОбщийОтчет;
	ОснФорма.ЭтотОтчет = ЭтотОбъект;
	Возврат ОснФорма;
	
КонецФункции // ПолучитьОсновнуюФорму()

// Возвращает форму настройки 
//
// Параметры:
//	Нет.
//
// Возвращаемое значение:
//	
//
Функция ПолучитьФормуНастройки() Экспорт
	
	ФормаНастройки = ОбщийОтчет.ПолучитьФорму("ФормаНастройка");
	Возврат ФормаНастройки;
	
КонецФункции // ПолучитьФормуНастройки()

// Процедура обработки расшифровки
//
// Параметры:
//	Нет.
//
Процедура ОбработкаРасшифровки(РасшифровкаСтроки, ПолеТД, ВысотаЗаголовка, СтандартнаяОбработка) Экспорт
	
	// Добавление расшифровки из колонки
	Если ТипЗнч(РасшифровкаСтроки) = Тип("Структура") Тогда
		
		// Расшифровка колонки находится в заголовке колонки
		РасшифровкаКолонки = ПолеТД.Область(ВысотаЗаголовка+2, ПолеТД.ТекущаяОбласть.Лево).Расшифровка;

		Расшифровка = Новый Структура;

		Для каждого Элемент Из РасшифровкаСтроки Цикл
			Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;

		Если ТипЗнч(РасшифровкаКолонки) = Тип("Структура") Тогда

			Для каждого Элемент Из РасшифровкаКолонки Цикл
				Расшифровка.Вставить(Элемент.Ключ, Элемент.Значение);
			КонецЦикла;

		КонецЕсли; 

		ОбщийОтчет.ОбработкаРасшифровкиСтандартногоОтчета(Расшифровка, СтандартнаяОбработка, ЭтотОбъект);

	КонецЕсли;
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру, в которую складываются настройки
//
Функция СформироватьСтруктуруДляСохраненияНастроек(ПоказыватьЗаголовок) Экспорт
	
	СтруктураНастроек = Новый Структура;
	
	ОбщийОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураНастроек, ПоказыватьЗаголовок);
	
	Возврат СтруктураНастроек;
	
КонецФункции

// Заполняет настройки из структуры - кроме состояния панели "Отбор"
//
Процедура ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок) Экспорт

	ОбщийОтчет.ВосстановитьНастройкиИзСтруктуры(СохраненныеНастройки, ПоказыватьЗаголовок);
	
КонецПроцедуры
#КонецЕсли
