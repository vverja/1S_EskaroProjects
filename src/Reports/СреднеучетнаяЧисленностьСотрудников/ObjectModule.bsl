#Если Клиент Тогда

Перем НП Экспорт;  				  // Настройка периода

Процедура СформироватьПараметрыОтчета() Экспорт
	
	//Определение списка работников, попадающих в отчетный период
                                                               
	ПостроительОтчета.Параметры.Вставить("парамНачало",					ДатаНачала);
	ПостроительОтчета.Параметры.Вставить("парамКонец",					КонецМесяца(ДатаКонца) );
	ПостроительОтчета.Параметры.Вставить("парамОрганизация",			ПостроительОтчета.Отбор.Организация.Значение);
	
	Если ВидРаботников = "" Тогда
		МассивВидЗанятости    = Новый Массив(2);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
		МассивВидЗанятости[1] = Перечисления.ВидыЗанятостиВОрганизации.Совместительство;
	ИначеЕсли ВидРаботников = "Штатные" Тогда  //штатные
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
	ИначеЕсли ВидРаботников = "Совместители" Тогда  // Совместители
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.Совместительство;
	ИначеЕсли ВидРаботников = "ГПХ" Тогда  // Договорники
		МассивВидЗанятости    = Новый Массив(1);
	КонецЕсли;
	ПостроительОтчета.Параметры.Вставить("парамМестоРаботы",	МассивВидЗанятости);
	
	КоличествоДней = (НачалоДня(ДатаКонца) - НачалоДня(ДатаНачала))/86400 + 1;
	ПостроительОтчета.Параметры.Вставить("парамКоличествоДней",	КоличествоДней);
	
	спФизЛиц = ПолучитьОтбор(ВидОтчета);
	ПостроительОтчета.Параметры.Вставить("парамФизЛицо",		спФизЛиц);
	
КонецПроцедуры

Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ТолькоЗаголовок = Ложь) Экспорт
	
	ДокументРезультат.Очистить();
	ЗаполнитьНачальныеНастройки();
	
	Если СокращенныйВариант Тогда
		Макет	= ПолучитьМакет("МакетСокращенно");
		ПостроительОтчета.Макет = Макет;
	Иначе
		Макет	= ПолучитьМакет("Макет");
		ПостроительОтчета.Макет = Макет;
	КонецЕсли;
	
	ЗаголовокОтчета = Макет.ПолучитьОбласть("Заголовок");
	
	Если ТолькоЗаголовок Тогда
		
		ДокументРезультат.Вывести(ЗаголовокОтчета);
		Возврат;
		
	КонецЕсли;
	
	ПостроительОтчета.МакетЗаголовкаОтчета = ЗаголовокОтчета;
	ВысотаЗаголовка                        = ЗаголовокОтчета.ВысотаТаблицы;
	
	ОтборОрганизации        = ПостроительОтчета.Отбор.Организация.Использование;
	Организация             = ПостроительОтчета.Отбор.Организация.Значение;
	ВидСравненияОрганизация = УправлениеОтчетами.ПолучитьВидСравненияСтрокой(ПостроительОтчета.Отбор.Организация.ВидСравнения);
	
	ОтборПодразделения        = ПостроительОтчета.Отбор.Подразделение.Использование; 
	Подразделение             = ПостроительОтчета.Отбор.Подразделение.Значение;
	ВидСравненияПодразделение = УправлениеОтчетами.ПолучитьВидСравненияСтрокой(ПостроительОтчета.Отбор.Подразделение.ВидСравнения);
	
	СформироватьПараметрыОтчета();
	                                           
	ПостроительОтчета.Выполнить();
	ПостроительОтчета.ОформитьМакет();
	ПостроительОтчета.Вывести(ДокументРезультат);
	
	Ширина = ДокументРезультат.ШиринаТаблицы;
	ВысотаТаблицы = ДокументРезультат.ВысотаТаблицы;
	ВысотаЗаголовка = ВысотаЗаголовка + 1;
	
	Область = ДокументРезультат.Область(ВысотаЗаголовка, 4);
	
КонецПроцедуры


// Расчитывает среднесписочную численность штатных работников и в эквиваленте полной занятости
//
// Параметры
//  ВидСредней  – Строка – "ЭПЗ", "ССЧ"
//  ВидПериода  – Строка – "МЕСЯЦ", "КВАРТАЛ", "ГОД", "КВАРТАЛСНАЧАЛАГОДА", "МЕСЯЦСНАЧАЛАГОДА" 
//  Организация  – ссылка – организация
//  ПараметрОтбора  – Строка – "" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, "Пен" = пенсионеры, "ГПХ" - работающие по договору ГПХ
//  ПоФизЛицам      – Булево – разворачивать или нет до физ. лиц
//
// Возвращаемое число:
//   таблица значений   – Колонки: Период и Сумма
//
Функция ПолучитьСотрудников( УсловиеНаФизлицо = "" )
	// сотрудники В разрезе периодов
	ТекстРаботникиОрганизации = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РаботникиПериод.Организация					КАК Организация,
	|	РаботникиПериод.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|	РаботникиПериод.Сотрудник					КАК Сотрудник,
	|	1											КАК Учитывать,
	|	РаботникиПериод.Начало						КАК Начало,
	|   ВЫБОР	КОГДА РаботникиПериод.Конец ЕСТЬ NULL  ИЛИ РаботникиПериод.КОНЕЦ > &парамКонец
	|   			ТОГДА &парамКонец 
	|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( НАЧАЛОПЕРИОДА( РаботникиПериод.Конец, ДЕНЬ), ДЕНЬ, -1), ДЕНЬ)  
	|   		КОНЕЦ     КАК Конец
	|	ИЗ (
	|		ВЫБРАТЬ
	|			РаботникиНачало.Организация					КАК Организация,
	|			РаботникиНачало.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|			РаботникиНачало.Сотрудник					КАК Сотрудник,
	|			РаботникиНачало.Начало						КАК Начало,
	|			МИНИМУМ(ВЫБОР КОГДА НЕ Состояния.Период ЕСТЬ NULL ТОГДА Состояния.Период ИНАЧЕ Работники.Период КОНЕЦ) КАК Конец
	|
	|		ИЗ	(
	|
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				&парамНачало						КАК Начало
	|			ИЗ	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамНачало, ) КАК Работники
	|               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(&парамНачало, ) КАК Состояния
	|               ПО Работники.Организация = Состояния.Организация
	|                И Работники.Сотрудник = Состояния.Сотрудник
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)                                    
	|			И	Работники.Сотрудник.ВидЗанятости В (&парамМестоРаботы)
	|			И	(Состояния.Состояние ЕСТЬ NULL ИЛИ
	|				(Состояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|				 И Состояния.Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком) ))
	|			" + УсловиеНаФизлицо + "
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				Работники.Период					КАК Начало
	|			ИЗ	РегистрСведений.РаботникиОрганизаций КАК Работники
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение) 	
	|			И	Работники.Сотрудник.ВидЗанятости В (&парамМестоРаботы)                                       
	|			И	Работники.Период >= &парамНачало
	|			И	Работники.Период <= &парамКонец
	|			" + УсловиеНаФизлицо + "
	|
	|			ОБЪЕДИНИТЬ ВСЕ
	|			ВЫБРАТЬ
	|				Работники.Организация				КАК Организация,
	|				Работники.ПодразделениеОрганизации	КАК ПодразделениеОрганизации,
	|				Работники.Сотрудник					КАК Сотрудник,
	|				Состояния.Период					КАК Начало
	|			ИЗ	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&парамНачало, ) КАК Работники
	|               ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(&парамНачало, ) КАК СостоянияНачало
	|               ПО Работники.Организация = СостоянияНачало.Организация
	|                И Работники.Сотрудник = СостоянияНачало.Сотрудник
	|               ЛЕВОЕ СОЕДИНЕНИЕ
	|               (ВЫБРАТЬ
	|                 Состояния.Сотрудник КАК Сотрудник,
	|                 Состояния.Период КАК Период,
	|                 МАКСИМУМ(СостоянияДо.Период) КАК ПериодДо
	|                ИЗ РегистрСведений.СостояниеРаботниковОрганизаций КАК Состояния
	|                   ЛЕВОЕ СОЕДИНЕНИЕ
	|					РегистрСведений.СостояниеРаботниковОрганизаций КАК СостоянияДо
	|                   ПО СостоянияДо.Период < Состояния.Период
	|					 И Состояния.Сотрудник = СостоянияДо.Сотрудник
	|                ГДЕ Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает)
	|					И	Состояния.Период >= &парамНачало
	|					И	Состояния.Период <= &парамКонец
	|                СГРУППИРОВАТЬ ПО Состояния.Сотрудник, Состояния.Период
	|                )КАК Состояния
	|               ПО Работники.Сотрудник = Состояния.Сотрудник
	|				ЛЕВОЕ СОЕДИНЕНИЕ
	|               РегистрСведений.СостояниеРаботниковОрганизаций КАК СостоянияДо
	|               ПО СостоянияДо.Сотрудник = Состояния.Сотрудник 
	|                И СостоянияДо.Период = Состояния.ПериодДо 
	|			ГДЕ	Работники.ПричинаИзмененияСостояния <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)                                    
	|			И	Работники.Сотрудник.ВидЗанятости В (&парамМестоРаботы)
	|			И	(СостоянияДо.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|				 ИЛИ СостоянияДо.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком))
	|           И НЕ (Состояния.Период ЕСТЬ NULL)
	|			И Состояния.Период >= &парамНачало
	|			" + УсловиеНаФизлицо + "
	|
	|   	) КАК РаботникиНачало
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК Работники
	|		ПО		РаботникиНачало.Сотрудник = Работники.Сотрудник
	|			И	Работники.Сотрудник.ВидЗанятости В (&парамМестоРаботы)                                       
	|					И РаботникиНачало.Начало < Работники.Период
	|					И (Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|					ИЛИ Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Перемещение))
	|			" + УсловиеНаФизлицо + "
	|        ЛЕВОЕ СОЕДИНЕНИЕ
	|               (ВЫБРАТЬ
	|                 Состояния.Сотрудник КАК Сотрудник,
	|                 МИНИМУМ(Состояния.Период) КАК Период
	|                ИЗ РегистрСведений.СостояниеРаботниковОрганизаций КАК Состояния
	|                ГДЕ (Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоБеременностиИРодам)
	|					  ИЛИ Состояния.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ОтпускПоУходуЗаРебенком))            
	|					И	Состояния.Период >= &парамНачало
	|					И	Состояния.Период <= &парамКонец
	|
	|                СГРУППИРОВАТЬ ПО Сотрудник
	|                )КАК Состояния
	|               ПО РаботникиНачало.Сотрудник = Состояния.Сотрудник
	|					И РаботникиНачало.Начало < Состояния.Период
	|
	|   	СГРУППИРОВАТЬ ПО
	|			РаботникиНачало.Организация,
	|			РаботникиНачало.ПодразделениеОрганизации,
	|			РаботникиНачало.Сотрудник,
	|			РаботникиНачало.Начало
	|
	|) КАК РаботникиПериод
	|
	|";
	
	ТекстГПХ = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Работники.Организация							КАК Организация,
	|	Работники.ПодразделениеОрганизации				КАК ПодразделениеОрганизации,
	|	Работники.Сотрудник								КАК Сотрудник,
	|	1												КАК Учитывать,
	|   ВЫБОР	КОГДА Работники.ДатаНачала < &парамНачало
	|   			ТОГДА &парамНачало 
	|   		ИНАЧЕ  Работники.ДатаНачала  
	|   		КОНЕЦ     								КАК Начало,
	|   ВЫБОР	КОГДА Работники.ДатаОкончания > &парамКонец
	|   			ТОГДА &парамКонец 
	|   		ИНАЧЕ  Работники.ДатаОкончания  
	|   		КОНЕЦ     								КАК Конец
	|	ИЗ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК Работники
	|	ГДЕ	Работники.Проведен
	|	  И	Работники.Сотрудник.ОсновноеНазначение = ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)
	|	 " + УсловиеНаФизлицо + "
	|
	|";
	
	Если ВидРаботников = "Штатные" Тогда  //штатные
		Текст = "
		|" + ТекстРаботникиОрганизации + "
		|";
	ИначеЕсли ВидРаботников = "Совместители" Тогда  // Совместители
		Текст = "
		|" + ТекстРаботникиОрганизации + "
		|";
	ИначеЕсли ВидРаботников = "ГПХ" Тогда  // Договорники
		Текст = "
		|" + ТекстГПХ + "
		|";
	Иначе 
		ТекстГПХ = СтрЗаменить(ТекстГПХ,"РАЗРЕШЕННЫЕ","");
		Текст = "
		|" + ТекстРаботникиОрганизации + "
		|
		|ОБЪЕДИНИТЬ
		|" + ТекстГПХ + "
		|";
	КонецЕсли;
	Возврат Текст;
	
КонецФункции


// Расчитывает среднесписочную численность штатных работников и в эквиваленте полной занятости
//
// Параметры
//  ВидСредней  – Строка – "ЭПЗ", "ССЧ"
//  ВидПериода  – Строка – "МЕСЯЦ", "КВАРТАЛ", "ГОД", "КВАРТАЛСНАЧАЛАГОДА", "МЕСЯЦСНАЧАЛАГОДА" 
//  Организация  – ссылка – организация
//  ПараметрОтбора  – Строка – "" = по всем, "Ж" = Женщины, "Инв" = Инвалиды, "Пен" = пенсионеры, "Иностранцы" = иностранцы, "ГПХ" - работающие по договору ГПХ
//  ПоФизЛицам      – Булево – разворачивать или нет до физ. лиц
//
// Возвращаемое число:
//   таблица значений   – Колонки: Период и Сумма
//
Функция ПолучитьОтбор(знач ПараметрОтбора = "") Экспорт
	
	ПараметрОтбора = Врег(ПараметрОтбора);
	Запрос = Новый Запрос;
                                                               
	Запрос.УстановитьПараметр("парамНачало",		ДатаНачала);
	Запрос.УстановитьПараметр("парамКонец",			КонецМесяца(ДатаКонца) );
	Запрос.УстановитьПараметр("парамОрганизация",	ПостроительОтчета.Отбор.Организация.Значение);
	
	Если ВидРаботников = "" Тогда
		МассивВидЗанятости    = Новый Массив(2);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
		МассивВидЗанятости[1] = Перечисления.ВидыЗанятостиВОрганизации.Совместительство;
	ИначеЕсли ВидРаботников = "Штатные" Тогда  //штатные
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
	ИначеЕсли ВидРаботников = "Совместители" Тогда  // Совместители
		МассивВидЗанятости    = Новый Массив(1);
		МассивВидЗанятости[0] = Перечисления.ВидыЗанятостиВОрганизации.Совместительство;
	ИначеЕсли ВидРаботников = "ГПХ" Тогда  // Договорники
		МассивВидЗанятости    = Новый Массив(1);
	КонецЕсли;
	Запрос.УстановитьПараметр("парамМестоРаботы",	МассивВидЗанятости);
	                      
	УсловиеОтбора = "";
	Если ПараметрОтбора = "Ж" Тогда
		
		УсловиеОтбора = "И Работники.Сотрудник.ФизЛицо.Пол = &парамОтбора";
		Запрос.УстановитьПараметр("парамОтбора", Перечисления.ПолФизическихЛиц.Женский);
		
	КонецЕсли;
	ТекстСотрудникиОрганизации = ПолучитьСотрудников( УсловиеОтбора );
	
	//"Ж" = Женщины, 
	//"ГПХ" - работающие по договору ГПХ
	//"Инв" = Инвалиды, 
	//"Пен" = пенсионеры,
	//"Иностранцы" = иностранцы
	Если ПараметрОтбора = "ИНВ" Тогда
		
		Признак = "Список.Инвалидность";
		ИмяРегистраСведений = "СведенияОбИнвалидностиФизлиц";
		
	ИначеЕсли (ПараметрОтбора = "ПЕНСИОНЕРЫ" ИЛИ ПараметрОтбора = "ПЕН")Тогда
		
		Признак = "Список.Пенсионер";
		ИмяРегистраСведений = "СведенияОПенсионерах";
		
	ИначеЕсли ПараметрОтбора = "ИНОСТРАНЦЫ" Тогда
		
		//Признак = "Список.НеЯвляетсяНалоговымРезидентом";
		Признак = "
		|ВЫБОР 
		|	КОГДА ЕстьNULL(Список.НеЯвляетсяНалоговымРезидентом, ЛОЖЬ)
		|		ТОГДА ИСТИНА
		|	КОГДА ЕстьNULL(Список.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка) 
		|	  ИЛИ ЕстьNULL(Список.Страна, ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.КлассификаторСтранМира.Украина) 
		|		ТОГДА ЛОЖЬ
		|	ИНАЧЕ ИСТИНА
		|КОНЕЦ";
		
		ИмяРегистраСведений = "ГражданствоФизЛиц";	
		
	ИначеЕсли ПараметрОтбора = "ГПХ" Тогда
		
		Признак = "Список.СуммаЗаРаботу >= 0";
		ИмяРегистраСведений = "ДоговорникиОрганизаций";
		
	КонецЕсли; 
	
	Если  ПараметрОтбора = "ИНВ" ИЛИ ПараметрОтбора = "ПЕНСИОНЕРЫ" ИЛИ ПараметрОтбора = "ПЕН" ИЛИ ПараметрОтбора = "ИНОСТРАНЦЫ" Тогда
		
		ТекстЗапросаУсловие = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + ".СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	" + Признак + "
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо			КАК Физлицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|			ГДЕ	" + Признак + "
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений." + ИмяРегистраСведений + " КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не " + Признак + "
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод.Начало ТОГДА УсловиеПериод.Начало ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА Основной.Конец < УсловиеПериод.Конец ТОГДА Основной.Конец ИНАЧЕ  УсловиеПериод.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие + " ) КАК УсловиеПериод
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД.Физлицо
		|		И	Основной.Начало <= УсловиеПериод.Конец
		|		И	УсловиеПериод.Начало <= Основной.Конец
		|";
		
	ИначеЕсли ПараметрОтбора = "ИНВНЕПЕН" Тогда
		
		ТекстЗапросаУсловие1 = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Инвалидность
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо			КАК Физлицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК Список
		|			ГДЕ	Список.Инвалидность
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Инвалидность
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстЗапросаУсловие2 = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	НЕ Список.Пенсионер
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				Список.Период		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах КАК Список
		|			ГДЕ	НЕ Список.Пенсионер
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				ФизЛица.Ссылка 		КАК ФизЛицо,
		|				&парамНачало		КАК Начало
		|			ИЗ Справочник.ФизическиеЛица КАК ФизЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ПО ФизЛица.Ссылка = Список.ФизЛицо
		|			ГДЕ Список.Период ЕСТЬ NULL
        |
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерах КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	Список.Пенсионер
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		

		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод1.Начало И УсловиеПериод2.Начало < УсловиеПериод1.Начало ТОГДА УсловиеПериод1.Начало
		|   	 КОГДА Основной.Начало < УсловиеПериод2.Начало И УсловиеПериод1.Начало < УсловиеПериод2.Начало ТОГДА УсловиеПериод2.Начало
		|		 ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА УсловиеПериод1.Конец < Основной.Конец И УсловиеПериод1.Конец < УсловиеПериод2.Конец ТОГДА УсловиеПериод1.Конец 
		|		 КОГДА УсловиеПериод2.Конец < Основной.Конец И УсловиеПериод2.Конец < УсловиеПериод1.Конец ТОГДА УсловиеПериод2.Конец 
		|		 ИНАЧЕ  Основной.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие1 + " ) КАК УсловиеПериод1
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД1.Физлицо
		|		И	Основной.Начало <= УсловиеПериод1.Конец
		|		И	УсловиеПериод1.Начало <= Основной.Конец
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие2 + " ) КАК УсловиеПериод2
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД2.Физлицо
		|		И	Основной.Начало <= УсловиеПериод2.Конец
		|		И	УсловиеПериод2.Начало <= Основной.Конец
		|";

		
	ИначеЕсли ПараметрОтбора = "ИНВПЕН" Тогда
		
		ТекстЗапросаУсловие1 = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Инвалидность
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо			КАК Физлицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК Список
		|			ГДЕ	Список.Инвалидность
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Инвалидность
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстЗапросаУсловие2 = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Пенсионер
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо			КАК Физлицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах КАК Список
		|			ГДЕ	Список.Пенсионер
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерах КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Пенсионер
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод1.Начало И УсловиеПериод2.Начало < УсловиеПериод1.Начало ТОГДА УсловиеПериод1.Начало
		|   	 КОГДА Основной.Начало < УсловиеПериод2.Начало И УсловиеПериод1.Начало < УсловиеПериод2.Начало ТОГДА УсловиеПериод2.Начало
		|		 ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА УсловиеПериод1.Конец < Основной.Конец И УсловиеПериод1.Конец < УсловиеПериод2.Конец ТОГДА УсловиеПериод1.Конец 
		|		 КОГДА УсловиеПериод2.Конец < Основной.Конец И УсловиеПериод2.Конец < УсловиеПериод1.Конец ТОГДА УсловиеПериод2.Конец 
		|		 ИНАЧЕ  Основной.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие1 + " ) КАК УсловиеПериод1
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД1.Физлицо
		|		И	Основной.Начало <= УсловиеПериод1.Конец
		|		И	УсловиеПериод1.Начало <= Основной.Конец
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие2 + " ) КАК УсловиеПериод2
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД2.Физлицо
		|		И	Основной.Начало <= УсловиеПериод2.Конец
		|		И	УсловиеПериод2.Начало <= Основной.Конец
		|";

		
	
		
	ИначеЕсли ПараметрОтбора = "ПЕННЕИНВ" Тогда
		
		ТекстЗапросаУсловие1 = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	Список.Пенсионер
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо			КАК Физлицо,
		|				Список.Период			КАК Начало
		|			ИЗ	РегистрСведений.СведенияОПенсионерах КАК Список
		|			ГДЕ	Список.Пенсионер
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОПенсионерах КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	не Список.Пенсионер
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		
		ТекстЗапросаУсловие2 = "
		|ВЫБРАТЬ
		|	СписокПериод.Физлицо		КАК Физлицо,
		|	СписокПериод.Начало		КАК Начало,
		|   ВЫБОР	КОГДА СписокПериод.КОНЕЦ ЕСТЬ NULL  ИЛИ СписокПериод.КОНЕЦ > &парамКонец
		|   			ТОГДА &парамКонец 
		|   		ИНАЧЕ  НАЧАЛОПЕРИОДА( ДОБАВИТЬКДАТЕ( СписокПериод.КОНЕЦ, ДЕНЬ,-1), ДЕНЬ)  
		|   		КОНЕЦ     КАК Конец
		|
		|	ИЗ (ВЫБРАТЬ
		|			СписокНачало.Физлицо		КАК Физлицо,
		|			СписокНачало.Начало			КАК Начало,
		|			МИНИМУМ(Список.Период)    	КАК Конец
		|
		|		ИЗ	(
		|
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				&парамНачало		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамНачало) КАК Список
		|			ГДЕ	НЕ Список.Инвалидность
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				Список.Физлицо		КАК Физлицо,
		|				Список.Период		КАК Начало
		|			ИЗ	РегистрСведений.СведенияОбИнвалидностиФизлиц КАК Список
		|			ГДЕ	НЕ Список.Инвалидность
		|			И	Список.Период >= &парамНачало
		|			И	Список.Период <= &парамКонец
		|
		|			ОБЪЕДИНИТЬ ВСЕ
		|			ВЫБРАТЬ
		|				ФизЛица.Ссылка 		КАК ФизЛицо,
		|				&парамНачало		КАК Начало
		|			ИЗ Справочник.ФизическиеЛица КАК ФизЛица
		|			ЛЕВОЕ СОЕДИНЕНИЕ
		|			РегистрСведений.СведенияОбИнвалидностиФизлиц.СрезПоследних(&парамНачало) КАК Список
		|			ПО ФизЛица.Ссылка = Список.ФизЛицо
		|			ГДЕ Список.Период ЕСТЬ NULL
        |
		|   	) КАК СписокНачало
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК Список
		|		ПО		СписокНачало.Физлицо = Список.Физлицо
		|			И	СписокНачало.Начало < Список.Период
		|			И	Список.Инвалидность
		|
		|   	СГРУППИРОВАТЬ ПО
		|			СписокНачало.Физлицо,
		|			СписокНачало.Начало
		|
		|) КАК СписокПериод
		|
		|";
		

		
		ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
		
		ТекстСотрудникиОрганизации = "                              
		|	ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|		Основной.Сотрудник		КАК Сотрудник,			
		|   	// макс. начало
		|   	ВЫБОР КОГДА Основной.Начало < УсловиеПериод1.Начало И УсловиеПериод2.Начало < УсловиеПериод1.Начало ТОГДА УсловиеПериод1.Начало
		|   	 КОГДА Основной.Начало < УсловиеПериод2.Начало И УсловиеПериод1.Начало < УсловиеПериод2.Начало ТОГДА УсловиеПериод2.Начало
		|		 ИНАЧЕ  Основной.Начало КОНЕЦ     КАК Начало,
		|   	// мин. концы                                                         
		|		ВЫБОР КОГДА УсловиеПериод1.Конец < Основной.Конец И УсловиеПериод1.Конец < УсловиеПериод2.Конец ТОГДА УсловиеПериод1.Конец 
		|		 КОГДА УсловиеПериод2.Конец < Основной.Конец И УсловиеПериод2.Конец < УсловиеПериод1.Конец ТОГДА УсловиеПериод2.Конец 
		|		 ИНАЧЕ  Основной.Конец КОНЕЦ     КАК Конец
		|
		|	ИЗ ( " + ТекстСотрудникиОрганизации + " ) КАК Основной
		|  
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие1 + " ) КАК УсловиеПериод1
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД1.Физлицо
		|		И	Основной.Начало <= УсловиеПериод1.Конец
		|		И	УсловиеПериод1.Начало <= Основной.Конец
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ( " + ТекстЗапросаУсловие2 + " ) КАК УсловиеПериод2
		|	ПО		Основной.Сотрудник.Физлицо = УсловиеПЕРИОД2.Физлицо
		|		И	Основной.Начало <= УсловиеПериод2.Конец
		|		И	УсловиеПериод2.Начало <= Основной.Конец
		|";

		
	
	
		
	КонецЕсли; 
	
	Запрос.Текст = ТекстСотрудникиОрганизации;
	спФизЛиц = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник");
	
	Возврат спФизЛиц;
	
КонецФункции // ПолучитьСреднюю()


Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	ТекстСотрудникиОрганизации = ПолучитьСотрудников("И Работники.Сотрудник в (&парамФизЛицо)");
	
	ТекстСотрудникиОрганизации = СтрЗаменить(ТекстСотрудникиОрганизации,"РАЗРЕШЕННЫЕ","");
	
	ПостроительОтчета.Текст = "
	|ВЫБРАТЬ  РАЗРЕШЕННЫЕ
	|	РаботникиОрганизаций.Организация.Представление              КАК Организация,
	|	РаботникиОрганизаций.ПодразделениеОрганизации.Представление КАК Подразделение,
	|	РаботникиОрганизаций.Сотрудник.ФизЛицо.Наименование         КАК ФизЛицо,
	|	Календарь.ДатаКалендаря                                     КАК Буква,
	|	СУММА(РаботникиОрганизаций.Учитывать / &парамКоличествоДней )	КАК Средняя,
	|	СУММА(РаботникиОрганизаций.Учитывать)                     		КАК Результат
	|
	|ИЗ	 РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК Календарь
	|
	|ЛЕВОЕ СОЕДИНЕНИЕ ( " + ТекстСотрудникиОрганизации + " ) КАК РаботникиОрганизаций
	|ПО Календарь.ДатаКалендаря МЕЖДУ РаботникиОрганизаций.Начало И РаботникиОрганизаций.Конец	
	|	
	|ГДЕ	Календарь.ДатаКалендаря МЕЖДУ &парамНачало И &парамКонец 
	|  И    НЕ РаботникиОрганизаций.Сотрудник ЕСТЬ NULL
	|
	|{ГДЕ РаботникиОрганизаций.Организация 				КАК Организация,
	|	  РаботникиОрганизаций.ПодразделениеОрганизации КАК Подразделение}	
	|
	|СГРУППИРОВАТЬ ПО
	|	РаботникиОрганизаций.Организация,
	|	РаботникиОрганизаций.ПодразделениеОрганизации,
	|	РаботникиОрганизаций.Сотрудник.ФизЛицо,
	|	Календарь.ДатаКалендаря
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	Подразделение,
	|	ФизЛицо,
	|	Буква
	|
	|ИТОГИ СУММА(Средняя), СУММА(Результат) ПО
	|	Общие,
	|	Организация,
	|	Подразделение,
	|	ФизЛицо
    |	
	|
	|{ИТОГИ ПО
	|	Организация,
	|	Подразделение,
	|	ФизЛицо,
	|	Буква
	|   }
	|";
	
    ПостроительОтчета.ЗаполнитьНастройки();
	
	СтруктураПредставлениеПолей = Новый Структура("Физлицо,ИмяВидаРасчета",
												  "Работник","Буква");
	УправлениеОтчетами.ЗаполнитьПредставленияПолей(СтруктураПредставлениеПолей, ПостроительОтчета);
	
	ПостроительОтчета.Отбор.Добавить("Организация");
	ПостроительОтчета.Отбор.Добавить("Подразделение");
	
	ПостроительОтчета.ИзмеренияКолонки.Добавить("Буква");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
// 

НП = Новый НастройкаПериода;

#КонецЕсли