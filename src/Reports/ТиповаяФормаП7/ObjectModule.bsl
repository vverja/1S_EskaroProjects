Перем СохраненнаяНастройка Экспорт;
перем СписокНачисленоКолонка;
перем СписокУдержаноКолонка;
Процедура ЗаполнитьПараметры(Настройки = неопределено,ЗаполнениеПоУмолчанию = Ложь) Экспорт
	
	ПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных;
			
	конПериода =  ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("конПериода"));
	конПериода.Значение = КонецМесяца(Период);
	конПериода.Использование = Истина;
	
	начПериода =  ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("начПериода"));
	начПериода.Значение = НачалоМесяца(Период);
	начПериода.Использование = Истина;


	СледующийМесяц = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СледующийМесяц"));
	СледующийМесяц.Значение = КонецМесяца(Период) + 1;
	СледующийМесяц.Использование = Истина;

Если (Не СамостоятельнаяНастройка И СохраненнаяНастройка = Неопределено )  ИЛИ ЗаполнениеПоУмолчанию Тогда


//СПИСКИ ЗНАЧЕНИЙ
    ОсновныеНачисления = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций;
	ВзносыВФонды = ПланыВидовРасчета.ВзносыВФонды;
	УдержанияОрганизаций = ПланыВидовРасчета.УдержанияОрганизаций;
	
	списокОсновнойСотрудник = Новый СписокЗначений;
	списокОсновнойСотрудник.Добавить(Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
	списокОсновнойСотрудник.Добавить(Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
	
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////НАРАХОВАНО//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////
	//Фонд основної заробітної плати
	//СписокНачисленоКолонка = Новый Массив(50);
	списокНачисленоКолонка[1] = Новый СписокЗначений; // тарифна ставка, посадовий оклад
	списокНачисленоКолонка[1].Добавить(ОсновныеНачисления.ОкладПоДням);
	списокНачисленоКолонка[1].Добавить(ОсновныеНачисления.ОкладПоЧасам);
	списокНачисленоКолонка[1].Добавить(ОсновныеНачисления.ТарифДневной);
	списокНачисленоКолонка[1].Добавить(ОсновныеНачисления.ТарифЧасовой);
	списокНачисленоКолонка[1].Добавить(ОсновныеНачисления.СдельнаяОплата);
	
	списокНачисленоКолонка[2] = Новый СписокЗначений; //комісійні від реалізації продукції
	списокНачисленоКолонка[2].Добавить(ОсновныеНачисления.ПустаяСсылка());

	списокНачисленоКолонка[3] = Новый СписокЗначений; // гонорар, авторська винагорода штатним працівникам
	списокНачисленоКолонка[3].Добавить(ОсновныеНачисления.АвторскоеВознаграждение);
	
	списокНачисленоКолонка[4] = Новый СписокЗначений; //оплата праці за час перебування у відрядженні
	списокНачисленоКолонка[4].Добавить(ОсновныеНачисления.ОплатаПоСреднему);
	
	списокНачисленоКолонка[5] = Новый СписокЗначений; //оплата за профнавчання інших працівників
	списокНачисленоКолонка[5].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[6] = Новый СписокЗначений; //вартість продукції, виданої працівникам при натуральній формі оплати праці 
	списокНачисленоКолонка[6].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	
	списокНачисленоКолонка[7] = Новый СписокЗначений; //інші види нарахувань
	//списокНачисленоКолонка[7].Добавить(ОсновныеНачисления.ПустаяСсылка());
	СписокНачисленоКолонка[7].Добавить(ОсновныеНачисления.ДоговорПодряда);
	СписокНачисленоКолонка[7].Добавить(ОсновныеНачисления.СдельнаяОплатаГПХ);
	
	//Фонд додаткової заробтньної плати
	списокНачисленоКолонка[8] = Новый СписокЗначений; //премія
	списокНачисленоКолонка[8].Добавить(ОсновныеНачисления.Годовая);
	списокНачисленоКолонка[8].Добавить(ОсновныеНачисления.Квартальная);
	списокНачисленоКолонка[8].Добавить(ОсновныеНачисления.Месячная);
	
	
	списокНачисленоКолонка[9] = Новый СписокЗначений; //відсоткові або комісійні винагороди
	списокНачисленоКолонка[9].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[10] = Новый СписокЗначений; //оплата роботи в надурочний час, святкові та неробочі дні
	списокНачисленоКолонка[10].Добавить(ОсновныеНачисления.ДоплатаЗаПраздничныеИВыходные);
	списокНачисленоКолонка[10].Добавить(ОсновныеНачисления.ОплатаПраздничныхИВыходных);
	
	списокНачисленоКолонка[11] = Новый СписокЗначений; //оплата днів відпочинку
	списокНачисленоКолонка[11].Добавить(ОсновныеНачисления.КомпенсацияОтпуска);
	
	
	списокНачисленоКолонка[12] = Новый СписокЗначений; //індексація заробітньої плати   
	списокНачисленоКолонка[12].Добавить(ОсновныеНачисления.ИндексацияЗарплаты);
	
	списокНачисленоКолонка[13] = Новый СписокЗначений; //компенсації працівникам у зв'язку з порушенням терміну виплати заробітньої плати
	списокНачисленоКолонка[13].Добавить(ОсновныеНачисления.КомпенсацияЗарплаты);
	
	списокНачисленоКолонка[14] = Новый СписокЗначений; //витрати на безкоштовний проїзд
	списокНачисленоКолонка[14].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[15] = Новый СписокЗначений; //вартість форменного одягу
	списокНачисленоКолонка[15].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[16] = Новый СписокЗначений; //відпустка за поточний місяць
	списокНачисленоКолонка[16].Добавить(ОсновныеНачисления.ОплатаПоСреднемуОтп);
	списокНачисленоКолонка[16].Добавить(ОсновныеНачисления.ДополнительныйЕжегодныйОтпуск);
	списокНачисленоКолонка[16].Добавить(ОсновныеНачисления.ДополнительныйОтпускНаДетей);
	списокНачисленоКолонка[16].Добавить(ОсновныеНачисления.ЧернобыльскийОтпуск);
	списокНачисленоКолонка[16].Добавить(ОсновныеНачисления.УчебныйОтпуск);
	
	списокНачисленоКолонка[17] = Новый СписокЗначений; //відпуска за наступний період
	списокНачисленоКолонка[17].Добавить(ОсновныеНачисления.ОплатаПоСреднемуОтп);
	списокНачисленоКолонка[17].Добавить(ОсновныеНачисления.ДополнительныйЕжегодныйОтпуск);
	списокНачисленоКолонка[17].Добавить(ОсновныеНачисления.ДополнительныйОтпускНаДетей);
	списокНачисленоКолонка[17].Добавить(ОсновныеНачисления.ЧернобыльскийОтпуск);
	списокНачисленоКолонка[17].Добавить(ОсновныеНачисления.УчебныйОтпуск);
		
	списокНачисленоКолонка[18] = Новый СписокЗначений; //інші нарахування за невідпрацьований час (простої, медогляд та ін.)
	списокНачисленоКолонка[18].Добавить(ОсновныеНачисления.Простой);
	списокНачисленоКолонка[18].Добавить(ОсновныеНачисления.ПростойПоСредней);
	списокНачисленоКолонка[18].Добавить(ОсновныеНачисления.ПочасовойПростой);
	списокНачисленоКолонка[18].Добавить(ОсновныеНачисления.ПочасовойПростойПоСредней);	
	
	списокНачисленоКолонка[19] = Новый СписокЗначений; //суміщення професій 
	списокНачисленоКолонка[19].Добавить(ОсновныеНачисления.ПустаяСсылка());
	                                                                   	
	списокНачисленоКолонка[20] = Новый СписокЗначений; //розширення обслуговування або збільшення обсягу робіт
	СписокНачисленоКолонка[20].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[21] = Новый СписокЗначений; //виконання обов'язків тимчасово відсутнього працівника
	списокНачисленоКолонка[21].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[22] = Новый СписокЗначений; //робота у вижких і шкідливих та особливо важких і особливо шкдливих умовах праці	
	списокНачисленоКолонка[22].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[23] = Новый СписокЗначений; //інтенсивність праці
	списокНачисленоКолонка[23].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[24] = Новый СписокЗначений; //робота в нічний час
	списокНачисленоКолонка[24].Добавить(ОсновныеНачисления.ДоплатаЗаНочныеЧасы);
	
	списокНачисленоКолонка[25] = Новый СписокЗначений; //керівництво бригадою
	списокНачисленоКолонка[25].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[26] = Новый СписокЗначений; //висока професійна майстерність
	списокНачисленоКолонка[26].Добавить(ОсновныеНачисления.ПустаяСсылка());
		
	списокНачисленоКолонка[27] = Новый СписокЗначений; //класність водіям транспортних засобів
	списокНачисленоКолонка[27].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[28] = Новый СписокЗначений; //високі досягнення праці
	списокНачисленоКолонка[28].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[29] = Новый СписокЗначений; //виконання особливо важливої роботи на певний термін
	списокНачисленоКолонка[29].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[30] = Новый СписокЗначений; //знання та використання в роботі іноземної мови
	списокНачисленоКолонка[30].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[31] = Новый СписокЗначений; //допуск до державної таємниці
	списокНачисленоКолонка[31].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[32] = Новый СписокЗначений; //дипломатичні ранги, персональні звання службових осіб, ранги державних службовців, кваліфікаційні рівні суддів
	списокНачисленоКолонка[32].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[33] = Новый СписокЗначений; //науковий ступінь
	списокНачисленоКолонка[33].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[34] = Новый СписокЗначений; //нормативний час перебвання у шахті
	списокНачисленоКолонка[34].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[35] = Новый СписокЗначений; //робота на територіях радіоактивного забруднення
	списокНачисленоКолонка[35].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[36] = Новый СписокЗначений; //інші надбавки та доплати
	списокНачисленоКолонка[36].Добавить(ОсновныеНачисления.ДоплатаЗаВечерниеЧасы);
	списокНачисленоКолонка[36].Добавить(ОсновныеНачисления.ДоплатаДоСреднего);
	списокНачисленоКолонка[36].Добавить(ОсновныеНачисления.ВыслугаЛет);
	списокНачисленоКолонка[36].Добавить(ОсновныеНачисления.ВыслугаЛетЕжемесячно);
		
	списокНачисленоКолонка[37] = Новый СписокЗначений; //інші види нарахувань
	списокНачисленоКолонка[37].Добавить(ОсновныеНачисления.ПустаяСсылка());
		
	//Інші заохочувальні та компенсаційні виплати
	списокНачисленоКолонка[38] = Новый СписокЗначений; //винагороди та заохочення, що мають одноразовий характер
	списокНачисленоКолонка[38].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[39] = Новый СписокЗначений; //матеріальна допомога, що має систематичний характер
	списокНачисленоКолонка[39].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	
	списокНачисленоКолонка[40] = Новый СписокЗначений; //виплати соціального характеру
	списокНачисленоКолонка[40].Добавить(ОсновныеНачисления.ПустаяСсылка());
	                                                                       	
	//Інші виплати, що не належать до фонду оплати праці
	
	списокНачисленоКолонка[41] = Новый СписокЗначений; //інші виплати, що не належать до фонду оплати праці
	//списокНачисленоКолонка[41].Добавить(ОсновныеНачисления.ДоговорПодряда);
	списокНачисленоКолонка[41].Добавить(ОсновныеНачисления.ДоговорПодрядаСПД);
	
	списокНачисленоКолонка[42] = Новый СписокЗначений; //допомоги та інші виплати,що здійснюються зарахунок коштів фондів державного соціального страхування
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.ОплатаБЛПоТравмеНаПроизводстве);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.ОтпускПоБеременностиИРодам);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.ПособиеПоУходуЗаРебенкомДо3Лет);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.ИндексацияСоцстрах);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.ИндексацияСоцстрахНесч);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.БлаготворительнаяПомощь);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.НаПогребение);
	списокНачисленоКолонка[42].Добавить(ОсновныеНачисления.ПриРожденииРебенка);
	
		
	списокНачисленоКолонка[43] = Новый СписокЗначений; //оплата перших 5 днів тимчасової непрацездатності за рахунок коштів підприємств 
	списокНачисленоКолонка[43].Добавить(ОсновныеНачисления.ОплатаПоСреднемуБЛОрганизации);
	
	списокНачисленоКолонка[44] = Новый СписокЗначений; //дивіденди, відсотки, виплати за паями
	списокНачисленоКолонка[44].Добавить(ОсновныеНачисления.ДивидендыРаботников);
	
	списокНачисленоКолонка[45] = Новый СписокЗначений; //витрати на відрядження
	списокНачисленоКолонка[45].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[46] = Новый СписокЗначений; //матеріальна допомога разового характеру
	СписокНачисленоКолонка[46].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[47] = Новый СписокЗначений; //внески підприємств на медичне та пенсійне страхування працівників
	списокНачисленоКолонка[47].Добавить(ОсновныеНачисления.ПустаяСсылка());
	
	списокНачисленоКолонка[48] = Новый СписокЗначений; //інші види нарахувань
	списокНачисленоКолонка[48].Добавить(ОсновныеНачисления.КомпенсацияПодотчетныхДС);
	
////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////НАРАХОВАНО//////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////	
	списокУдержаноКолонка1 = Новый СписокЗначений; //видано за 1-шу половину місяця (аванс)
	
	//Внески на загальнообов'язкове державне соціальне страхування
		
	списокУдержаноКолонка[2] = Новый СписокЗначений; //до Пенсійного фонду
	списокУдержаноКолонка[2].Добавить(ВзносыВФонды.Пенсионный20050101);
	списокУдержаноКолонка[2].Добавить(ВзносыВФонды.Пенсионный20070101);
	списокУдержаноКолонка[2].Добавить(ВзносыВФонды.ПенсионныйСДекретных20050101);
	//Пока не утвержена новая форма или комментарии - будем показывать ЕСВ здесь
	списокУдержаноКолонка[2].Добавить(ВзносыВФонды.ЕСВ);
	списокУдержаноКолонка[2].Добавить(ВзносыВФонды.ЕСВБольничные);
	списокУдержаноКолонка[2].Добавить(ВзносыВФонды.ЕСВГПХ);
	
	списокУдержаноКолонка[3] = Новый СписокЗначений; //до Фонду зайнтості
	списокУдержаноКолонка[3].Добавить(ВзносыВФонды.Безработица20050101);
	списокУдержаноКолонка[3].Добавить(ВзносыВФонды.Безработица20090101);
	списокУдержаноКолонка[3].Добавить(ВзносыВФонды.БезработицаГПХ20090101);
	
	списокУдержаноКолонка[4] = Новый СписокЗначений; //до Фонду соціального страхування з тимчасової втрати працездатності
	списокУдержаноКолонка[4].Добавить(ВзносыВФонды.Соцстрах20050101);
	
	списокУдержаноКолонка5 = Новый СписокЗначений; //податок на доходи фізичних осіб
	
	списокУдержаноКолонка[6] = Новый СписокЗначений; //профспілкові внески
	списокУдержаноКолонка[6].Добавить(УдержанияОрганизаций.ПустаяСсылка());
	
	списокУдержаноКолонка[7] = Новый СписокЗначений; //аліменти
	списокУдержаноКолонка[7].Добавить(УдержанияОрганизаций.АлиментыПроцентом);
	списокУдержаноКолонка[7].Добавить(УдержанияОрганизаций.АлиментыПроцентомДоПредела);
	списокУдержаноКолонка[7].Добавить(УдержанияОрганизаций.АлиментыФиксированнойСуммой);
	списокУдержаноКолонка[7].Добавить(УдержанияОрганизаций.АлиментыФиксированнойСуммойДоПредела);
	
	списокУдержаноКолонка8 = Новый СписокЗначений; //аванс в банк
	
	списокУдержаноКолонка9 = Новый СписокЗначений; //каса (до видачі)
	
	//ПАРАМЕТРЫ
	парамНачисленоКолонка = Новый Массив(50);
	парамУдержаноКолонка = Новый Массив(9);
	
	номер = 0;
	Пока номер < 48 Цикл
		номер = номер + 1;
		парамНачисленоКолонка[номер] = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамНачисленоКолонка" + номер));
		парамНачисленоколонка[номер].Значение = списокНачисленоКолонка[номер];
		парамНачисленоКолонка[номер].Использование = Истина;
	КонецЦикла;
	
	номер = 1;
	Пока номер < 7 Цикл
		номер = номер + 1;
		Если номер = 5 Тогда
			Продолжить;
		КонецЕсли;
		
		парамУдержаноКолонка[номер] = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамУдержаноКолонка" + номер));
		парамУдержаноколонка[номер].Значение = списокУдержаноКолонка[номер];
		парамУдержаноКолонка[номер].Использование = Истина;
	КонецЦикла
	
	КонецЕсли;

КонецПроцедуры

#Если Клиент ИЛИ ВнешнееСоединение  Тогда


Процедура ПроверитьНеучтенныеВидыРасчета() Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	ВидРасчета				КАК ВидРасчета,
	|	Сотрудник				КАК Сотрудник,
	|	ЕстьNULL(Результат,0)	КАК Результат
	|ИЗ
	|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций
	|ГДЕ
	| ВидРасчета НЕ В (&парамСписок)
	| И ПериодРегистрации = &период";
	
	
	Запрос.УстановитьПараметр("парамСписок", СписокНачисленоКолонка);
	Запрос.УстановитьПараметр("период", Период);
	Выборка = Запрос.Выполнить().Выбрать();
		
	Пока Выборка.Следующий() Цикл
		Если Выборка.Результат <> 0 Тогда
			Сообщить("Для работника: " + Выборка.Сотрудник + " присутствует вид расчета (" + Выборка.ВидРасчета + ") с ненулевым начислением. Измените настройки!",СтатусСообщения.Важное);
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

// Доработка компоновщика отчета перед выводом
//
Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	Возврат;	
КонецПроцедуры

// Сохранение настроек схемы компоновки
//
Процедура СохранитьНастройку() Экспорт
	
	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

// Процедура заполняет параметры отчета по элементу справочника из переменной СохраненнаяНастройка.
//
Процедура ПрименитьНастройку() Экспорт
	
	Если СохраненнаяНастройка.Пустая() Тогда
		Возврат;
	КонецЕсли;
	 
	СтруктураПараметров = СохраненнаяНастройка.ХранилищеНастроек.Получить();
	ТиповыеОтчеты.ПрименитьСтруктуруПараметровОтчета(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

// Инициализация отчета
//
// Параметры:
//  Нет.
//
Процедура ИнициализацияОтчета() Экспорт
	
	ТиповыеОтчеты.ИнициализацияТиповогоОтчета(ЭтотОбъект);
	
КонецПроцедуры //ИнициализацияОтчета()


#КонецЕсли

СписокУдержаноКолонка = Новый Массив(8);
СписокНачисленоКолонка = Новый Массив(50);