Процедура ЗаполнитьПараметры(Настройки = Неопределено, ЗаполнениеПоУмолчанию = Ложь) Экспорт
		ПараметрыДанных = КомпоновщикНастроек.Настройки.ПараметрыДанных;
		
		парамПериод = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
		парамПериод.Значение = Период;
		парамПериод.Использование = Истина;
		
		начПериода =  ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("начПериода"));
		начПериода.Значение = НачалоМесяца(Период);
		начПериода.Использование = Истина;
		
		конПериода =  ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("конПериода"));
	    конПериода.Значение = КонецМесяца(Период);
		конПериода.Использование = Истина;

		СледующийМесяц = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("СледующийМесяц"));
		СледующийМесяц.Значение = КонецМесяца(Период) + 1;
		СледующийМесяц.Использование = Истина;

	
	
	Если Не СамостоятельнаяНастройка  ИЛИ ЗаполнениеПоУмолчанию Тогда
			
		//Сокращения
		Настройки = КомпоновщикНастроек.Настройки;
				
		ОсновныеНачисления = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций;
		ВзносыВФонды = ПланыВидовРасчета.ВзносыВФонды;
		Удержания = ПланыВидовРасчета.УдержанияОрганизаций;
		
///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////НАЧИСЛЕНИЯ////////////////////////////////////////////////////////////////////////////		
		списокТарифныеСтавки = Новый СписокЗначений;
		списокТарифныеСтавки.Добавить(ОсновныеНачисления.ОкладПоДням);
		списокТарифныеСтавки.Добавить(ОсновныеНачисления.ОкладПоЧасам);
		списокТарифныеСтавки.Добавить(ОсновныеНачисления.ТарифДневной);
		списокТарифныеСтавки.Добавить(ОсновныеНачисления.ТарифЧасовой);
		
		списокСверхурочные = Новый СписокЗначений;
		списокСверхурочные.Добавить(ОсновныеНачисления.ДоплатаЗаПраздничныеИВыходные);
		списокСверхурочные.Добавить(ОсновныеНачисления.ОплатаСверхурочных);
		
		списокНочные = Новый СписокЗначений;
		списокНочные.Добавить(ОсновныеНачисления.ДоплатаЗаНочныеЧасы);
		
		списокКолонка10 = Новый СписокЗначений;
		списокКолонка10.Добавить(ОсновныеНачисления.ПустаяСсылка());
		
		списокКолонка11 = Новый СписокЗначений;
		списокКолонка11.Добавить(ОсновныеНачисления.ПустаяСсылка());
		
		списокКолонка13 = Новый СписокЗначений;
		списокКолонка13.Добавить(ОсновныеНачисления.ПустаяСсылка());
		
		списокКолонка14 = Новый СписокЗначений;
		списокКолонка14.Добавить(ОсновныеНачисления.ПустаяСсылка());
		
		списокПремии = Новый СписокЗначений;
		списокПремии.Добавить(ОсновныеНачисления.Квартальная);
		списокПремии.Добавить(ОсновныеНачисления.Месячная);
		списокПремии.Добавить(ОсновныеНачисления.Годовая);
		
		//Простои только не по вине работника
		списокПростои= Новый СписокЗначений;
		списокПростои.Добавить(ОсновныеНачисления.ПростойПоСредней);
		
		списокОтпуска = Новый СписокЗначений;
		списокОтпуска.Добавить(ОсновныеНачисления.ОплатаПоСреднемуОтп);
		списокОтпуска.Добавить(ОсновныеНачисления.ОтпускПоБеременностиИРодам);
		
		списокБольничный = Новый СписокЗначений;
		списокБольничный.Добавить(ОсновныеНачисления.ОплатаБЛПоТравмеНаПроизводстве);
		списокБольничный.Добавить(ОсновныеНачисления.ОплатаПоСреднемуБЛ);
		списокБольничный.Добавить(ОсновныеНачисления.ОплатаПоСреднемуБЛОрганизации);
		
		списокКолонка20= Новый СписокЗначений;
		списокКолонка20.Добавить(ОсновныеНачисления.ПустаяСсылка()); 		
		
///////////////////////////////////////////////////////////////////////////////////////////////////
/////////////УДЕРЖАНИЯ////////////////////////////////////////////////////////////////////////////
		списокИсполнительныеЛисты = Новый СписокЗначений;
		списокИсполнительныеЛисты.Добавить(Удержания.АлиментыПроцентом);
		списокИсполнительныеЛисты.Добавить(Удержания.АлиментыПроцентомДоПредела);
		списокИсполнительныеЛисты.Добавить(Удержания.АлиментыФиксированнойСуммой);
		списокИсполнительныеЛисты.Добавить(Удержания.АлиментыФиксированнойСуммойДоПредела);
		списокИсполнительныеЛисты.Добавить(Удержания.ИЛПроцентом);
		списокИсполнительныеЛисты.Добавить(Удержания.ИЛПроцентомДоПредела);
		списокИсполнительныеЛисты.Добавить(Удержания.ИЛФиксированнойСуммой);
		списокИсполнительныеЛисты.Добавить(Удержания.ИЛФиксированнойСуммойДоПредела);
		
		списокПенсионныйФонд = Новый СписокЗначений;
		списокПенсионныйФонд.Добавить(ВзносыВФонды.Пенсионный20050101);
		списокПенсионныйФонд.Добавить(ВзносыВФонды.Пенсионный20070101);
		списокПенсионныйФонд.Добавить(ВзносыВФонды.ПенсионныйСДекретных20050101);
		
		списокКолонка25 = Новый СписокЗначений;
		списокКолонка25.Добавить(Удержания.ПустаяСсылка());
		
		списокКолонка26 = Новый СписокЗначений;
		списокКолонка26.Добавить(Удержания.ПустаяСсылка());

		списокКолонка27 = Новый СписокЗначений;
		списокКолонка27.Добавить(Удержания.ПустаяСсылка());

		списокКолонка28 = Новый СписокЗначений;
		списокКолонка28.Добавить(Удержания.ПустаяСсылка());

		списокКолонка29 = Новый СписокЗначений;
		списокКолонка29.Добавить(Удержания.ПустаяСсылка());
		
		
		
		
/////////////////////////////////////////////////////////////////////////////////////////////////		
		списокСчетаЗарплата = Новый СписокЗначений;
		списокСчетаЗарплата.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоЗаработнойПлате); //661
		списокСчетаЗарплата.Добавить(Планысчетов.Хозрасчетный.РасчетыПоДругимВыплатам); //663
		
		списокВыплаты = Новый СписокЗначений;
		списокВыплаты.Добавить(Перечисления.КодыОперацийВзаиморасчетыСРаботникамиОрганизаций.Выплата);
		
		списокОсновнойСотрудник = Новый СписокЗначений;
		списокОсновнойСотрудник.Добавить(Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
		списокОсновнойСотрудник.Добавить(Перечисления.ВидыЗанятостиВОрганизации.Совместительство);
		

		парамТарифныеСтавки = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка6"));
		парамТарифныеСтавки.Значение = СписокТарифныеСтавки;
		парамТарифныеСтавки.Использование = Истина;

		
		парамСверхурочные =ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка8"));
		парамСверхурочные.Значение = списокСверхурочные;
		парамСверхурочные.Использование = Истина;
		
		парамНочные	= ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка7"));
		парамНочные.Значение = списокНочные;
		парамНочные.Использование = Истина;

		парамПростои = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка9"));
		парамПростои.Значение = списокПростои;
		парамПростои.Использование = Истина;
		
		парамКолонка10 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка10"));
		парамКолонка10.Значение = списокКолонка10;
		парамКолонка10.Использование = Истина;
		
		парамКолонка11 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка11"));
		парамКолонка11.Значение = списокКолонка11;
		парамКолонка11.Использование = Истина;

		парамПремии =ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка12"));
		парамПремии.Значение = списокПремии;
		парамПремии.Использование = Истина;
		
		парамКолонка13 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка13"));
		парамКолонка13.Значение = списокКолонка13;
		парамКолонка13.Использование = Истина;
		
		парамКолонка14 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка14"));
		парамКолонка14.Значение = списокКолонка14;
		парамКолонка14.Использование = Истина;
		
		парамОтпуска = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка15"));
		парамОтпуска.Значение = списокОтпуска;
		парамОтпуска.Использование = Истина;
		
		парамБольничный = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка17"));
		парамБольничный.Значение = списокБольничный;
		парамБольничный.Использование = Истина;

//		парамВсегоНачислено = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка20"));
//		парамВсегоНачислено.Значение = списокКолонка20;		
//		парамВсегоНачислено.Использование = Истина;
	
		парамИсполнительныеЛисты = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка23"));
		парамИсполнительныеЛисты.Значение = списокИсполнительныеЛисты;
		парамИсполнительныеЛисты.Использование = Истина;
		
		парамПенсионныйФонд = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка24"));
		парамПенсионныйФонд.Значение = списокПенсионныйФонд;
		парамПенсионныйФонд.Использование = Истина;
		
		парамКолонка25 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка25"));
		парамКолонка25.Значение = списокКолонка25;
		парамКолонка25.Использование = Истина;
		
		парамКолонка26 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка26"));
		парамКолонка26.Значение = списокКолонка26;
		парамКолонка26.Использование = Истина;
		
		парамКолонка27 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка27"));
		парамКолонка27.Значение = списокКолонка27;
		парамКолонка27.Использование = Истина;
		
		парамКолонка28 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка28"));
		парамКолонка28.Значение = списокКолонка28;
		парамКолонка28.Использование = Истина;
		
		парамКолонка29 = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамКолонка29"));
		парамКолонка29.Значение = списокКолонка29;
		парамКолонка29.Использование = Истина;
		//
		парамСчетаЗарплата = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамСчетаЗарплата"));
		парамСчетаЗарплата.Значение = списокСчетаЗарплата;
		парамСчетаЗарплата.Использование = Истина;

		парамОсновнойСотрудник = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамОсновнойСотрудник"));
		парамОсновнойСотрудник.Значение = списокОсновнойСотрудник;
		парамОсновнойСотрудник.Использование = Истина;
		//
		//парамВидДвиженияПриход = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("парамВидДвиженияПриход"));
		//парамВидДвиженияПриход.Значение = ВидДвиженияНакопления.Приход;
		//парамвидДвиженияПриход.Использование = Истина;
		//
		
		
	//
	Иначе
	
		КомпоновщикНастроек.ЗагрузитьНастройки(ЭтотОбъект.СохраненныеНастройки);
	КонецЕсли;
	
КонецПроцедуры
