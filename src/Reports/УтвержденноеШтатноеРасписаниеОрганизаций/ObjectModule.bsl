
#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

//Функция возвращают строку-представление двух чисел
//
Функция ПолучитьСтрокуИзДвухЧисел(Число1,Число2)
	Если Число1=Число2 Тогда
		Возврат ОбщегоНазначения.ФорматСумм(Число1);
	Иначе
		Возврат ""+ОбщегоНазначения.ФорматСумм(Число1)+" - "+ОбщегоНазначения.ФорматСумм(Число2);
	КонецЕсли;
КонецФункции	 

// Выводит строки по подразделениям очередного уровня
Процедура ВывестиСтрокиПодразделения(ВыборкаСтрокШтРасписания, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
	    СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
		ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
		КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныхТарифныхСтавокЛиста, 
		ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет)

	КоличествоНадбавок = СписокНадбавок.Количество();
		
	Пока ВыборкаСтрокШтРасписания.СледующийПоЗначениюПоля("ПодразделениеОрганизации") Цикл 
		
		ВыборкаПодразделенийСледующегоУровня = ВыборкаСтрокШтРасписания.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		
		МинСтавка = 0;
		МаксСтавка = 0;
		КоличествоСтавок = 0;
		МинФонд = 0;
		МаксФонд = 0;
		
		Пока ВыборкаСтрокШтРасписания.СледующийПоЗначениюПоля("Должность") Цикл 
			
			// Готовим строку отчета для последующего вывода
			ВыводимаяСтрока.Очистить();
			ВыведеноНадбавок = 0;
			Пока ВыборкаСтрокШтРасписания.Следующий() Цикл 
				
				//Из первой строки надбавок возьмем общие данные позиции штатного расписания
				Если ВыведеноНадбавок = 0 Тогда
					
					МинФонд = ?(ВыборкаСтрокШтРасписания.МинОсновнойТариф <> NULL,ВыборкаСтрокШтРасписания.МинОсновнойТариф,0) ;
					МаксФонд = ?(ВыборкаСтрокШтРасписания.МаксОсновнойТариф <> NULL,ВыборкаСтрокШтРасписания.МаксОсновнойТариф,0);
					МинСтавка = ВыборкаСтрокШтРасписания.МинСтавка;
					МаксСтавка = ВыборкаСтрокШтРасписания.МаксСтавка;
					КоличествоСтавок = ВыборкаСтрокШтРасписания.КоличествоСтавок;
					
					//Выводим начало строки
					ОбластьСтрокаДоНадбавок.Параметры.Заполнить(ВыборкаСтрокШтРасписания); 
					ОбластьСтрокаДоНадбавок.Параметры.ОкладТарифнаяСтавка = ПолучитьСтрокуИзДвухЧисел(МинСтавка,МаксСтавка);
					ВыводимаяСтрока.Вывести(ОбластьСтрокаДоНадбавок);
					
				КонецЕсли;	 
				
				РазмерНадбавки = "";
				Если ВыборкаСтрокШтРасписания.РазмерНадбавки <> NULL Тогда
					//Рассчитываем фонд заработной платы с учетом надбавок
					МинФонд = МинФонд+ВыборкаСтрокШтРасписания.МинСуммаНадбавки;
					МаксФонд = МаксФонд+ВыборкаСтрокШтРасписания.МаксСуммаНадбавки;
					
					Если ВыборкаСтрокШтРасписания.СпособРасчета  = Перечисления.СпособыРасчетаОплатыТруда.Процентом Тогда
						РазмерНадбавки = "" + ВыборкаСтрокШтРасписания.РазмерНадбавки+"%";
					Иначе//надбавка суммой
						РазмерНадбавки = ОбщегоНазначения.ФорматСумм(ВыборкаСтрокШтРасписания.РазмерНадбавки);
					КонецЕсли;	 
				КонецЕсли;	 
				ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = РазмерНадбавки;
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
				ВыведеноНадбавок = ВыведеноНадбавок+1;
			КонецЦикла;//Цикл по надбавкам
			
			// Согласно типовой формы должно быть не менее 3 колонок для надбавок
			ОбластьСтрокаНадбавка.Параметры.РазмерНадбавки = "";
			Для Н=ВыведеноНадбавок+1 По 3 цикл
				ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
			КонецЦикла;	
			// Выводим хвост строки
			ОбластьСтрокаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинФонд,МаксФонд);
			ВыводимаяСтрока.Присоединить(ОбластьСтрокаПослеНадбавок);
			
			// Посчитали подготовленную строку
			ВыведеноСтрокВОтчет = ВыведеноСтрокВОтчет + 1;  
			
			// Проверим, уместится ли строка на странице или надо открывать новую страницу
			ВывестиПодвалЛиста = Не ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти);
			Если Не ВывестиПодвалЛиста и ВыведеноСтрокВОтчет = КоличествоСтрокОтчета Тогда
				// Для последней строки отчета дополнительно проверим, 
				// уместится ли на этой же странице подвал всего отчета
				ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("Подвал"));
				ВывестиПодвалЛиста = Не ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти);
			КонецЕсли;	
			
			// Если нужно, выводим подвал листа
			Если ВывестиПодвалЛиста Тогда
				ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
				ОбластьПодвалаЛистаДоНадбавок.Параметры.ОкладТарифнаяСтавка = ПолучитьСтрокуИзДвухЧисел(СуммаМинимальныхТарифныхСтавокЛиста,СуммаМаксимальныхТарифныхСтавокЛиста);
				ДокументРезультат.Вывести(ОбластьПодвалаЛистаДоНадбавок);
				
				Для Н=0 по КоличествоНадбавок-1 цикл
					ДокументРезультат.Присоединить(ОбластьПодвалаЛистаНадбавка);
				КонецЦикла;	
				
				ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондЛиста,МаксимальныйМесячныйФондЛиста);
				ДокументРезультат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);
				
				//Начнем новую страницу
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КоличествоСтавокЛиста = 0;
				МинимальныйМесячныйФондЛиста = 0;
				МаксимальныйМесячныйФондЛиста = 0;
				СуммаМинимальныхТарифныхСтавокЛиста = 0;
				СуммаМаксимальныхТарифныхСтавокЛиста = 0;
				
				//Выводим шапку нового листа
				НомерВерхнейСтрокиШапки = ДокументРезультат.ВысотаТаблицы+1;
				ДокументРезультат.Вывести(ОбластьДоНадбавок);
				Для Н=0 по КоличествоНадбавок-1 цикл
					ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
					ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
					ДокументРезультат.Присоединить(ОбластьНадбавка);	
				КонецЦикла;	
				//Объединяем ячейки и пишем общий заголовок для надбавок 
				ОбластьШапкиНадбавок = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
				ОбластьШапкиНадбавок.Объединить();
				ОбластьШапкиНадбавок.Текст = "Надбавки, грн";
				
				ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 6+КоличествоНадбавок;
				ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 6+КоличествоНадбавок+1;
				ДокументРезультат.Присоединить(ОбластьПослеНадбавок);
			КонецЕсли;
			
			//Теперь выводим строку
			ДокументРезультат.Вывести(ВыводимаяСтрока);
			
			//Увеличиваем счетчики по листу
			КоличествоСтавокЛиста = КоличествоСтавокЛиста + КоличествоСтавок;
			СуммаМинимальныхТарифныхСтавокЛиста = СуммаМинимальныхТарифныхСтавокЛиста + МинСтавка;
			СуммаМаксимальныхТарифныхСтавокЛиста = СуммаМаксимальныхТарифныхСтавокЛиста + МаксСтавка;
			МинимальныйМесячныйФондЛиста = МинимальныйМесячныйФондЛиста + МинФонд;
			МаксимальныйМесячныйФондЛиста = МаксимальныйМесячныйФондЛиста + МаксФонд;
			
		КонецЦикла;//цикл по должностям
		
		ВывестиСтрокиПодразделения(ВыборкаПодразделенийСледующегоУровня, ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
		    СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
			ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
			КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныхТарифныхСтавокЛиста, 
			ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет)
		
	КонецЦикла;//цикл по подразделениям текущего уровня 
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом
//  Дописать - булево.  Истина - табличный документ дописывается формируемым отчетом, 
//                      Ложь - заполняется формируемым отчетом (с предварительной очистой 
//                      табличного документа)
//
Процедура СформироватьОтчет(ДокументРезультат, Дописать = Ложь) Экспорт

	Если ЗначениеЗаполнено(Регистратор) Тогда
		ФильтрРегистратор =" И Расписание.Регистратор = &Регистратор";
	Иначе
		ФильтрРегистратор ="";
	КонецЕсли;	
	Запрос = Новый Запрос;
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеСНадбавками.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ДанныеСНадбавками.ПодразделениеОрганизации.Наименование КАК ПодразделениеОрганизацииПредставление,
	|	ДанныеСНадбавками.ПодразделениеОрганизации.Код КАК ПодразделениеОрганизацииКод,
	|	ДанныеСНадбавками.Должность,
	|	ДанныеСНадбавками.Должность.Наименование КАК ДолжностьПредставление,
	|	ДанныеСНадбавками.Должность.Код КАК ДолжностьКод,
	|	ДанныеСНадбавками.КоличествоСтавок,
	|	ДанныеСНадбавками.ВидТарифнойСтавки,
	|	ДанныеСНадбавками.МинСтавка,
	|	ДанныеСНадбавками.МаксСтавка,
	|	ДанныеСНадбавками.Курс,
	|	ДанныеСНадбавками.МинОсновнойТариф,
	|	ДанныеСНадбавками.МаксОсновнойТариф,
	|	ДанныеСНадбавками.ВидНадбавки,
	|	ДанныеСНадбавками.ВидНадбавки.Наименование КАК ВидНадбавкиПредставление,
	|	ВЫБОР
	|		КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом
	|			ТОГДА ДанныеСНадбавками.РазмерНадбавки
	|		ИНАЧЕ ВЫРАЗИТЬ(ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета КАК ЧИСЛО(15, 2))
	|	КОНЕЦ КАК РазмерНадбавки,
	|	ДанныеСНадбавками.СпособРасчета,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом
	|				ТОГДА ДанныеСНадбавками.МинОсновнойТариф * ДанныеСНадбавками.РазмерНадбавки / 100
	|           КОГДА ДанныеСНадбавками.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы)
	|             ИЛИ ДанныеСНадбавками.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы)
	|				ТОГДА 0
	|			ИНАЧЕ ДанныеСНадбавками.КоличествоСтавок * ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МинСуммаНадбавки,
	|	ВЫРАЗИТЬ(ВЫБОР
	|			КОГДА ДанныеСНадбавками.СпособРасчета = &НадбавкаПроцентом
	|				ТОГДА ДанныеСНадбавками.МаксОсновнойТариф * ДанныеСНадбавками.РазмерНадбавки / 100
	|           КОГДА ДанныеСНадбавками.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы)
	|             ИЛИ ДанныеСНадбавками.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы)
	|				ТОГДА 0
	|			ИНАЧЕ ДанныеСНадбавками.КоличествоСтавок * ДанныеСНадбавками.РазмерНадбавки * ДанныеСНадбавками.Курс / &КурсВалютыОтчета
	|		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК МаксСуммаНадбавки
	|ИЗ
	|	(ВЫБРАТЬ
	|		Расписание.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|		Расписание.Должность КАК Должность,
	|		Расписание.КоличествоСтавок КАК КоличествоСтавок,
	|		Расписание.ВидТарифнойСтавки КАК ВидТарифнойСтавки,
	|		ВЫРАЗИТЬ(Расписание.МинимальнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР
	|				КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ СрезКурсовВалют.Кратность
	|			КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МинСтавка,
	|		ВЫРАЗИТЬ(Расписание.МаксимальнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР
	|				КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ СрезКурсовВалют.Кратность
	|			КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МаксСтавка,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиМесячная
	|					ТОГДА 1
	|				КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиДневная
	|					ТОГДА ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0)
	|				ИНАЧЕ ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0)
	|			КОНЕЦ * Расписание.КоличествоСтавок * Расписание.МинимальнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР
	|				КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ СрезКурсовВалют.Кратность
	|			КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МинОсновнойТариф,
	|		ВЫРАЗИТЬ(ВЫБОР
	|				КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиМесячная
	|					ТОГДА 1
	|				КОГДА Расписание.ВидТарифнойСтавки = &ВидСтавкиДневная
	|					ТОГДА ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0)
	|				ИНАЧЕ ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0)
	|			КОНЕЦ * Расписание.КоличествоСтавок * Расписание.МаксимальнаяТарифнаяСтавка * ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР
	|				КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0
	|					ТОГДА 1
	|				ИНАЧЕ СрезКурсовВалют.Кратность
	|			КОНЕЦ / &КурсВалютыОтчета КАК ЧИСЛО(15, 2)) КАК МаксОсновнойТариф,
	|		ИспользуемыеНадбавки.ВидНадбавки КАК ВидНадбавки,
	|		НадбавкиПоШтатномуРасписанию.РазмерНадбавки КАК РазмерНадбавки,
	|		НадбавкиПоШтатномуРасписанию.ВидНадбавки.СпособРасчета КАК СпособРасчета,
	|		ЕСТЬNULL(СрезКурсовВалют.Курс, 1) / ВЫБОР
	|			КОГДА ЕСТЬNULL(СрезКурсовВалют.Кратность, 0) = 0
	|				ТОГДА 1
	|			ИНАЧЕ СрезКурсовВалют.Кратность
	|		КОНЕЦ КАК Курс,
	|		ЕСТЬNULL(Календарь.НормаДнейЗаПериод, 0) КАК НормаДнейЗаПериод,
	|		ЕСТЬNULL(Календарь.НормаЧасовЗаПериод, 0) КАК НормаЧасовЗаПериод
	|	ИЗ
	|		РегистрСведений.ШтатноеРасписаниеОрганизаций.СрезПоследних(&ДатаАктуальности, ПодразделениеОрганизации.Владелец = &Организация) КАК Расписание
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				Календарь.ГрафикРаботы КАК ГрафикРаботы,
	|				СУММА(Календарь.ОсновноеЗначение) КАК НормаДнейЗаПериод,
	|				СУММА(Календарь.ДополнительноеЗначение) КАК НормаЧасовЗаПериод
	|			ИЗ
	|				РегистрСведений.ГрафикиРаботыПоВидамВремени КАК Календарь
	|			ГДЕ
	|				Календарь.Дата < &ОкончаниеМесяца0
	|				И Календарь.Дата >= &НачалоМесяца0
	|				И Календарь.ВидУчетаВремени = &ПоДням
	|			
	|			СГРУППИРОВАТЬ ПО
	|				Календарь.ГрафикРаботы) КАК Календарь
	|			ПО Календарь.ГрафикРаботы = Расписание.ГрафикРаботы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом.СрезПоследних(&ОкончаниеМесяца0, ) КАК СрезКурсовВалют
	|			ПО СрезКурсовВалют.Валюта = Расписание.ВалютаТарифнойСтавки
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
	|				НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних.ВидНадбавки КАК ВидНадбавки
	|			ИЗ
	|				РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&ДатаАктуальности, ПодразделениеОрганизации.Владелец = &Организация) КАК НадбавкиПоШтатномуРасписаниюОрганизацииСрезПоследних
	|			) КАК ИспользуемыеНадбавки
	|			ПО (ИСТИНА)
	|			ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				НадбавкиПоШтатномуРасписанию.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|				НадбавкиПоШтатномуРасписанию.Должность КАК Должность,
	|				НадбавкиПоШтатномуРасписанию.ВидНадбавки КАК ВидНадбавки,
	|				ВЫБОР КОГДА НадбавкиПоШтатномуРасписанию.ВидНадбавки.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаВечерниеЧасы)
	|                       ИЛИ НадбавкиПоШтатномуРасписанию.ВидНадбавки.СпособРасчета = ЗНАЧЕНИЕ(Перечисление.СпособыРасчетаОплатыТруда.ДоплатаЗаНочныеЧасы)
	|               ТОГДА НадбавкиПоШтатномуРасписанию.Показатель2
	|				ИНАЧЕ НадбавкиПоШтатномуРасписанию.Показатель1 КОНЕЦ КАК РазмерНадбавки,
	|				НадбавкиПоШтатномуРасписанию.Валюта1 КАК Валюта
	|			ИЗ
	|				РегистрСведений.НадбавкиПоШтатномуРасписаниюОрганизаций.СрезПоследних(&ДатаАктуальности, ПодразделениеОрганизации.Владелец = &Организация) КАК НадбавкиПоШтатномуРасписанию
	|			) КАК НадбавкиПоШтатномуРасписанию
	|			ПО НадбавкиПоШтатномуРасписанию.ВидНадбавки = ИспользуемыеНадбавки.ВидНадбавки
	|				И НадбавкиПоШтатномуРасписанию.ПодразделениеОрганизации = Расписание.ПодразделениеОрганизации
	|				И НадбавкиПоШтатномуРасписанию.Должность = Расписание.Должность
	|	ГДЕ
	|		Расписание.КоличествоСтавок > 0 "+ФильтрРегистратор+") КАК ДанныеСНадбавками
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПодразделениеОрганизации ИЕРАРХИЯ,
	|	ДолжностьКод,
	|	ВидНадбавкиПредставление";
	
	Запрос.УстановитьПараметр("ДатаАктуальности",	ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",		Организация);   
	Запрос.УстановитьПараметр("Подразделение",      Подразделение);
	Запрос.УстановитьПараметр("Регистратор",      	Регистратор);
	Запрос.УстановитьПараметр("НачалоМесяца0",		НачалоМесяца(ДатаАктуальности));
	Запрос.УстановитьПараметр("ОкончаниеМесяца0",	КонецМесяца(ДатаАктуальности));
	Запрос.УстановитьПараметр("НадбавкаПроцентом",	Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	Запрос.УстановитьПараметр("ВидСтавкиМесячная",	Перечисления.ВидыТарифныхСтавок.Месячная);
	Запрос.УстановитьПараметр("ВидСтавкиДневная",	Перечисления.ВидыТарифныхСтавок.Дневная);
	Запрос.УстановитьПараметр("ПоДням",				Перечисления.ВидыУчетаВремени.ПоДням);
	Запрос.УстановитьПараметр("ВалютаПоУмолчанию",	глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	КурсВалютыОтчета = МодульВалютногоУчета.ПолучитьКурсВалюты(глЗначениеПеременной("ВалютаРегламентированногоУчета"),ДатаАктуальности).Курс;
	Запрос.УстановитьПараметр("КурсВалютыОтчета",	?(КурсВалютыОтчета = 0,1,КурсВалютыОтчета));

	Если Не Подразделение.Пустая() Тогда
    	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,"ПодразделениеОрганизации.Владелец = &Организация","ПодразделениеОрганизации В ИЕРАРХИИ(&Подразделение)")
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	РезультатЗапроса = Запрос.Выполнить();

	МассивВидовРуководителей = Новый Массив();
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер);
	МассивВидовРуководителей.Добавить(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидЛица",		  МассивВидовРуководителей);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаАктуальности);
	Запрос.УстановитьПараметр("Организация",      Организация);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаОрганизацийСрезПоследних.Должность.Представление КАК ДолжностьРуководителя,
	|	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо.Наименование) КАК ФИОРуководителя,
	|	ОтветственныеЛицаОрганизацийСрезПоследних.ОтветственноеЛицо
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|		&ДатаАктуальности,
	|		ОтветственноеЛицо В (&ВидЛица)
	|		    И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаАктуальности, ) КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо";
	
	РезультатДляПодвала = Запрос.Выполнить();
	
	Макет = ПолучитьМакет("Макет");
    Если не Дописать Тогда
	    ДокументРезультат.Очистить();
    КонецЕсли;
    
	//Параметры документа
	ДокументРезультат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ПолеСлева			 = 0;
	ДокументРезультат.ПолеСправа		 = 0;
	ДокументРезультат.Защита             = Ложь;
	ДокументРезультат.ТолькоПросмотр     = Истина;
	
    //Подготовим данные для шапки документа
    ВсегоСтавокОрганизации = 0;
	МинимальныйМесячныйФондОрганизации = 0;
	МаксимальныйМесячныйФондОрганизации = 0;
    СуммаМинимальныхТарифныхСтавокОрганизации = 0;
	СуммаМаксимальныхТарифныхСтавокОрганизации = 0;

	//Первый обход выборки: Заполняем список названий надбавок и рассчитываем итоги по организации для вывода шапки
    СписокНадбавок = Новый СписокЗначений;
	ВыборкаДетали = РезультатЗапроса.Выбрать();
	КоличествоСтрокОтчета = ВыборкаДетали.Количество();
	ПерваяДолжность = Истина;
	Пока ВыборкаДетали.СледующийПоЗначениюПоля("ПодразделениеОрганизации") Цикл 
		Пока ВыборкаДетали.СледующийПоЗначениюПоля("Должность") Цикл

			МинСтавка = 0;
			МаксСтавка = 0;
			КоличествоСтавок = 0;
			МинФонд = 0;
			МаксФонд = 0;
			ПерваяНадбавка = Истина;

			Пока ВыборкаДетали.Следующий() Цикл 

				Если ПерваяНадбавка Тогда
					//Из первой строки надбавок возьмем общие данные позиции штатного расписания
					МинФонд = ?(ВыборкаДетали.МинОсновнойТариф <> NULL,ВыборкаДетали.МинОсновнойТариф,0) ;
					МаксФонд = ?(ВыборкаДетали.МаксОсновнойТариф <> NULL,ВыборкаДетали.МаксОсновнойТариф,0);
					МинСтавка = ВыборкаДетали.МинСтавка;
					МаксСтавка = ВыборкаДетали.МаксСтавка;
					КоличествоСтавок = ВыборкаДетали.КоличествоСтавок;
					ПерваяНадбавка = Ложь;
				КонецЕсли;	 

				Если ВыборкаДетали.РазмерНадбавки <> NULL Тогда
					//Рассчитываем фонд заработной платы с учетом надбавок
					МинФонд = МинФонд+ВыборкаДетали.МинСуммаНадбавки;
					МаксФонд = МаксФонд+ВыборкаДетали.МаксСуммаНадбавки;
				КонецЕсли;	 

				Если ПерваяДолжность Тогда
					СписокНадбавок.Добавить(?(ВыборкаДетали.ВидНадбавкиПредставление=NULL,"",ВыборкаДетали.ВидНадбавкиПредставление));
				КонецЕсли;	 

			КонецЦикла;

			ПерваяДолжность = Ложь;
				
			//Увеличим счетчики по организации
			ВсегоСтавокОрганизации = ВсегоСтавокОрганизации + КоличествоСтавок;
			СуммаМинимальныхТарифныхСтавокОрганизации = СуммаМинимальныхТарифныхСтавокОрганизации + МинСтавка;
			СуммаМаксимальныхТарифныхСтавокОрганизации = СуммаМаксимальныхТарифныхСтавокОрганизации + МаксСтавка;
			МинимальныйМесячныйФондОрганизации = МинимальныйМесячныйФондОрганизации + МинФонд;
			МаксимальныйМесячныйФондОрганизации = МаксимальныйМесячныйФондОрганизации + МаксФонд;
		КонецЦикла;	
	КонецЦикла;
	
	//Количество надбавок должны быть не меньше трёх (согласно типовой форме)
	Пока СписокНадбавок.Количество()<3 Цикл
		СписокНадбавок.Добавить("");
	КонецЦикла;
	КоличествоНадбавок = СписокНадбавок.Количество();

	//Выводим шапку
    ОбластьШапкаДоНадбавок = Макет.ПолучитьОбласть("Шапка|ДоНадбавок");
	ОбластьШапкаДоНадбавок.Параметры.НазваниеОрганизации = Организация.НаименованиеПолное;
	ОбластьШапкаДоНадбавок.Параметры.Организация = Организация;
	ОбластьШапкаДоНадбавок.Параметры.ДатаАктуальности = НачалоМесяца(ДатаАктуальности);
	ДокументРезультат.Вывести(ОбластьШапкаДоНадбавок);

	ОбластьШапкаНадбавка = Макет.ПолучитьОбласть("Шапка|Надбавка");
	Для Н=0 по КоличествоНадбавок-1 цикл
		ДокументРезультат.Присоединить(ОбластьШапкаНадбавка);	
	КонецЦикла;	

	ОбластьШапкаПослеНадбавок = Макет.ПолучитьОбласть("Шапка|ПослеНадбавок");
	ОбластьШапкаПослеНадбавок.Параметры.ШтатВКоличестве = "штат в количестве "+ВсегоСтавокОрганизации+" единиц";
	ДокументРезультат.Присоединить(ОбластьШапкаПослеНадбавок);

	//Выводим шапку листа
	НомерВерхнейСтрокиШапки = ДокументРезультат.ВысотаТаблицы+1;
	ОбластьДоНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ДоНадбавок");
	ДокументРезультат.Вывести(ОбластьДоНадбавок);

	ОбластьНадбавка = Макет.ПолучитьОбласть("ШапкаЛиста|Надбавка");
	Для Н=0 по КоличествоНадбавок-1 цикл
		ОбластьНадбавка.Параметры.ИмяНадбавки = СписокНадбавок[Н];
		ОбластьНадбавка.Параметры.НомерКолонки = 6+Н;
		ДокументРезультат.Присоединить(ОбластьНадбавка);	
	КонецЦикла;	
	//Объединяем ячейки и пишем общий заголовок для надбавок 
	ОбластьШапкиНадбавок = ДокументРезультат.Область(НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+1,НомерВерхнейСтрокиШапки,ОбластьДоНадбавок.ШиринаТаблицы+КоличествоНадбавок*3);
	ОбластьШапкиНадбавок.Объединить();
	ОбластьШапкиНадбавок.Текст = "Надбавки, грн";

	ОбластьПослеНадбавок = Макет.ПолучитьОбласть("ШапкаЛиста|ПослеНадбавок");
	ОбластьПослеНадбавок.Параметры.НомерКолонкиФонд = 6+КоличествоНадбавок;
	ОбластьПослеНадбавок.Параметры.НомерКолонкиПримечание = 6+КоличествоНадбавок+1;
	ДокументРезультат.Присоединить(ОбластьПослеНадбавок);

	ОбластьСтрокаДоНадбавок = Макет.ПолучитьОбласть("Строка|ДоНадбавок");
	ОбластьСтрокаНадбавка = Макет.ПолучитьОбласть("Строка|Надбавка");
	ОбластьСтрокаПослеНадбавок = Макет.ПолучитьОбласть("Строка|ПослеНадбавок");

	ОбластьПодвалаЛистаДоНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ДоНадбавок");
	ОбластьПодвалаЛистаПослеНадбавок = Макет.ПолучитьОбласть("ПодвалЛиста|ПослеНадбавок");
	ОбластьПодвалаЛистаНадбавка = Макет.ПолучитьОбласть("ПодвалЛиста|Надбавка");
	
	КоличествоСтавокЛиста = 0;
	МинимальныйМесячныйФондЛиста = 0;
	МаксимальныйМесячныйФондЛиста = 0;
	СуммаМинимальныхТарифныхСтавокЛиста = 0;
	СуммаМаксимальныхТарифныхСтавокЛиста = 0;

	// массив с двумя строками - для разбиения на страницы
    ВыводимыеОбласти = Новый Массив();
	ВыводимаяСтрока = Новый ТабличныйДокумент();
	ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
	ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("ПодвалЛиста"));
	
	//Второй обход выборки:Выводим строки штатного расписания
	ВыведеноСтрокВОтчет = 0;
	ВывестиСтрокиПодразделения(РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией), ВыведеноСтрокВОтчет, КоличествоСтрокОтчета, ДокументРезультат, 
		СписокНадбавок, ОбластьДоНадбавок, ОбластьНадбавка, ОбластьПослеНадбавок,
		ОбластьСтрокаДоНадбавок, ОбластьСтрокаНадбавка, ОбластьСтрокаПослеНадбавок, ВыводимаяСтрока, 
		КоличествоСтавокЛиста, МинимальныйМесячныйФондЛиста, МаксимальныйМесячныйФондЛиста, СуммаМинимальныхТарифныхСтавокЛиста, СуммаМаксимальныхТарифныхСтавокЛиста, 
		ОбластьПодвалаЛистаДоНадбавок, ОбластьПодвалаЛистаНадбавка, ОбластьПодвалаЛистаПослеНадбавок, ВыводимыеОбласти, Макет);
		
	Для Сч = 1 По ОбластьСтрокаДоНадбавок.Параметры.Количество() Цикл
		ОбластьСтрокаДоНадбавок.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	Для Сч = 1 По ОбластьСтрокаНадбавка.Параметры.Количество() Цикл
		ОбластьСтрокаНадбавка.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	Для Сч = 1 По ОбластьСтрокаПослеНадбавок.Параметры.Количество() Цикл
		ОбластьСтрокаПослеНадбавок.Параметры.Установить(Сч - 1,""); 
	КонецЦикла;
	ОбластьСтрокаДоНадбавок.Параметры.ПодразделениеОрганизацииПредставление = " " + Символы.ПС + " ";
	
	ВыводимаяСтрока = Новый ТабличныйДокумент();
	ВыводимаяСтрока.Вывести(ОбластьСтрокаДоНадбавок);
	Для Н=1 По 3 цикл
		ВыводимаяСтрока.Присоединить(ОбластьСтрокаНадбавка);	
	КонецЦикла;	
	// Выводим хвост строки
	ВыводимаяСтрока.Присоединить(ОбластьСтрокаПослеНадбавок);
	
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ВыводимаяСтрока);
	ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("ПодвалЛиста"));
	ВыводимыеОбласти.Добавить(Макет.ПолучитьОбласть("Подвал"));
	Пока ДокументРезультат.ПроверитьВывод(ВыводимыеОбласти) Цикл
		ДокументРезультат.Вывести(ВыводимаяСтрока);
	КонецЦикла;
	
	//Выводим подвал листа
	ОбластьПодвалаЛистаДоНадбавок.Параметры.КоличествоСтавок = КоличествоСтавокЛиста;
	ОбластьПодвалаЛистаДоНадбавок.Параметры.ОкладТарифнаяСтавка = ПолучитьСтрокуИзДвухЧисел(СуммаМинимальныхТарифныхСтавокЛиста,СуммаМаксимальныхТарифныхСтавокЛиста);
	ДокументРезультат.Вывести(ОбластьПодвалаЛистаДоНадбавок);

	Для Н=0 по КоличествоНадбавок-1 цикл
		ДокументРезультат.Присоединить(ОбластьПодвалаЛистаНадбавка);
	КонецЦикла;	

	ОбластьПодвалаЛистаПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондЛиста,МаксимальныйМесячныйФондЛиста);
	ДокументРезультат.Присоединить(ОбластьПодвалаЛистаПослеНадбавок);

	//Выводим подвал документа
	НомерВерхнейСтрокиПодвала = ДокументРезультат.ВысотаТаблицы+1;
	ОбластьПодвалДоНадбавок = Макет.ПолучитьОбласть("Подвал|ДоНадбавок");
	ОбластьПодвалДоНадбавок.Параметры.КоличествоСтавок = ВсегоСтавокОрганизации;
	ОбластьПодвалДоНадбавок.Параметры.ОкладТарифнаяСтавка = ПолучитьСтрокуИзДвухЧисел(СуммаМинимальныхТарифныхСтавокОрганизации,СуммаМаксимальныхТарифныхСтавокОрганизации);
	
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы,"ОтветственноеЛицо") Тогда
		ОбластьПодвалДоНадбавок.Параметры.ДолжностьРуководителя = ВыборкаДляПодвала.ДолжностьРуководителя;
	КонецЕсли;
		
	ДокументРезультат.Вывести(ОбластьПодвалДоНадбавок);

	ОбластьПодвалНадбавка = Макет.ПолучитьОбласть("Подвал|Надбавка");
	Для Н=0 по КоличествоНадбавок-1 цикл
		ДокументРезультат.Присоединить(ОбластьПодвалНадбавка);	
	КонецЦикла;	

	ШиринаДляПодписи = КоличествоНадбавок*3-1;
	НомерЛевойКолонкиДляПодписи = ОбластьПодвалДоНадбавок.ШиринаТаблицы+2;
	НомерПравойКолонкиДляПодписи = НомерЛевойКолонкиДляПодписи + ШиринаДляПодписи-1;
	ЛинияДляПодписи = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная,1);
	
	Для Н=1 по 2 цикл
		НомерСтрокиДляПодписи = НомерВерхнейСтрокиПодвала+Н*2;
		ОбластьВерхнейСтрокиПодписи = ДокументРезультат.Область(НомерСтрокиДляПодписи,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи,НомерПравойКолонкиДляПодписи);
		ОбластьВерхнейСтрокиПодписи.Объединить();
		ОбластьВерхнейСтрокиПодписи.ГраницаСнизу = ЛинияДляПодписи;
		ОбластьНижнейСтрокиПодписи = ДокументРезультат.Область(НомерСтрокиДляПодписи+1,НомерЛевойКолонкиДляПодписи,НомерСтрокиДляПодписи+1,НомерПравойКолонкиДляПодписи);
		ОбластьНижнейСтрокиПодписи.Объединить();
		ОбластьНижнейСтрокиПодписи.Текст = "личная подпись";
	КонецЦикла;	

	ОбластьПодвалПослеНадбавок = Макет.ПолучитьОбласть("Подвал|ПослеНадбавок");
	ОбластьПодвалПослеНадбавок.Параметры.МесячныйФонд = ПолучитьСтрокуИзДвухЧисел(МинимальныйМесячныйФондОрганизации,МаксимальныйМесячныйФондОрганизации);
	
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.ГлавныйБухгалтер,"ОтветственноеЛицо") Тогда
		ОбластьПодвалПослеНадбавок.Параметры.ФИОРуководителяГБ = ВыборкаДляПодвала.ФИОРуководителя;
	КонецЕсли;
	ВыборкаДляПодвала = РезультатДляПодвала.Выбрать();
	Если ВыборкаДляПодвала.НайтиСледующий(Перечисления.ОтветственныеЛицаОрганизаций.РуководительКадровойСлужбы,"ОтветственноеЛицо") Тогда
		ОбластьПодвалПослеНадбавок.Параметры.ФИОРуководителяКС = ВыборкаДляПодвала.ФИОРуководителя;
	КонецЕсли;
		
	ДокументРезультат.Присоединить(ОбластьПодвалПослеНадбавок);
	
КонецПроцедуры


#КонецЕсли

