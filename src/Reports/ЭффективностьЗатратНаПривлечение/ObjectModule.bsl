#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Возвращает основную форму отчета, связанную с данным экземпляром отчета
//
// Параметры
//	Нет
//
Функция ПолучитьОсновнуюФорму() Экспорт
	 ПолучитьФорму()
КонецФункции // ПолучитьОсновнуюФорму()

// Настраивает отчет по переданной структуре параметров
//
// Параметры:
//	Нет.
//
Процедура Настроить(Параметры) Экспорт

	

КонецПроцедуры

// Выполняет настройку отчета по умолчанию для заданного вида отчета
//
// Параметры: 
// 
Процедура ЗаполнитьНачальныеНастройки() Экспорт
		
	// Набор источников для отчета
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ИсточникиИнформации.Ссылка,
		|	ИсточникиИнформации.Наименование КАК Наименование
		|ИЗ
		|	Справочник.ИсточникиИнформации КАК ИсточникиИнформации
		|
		|УПОРЯДОЧИТЬ ПО
		|	Наименование");
	
	Выборка = Запрос.Выполнить().Выбрать();
	НаборИсточников.Очистить();
	Пока  Выборка.Следующий() Цикл
		 НаборИсточников.Добавить(Выборка.Ссылка, Выборка.Наименование);	
	КонецЦикла;
	
	ТипОтчета = "Работник";
	
КонецПроцедуры

// Выполняет запрос и формирует табличный документ-результат отчета
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом,
//
//Процедура СформироватьОтчет(ДокументРезультат, ЕстьОшибки = Ложь) Экспорт
Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок = Ложь, ВысотаЗаголовка = 0, ТолькоЗаголовок = Ложь) Экспорт
	
	ДокументРезультат.Очистить();
	
	// Получить данные.
	Запрос = новый Запрос;
	
	ТекстЗапросаКандидатов =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НаИсточникиПерсонала.Наименование КАК Источник,
	|	ЕСТЬNULL(ЗатратыНаИсточникиПерсоналаОбороты.СуммаЗатратОборот, 0) КАК Затраты,
	|	ЕСТЬNULL(ПриходПерсоналаПоИсточникамОбороты.Количество, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПриходПерсоналаПоИсточникамОбороты.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ЗатратыНаИсточникиПерсоналаОбороты.СуммаЗатратОборот, 0) / ПриходПерсоналаПоИсточникамОбороты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьКонтакта
	|ИЗ
	|	Справочник.ИсточникиИнформации КАК НаИсточникиПерсонала
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНаИсточникиПерсонала.Обороты(&ДатаРасходовС, &ДатаРасходовПо, , ИсточникПерсонала В (&НаборИсточников)) КАК ЗатратыНаИсточникиПерсоналаОбороты
	|		ПО НаИсточникиПерсонала.Ссылка = ЗатратыНаИсточникиПерсоналаОбороты.ИсточникПерсонала
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаявкаКандидата.ИсточникИнформации КАК ИсточникИнформации,
	|			СУММА(1) КАК Количество
	|		ИЗ
	|			Справочник.ЗаявкиКандидатов КАК ЗаявкаКандидата
	|		ГДЕ
	|			ЗаявкаКандидата.ДатаОткрытия МЕЖДУ &ДатаПриходовС И &ДатаПриходовПо
	|			И ЗаявкаКандидата.ИсточникИнформации В(&НаборИсточников)
	|			И (НЕ ЗаявкаКандидата.ПометкаУдаления)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаявкаКандидата.ИсточникИнформации) КАК ПриходПерсоналаПоИсточникамОбороты
	|		ПО НаИсточникиПерсонала.Ссылка = ПриходПерсоналаПоИсточникамОбороты.ИсточникИнформации
	|ГДЕ
	|	НаИсточникиПерсонала.Ссылка В(&НаборИсточников)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты УБЫВ";
	
	ТекстЗапросаРаботников =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НаИсточникиПерсонала.Наименование КАК Источник,
	|	ЕСТЬNULL(ЗатратыНаИсточникиПерсоналаОбороты.СуммаЗатратОборот, 0) КАК Затраты,
	|	ЕСТЬNULL(ПриходРаботниковПоИсточникамОбороты.Количество, 0) КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПриходРаботниковПоИсточникамОбороты.Количество, 0) > 0
	|			ТОГДА ЕСТЬNULL(ЗатратыНаИсточникиПерсоналаОбороты.СуммаЗатратОборот, 0) / ПриходРаботниковПоИсточникамОбороты.Количество
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СтоимостьКонтакта
	|ИЗ
	|	Справочник.ИсточникиИнформации КАК НаИсточникиПерсонала
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ЗатратыНаИсточникиПерсонала.Обороты(&ДатаРасходовС, &ДатаРасходовПо, , ИсточникПерсонала В (&НаборИсточников)) КАК ЗатратыНаИсточникиПерсоналаОбороты
	|		ПО ЗатратыНаИсточникиПерсоналаОбороты.ИсточникПерсонала = НаИсточникиПерсонала.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ЗаявкаКандидата.ИсточникИнформации КАК ИсточникИнформации,
	|			СУММА(1) КАК Количество
	|		ИЗ
	|			Справочник.ЗаявкиКандидатов КАК ЗаявкаКандидата
	|		ГДЕ
	|			ЗаявкаКандидата.ДатаОткрытия МЕЖДУ &ДатаПриходовС И &ДатаПриходовПо
	|			И ЗаявкаКандидата.ИсточникИнформации В(&НаборИсточников)
	|			И ЗаявкаКандидата.ФизЛицо В
	|					(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|						Работники.ФизЛицо
	|					ИЗ
	|						РегистрСведений.Работники КАК Работники
	|					ГДЕ
	|						Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|						И Работники.Период МЕЖДУ &ДатаПриходовС И &ДатаПриходовПо)
	|			И (НЕ ЗаявкаКандидата.ПометкаУдаления)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ЗаявкаКандидата.ИсточникИнформации) КАК ПриходРаботниковПоИсточникамОбороты
	|		ПО НаИсточникиПерсонала.Ссылка = ПриходРаботниковПоИсточникамОбороты.ИсточникИнформации
	|ГДЕ
	|	НаИсточникиПерсонала.Ссылка В(&НаборИсточников)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Затраты УБЫВ";
	
	// Выбор запроса и макета.
	Если ТипОтчета = "Кандидат" Тогда
		Запрос.Текст = ТекстЗапросаКандидатов;
		Макет = ПолучитьМакет("Макет");
	КонецЕсли;
	
	Если ТипОтчета = "Работник" Тогда
		Запрос.Текст = ТекстЗапросаРаботников;
		Макет = ПолучитьМакет("МакетРаботники");
	КонецЕсли;

	Запрос.УстановитьПараметр("ДатаРасходовС",		ДатаРасходовС);
	Запрос.УстановитьПараметр("ДатаРасходовПо",		ДатаРасходовПо);
	Запрос.УстановитьПараметр("ДатаПриходовС",		ДатаПриходовС);
	Запрос.УстановитьПараметр("ДатаПриходовПо",		ДатаПриходовПо);
	Запрос.УстановитьПараметр("НаборИсточников",	НаборИсточников);

	ТаблицаРезультатов = Запрос.Выполнить().Выгрузить();
	
	Валюта = глЗначениеПеременной("ВалютаУправленческогоУчета").Наименование;
	
	// Подсчет итогов.
	ОбщаяСуммаЗатрат = ТаблицаРезультатов.Итог("Затраты");
	ОбщееКоличество  = ТаблицаРезультатов.Итог("Количество");
	СредняяСтоимость = 0;
	
	Если  ОбщееКоличество > 0 тогда
		СредняяСтоимость = ОбщаяСуммаЗатрат / ОбщееКоличество;
	Иначе
		СредняяСтоимость = "Нет данных";
	КонецЕсли;
	
	//  Вывод в справку.
	
	
	// Заголовок
	Область = Макет.ПолучитьОбласть("Заголовок");
	Область.Параметры.ДатаРасходовС  = Формат(ДатаРасходовС,"ДЛФ=DD");
	Область.Параметры.ДатаРасходовПо = Формат(ДатаРасходовПо,"ДЛФ=DD");
	Область.Параметры.ДатаПриходовС  = Формат(ДатаПриходовС,"ДЛФ=DD");
	Область.Параметры.ДатаПриходовПо = Формат(ДатаПриходовПо,"ДЛФ=DD");
	
	ДокументРезультат.Вывести(Область);
	ВысотаЗаголовка = Область.ВысотаТаблицы;

	Если Не ТолькоЗаголовок тогда
		// Итоги
		Область = Макет.ПолучитьОбласть("Итоги");
	 
		Область.Параметры.Затраты				= ОбщаяСуммаЗатрат;
		Область.Параметры.Кандидаты				= ОбщееКоличество;
		Область.Параметры.СтоимостьКандидата	= СредняяСтоимость;
		Область.Параметры.Валюта				= Валюта;

		ДокументРезультат.Вывести(Область);
		
		// Таблица 

		Область = Макет.ПолучитьОбласть("НачалоТаблицы"); 
		ДокументРезультат.Вывести(Область);

		Область = Макет.ПолучитьОбласть("СтрокаТаблицы"); 
		Область.Параметры.Валюта	= Валюта;
		
		Для каждого СтрокаТаблицы из ТаблицаРезультатов Цикл
			Область.Параметры.Заполнить(СтрокаТаблицы);
			ДокументРезультат.Вывести(Область);
		КонецЦикла;

	КонецЕсли;

	ДокументРезультат.Область(1,,ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
	
КонецПроцедуры

#КонецЕсли

