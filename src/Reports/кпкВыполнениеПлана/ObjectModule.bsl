
#Если Клиент Тогда
	
	Перем ИспТочек Экспорт; // Использование торговых точек
	
	// Формирование отчета
	//
	Процедура СформироватьОтчет(ЭлементыФормы) Экспорт
		
		Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя = "ПланПосещений" Тогда
			СформироватьОтчетПоПлануПосещений(ЭлементыФормы);
		Иначе
			СформироватьОтчетПоПлануПродаж(ЭлементыФормы);
		КонецЕсли;  
		
	КонецПроцедуры	//СформироватьОтчет()
	
	// Формирование отчета по плану посещений
	// 
	Процедура СформироватьОтчетПоПлануПосещений(ЭлементыФормы) Экспорт
		
		//Для общего подвала
		        ОбщийПодвалТЗИтогДата = Новый ТаблицаЗначений;
				ОбщийПодвалТЗИтогДата.Колонки.Добавить("План");
				ОбщийПодвалТЗИтогДата.Колонки.Добавить("Факт");
				ОбщийПодвалТЗИтогДата.Колонки.Добавить("Вне");
				
				ОбщийПодвалТЗИтогТочка = Новый ТаблицаЗначений;
				ОбщийПодвалТЗИтогТочка.Колонки.Добавить("План");
				ОбщийПодвалТЗИтогТочка.Колонки.Добавить("Факт");
				ОбщийПодвалТЗИтогТочка.Колонки.Добавить("Вне");
				
				
				ОбщийПодвалВсегоФакт = 0;
				ОбщийПодвалВсегоВне  = 0;
				ОбщийПодвалВсегоПлан = 0;
		
				Для День = 0 По 31 Цикл
				
					ОбщийПодвалСтрДата = ОбщийПодвалТЗИтогДата.Добавить();
					ОбщийПодвалСтрДата.План = 0;
					ОбщийПодвалСтрДата.Факт = 0;
					ОбщийПодвалСтрДата.Вне = 0;
					
					ОбщийПодвалСтрТочка = ОбщийПодвалТЗИтогТочка.Добавить();
					ОбщийПодвалСтрТочка.План = 0;
					ОбщийПодвалСтрТочка.Факт = 0;
					ОбщийПодвалСтрТочка.Вне = 0;
					
				КонецЦикла; 
							
		//Для общего подвала
		
		
		Таб = ЭлементыФормы.ТаблицаПосещений;
		Таб.Очистить();
		
		Таб.ФиксацияСверху = 6;
		
		Если ИспТочек = 1 Тогда  
			Таб.ФиксацияСлева = 4;
			Пар = "ТорговаяТочка";		
		Иначе		
			Таб.ФиксацияСлева = 3;
			Пар = "Контрагент";		
		КонецЕсли;
		
		
		Для каждого Элемент Из ЭлементыФормы.Агент.Значение Цикл
			
			
			
			
			//Агент  	   = ЭлементыФормы.Агент.Значение;
			Агент  	   = Элемент.Значение;
			Если Агент <> Справочники.ФизическиеЛица.ПустаяСсылка() Тогда
				
				
				
				
				
				ДатаНач    = ЭлементыФормы.ДатаНач.Значение;
				ДатаКон    = ЭлементыФормы.ДатаКон.Значение;
				СписВидДок = ЭлементыФормы.СписВидДок.Значение;
				
				ОчиститьСообщения();
				
				Запрос = Новый Запрос("ВЫБРАТЬ
				|	кпкПланПосещений.Ссылка,
				|	кпкПланПосещений.ТипПлана КАК ТипПлана
				|ИЗ
				|	Документ.кпкПланПосещений КАК кпкПланПосещений
				|ГДЕ
				|	НачалоПериода(кпкПланПосещений.Дата, Месяц) МЕЖДУ &НачПер И &КонПер
				|	И кпкПланПосещений.Агент = &Агент
				|	И кпкПланПосещений.ПометкаУдаления = ЛОЖЬ
				|	И кпкПланПосещений.ВидОперации <> &ВидОперации
				|ИТОГИ
				|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТипПлана)
				|ПО
				|	ОБЩИЕ");
				
				//Запрос.УстановитьПараметр("НачПер", 	 НачалоМесяца(ДобавитьМесяц(ДатаНач, -1)));
				Запрос.УстановитьПараметр("НачПер", 	 НачалоМесяца(ДатаНач));
				Запрос.УстановитьПараметр("КонПер", 	 КонецМесяца(ДатаКон));
				Запрос.УстановитьПараметр("Агент",  	 Агент);  	
				Запрос.УстановитьПараметр("ВидОперации", Перечисления.кпкВидыОперацийПланирования.ПланированиеПродаж);
				
				Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				Выборка.Следующий();
				
				КолРазл = Выборка.ТипПлана;
				
				НужнаяДата = ДатаКон;
				Если КолРазл = 2 Тогда
					Сообщить("В выбранном периоде есть документы, введенные разными типами планирования (типы планирования посещений: по контрагентам и по торговым точкам)", СтатусСообщения.Важное);
					Сообщить("Формирование отчета за весь выбранный период невозможно!", СтатусСообщения.Важное);
					ВыборкаДок = Выборка.Выбрать();
					Если ВыборкаДок.Следующий() Тогда
						ИспТочек = ВыборкаДок.ТипПлана;
						Сообщить("Найдены следующие планы посещений: ", СтатусСообщения.Внимание);								
					КонецЕсли;			  		
					
					ВыборкаДок.Сбросить();
					Пока ВыборкаДок.Следующий() Цикл
						ТипПл = ?(ВыборкаДок.ТипПлана, "торговым точкам", "контрагентам");
						Сообщить(Строка(ВыборкаДок.Ссылка) + " тип планирования по " + ТипПл, СтатусСообщения.Внимание);								
						Если ВыборкаДок.ТипПлана<>ИспТочек Тогда				
							НужнаяДата = ВыборкаДок.Ссылка.Дата - 1;			
						КонецЕсли;		                            			
					КонецЦикла; 
					
					Режим = РежимДиалогаВопрос.ДаНет;
					Ответ = Вопрос("Вы хотите сформировать отчет за возможный период (период отчета будет изменен)?", Режим, 0);
					Если Ответ = КодВозвратаДиалога.Да Тогда
						ДатаКон = НужнаяДата;			 
						Сообщить("Период отчета изменен! Период формирования отчета " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон), СтатусСообщения.Информация);
						Сообщить("Отчет сформирован!", СтатусСообщения.Информация);
					Иначе
						Возврат;
					КонецЕсли;
					
				Иначе
					ВыборкаДок = Выборка.Выбрать();
					Если ВыборкаДок.Следующий() Тогда
						ИспТочек = ВыборкаДок.ТипПлана;
					КонецЕсли;			
				КонецЕсли;
				
				Если ИспТочек Тогда
					РазмерСписка = СписВидДок.Количество()-1;
					Для Сч = 0 По РазмерСписка Цикл				
						ТекЭлемент = СписВидДок.Получить(Сч);
						
						МетаданныеДокумента = Документы[ТекЭлемент.Значение].ПустаяСсылка().Метаданные();
						
						ТорговаяТочка = "";
						Если МетаданныеДокумента.Реквизиты.Найти("кпкТорговаяТочка") = Неопределено и 
							МетаданныеДокумента.Реквизиты.Найти("ТорговаяТочка") = Неопределено Тогда				
							СписВидДок.Удалить(ТекЭлемент);
							Сч = Сч - 1;
							РазмерСписка = РазмерСписка - 1;
							Если Сч = РазмерСписка Тогда Прервать; КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				//Таб = ЭлементыФормы.ТаблицаПосещений;
				//Таб.Очистить();
				//
				//Таб.ФиксацияСверху = 6;
				//
				//Если ИспТочек = 1 Тогда  
				//	Таб.ФиксацияСлева = 4;
				//	Пар = "ТорговаяТочка";		
				//Иначе		
				//	Таб.ФиксацияСлева = 3;
				//	Пар = "Контрагент";		
				//КонецЕсли;
				
				ТЗ = Новый ТаблицаЗначений;	
				ТЗ.Колонки.Добавить(Пар);
				ТЗ.Колонки.Добавить("ВнеПлана");
				
				Поз = 0;
				ТекДата = НачалоМесяца(ДатаНач);
				Пока ТекДата <= ДатаКон Цикл
					ТЗ.Колонки.Добавить("Д" + Поз);
					ТекДата = ТекДата + 86400;
					Поз = Поз + 1;
				КонецЦикла;
				ТЗ.Колонки.Добавить("Д" + Поз);
				ТЗКолДней = Поз;
				
				СтАгент = Новый Структура;
				СтАгент.Вставить("Агент", Агент);
				//Док = Документы.КпкПланПосещений.Выбрать(НачалоМесяца(ДобавитьМесяц(ДатаНач, -1)), КонецДня(ДатаКон), СтАгент, "Дата");
				Док = Документы.КпкПланПосещений.Выбрать(НачалоМесяца(ДатаНач), КонецДня(ДатаКон), СтАгент, "Дата");
				Пока Док.Следующий() Цикл
					
					Если Док.Проведен Тогда
						
						Смещение = (НачалоДня(Док.Дата) - ДатаНач) / 86400;
						
						//Смещение = 0;
						
						Граница = ?(ТЗКолДней <= Док.ИнтервалПланирования, ТЗКолДней, Док.ИнтервалПланирования);			
						Если (Граница + Смещение > ТЗКолДней) Тогда
							Граница = Мин(Граница, ТЗКолДней - Смещение);
						КонецЕсли;
						
						Для Каждого Стр Из Док.Дни Цикл
							
							ТЗСтр = ТЗ.Найти(Стр[Пар], Пар);
							
							Если ТЗСтр = Неопределено Тогда
								ТЗСтр = ТЗ.Добавить();
								ТЗСтр[Пар] = Стр[Пар];
								ТЗСтр.ВнеПлана = Ложь;
								Поз = 0;
								Пока Поз < Граница Цикл
									НужныйДень = Поз + Смещение; 				
									Если НужныйДень < 0 Тогда
										Поз = Поз + 1;
										Продолжить;
									КонецЕсли;
									ТЗСтр["Д" + Строка(НужныйДень)] = Число(Стр["Д" + Строка(Поз + 1)]);
									Поз = Поз + 1;
								КонецЦикла;
							Иначе
								Поз = 0;
								Пока Поз < Граница  Цикл
									НужныйДень = Поз + Смещение; 				
									Если НужныйДень < 0 Тогда
										Поз = Поз + 1;
										Продолжить;
									КонецЕсли;
									ТЗСтр["Д" + Строка(НужныйДень)] = Число(Стр["Д" + Строка(Поз + 1)]);
									Поз = Поз + 1;
								КонецЦикла;
							КонецЕсли;
						КонецЦикла;
					КонецЕсли;
				КонецЦикла;
				
				Поз = 0;
				Для Поз = 0 По СписВидДок.Количество() - 1 Цикл
					Эл = СписВидДок.Получить(Поз);
					Если Эл.Пометка Тогда  				
						
						Если ИспТочек Тогда
							МетаданныеДокумента = Документы[Эл.Значение].ПустаяСсылка().Метаданные();
							
							ТорговаяТочка = "";
							Если МетаданныеДокумента.Реквизиты.Найти("кпкТорговаяТочка") <> Неопределено Тогда 
								ТорговаяТочка = "Док.кпкТорговаяТочка КАК ТоргТочка,";
								ПарДок = "кпкТорговаяТочка";
							ИначеЕсли МетаданныеДокумента.Реквизиты.Найти("ТорговаяТочка") <> Неопределено Тогда				
								ТорговаяТочка = "Док.ТорговаяТочка КАК ТоргТочка,";				
								ПарДок = "ТорговаяТочка";
							КонецЕсли;
						Иначе
							ТорговаяТочка = "";				
							ПарДок = "";			
						КонецЕсли;
						
						УслПроведенные = ?(ЭлементыФормы.флПроведенные.Значение, "И Док.Проведен = Истина", "");
						
						ПарДок = ?(ИспТочек, ПарДок, "Контрагент");
						
						Если ИспТочек Тогда
							ТекстТочки = " И Док." + ПарДок + " <> &ПустаяТочка";
						Иначе
							ТекстТочки = "";
						КонецЕсли;    			
						
						Если ЭлементыФормы.ДатаЗагрузкиВБазу.Значение Тогда
							ТекстДаты = "Док.Дата";
						Иначе
							ТекстДаты = "ВложенныйЗапрос.ДатаВремяСоздания";				
						КонецЕсли; 		
						
						ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
						|	Док.Контрагент КАК Клиент," 
						+ ТорговаяТочка + "
						|	Док.Ссылка КАК Ссылка,"
						+ ТекстДаты + " КАК Дата,
						|	ВложенныйЗапрос.Агент,
						|	ВложенныйЗапрос.ДатаВремяСоздания
						|ИЗ
						|	(ВЫБРАТЬ
						|		кпкСведенияДокумента.КПКДокумент КАК КПКДокумент,
						|		кпкСведенияДокумента.Агент КАК Агент,
						|		кпкСведенияДокумента.ДатаВремяСоздания КАК ДатаВремяСоздания
						|	ИЗ
						|		РегистрСведений.кпкСведенияДокумента КАК кпкСведенияДокумента 
						| ГДЕ 
						|		кпкСведенияДокумента.Агент В(&ПарАгент))  КАК ВложенныйЗапрос
						|		ЛЕВОЕ СОЕДИНЕНИЕ Документ." + Эл.Значение + " КАК Док
						|		ПО ВложенныйЗапрос.КПКДокумент = Док.Ссылка
						|ГДЕ
						|	" + ТекстДаты + " МЕЖДУ &ДатаНач И &ДатаКон
						|	И Док.ПометкаУдаления = ЛОЖЬ " + УслПроведенные + ТекстТочки + "
						|УПОРЯДОЧИТЬ ПО
						|	Ссылка"; 	 
						
						Запрос = Новый Запрос(ТекстЗапроса);
						
						Запрос.УстановитьПараметр("ДатаНач",     НачалоДня(ДатаНач));
						Запрос.УстановитьПараметр("ДатаКон",     КонецДня(ДатаКон));
						Запрос.УстановитьПараметр("ПарАгент",    Агент);
						Запрос.УстановитьПараметр("ПустаяТочка", Справочники.кпкТорговыеТочки.ПустаяСсылка());
						
						Выборка = Запрос.Выполнить().Выбрать();
						Пока Выборка.Следующий() Цикл
							Док = Выборка.Ссылка;
							Смещение = (НачалоДня(Выборка.Дата) - ДатаНач) / 86400;
							
							ТЗСтр = ТЗ.Найти(Док[ПарДок], Пар);
							
							Если ТЗСтр = Неопределено Тогда
								ТЗСтр = ТЗ.Добавить();					
								ТЗСтр[Пар] = Док[ПарДок];					
								ТЗСтр["Д" + Строка(Смещение)] = -1;					
								ТЗСтр.ВнеПлана = Истина;
							Иначе
								ЗначПос = ТЗСтр["Д" + Строка(Смещение)];
								Если ЗначПос = Неопределено Тогда 
									ТЗСтр["Д" + Строка(Смещение)] = -1;
								Иначе
									ТЗСтр["Д" + Строка(Смещение)] = ?(ЗначПос >= 1, 2, -1);					
								КонецЕсли;			
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
				КонецЦикла;
				
				ТЗИтогДата = Новый ТаблицаЗначений;
				ТЗИтогДата.Колонки.Добавить("План");
				ТЗИтогДата.Колонки.Добавить("Факт");
				ТЗИтогДата.Колонки.Добавить("Вне");
				
				ТЗИтогТочка = Новый ТаблицаЗначений;
				ТЗИтогТочка.Колонки.Добавить("План");
				ТЗИтогТочка.Колонки.Добавить("Факт");
				ТЗИтогТочка.Колонки.Добавить("Вне");
				
				Для Каждого ТЗСтр Из ТЗ Цикл
					ТФ = 0;
					ТП = 0;
					ТВ = 0;
					Поз = 0;
					Пока Поз < ТЗКолДней Цикл
						Если ТЗСтр["Д" + Строка(Поз)] = -1 Тогда
							ТВ = ТВ + 1;
						ИначеЕсли ТЗСтр["Д" + Строка(Поз)] = 1 Тогда
							ТП = ТП + 1;
						ИначеЕсли ТЗСтр["Д" + Строка(Поз)] = 2 Тогда
							ТП = ТП + 1;
							ТФ = ТФ + 1;
						КонецЕсли;
						Поз = Поз + 1;
					КонецЦикла;
					СтрТочка = ТЗИтогТочка.Добавить();
					СтрТочка.План = ТП;
					СтрТочка.Факт = ТФ;
					СтрТочка.Вне = ТВ;
				КонецЦикла;
				
				Поз = 0;
				Пока Поз < ТЗКолДней Цикл
					ДФ = 0;
					ДП = 0;
					ДВ = 0;
					Для Каждого ТЗСтр Из ТЗ Цикл
						Если ТЗСтр["Д" + Строка(Поз)] = -1 Тогда
							ДВ = ДВ + 1;
						ИначеЕсли ТЗСтр["Д" + Строка(Поз)] = 1 Тогда
							ДП = ДП + 1;
						ИначеЕсли ТЗСтр["Д" + Строка(Поз)] = 2 Тогда
							ДП = ДП + 1;
							ДФ = ДФ + 1;
						КонецЕсли;
					КонецЦикла;
					СтрДата = ТЗИтогДата.Добавить();
					СтрДата.План = ДП;
					СтрДата.Факт = ДФ;
					СтрДата.Вне = ДВ;
					
					Поз = Поз + 1;
				КонецЦикла;
				
				Макет = ЭтотОбъект.ПолучитьМакет("Макет");
				
				ОбластьШапки = Макет.ПолучитьОбласть("Шапка|Номер");
				
				ОбластьШапки.Параметры.ПечПериод = кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
				ОбластьШапки.Параметры.ПечАгент = Агент.Наименование;
				Таб.Вывести(ОбластьШапки);
				
				ОбластьШапкиКлиент = Макет.ПолучитьОбласть("Шапка|Клиент");	
				Таб.Присоединить(ОбластьШапкиКлиент);
				
				Если ИспТочек Тогда
					ОбластьШапкиТоргТочка = Макет.ПолучитьОбласть("Шапка|ТоргТочка");	
					Таб.Присоединить(ОбластьШапкиТоргТочка);		
				КонецЕсли;
				
				ОбластьШапкиАдрес = Макет.ПолучитьОбласть("Шапка|Адрес");	
				Таб.Присоединить(ОбластьШапкиАдрес);
				
				ТекДата = ДатаНач;
				Пока ТекДата <= ДатаКон Цикл
					Если ДеньНедели(ТекДата) = 6 Тогда
						ДопОбластьШапки = Макет.ПолучитьОбласть("Шапка|Субб");
					ИначеЕсли ДеньНедели(ТекДата) = 7 Тогда
						ДопОбластьШапки = Макет.ПолучитьОбласть("Шапка|Воскр");
					Иначе
						ДопОбластьШапки = Макет.ПолучитьОбласть("Шапка|День");
					КонецЕсли;
					ДопОбластьШапки.Параметры.ДеньНед = кпкАгентПлюс.ДеньНеделиСтр(ДеньНедели(ТекДата));
					ДопОбластьШапки.Параметры.ДеньМес = Строка(День(ТекДата)) + "." + Формат(ТекДата, "ДФ=""ММ"";");
					Таб.Присоединить(ДопОбластьШапки);
					ТекДата = ТекДата + 86400;
				КонецЦикла;
				
				ВсегоОбластьШапки = Макет.ПолучитьОбласть("Шапка|Всего");
				Таб.Присоединить(ВсегоОбластьШапки);
				
				Ном = 1;
				
				// Если не флаг, то область не выводится
				Если hiВыводитьТорговыеТочки Тогда
					
					
					Для Каждого ТЗСтр Из ТЗ Цикл
						
						ВнеПлана = ТЗСтр.ВнеПлана;
						Желтый = Новый Цвет(255,255,0);
						
						ОбластьСтрНомер = Макет.ПолучитьОбласть("Строка|Номер");
						ОбластьСтрНомер.Параметры.Ном = Ном;		
						
						Если ВнеПлана Тогда
							ОбластьСтрНомер.ТекущаяОбласть.ЦветФона = Желтый;								
						КонецЕсли;
						Таб.Вывести(ОбластьСтрНомер);
						//
						
						ОбластьСтрКлиент = Макет.ПолучитьОбласть("Строка|Клиент");		
						ПечКлиент = ?(ИспТочек, ТЗСтр.ТорговаяТочка.Владелец, ТЗСтр.Контрагент);		
						ОбластьСтрКлиент.Параметры.ПечКлиент = ПечКлиент;
						ОбластьСтрКлиент.Параметры.ПечКлиентРас = ПечКлиент;
						
						Если ВнеПлана Тогда
							ОбластьСтрКлиент.ТекущаяОбласть.ЦветФона = Желтый;								
						КонецЕсли;
						Таб.Присоединить(ОбластьСтрКлиент);
						//
						
						ПечТочка = Справочники.кпкТорговыеТочки.ПустаяСсылка();
						Если ИспТочек Тогда 
							ОбластьСтрТоргТочка = Макет.ПолучитьОбласть("Строка|ТоргТочка");		
							ПечТочка = ТЗСтр.ТорговаяТочка;			
							ОбластьСтрТоргТочка.Параметры.ПечТочка = ПечТочка;			
							ОбластьСтрТоргТочка.Параметры.ПечТочкаРас = ПечТочка;			
							
							Если ВнеПлана Тогда
								ОбластьСтрТоргТочка.ТекущаяОбласть.ЦветФона = Желтый;								
							КонецЕсли;
							
							Таб.Присоединить(ОбластьСтрТоргТочка);
						КонецЕсли;                                               		
						//
						ОбластьСтрАдрес = Макет.ПолучитьОбласть("Строка|Адрес");				
						ОбластьСтрАдрес.Параметры.ПечАдрес = ?(ИспТочек, ТЗСтр.ТорговаяТочка.Адрес, УправлениеКонтактнойИнформацией.ПолучитьАдресИзКонтактнойИнформации(ТЗСтр.Контрагент,"Фактический"));
						
						Если ВнеПлана Тогда
							ОбластьСтрАдрес.ТекущаяОбласть.ЦветФона = Желтый;								
						КонецЕсли;
						Таб.Присоединить(ОбластьСтрАдрес);
						
						Поз = 0;
						ТекДата = ДатаНач;
						Пока ТекДата <= ДатаКон Цикл
							Если ДеньНедели(ТекДата) = 6 Тогда
								ДопОбластьСтр = Макет.ПолучитьОбласть("Строка|Субб");
							ИначеЕсли ДеньНедели(ТекДата) = 7 Тогда
								ДопОбластьСтр = Макет.ПолучитьОбласть("Строка|Воскр");
							Иначе
								ДопОбластьСтр = Макет.ПолучитьОбласть("Строка|День");
							КонецЕсли;
							
							СтруктураРасш = Новый Структура("День, Контрагент, ТоргТочка");
							
							Если ТЗСтр["Д" + Строка(Поз)] = -1 Тогда
								ДопОбластьСтр.Параметры.ПечРабота = "x";				
								Синий = Новый Цвет(0, 0, 255);
								
								СтруктураРасш.День 			= ТекДата;
								СтруктураРасш.Контрагент 	= ПечКлиент;
								СтруктураРасш.ТоргТочка 	= ПечТочка;
								ДопОбластьСтр.Параметры.Док = СтруктураРасш;
								
								ДопОбластьСтр.ТекущаяОбласть.ЦветТекста = Синий;								
							ИначеЕсли ТЗСтр["Д" + Строка(Поз)] = 1 Тогда
								ДопОбластьСтр.Параметры.ПечРабота = "o";
								Красный = Новый Цвет(255, 0, 0);
								ДопОбластьСтр.ТекущаяОбласть.ЦветТекста = Красный;				
								
								СтруктураРасш.День          = ТекДата;
								СтруктураРасш.Контрагент    = ПечКлиент;
								СтруктураРасш.ТоргТочка     = ПечТочка;
								ДопОбластьСтр.Параметры.Док = СтруктураРасш;
								
							ИначеЕсли ТЗСтр["Д" + Строка(Поз)] = 2 Тогда
								ДопОбластьСтр.Параметры.ПечРабота = "n";								
								
								СтруктураРасш.День 			= ТекДата;
								СтруктураРасш.Контрагент 	= ПечКлиент;
								СтруктураРасш.ТоргТочка 	= ПечТочка;
								ДопОбластьСтр.Параметры.Док = СтруктураРасш;				
							КонецЕсли;
							
							Поз = Поз + 1;
							ТекДата = ТекДата + 86400;
							
							Если ВнеПлана Тогда
								ДопОбластьСтр.ТекущаяОбласть.ЦветФона = Желтый;								
							КонецЕсли;
							
							Таб.Присоединить(ДопОбластьСтр);
							
						КонецЦикла;
						
						
						ВсегоОбластьСтр = Макет.ПолучитьОбласть("Строка|Всего");
						ВсегоСтр = ТЗИтогТочка.Получить(Ном - 1);
						ВсегоОбластьСтр.Параметры.ВсегоФакт = ВсегоСтр.Факт;
						ВсегоОбластьСтр.Параметры.ВсегоПлан = ВсегоСтр.План;
						ВсегоОбластьСтр.Параметры.ВсегоВ = ВсегоСтр.Вне;
						ВсегоОбластьСтр.Параметры.Выполнение = Формат(?(ВсегоСтр.План = 0, 0, (ВсегоСтр.Факт * 100) / ВсегоСтр.План), "ЧЦ=15; ЧДЦ=2;");
						
						Если ВнеПлана Тогда
							ВсегоОбластьСтр.Области.ОблВсего.ЦветФона = Желтый;								
						КонецЕсли;
						
						Таб.Присоединить(ВсегоОбластьСтр);
						
						Ном = Ном + 1;
					КонецЦикла;
				КонецЕсли;
				ОбластьИтоговНомер = Макет.ПолучитьОбласть("Подвал|Номер");
				Таб.Вывести(ОбластьИтоговНомер);
				
				ОбластьИтоговКлиент = Макет.ПолучитьОбласть("Подвал|Клиент");
				Таб.Присоединить(ОбластьИтоговКлиент);	
				
				Если ИспТочек Тогда 
					ОбластьИтоговТоргТочка = Макет.ПолучитьОбласть("Подвал|ТоргТочка");
					Таб.Присоединить(ОбластьИтоговТоргТочка);
				КонецЕсли;
				
				ОбластьИтоговАдрес = Макет.ПолучитьОбласть("Подвал|Адрес");
				Таб.Присоединить(ОбластьИтоговАдрес);
				
				Поз = 0;
				ТекДата = ДатаНач;
				Пока ТекДата <= ДатаКон Цикл
					Если ДеньНедели(ТекДата) = 6 Тогда
						ДопОбластьИтогов = Макет.ПолучитьОбласть("Подвал|Субб");
					ИначеЕсли ДеньНедели(ТекДата) = 7 Тогда
						ДопОбластьИтогов = Макет.ПолучитьОбласть("Подвал|Воскр");
					Иначе
						ДопОбластьИтогов = Макет.ПолучитьОбласть("Подвал|День");
					КонецЕсли;
					ВсегоСтр = ТЗИтогДата.Получить(Поз);
					// +HVOYA. 29 апреля 2013 г. 14:18:05.  
					ОбщийПодвалВсегоСтр = ОбщийПодвалТЗИтогДата.Получить(Поз);
					// -HVOYA. 29 апреля 2013 г. 14:18:09.  
					ДопОбластьИтогов.Параметры.ПечИтогФ = ВсегоСтр.Факт;
					ДопОбластьИтогов.Параметры.ПечИтогП = ВсегоСтр.План;
					ДопОбластьИтогов.Параметры.ПечИтогВ = ВсегоСтр.Вне;
					ДопОбластьИтогов.Параметры.Выполнение = Формат(?(ВсегоСтр.План = 0, 0, (ВсегоСтр.Факт * 100) / ВсегоСтр.План), "ЧЦ=15; ЧДЦ=2;");
					Таб.Присоединить(ДопОбластьИтогов);
					Поз = Поз + 1;
					ТекДата = ТекДата + 86400;
					
					// Общийподвал
					ОбщийПодвалВсегоСтр.Факт = ОбщийПодвалВсегоСтр.Факт + ВсегоСтр.Факт;
					ОбщийПодвалВсегоСтр.План = ОбщийПодвалВсегоСтр.План + ВсегоСтр.План;
					ОбщийПодвалВсегоСтр.Вне  = ОбщийПодвалВсегоСтр.Вне  + ВсегоСтр.Вне;
					//ОбщийПодвал
					
				КонецЦикла;
				
				ВсегоФакт = ТЗИтогТочка.Итог("Факт");
				ВсегоВне = ТЗИтогТочка.Итог("Вне");
				ВсегоПлан = ТЗИтогТочка.Итог("План");
				
				ВсегоОбластьИтогов = Макет.ПолучитьОбласть("Подвал|Всего");
				ВсегоОбластьИтогов.Параметры.ВсегоФакт = ВсегоФакт;
				ВсегоОбластьИтогов.Параметры.ВсегоВ = ВсегоВне;
				ВсегоОбластьИтогов.Параметры.ВсегоПлан = ВсегоПлан;
				// +HVOYA. 29 апреля 2013 г. 14:53:57.  
				//ОбщийПодвалСтрТочка.План = ОбщийПодвалСтрТочка.План + ВсегоФакт;
				//ОбщийПодвалСтрТочка.Факт = ОбщийПодвалСтрТочка.Факт + ВсегоВне;
				//ОбщийПодвалСтрТочка.Вне = ОбщийПодвалСтрТочка.Вне   + ВсегоПлан;
				ОбщийПодвалВсегоФакт = ОбщийПодвалВсегоФакт + ВсегоФакт;
				ОбщийПодвалВсегоВне  = ОбщийПодвалВсегоВне  + ВсегоВне ;
				ОбщийПодвалВсегоПлан = ОбщийПодвалВсегоПлан + ВсегоПлан;
				// -HVOYA. 29 апреля 2013 г. 14:53:59.  
				ВсегоОбластьИтогов.Параметры.ВсегоВыполнение = Формат(?(ВсегоПлан = 0, 0, (ВсегоФакт * 100) / ВсегоПлан), "ЧЦ=15; ЧДЦ=2;");
				Таб.Присоединить(ВсегоОбластьИтогов);  	
				
				
			КонецЕсли;	
		КонецЦикла;
		
		// Общий подвал
		Если ЭлементыФормы.Агент.Значение.Количество() > 1 Тогда
			// +HVOYA. 29 апреля 2013 г. 15:44:14.  
			ПустаяСтрока = Макет.ПолучитьОбласть("ПустаяСтрока");
			Таб.Вывести(ПустаяСтрока);
			// -HVOYA. 29 апреля 2013 г. 15:44:17.  
			ОбластьИтоговНомер = Макет.ПолучитьОбласть("Подвал|Номер");
				Таб.Вывести(ОбластьИтоговНомер);
				
				ОбластьИтоговКлиент = Макет.ПолучитьОбласть("Подвал|Клиент");
				Таб.Присоединить(ОбластьИтоговКлиент);	
				
				Если ИспТочек Тогда 
					ОбластьИтоговТоргТочка = Макет.ПолучитьОбласть("Подвал|ТоргТочка");
					Таб.Присоединить(ОбластьИтоговТоргТочка);
				КонецЕсли;
				
				ОбластьИтоговАдрес = Макет.ПолучитьОбласть("Подвал|Адрес");
				Таб.Присоединить(ОбластьИтоговАдрес);
				
				Поз = 0;
				ТекДата = ДатаНач;
				Пока ТекДата <= ДатаКон Цикл
					Если ДеньНедели(ТекДата) = 6 Тогда
						ДопОбластьИтогов = Макет.ПолучитьОбласть("Подвал|Субб");
					ИначеЕсли ДеньНедели(ТекДата) = 7 Тогда
						ДопОбластьИтогов = Макет.ПолучитьОбласть("Подвал|Воскр");
					Иначе
						ДопОбластьИтогов = Макет.ПолучитьОбласть("Подвал|День");
					КонецЕсли;
					ОбщийПодвалВсегоСтр = ОбщийПодвалТЗИтогДата.Получить(Поз);
					ДопОбластьИтогов.Параметры.ПечИтогФ = ОбщийПодвалВсегоСтр.Факт;
					ДопОбластьИтогов.Параметры.ПечИтогП = ОбщийПодвалВсегоСтр.План;
					ДопОбластьИтогов.Параметры.ПечИтогВ = ОбщийПодвалВсегоСтр.Вне;
					ДопОбластьИтогов.Параметры.Выполнение = Формат(?(ОбщийПодвалВсегоСтр.План = 0, 0, (ОбщийПодвалВсегоСтр.Факт * 100) / ОбщийПодвалВсегоСтр.План), "ЧЦ=15; ЧДЦ=2;");
					Таб.Присоединить(ДопОбластьИтогов);
					Поз = Поз + 1;
					ТекДата = ТекДата + 86400;
				КонецЦикла;
				
				ВсегоФакт = ОбщийПодвалВсегоФакт;
				ВсегоВне = ОбщийПодвалВсегоВне;
				ВсегоПлан = ОбщийПодвалВсегоПлан;
				
				ВсегоОбластьИтогов = Макет.ПолучитьОбласть("Подвал|Всего");
				ВсегоОбластьИтогов.Параметры.ВсегоФакт = ВсегоФакт;
				ВсегоОбластьИтогов.Параметры.ВсегоВ = ВсегоВне;
				ВсегоОбластьИтогов.Параметры.ВсегоПлан = ВсегоПлан;
				ВсегоОбластьИтогов.Параметры.ВсегоВыполнение = Формат(?(ВсегоПлан = 0, 0, (ВсегоФакт * 100) / ВсегоПлан), "ЧЦ=15; ЧДЦ=2;");
				Таб.Присоединить(ВсегоОбластьИтогов);  	
		
		КонецЕсли;
		// Общий подвал
		
		Таб.ТолькоПросмотр = Истина;
		Таб.АвтоМасштаб = Истина;
		Таб.Показать();
	КонецПроцедуры //СформироватьОтчетПоПлануПосещений()
	
	// Формирование отчета по плану продаж
	//
	Процедура СформироватьОтчетПоПлануПродаж(ЭлементыФормы) Экспорт
		
		Агент     = ЭлементыФормы.Агент.Значение;
		ДатаНач   = НачалоДня(ЭлементыФормы.ДатаНач.Значение);
		ДатаКон   = КонецДня(ЭлементыФормы.ДатаКон.Значение);  
		Группа    = ЭлементыФормы.Группа.Значение;
		Внеплана  = ЭлементыФормы.Внеплана.Значение;
		ТипПлана  = ЭлементыФормы.ТипПлана.Значение;
		
		Диаграмма = ЭлементыФормы.ДиаграммаПродаж;
		
		ОбновлениеОтображенияДиаграммы(ЭлементыФормы);
		
		Диаграмма.Обновление 		   = Ложь;
		Диаграмма.АвтоТранспонирование = Ложь;
		Диаграмма.Очистить(); 	
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = ПолучитьТекстЗапросаДляПродаж(ЭлементыФормы);
		
		Запрос.УстановитьПараметр("Агент",    Агент);
		Запрос.УстановитьПараметр("ДатаНач",  ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон",  ДатаКон);
		Запрос.УстановитьПараметр("Группа",   Группа);
		Запрос.УстановитьПараметр("ТипПлана", ТипПлана);
		
		Таб = ЭлементыФормы.ТаблицаПродаж;
		Таб.Очистить();
		
		Макет = ЭтотОбъект.ПолучитьМакет("ПланПродаж");
		
		Таб.НачатьАвтогруппировкуСтрок();
		
		ОбластьЗаголовок    = Макет.ПолучитьОбласть("Заголовок");
		ОбластьПараметр     = Макет.ПолучитьОбласть("Параметр");
		ОбластьПараметрВып  = Макет.ПолучитьОбласть("ПарВып");
		
		ОбластьШапка     		= Макет.ПолучитьОбласть("Шапка|Нач");
		ОбластьШапкаПланКол     = Макет.ПолучитьОбласть("Шапка|ПланКол");
		ОбластьШапкаПланСум     = Макет.ПолучитьОбласть("Шапка|ПланСум");
		ОбластьШапкаФактКол     = Макет.ПолучитьОбласть("Шапка|ФактКол");
		ОбластьШапкаФактСум     = Макет.ПолучитьОбласть("Шапка|ФактСум");
		//
		ОбластьШапкаОтклКол     = Макет.ПолучитьОбласть("Шапка|ОтклКол");
		ОбластьШапкаОтклСум     = Макет.ПолучитьОбласть("Шапка|ОтклСум");
		ОбластьШапкаПроцКол     = Макет.ПолучитьОбласть("Шапка|ПроцКол");
		ОбластьШапкаПроцСум     = Макет.ПолучитьОбласть("Шапка|ПроцСум");
		
		/////
		ОбластьСтрока   		 = Макет.ПолучитьОбласть("Строка|Нач");
		ОбластьСтрокаПланКол     = Макет.ПолучитьОбласть("Строка|ПланКол");
		ОбластьСтрокаПланСум     = Макет.ПолучитьОбласть("Строка|ПланСум");
		ОбластьСтрокаФактКол     = Макет.ПолучитьОбласть("Строка|ФактКол");
		ОбластьСтрокаФактСум     = Макет.ПолучитьОбласть("Строка|ФактСум");
		//
		ОбластьСтрокаОтклКол     = Макет.ПолучитьОбласть("Строка|ОтклКол");
		ОбластьСтрокаОтклСум     = Макет.ПолучитьОбласть("Строка|ОтклСум");
		ОбластьСтрокаПроцКол     = Макет.ПолучитьОбласть("Строка|ПроцКол");
		ОбластьСтрокаПроцСум     = Макет.ПолучитьОбласть("Строка|ПроцСум");
		
		/////
		ОбластьИтого  			 = Макет.ПолучитьОбласть("Итого|Нач");
		ОбластьИтогоПланКол      = Макет.ПолучитьОбласть("Итого|ПланКол");
		ОбластьИтогоПланСум      = Макет.ПолучитьОбласть("Итого|ПланСум");
		ОбластьИтогоФактКол      = Макет.ПолучитьОбласть("Итого|ФактКол");
		ОбластьИтогоФактСум      = Макет.ПолучитьОбласть("Итого|ФактСум");
		//
		ОбластьИтогоОтклКол      = Макет.ПолучитьОбласть("Итого|ОтклКол");
		ОбластьИтогоОтклСум      = Макет.ПолучитьОбласть("Итого|ОтклСум");
		ОбластьИтогоПроцКол      = Макет.ПолучитьОбласть("Итого|ПроцКол");
		ОбластьИтогоПроцСум      = Макет.ПолучитьОбласть("Итого|ПроцСум");
		
		
		ОбластьПодвал    = Макет.ПолучитьОбласть("Подвал|Нач");
		
		ОбластьПодвалПланКол     = Макет.ПолучитьОбласть("Подвал|ПланКол");
		ОбластьПодвалПланСум     = Макет.ПолучитьОбласть("Подвал|ПланСум");
		ОбластьПодвалФактКол     = Макет.ПолучитьОбласть("Подвал|ФактКол");
		ОбластьПодвалФактСум     = Макет.ПолучитьОбласть("Подвал|ФактСум");
		//
		ОбластьПодвалОтклКол     = Макет.ПолучитьОбласть("Подвал|ОтклКол");
		ОбластьПодвалОтклСум     = Макет.ПолучитьОбласть("Подвал|ОтклСум");
		ОбластьПодвалПроцКол     = Макет.ПолучитьОбласть("Подвал|ПроцКол");
		ОбластьПодвалПроцСум     = Макет.ПолучитьОбласть("Подвал|ПроцСум");
		
		
		ОбластьЗаголовок.Параметры.Заголовок = "Выполнение плана продаж за " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
		Таб.Вывести(ОбластьЗаголовок);
		
		ОбластьПараметр.Параметры.Пар = "Агент: " + Агент;
		Таб.Вывести(ОбластьПараметр);  
		
		ОбластьПараметр.Параметры.Пар = "Период: " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
		Таб.Вывести(ОбластьПараметр);   	
		
		ОбластьПараметр.Параметры.Пар = "Ответственный: " + УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		Таб.Вывести(ОбластьПараметр);
		
		Таб.ФиксацияСверху = 9;
		
		Таб.Вывести(ОбластьШапка);
		
		Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
			Таб.Присоединить(ОбластьШапкаПланСум);	
			Таб.Присоединить(ОбластьШапкаФактСум);	
			Таб.Присоединить(ОбластьШапкаОтклСум);	
			Таб.Присоединить(ОбластьШапкаПроцСум);	
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			Таб.Присоединить(ОбластьШапкаПланКол);	
			Таб.Присоединить(ОбластьШапкаФактКол);
			Таб.Присоединить(ОбластьШапкаОтклКол);	
			Таб.Присоединить(ОбластьШапкаПроцКол);	
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
			Таб.Присоединить(ОбластьШапкаПланКол);			
			Таб.Присоединить(ОбластьШапкаПланСум);	
			
			Таб.Присоединить(ОбластьШапкаФактКол);
			Таб.Присоединить(ОбластьШапкаФактСум);	
			
			Таб.Присоединить(ОбластьШапкаОтклКол);	                                      		
			Таб.Присоединить(ОбластьШапкаОтклСум);	
			
			Таб.Присоединить(ОбластьШапкаПроцКол);	
			Таб.Присоединить(ОбластьШапкаПроцСум);			
		КонецЕсли;
		
		ВыборкаОбщийИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаОбщийИтог.Следующий();
		
		ОбластьИтого.Параметры.Заполнить(ВыборкаОбщийИтог);
		ОбластьИтогоПланКол.Параметры.Заполнить(ВыборкаОбщийИтог);
		ОбластьИтогоПланСум.Параметры.Заполнить(ВыборкаОбщийИтог);
		
		ОбластьИтогоФактКол.Параметры.Заполнить(ВыборкаОбщийИтог);
		ОбластьИтогоФактСум.Параметры.Заполнить(ВыборкаОбщийИтог);
		
		ОбластьИтогоОтклКол.Параметры.Заполнить(ВыборкаОбщийИтог);
		ОбластьИтогоОтклСум.Параметры.Заполнить(ВыборкаОбщийИтог);
		
		ОбластьИтогоПроцКол.Параметры.Заполнить(ВыборкаОбщийИтог);
		ОбластьИтогоПроцСум.Параметры.Заполнить(ВыборкаОбщийИтог);
		
		Таб.Вывести(ОбластьИтого, ВыборкаОбщийИтог.Уровень());
		
		Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда	
			Таб.Присоединить(ОбластьИтогоПланСум);	
			Таб.Присоединить(ОбластьИтогоФактСум);	
			Таб.Присоединить(ОбластьИтогоОтклСум);	
			Таб.Присоединить(ОбластьИтогоПроцСум);	
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			Таб.Присоединить(ОбластьИтогоПланКол);	
			Таб.Присоединить(ОбластьИтогоФактКол);
			Таб.Присоединить(ОбластьИтогоОтклКол);	
			Таб.Присоединить(ОбластьИтогоПроцКол);	
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда		
			Таб.Присоединить(ОбластьИтогоПланКол);			
			Таб.Присоединить(ОбластьИтогоПланСум);	
			
			Таб.Присоединить(ОбластьИтогоФактКол);
			Таб.Присоединить(ОбластьИтогоФактСум);	
			
			Таб.Присоединить(ОбластьИтогоОтклКол);	                                      		
			Таб.Присоединить(ОбластьИтогоОтклСум);	
			
			Таб.Присоединить(ОбластьИтогоПроцКол);	
			Таб.Присоединить(ОбластьИтогоПроцСум);			
		КонецЕсли;
		
		Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда	
			ТочкаСум = Диаграмма.УстановитьТочку("Выполнение суммы (%)");     
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда		
			ТочкаКол = Диаграмма.УстановитьТочку("Выполнение кол-ва (%)");
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда		
			ТочкаСум = Диаграмма.УстановитьТочку("Выполнение суммы (%)");
			ТочкаКол = Диаграмма.УстановитьТочку("Выполнение кол-ва (%)");	              		
		КонецЕсли; 
		
		ВыборкаГрупп = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		ВыпСумма = 0;
		ВыпКол   = 0;
		ВсегоКат = ВыборкаГрупп.Количество();
		
		Пока ВыборкаГрупп.Следующий() Цикл
			
			ВыпКол   = ВыпКол + Мин(100, ВыборкаГрупп.ПроцентКоличество);
			ВыпСумма = ВыпСумма + Мин(100, ВыборкаГрупп.ПроцентСумма);
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаГрупп);
			
			Если ВыборкаГрупп.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка() Тогда
				ОбластьСтрока.Параметры.СтрНоменклатурнаяГруппа = "<Без номенклатурной группы>";		
				ОбластьСтрока.ТекущаяОбласть.ЦветТекста = Новый Цвет(0,0,255);
			ИначеЕсли ВыборкаГрупп.КоличествоПлан = 0 и ВыборкаГрупп.СуммаПлан = 0 Тогда
				ОбластьСтрока.Параметры.СтрНоменклатурнаяГруппа = Строка(ВыборкаГрупп.НоменклатурнаяГруппа) + "(внеплана)";
				ОбластьСтрока.ТекущаяОбласть.ЦветТекста = Новый Цвет(0,185,0);
			Иначе
				ОбластьСтрока.Параметры.СтрНоменклатурнаяГруппа = Строка(ВыборкаГрупп.НоменклатурнаяГруппа);		
				ОбластьСтрока.ТекущаяОбласть.ЦветТекста = Новый Цвет(0,0,0);
			КонецЕсли;
			
			ОбластьСтрокаПланКол.Параметры.Заполнить(ВыборкаГрупп);
			ОбластьСтрокаПланСум.Параметры.Заполнить(ВыборкаГрупп);
			
			ОбластьСтрокаФактКол.Параметры.Заполнить(ВыборкаГрупп);
			ОбластьСтрокаФактСум.Параметры.Заполнить(ВыборкаГрупп);
			
			ОбластьСтрокаОтклКол.Параметры.Заполнить(ВыборкаГрупп);		
			ОбластьСтрокаОтклСум.Параметры.Заполнить(ВыборкаГрупп);
			
			ОбластьСтрокаПроцКол.Параметры.Заполнить(ВыборкаГрупп);
			ОбластьСтрокаПроцСум.Параметры.Заполнить(ВыборкаГрупп);	
			
			СтрФакт = Новый Структура("Тип, Группа", "Факт", ВыборкаГрупп.НоменклатурнаяГруппа);				
			СтрПлан = Новый Структура("Тип, Группа", "План", ВыборкаГрупп.НоменклатурнаяГруппа);				
			
			ОбластьСтрокаФактСум.Параметры.СтрФакт = СтрФакт;                      
			ОбластьСтрокаФактКол.Параметры.СтрФакт = СтрФакт;                      
			
			ОбластьСтрокаПланКол.Параметры.СтрПлан = СтрПлан;                      
			ОбластьСтрокаПланСум.Параметры.СтрПлан = СтрПлан;  
			
			Если Не Внеплана Тогда			
				Если ОбластьСтрока.ТекущаяОбласть.ЦветТекста = Новый Цвет(255,0,0) Тогда
					Продолжить;  				
				КонецЕсли;       			
			КонецЕсли;
			
			Таб.Вывести(ОбластьСтрока, ВыборкаГрупп.Уровень());
			
			Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда	
				Таб.Присоединить(ОбластьСтрокаПланСум);	
				Таб.Присоединить(ОбластьСтрокаФактСум);	
				Таб.Присоединить(ОбластьСтрокаОтклСум);	
				Таб.Присоединить(ОбластьСтрокаПроцСум);	
			ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
				Таб.Присоединить(ОбластьСтрокаПланКол);	
				Таб.Присоединить(ОбластьСтрокаФактКол);
				Таб.Присоединить(ОбластьСтрокаОтклКол);	
				Таб.Присоединить(ОбластьСтрокаПроцКол);	
			ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда		
				Таб.Присоединить(ОбластьСтрокаПланКол);			
				Таб.Присоединить(ОбластьСтрокаПланСум);	
				
				Таб.Присоединить(ОбластьСтрокаФактКол);
				Таб.Присоединить(ОбластьСтрокаФактСум);	
				
				Таб.Присоединить(ОбластьСтрокаОтклКол);	                                      		
				Таб.Присоединить(ОбластьСтрокаОтклСум);	
				
				Таб.Присоединить(ОбластьСтрокаПроцКол);	
				Таб.Присоединить(ОбластьСтрокаПроцСум);			
			КонецЕсли;    	
			
			Серия = Диаграмма.УстановитьСерию(ВыборкаГрупп.НоменклатурнаяГруппа);
			
			Если ВыборкаГрупп.НоменклатурнаяГруппа = Справочники.НоменклатурныеГруппы.ПустаяСсылка() Тогда
				Серия.Текст = "<Без номенклатурной группы>";					
			ИначеЕсли ВыборкаГрупп.КоличествоПлан = 0 и ВыборкаГрупп.СуммаПлан = 0 Тогда
				Серия.Текст = СокрЛП(ВыборкаГрупп.НоменклатурнаяГруппа.Наименование) + "(внеплана)";			
			Иначе
				Серия.Текст = СокрЛП(ВыборкаГрупп.НоменклатурнаяГруппа.Наименование);					
			КонецЕсли;
			
			Серия.Расшифровка = ВыборкаГрупп.НоменклатурнаяГруппа;
			
			Если (ВыборкаГрупп.ПроцентСумма = 0) или (ВыборкаГрупп.ПроцентКоличество = 0) Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда	
				Диаграмма.УстановитьЗначение(ТочкаСум, Серия, ВыборкаГрупп.ПроцентСумма, Серия.Расшифровка);
			ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда		
				Диаграмма.УстановитьЗначение(ТочкаКол, Серия, ВыборкаГрупп.ПроцентКоличество, Серия.Расшифровка);
			ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда		
				Диаграмма.УстановитьЗначение(ТочкаСум, Серия, ВыборкаГрупп.ПроцентСумма, Серия.Расшифровка);
				Диаграмма.УстановитьЗначение(ТочкаКол, Серия, ВыборкаГрупп.ПроцентКоличество, Серия.Расшифровка);
			КонецЕсли;  	
			
		КонецЦикла; 	
		
		Таб.ЗакончитьАвтогруппировкуСтрок();
		
		Таб.Вывести(ОбластьПодвал);     
		
		Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда	
			Таб.Присоединить(ОбластьПодвалПланСум);	
			Таб.Присоединить(ОбластьПодвалФактСум);	
			Таб.Присоединить(ОбластьПодвалОтклСум);	
			Таб.Присоединить(ОбластьПодвалПроцСум);	
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			Таб.Присоединить(ОбластьПодвалПланКол);	
			Таб.Присоединить(ОбластьПодвалФактКол);
			Таб.Присоединить(ОбластьПодвалОтклКол);	
			Таб.Присоединить(ОбластьПодвалПроцКол);	
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда		
			Таб.Присоединить(ОбластьПодвалПланКол);			
			Таб.Присоединить(ОбластьПодвалПланСум);	
			
			Таб.Присоединить(ОбластьПодвалФактКол);
			Таб.Присоединить(ОбластьПодвалФактСум);	
			
			Таб.Присоединить(ОбластьПодвалОтклКол);	                                      		
			Таб.Присоединить(ОбластьПодвалОтклСум);	
			
			Таб.Присоединить(ОбластьПодвалПроцКол);	
			Таб.Присоединить(ОбластьПодвалПроцСум);			
		КонецЕсли; 
		
		Если ЭлементыФормы.ТипОтчета.Значение = 2 Тогда	
			ОбластьПараметрВып.Параметры.Пар = "Выполнение плана " + Формат(ВыпСумма/?(ВсегоКат=0, 1, ВсегоКат), "ЧДЦ=2") + " %";
			Таб.Вывести(ОбластьПараметрВып);			
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			ОбластьПараметрВып.Параметры.Пар = "Выполнение плана " + Формат(ВыпКол/?(ВсегоКат=0, 1, ВсегоКат), "ЧДЦ=2") + " %";
			Таб.Вывести(ОбластьПараметрВып);			
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда			
			ОбластьПараметрВып.Параметры.Пар = "Выполнение плана по сумме " + Формат(ВыпСумма/?(ВсегоКат=0, 1, ВсегоКат), "ЧДЦ=2") + " %";
			Таб.Вывести(ОбластьПараметрВып);			
			
			ОбластьПараметрВып.Параметры.Пар = "Выполнение плана по количеству " + Формат(ВыпКол/?(ВсегоКат=0, 1, ВсегоКат), "ЧДЦ=2") + " %";
			Таб.Вывести(ОбластьПараметрВып);			
		КонецЕсли; 
		
		Диаграмма.АвтоТранспонирование = Истина;
		Диаграмма.Обновление = Истина;
		
	КонецПроцедуры //СформироватьОтчетПоПлануПродаж()
	
	// ПолучитьТекстЗапросаДляПродаж()
	//
	// Параметры:
	//  Группа - номенклатурная группа, по которой нужно осуществить отбор
	//
	// Возвращаемое значение:
	//  Строка - Текст запроса 
	//
	// Описание:
	//  Получает текст запроса для варианта формирования отчета ПланПродаж
	//
	Функция ПолучитьТекстЗапросаДляПродаж(ЭлементыФормы)
		
		ТекстУсл = "";
		
		Группа      = ЭлементыФормы.Группа.Значение;
		Внеплана    = ЭлементыФормы.Внеплана.Значение;
		РежимДатыБД = ЭлементыФормы.ДатаЗагрузкиВБазу.Значение;
		ТипОтчета   = ЭлементыФормы.ТипОтчета.Значение;
		ТипПлана    = ЭлементыФормы.ТипПлана.Значение;
		
		Если Не Внеплана Тогда  		
			Если ТипОтчета = 1 Тогда
				ТекстУсл = "
				|ГДЕ
				|	Основной.КоличествоПлан <> 0";
			ИначеЕсли ТипОтчета = 2 Тогда
				ТекстУсл = "
				|ГДЕ		
				|	Основной.СуммаПлан <> 0";		
			Иначе
				ТекстУсл = "
				|ГДЕ
				|	Основной.КоличествоПлан <> 0
				|	И Основной.СуммаПлан <> 0";		
			КонецЕсли;
		КонецЕсли; 
		
		Если Не ТипПлана.Пустая() Тогда
			Если ТекстУсл = "" Тогда
				ТекстУсл = "
				|ГДЕ 
				|	Основной.ТипПлана = &ТипПлана";
			Иначе
				ТекстУсл = ТекстУсл + " И Основной.ТипПлана = &ТипПлана";
			КонецЕсли;
		КонецЕсли;
		
		Если РежимДатыБД Тогда
			ТекстДаты = "кпкСведенияДокумента.КПКДокумент.Дата МЕЖДУ &ДатаНач И &ДатаКон";						
		Иначе
			ТекстДаты = "кпкСведенияДокумента.ДатаВремяСоздания МЕЖДУ &ДатаНач И &ДатаКон";		
		КонецЕсли; 			
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	Основной.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|	Основной.КоличествоФакт КАК КоличествоФакт,
		|	Основной.СуммаФакт КАК СуммаФакт,
		|	Основной.КоличествоПлан КАК КоличествоПлан,
		|	Основной.СуммаПлан КАК СуммаПлан,
		|	Основной.КоличествоФакт - Основной.КоличествоПлан КАК ОтклонениеКоличество,
		|	Основной.СуммаФакт - Основной.СуммаПлан КАК ОтклонениеСумма,
		|	ВЫБОР
		|		КОГДА Основной.КоличествоПлан = 0
		|			ТОГДА 100
		|		ИНАЧЕ 100 * Основной.КоличествоФакт / Основной.КоличествоПлан
		|	КОНЕЦ КАК ПроцентКоличество,
		|	ВЫБОР
		|		КОГДА Основной.СуммаПлан = 0
		|			ТОГДА 100
		|		ИНАЧЕ 100 * Основной.СуммаФакт / Основной.СуммаПлан
		|	КОНЕЦ КАК ПроцентСумма
		|ИЗ
		|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|		ЕСТЬNULL(Продажи.НоменклатурнаяГруппа, ЭталонныеДанные.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
		|		СУММА(ЕСТЬNULL(Продажи.КоличествоОборот, 0)) КАК КоличествоФакт,
		|		СУММА(ЕСТЬNULL(Продажи.СтоимостьОборот, 0)) КАК СуммаФакт,
		|		СУММА(ЕСТЬNULL(ЭталонныеДанные.КоличествоПлан, 0)) КАК КоличествоПлан,
		|		СУММА(ЕСТЬNULL(ЭталонныеДанные.СуммаПлан, 0)) КАК СуммаПлан,
		|		ЕСТЬNULL(ЭталонныеДанные.ТипПлана, """") КАК ТипПлана
		|	ИЗ
		|		(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			СУММА(ЭталонныеДанные.КоличествоОборот) КАК КоличествоПлан,
		|			СУММА(ЭталонныеДанные.СуммаОборот) КАК СуммаПлан,
		|			ЭталонныеДанные.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
		|			ЭталонныеДанные.ДокументПланирования.ТипПланированияПродаж КАК ТипПлана
		|		ИЗ
		|			РегистрНакопления.кпкПланыПродаж.Обороты(&ДатаНач, &ДатаКон, , Агент = &Агент" + ?(Не Группа.Пустая(), " И НоменклатурнаяГруппа = &Группа", "") + ") КАК ЭталонныеДанные
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ЭталонныеДанные.НоменклатурнаяГруппа,
		|			ЭталонныеДанные.ДокументПланирования.ТипПланированияПродаж) КАК ЭталонныеДанные
		|			ПОЛНОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				СУММА(Продажи.КоличествоОборот) КАК КоличествоОборот,
		|				СУММА(Продажи.СтоимостьОборот) КАК СтоимостьОборот,
		|				Продажи.Номенклатура.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|			ИЗ
		|				(ВЫБРАТЬ
		|					кпкСведенияДокумента.КПКДокумент КАК КПКДокумент,
		|					кпкСведенияДокумента.Агент КАК Агент,
		|					кпкСведенияДокумента.ДатаВремяСоздания КАК ДатаВремяСоздания,
		|					кпкСсылкиДокументов.Документ КАК Документ
		|				ИЗ
		|					РегистрСведений.кпкСведенияДокумента КАК кпкСведенияДокумента
		|						ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.кпкСсылкиДокументов КАК кпкСсылкиДокументов
		|						ПО кпкСведенияДокумента.КПКДокумент = кпкСсылкиДокументов.Ссылка
		|							И кпкСведенияДокумента.Агент = кпкСсылкиДокументов.Агент
		|				ГДЕ " + ТекстДаты + "
		|					И кпкСведенияДокумента.Агент = &Агент
		|					И (кпкСведенияДокумента.КПКДокумент.ПометкаУдаления = ЛОЖЬ
		|							ИЛИ кпкСсылкиДокументов.Документ.ПометкаУдаления = ЛОЖЬ)) КАК ДокументыКПК
		|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(" + ?(РежимДатыБД, "&ДатаНач", "") + "," + ?(РежимДатыБД, "&ДатаКон", "") + ", ," + ?(Не Группа.Пустая(), "Номенклатура.НоменклатурнаяГруппа = &Группа", "") + ") КАК Продажи
		|					ПО (Продажи.ЗаказПокупателя = ДокументыКПК.КПКДокумент
		|							ИЛИ Продажи.ДокументПродажи = ДокументыКПК.КПКДокумент
		|							ИЛИ Продажи.ДокументПродажи = ДокументыКПК.Документ)
		|			ГДЕ
		|				(НЕ Продажи.ДокументПродажи ЕСТЬ NULL )
		|			
		|			СГРУППИРОВАТЬ ПО
		|				Продажи.Номенклатура.НоменклатурнаяГруппа) КАК Продажи
		|			ПО ЭталонныеДанные.НоменклатурнаяГруппа = Продажи.НоменклатурнаяГруппа
		|		
		|	СГРУППИРОВАТЬ ПО
		|		ЕСТЬNULL(ЭталонныеДанные.ТипПлана, """"),
		|		ЕСТЬNULL(Продажи.НоменклатурнаяГруппа, ЭталонныеДанные.НоменклатурнаяГруппа)) КАК Основной " + ТекстУсл + "
		|ИТОГИ
		|	СУММА(КоличествоФакт),
		|	СУММА(СуммаФакт),
		|	СУММА(КоличествоПлан),
		|	СУММА(СуммаПлан),
		|	СУММА(ОтклонениеКоличество),
		|	СУММА(ОтклонениеСумма),
		|	ВЫБОР
		|		КОГДА СУММА(Основной.КоличествоПлан) = 0
		|			ТОГДА 100
		|		ИНАЧЕ 100 * СУММА(Основной.КоличествоФакт) / СУММА(Основной.КоличествоПлан)
		|	КОНЕЦ КАК ПроцентКоличество,
		|	ВЫБОР
		|		КОГДА СУММА(Основной.СуммаПлан) = 0
		|			ТОГДА 100
		|		ИНАЧЕ 100 * СУММА(Основной.СуммаФакт) / СУММА(Основной.СуммаПлан)
		|	КОНЕЦ КАК ПроцентСумма
		|ПО
		|	ОБЩИЕ,
		|	НоменклатурнаяГруппа"; 	
		
		Возврат ТекстЗапроса;
		
	КонецФункции //ПолучитьТекстЗапросаДляПродаж()
	
	// ВывестиДанныеПоФакту()
	//
	// Параметры:
	//  Группа - номенклатурная группа, по которой нужно осуществить отбор
	//  ЭлементыФормы - элементы формы текущего элемента
	//
	// Описание:
	//  Выводит результат выполнения запроса по фактическим продажам в отдельный 
	//  табличный документ с переданным значением номенклатурной группы
	//  
	Процедура ВывестиДанныеПоФакту(ЭлементыФормы, Группа) Экспорт
		
		Агент   = ЭлементыФормы.Агент.Значение;
		ДатаНач = НачалоДня(ЭлементыФормы.ДатаНач.Значение);
		ДатаКон = КонецДня(ЭлементыФормы.ДатаКон.Значение);  
		
		РежимДатыБД = ЭлементыФормы.ДатаЗагрузкиВБазу.Значение;
		
		Если РежимДатыБД Тогда
			ТекстДаты = "кпкСведенияДокумента.КПКДокумент.Дата МЕЖДУ &ДатаНач И &ДатаКон";						
		Иначе
			ТекстДаты = "кпкСведенияДокумента.ДатаВремяСоздания МЕЖДУ &ДатаНач И &ДатаКон";		
		КонецЕсли; 		
		
		Запрос = Новый Запрос(	
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СУММА(Продажи.КоличествоОборот) КАК Количество,
		|	СУММА(Продажи.СтоимостьОборот) КАК Сумма,
		|	Продажи.ДокументПродажи КАК Док,
		|	СУММА(Продажи.СтоимостьБезСкидокОборот) КАК СуммаБезСкидок,
		|	Продажи.Номенклатура
		|ИЗ
		|	(ВЫБРАТЬ
		|		кпкСведенияДокумента.КПКДокумент КАК КПКДокумент,
		|		кпкСведенияДокумента.Агент КАК Агент,
		|		кпкСведенияДокумента.ДатаВремяСоздания КАК ДатаВремяСоздания,
		|		кпкСсылкиДокументов.Документ КАК Документ
		|	ИЗ
		|		РегистрСведений.кпкСведенияДокумента КАК кпкСведенияДокумента
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.кпкСсылкиДокументов КАК кпкСсылкиДокументов
		|			ПО кпкСведенияДокумента.КПКДокумент = кпкСсылкиДокументов.Ссылка
		|				И кпкСведенияДокумента.Агент = кпкСсылкиДокументов.Агент
		|	ГДЕ " + ТекстДаты + "	  
		|		И кпкСведенияДокумента.Агент = &Агент
		|		И (кпкСведенияДокумента.КПКДокумент.ПометкаУдаления = ЛОЖЬ
		|				ИЛИ кпкСсылкиДокументов.Документ.ПометкаУдаления = ЛОЖЬ)) КАК ДокументыКПК
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.Продажи.Обороты(" + ?(РежимДатыБД, "&ДатаНач", "") + "," + ?(РежимДатыБД, "&ДатаКон", "") + " , , Номенклатура.НоменклатурнаяГруппа = &Группа) КАК Продажи
		|		ПО (Продажи.ЗаказПокупателя = ДокументыКПК.КПКДокумент
		|				ИЛИ Продажи.ДокументПродажи = ДокументыКПК.КПКДокумент
		|				ИЛИ Продажи.ДокументПродажи = ДокументыКПК.Документ)
		|ГДЕ
		|	(НЕ Продажи.ДокументПродажи ЕСТЬ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	Продажи.Номенклатура,
		|	Продажи.ДокументПродажи
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	Док");	
		
		Запрос.УстановитьПараметр("Агент",   Агент);
		Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
		Запрос.УстановитьПараметр("Группа",  Группа);
		
		Таб = Новый ТабличныйДокумент;
		
		//Таб.ФиксацияСверху = 7;
		
		Макет = ЭтотОбъект.ПолучитьМакет("ПланПродаж");
		
		Таб.НачатьАвтогруппировкуСтрок();
		
		ОбластьЗаголовокНач = Макет.ПолучитьОбласть("ЗаголовокДок|Нач");
		ОбластьЗаголовокКол = Макет.ПолучитьОбласть("ЗаголовокДок|ПланКол");
		ОбластьЗаголовокСум = Макет.ПолучитьОбласть("ЗаголовокДок|ПланСум");
		
		ОбластьПараметр  	= Макет.ПолучитьОбласть("Параметр");
		
		ОбластьШапкаНач     = Макет.ПолучитьОбласть("ШапкаДок|Нач");
		ОбластьШапкаКол     = Макет.ПолучитьОбласть("ШапкаДок|ПланКол");
		ОбластьШапкаСум     = Макет.ПолучитьОбласть("ШапкаДок|ПланСум");
		
		ОбластьИтогоНач     = Макет.ПолучитьОбласть("СтрокаИтогоДок|Нач");
		ОбластьИтогоКол     = Макет.ПолучитьОбласть("СтрокаИтогоДок|ПланКол");
		ОбластьИтогоСум     = Макет.ПолучитьОбласть("СтрокаИтогоДок|ПланСум");
		
		ОбластьСтрокаНач    = Макет.ПолучитьОбласть("СтрокаДок|Нач");
		ОбластьСтрокаКол    = Макет.ПолучитьОбласть("СтрокаДок|ПланКол");
		ОбластьСтрокаСум    = Макет.ПолучитьОбласть("СтрокаДок|ПланСум");
		
		ОбластьДеталиНач    = Макет.ПолучитьОбласть("СтрокаДетали|Нач");
		ОбластьДеталиКол    = Макет.ПолучитьОбласть("СтрокаДетали|ПланКол");
		ОбластьДеталиСум    = Макет.ПолучитьОбласть("СтрокаДетали|ПланСум");
		
		ОбластьПодвалНач    = Макет.ПолучитьОбласть("ПодвалДок|Нач");   
		ОбластьПодвалКол    = Макет.ПолучитьОбласть("ПодвалДок|ПланКол");   
		ОбластьПодвалСум    = Макет.ПолучитьОбласть("ПодвалДок|ПланСум");   	
		
		ОбластьЗаголовокНач.Параметры.Заголовок = "Детализация фактических продаж по номенклатурной группе " + Группа + " за " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
		Таб.Вывести(ОбластьЗаголовокНач);
		
		Если ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			Таб.Присоединить(ОбластьЗаголовокКол);			
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
			Таб.Присоединить(ОбластьЗаголовокСум);				
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
			Таб.Присоединить(ОбластьЗаголовокСум);			
			Таб.Присоединить(ОбластьЗаголовокКол);			
		КонецЕсли;  
		
		Таб.Вывести(ОбластьПараметр);  
		
		ОбластьПараметр.Параметры.Пар = "Агент: " + Агент;
		Таб.Вывести(ОбластьПараметр);  
		
		ОбластьПараметр.Параметры.Пар = "Период: " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
		Таб.Вывести(ОбластьПараметр);   	
		
		ОбластьПараметр.Параметры.Пар = "Ответственный: " + УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
		Таб.Вывести(ОбластьПараметр);
		
		ОбластьПараметр.Параметры.Пар = "Номенклатурная группа: " + Группа;
		Таб.Вывести(ОбластьПараметр);
		
		Таб.Вывести(ОбластьШапкаНач);
		
		Если ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			Таб.Присоединить(ОбластьШапкаКол);			
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
			Таб.Присоединить(ОбластьШапкаСум);				
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
			Таб.Присоединить(ОбластьШапкаКол);			
			Таб.Присоединить(ОбластьШапкаСум);			
		КонецЕсли;   
		
		Таб.НачатьАвтогруппировкуСтрок();
		
		ВыборкаОбщийИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаОбщийИтог.Следующий();
		
		ОбластьИтогоНач.Параметры.Заполнить(ВыборкаОбщийИтог);
		Таб.Вывести(ОбластьИтогоНач, ВыборкаОбщийИтог.Уровень());
		
		ОбластьИтогоКол.Параметры.Заполнить(ВыборкаОбщийИтог);
		ОбластьИтогоСум.Параметры.Заполнить(ВыборкаОбщийИтог);
		
		Если ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
			Таб.Присоединить(ОбластьИтогоКол);			
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
			Таб.Присоединить(ОбластьИтогоСум);				
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
			Таб.Присоединить(ОбластьИтогоКол);			
			Таб.Присоединить(ОбластьИтогоСум);			
		КонецЕсли;  
		
		ВыборкаДок = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДок.Следующий() Цикл
			
			ОбластьСтрокаНач.Параметры.Заполнить(ВыборкаДок);		
			Таб.Вывести(ОбластьСтрокаНач, ВыборкаДок.Уровень());
			
			Если ЭлементыФормы.ТипОтчета.Значение = 1 Тогда
				Таб.Присоединить(ОбластьСтрокаКол);			
			ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
				Таб.Присоединить(ОбластьСтрокаСум);				
			ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
				Таб.Присоединить(ОбластьСтрокаКол);			
				Таб.Присоединить(ОбластьСтрокаСум);			
			КонецЕсли;  		
			
			ВыборкаДетали = ВыборкаДок.Выбрать();
			
			Пока ВыборкаДетали.Следующий() Цикл
				
				ОбластьДеталиНач.Параметры.Заполнить(ВыборкаДетали);		
				Таб.Вывести(ОбластьДеталиНач, ВыборкаДетали.Уровень());	
				
				ОбластьДеталиКол.Параметры.Заполнить(ВыборкаДетали);		
				ОбластьДеталиСум.Параметры.Заполнить(ВыборкаДетали);		
				
				Если ЭлементыФормы.ТипОтчета.Значение = 1 Тогда				
					Таб.Присоединить(ОбластьДеталиКол);			
				ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
					Таб.Присоединить(ОбластьДеталиСум);				
				ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
					Таб.Присоединить(ОбластьДеталиКол);			
					Таб.Присоединить(ОбластьДеталиСум);			
				КонецЕсли;  
				
			КонецЦикла; 			
			
		КонецЦикла; 	
		
		Таб.ЗакончитьАвтогруппировкуСтрок();
		
		Таб.ТолькоПросмотр = Истина;
		
		Таб.Вывести(ОбластьПодвалНач);
		
		Если ЭлементыФормы.ТипОтчета.Значение = 1 Тогда				
			Таб.Присоединить(ОбластьПодвалКол);			
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 2 Тогда
			Таб.Присоединить(ОбластьПодвалСум);				
		ИначеЕсли ЭлементыФормы.ТипОтчета.Значение = 3 Тогда    		
			Таб.Присоединить(ОбластьПодвалКол);			
			Таб.Присоединить(ОбластьПодвалСум);			
		КонецЕсли;  
		
		Таб.Показать();                 
		
	КонецПроцедуры //ВывестиДанныеПоФакту()
	
	// ВывестиДанныеПоПлану()
	//
	// Параметры:
	//  Группа - номенклатурная группа, по которой нужно осуществить отбор
	//  ЭлементыФормы - элементы формы текущего элемента
	//
	// Описание:
	//  Выводит результат выполнения запроса по плановым продажам в отдельный 
	//  табличный документ с переданным значением номенклатурной группы
	//
	Процедура ВывестиДанныеПоПлану(ЭлементыФормы, Группа) Экспорт
		
		Агент   = ЭлементыФормы.Агент.Значение;
		ДатаНач = НачалоДня(ЭлементыФормы.ДатаНач.Значение);
		ДатаКон = КонецДня(ЭлементыФормы.ДатаКон.Значение);  
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СУММА(ЭталонныеДанные.КоличествоОборот) КАК Количество,
		|	СУММА(ЭталонныеДанные.СуммаОборот) КАК Сумма,
		|	ЭталонныеДанные.НоменклатурнаяГруппа КАК Номенклатура,
		|	ЭталонныеДанные.ДокументПланирования КАК Док
		|ИЗ
		|	РегистрНакопления.кпкПланыПродаж.Обороты(
		|		&ДатаНач,
		|		&ДатаКон,
		|		,
		|		НоменклатурнаяГруппа = &Группа
		|		    И Агент = &Агент) КАК ЭталонныеДанные
		|
		|СГРУППИРОВАТЬ ПО
		|	ЭталонныеДанные.НоменклатурнаяГруппа,
		|	ЭталонныеДанные.ДокументПланирования
		|ИТОГИ
		|	СУММА(Количество),
		|	СУММА(Сумма)
		|ПО
		|	ОБЩИЕ,
		|	ДокументПланирования");
		
		Запрос.УстановитьПараметр("Агент", Агент);
		Запрос.УстановитьПараметр("ДатаНач", ДатаНач);
		Запрос.УстановитьПараметр("ДатаКон", ДатаКон);
		Запрос.УстановитьПараметр("Группа", Группа);
		
		Таб = Новый ТабличныйДокумент;
		
		Макет = ЭтотОбъект.ПолучитьМакет("ПланПродаж");
		
		Таб.НачатьАвтогруппировкуСтрок();
		
		ОбластьЗаголовок = Макет.ПолучитьОбласть("ЗаголовокДок");
		ОбластьПараметр  = Макет.ПолучитьОбласть("Параметр");
		ОбластьШапка     = Макет.ПолучитьОбласть("ШапкаДок");
		ОбластьИтого     = Макет.ПолучитьОбласть("СтрокаИтогоДок");
		ОбластьСтрока    = Макет.ПолучитьОбласть("СтрокаДок");
		ОбластьДетали    = Макет.ПолучитьОбласть("СтрокаДетали");
		ОбластьПодвал    = Макет.ПолучитьОбласть("ПодвалДок");     	
		
		ОбластьЗаголовок.Параметры.Заголовок = "Детализация планов продаж по номенклатурной группе " + Группа + " за " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
		Таб.Вывести(ОбластьЗаголовок);
		
		Таб.Вывести(ОбластьПараметр);  
		
		ОбластьПараметр.Параметры.Пар = "Агент: " + Агент;
		Таб.Вывести(ОбластьПараметр);  
		
		ОбластьПараметр.Параметры.Пар = "Период: " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
		Таб.Вывести(ОбластьПараметр);   	
		
		ОбластьПараметр.Параметры.Пар = "Ответственный: " + УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(ПараметрыСеанса.ТекущийПользователь, "ОсновнойОтветственный");
		Таб.Вывести(ОбластьПараметр);
		
		ОбластьПараметр.Параметры.Пар = "Номенклатурная группа: " + Группа;
		Таб.Вывести(ОбластьПараметр);
		
		Таб.Вывести(ОбластьШапка);
		
		Таб.НачатьАвтогруппировкуСтрок();
		
		ВыборкаОбщийИтог = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ВыборкаОбщийИтог.Следующий();
		
		ОбластьИтого.Параметры.Заполнить(ВыборкаОбщийИтог);
		Таб.Вывести(ОбластьИтого, ВыборкаОбщийИтог.Уровень());
		
		ВыборкаДок = ВыборкаОбщийИтог.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаДок.Следующий() Цикл
			
			ОбластьСтрока.Параметры.Заполнить(ВыборкаДок);				
			Таб.Вывести(ОбластьСтрока, ВыборкаДок.Уровень());
			
		КонецЦикла; 	
		
		Таб.ТолькоПросмотр = Истина;
		
		Таб.ЗакончитьАвтогруппировкуСтрок();
		
		Таб.Вывести(ОбластьПодвал);
		
		Таб.Показать();                        
		
	КонецПроцедуры //ВывестиДанныеПоПлану()
	
	// ОбновлениеОтображенияДиаграммы()
	//
	// Параметры:
	//  ЭлементыФормы - элементы формы текущего элемента
	//
	// Описание:
	//  Перерисовывает диаграмму в зависимости от выбранного значения в поле "Вид диаграммы"
	//
	Процедура ОбновлениеОтображенияДиаграммы(ЭлементыФормы) Экспорт
		
		ДатаНач = НачалоДня(ЭлементыФормы.ДатаНач.Значение);
		ДатаКон = КонецДня(ЭлементыФормы.ДатаКон.Значение); 
		Агент = ЭлементыФормы.Агент.Значение;  
		ТипДиаграммыОтчета = ЭлементыФормы.ТипДиаграммыОтчета.Значение;
		
		ЭлементыФормы.ДиаграммаПродаж.ТипДиаграммы = ТипДиаграммыОтчета;
		
		ЭлементыФормы.ДиаграммаПродаж.ВидПодписей = ВидПодписейКДиаграмме.СерияЗначение;
		
		ЭлементыФормы.ДиаграммаПродаж.Свет = Истина;
		
		ЭлементыФормы.ДиаграммаПродаж.Окантовка = Истина;
		
		ЭлементыФормы.ДиаграммаПродаж.ОбластьЗаголовка.Текст = "Выполнение плана продаж за " + кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон) + " Агент: " + Агент;
		
		ЭлементыФормы.ДиаграммаПродаж.ОтображатьЗаголовок = Истина;
		
	КонецПроцедуры //ОбновлениеОтображенияДиаграммы()
	
	ИспТочек = Константы.кпкРежимТоргТочек.Получить();
	
#КонецЕсли

