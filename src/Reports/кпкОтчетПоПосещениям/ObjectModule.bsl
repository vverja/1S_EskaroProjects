#Если Клиент Тогда
	
Перем ИспТочек;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ЭтоНоваяГруппировка(ТГруппировки, Стр)
	Результат = -1;
	Для Каждого СтрГр Из ТГруппировки Цикл
	    Если СтрГр.ТекЗнач <> Стр[СтрГр.Грп] Тогда
	        Результат = ТГруппировки.Индекс(СтрГр);
			Прервать;
	    КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

// Возвращает значение типа "Цвет" с переданными параметрами RGB-модели
//
Функция _RGB(r, g, b, Bright)
	K = Bright / 100;
	nr = r + Цел((255 - r) * K);
	ng = g + Цел((255 - g) * K);
	nb = b + Цел((255 - b) * K);
	Возврат Новый Цвет(nr, ng, nb);
КонецФункции

// Выводит заголовки выбранных на форме группировок и 
// в зависимости от уровня группировки меняем цвет фона
//
Процедура ВыводЗаголовковГруппировок(НомерГр, ТГруппировки, СтрДок, Таб)
	
	//выводим заголовки группировок начиная с НомерГр по последнюю
	//в зависимости от уровня группировки меняем цвет фона
	//Для Поз = НомерГр По ТГруппировки.Количество() - 1 Цикл
	Для Поз = НомерГр По ТГруппировки.Количество() - 1 Цикл
		
		СтрГр = ТГруппировки.Получить(Поз);
		СтрГр.ТекЗнач = СтрДок[СтрГр.Грп];
	    СтрГр.ИтогСум = 0;
		СтрГр.ИтогСтр = 0;
		ПечГруппировка = СтрГр.ТекЗнач;
		
		Макет = ЭтотОбъект.ПолучитьМакет("Макет");
		ОбластьГрНач   = Макет.ПолучитьОбласть("ЗагГрупп|Начало");
		ОбластьГрТочка = Макет.ПолучитьОбласть("ЗагГрупп|ТоргТочка");
		ОбластьГрКон   = Макет.ПолучитьОбласть("ЗагГрупп|Окончание");
		
		ОбластьГрНач.Параметры.ПечГруппировка = ПечГруппировка;
		Таб.Вывести(ОбластьГрНач);
		Если ИспТочек Тогда 
			Таб.Присоединить(ОбластьГрТочка);
		Иначе
			Таб.Присоединить(ОбластьГрКон);
		КонецЕсли;
		
		СтрОтчета = Таб.ВысотаТаблицы;
		СтрГр.СтрОтчета = СтрОтчета;
		//чем выше номер группировки, тем светлее фон
		Цвет = _RGB(160, 160, 200, 100 * (Поз + 1) / (3 + 1));
		Если ИспТочек Тогда 
			ОбластьТ = Таб.Область("R" + Формат(СтрОтчета,"ЧГ=0") + "C2:R" + Формат(СтрОтчета,"ЧГ=0") + "C12");
		Иначе
			ОбластьТ = Таб.Область("R" + Формат(СтрОтчета,"ЧГ=0") + "C2:R" + Формат(СтрОтчета,"ЧГ=0") + "C11");
		КонецЕсли;
		
		ОбластьТ.ЦветФона = Цвет;
		Если Поз = 0 Тогда
		    ОбластьТ.Шрифт = Новый Шрифт(ОбластьТ.Шрифт, , Истина);
		Иначе
		    ОбластьТ.Шрифт = Новый Шрифт(ОбластьТ.Шрифт, , Ложь);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры //ВыводЗаголовковГруппировок()

// Выводит итоги выбранных на форме группировок
//
Процедура ВыводИтоговГруппировок(НомерГр, ТГруппировки, Таб)
	//выводим итоги группировок начиная с НомерГр по последнюю
	Для Поз = 0 По ТГруппировки.Количество() - 1 Цикл
		СтрГр = ТГруппировки.Получить(Поз);
		СтрОтчета = СтрГр.СтрОтчета;
		Область = Таб.Область("R" + СтрОтчета + "C7:R" + СтрОтчета + "C7");//область суммы
		Область.Текст = Формат(СтрГр.ИтогСум, "ЧЦ=15; ЧДЦ=2; ЧВН");
		Область = Таб.Область("R" + СтрОтчета + "C8:R" + СтрОтчета + "C8");//область количества строк
		Область.Текст = ?(СтрГр.ИтогСтр <> 0, СтрГр.ИтогСтр, "");
	КонецЦикла;
КонецПроцедуры //ВыводИтоговГруппировок()

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ

// Процедура формирования отчета
//
Процедура СформироватьОтчет(ЭлементыФормы) Экспорт
	
	СписокАгентов = ЭлементыФормы.СписокАгентов.Значение;
	ДатаНач = ЭлементыФормы.ДатаНач.Значение;
	ДатаКон = ЭлементыФормы.ДатаКон.Значение;
	СписокВидовДокументов = ЭлементыФормы.СписокВидовДокументов.Значение;
	СписокДетализаций = ЭлементыФормы.СписокДетализаций.Значение;
	СписокКонтрагентов = ЭлементыФормы.СписокКонтрагентов.Значение;
	
	ОчиститьСообщения();
	
	Таб = ЭлементыФормы.ТаблицаОтчета;
	Таб.Очистить();
	
	ТЗДок = Новый ТаблицаЗначений;
	ТЗДок.Колонки.Добавить("Агент");
	ТЗДок.Колонки.Добавить("ВремяДок");
	ТЗДок.Колонки.Добавить("ВидДок");
	ТЗДок.Колонки.Добавить("ТоргТочка");
	ТЗДок.Колонки.Добавить("Док");
	ТЗДок.Колонки.Добавить("кпкДата");
	
	Поз = 0;
	Для Поз = 0 По СписокВидовДокументов.Количество() - 1 Цикл
		Эл = СписокВидовДокументов.Получить(Поз);
		Если Эл.Пометка Тогда
			
			МетаданныеДокумента = Документы[Эл.Значение].ПустаяСсылка().Метаданные();
			
			ТорговаяТочка = "";
			Если МетаданныеДокумента.Реквизиты.Найти("кпкТорговаяТочка") <> Неопределено Тогда 
            	ТорговаяТочка = "Док.кпкТорговаяТочка КАК ТоргТочка,";
			ИначеЕсли МетаданныеДокумента.Реквизиты.Найти("ТорговаяТочка") <> Неопределено Тогда				
				ТорговаяТочка = "Док.ТорговаяТочка КАК ТоргТочка,";				
			КонецЕсли;
			
			ТекстУсловияКонтр = "";
			Если СписокКонтрагентов.Количество() <>0 Тогда
				ТекстУсловияКонтр = " И Док.Контрагент В (&ПарКлиенты)";
			КонецЕсли;

			УслПроведенные = ?(ЭлементыФормы.флПроведенные.Значение, "И Док.Проведен = Истина", "");
			
			Если ЭлементыФормы.ДатаЗагрузкиВБазу.Значение Тогда
				ТекстДаты = "Док.Дата";
			Иначе
				ТекстДаты = "ВложенныйЗапрос.ДатаВремяСоздания";				
			КонецЕсли; 		
			
			ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	Док.Контрагент КАК Клиент," 
			+ ТорговаяТочка + "
			|	Док.Ссылка КАК Ссылка,"
			+ ТекстДаты + " КАК Дата,   
			|	ВложенныйЗапрос.Агент,
			|	ВложенныйЗапрос.ДатаВремяСоздания
			|ИЗ
			|	(ВЫБРАТЬ
			|		кпкСведенияДокумента.КПКДокумент КАК КПКДокумент,
			|		кпкСведенияДокумента.Агент КАК Агент,
			|		кпкСведенияДокумента.ДатаВремяСоздания КАК ДатаВремяСоздания
			|	ИЗ
			|		РегистрСведений.кпкСведенияДокумента КАК кпкСведенияДокумента" + 
			?(СписокАгентов.Количество() = 0, "", " ГДЕ кпкСведенияДокумента.Агент В(&ПарАгенты)") +
			") КАК ВложенныйЗапрос
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ." + Эл.Значение + " КАК Док
			|		ПО ВложенныйЗапрос.КПКДокумент = Док.Ссылка
			|ГДЕ
			|	" + ТекстДаты + " МЕЖДУ &ДатаНач И &ДатаКон
			|	И Док.ПометкаУдаления = ЛОЖЬ " + УслПроведенные + ТекстУсловияКонтр + "
			|УПОРЯДОЧИТЬ ПО
			|	Ссылка"; 	
						
			Запрос = Новый Запрос(ТекстЗапроса);
						
			Запрос.УстановитьПараметр("ДатаНач",    НачалоДня(ДатаНач));
			Запрос.УстановитьПараметр("ДатаКон",    КонецДня(ДатаКон));
			Запрос.УстановитьПараметр("ПарКлиенты", СписокКонтрагентов);
			Запрос.УстановитьПараметр("ПарАгенты",  СписокАгентов);
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.Следующий() Цикл
				Стр = ТЗДок.Добавить();
				Стр.Агент 	  = Выборка.Агент;
				Стр.ВремяДок  = Выборка.Дата;
				Стр.ВидДок    = Эл.Значение;      								
				   
				ТорговаяТочка = "";
				Если МетаданныеДокумента.Реквизиты.Найти("кпкТорговаяТочка") <> Неопределено или
					МетаданныеДокумента.Реквизиты.Найти("ТорговаяТочка") <> Неопределено Тогда 
            		Стр.ТоргТочка = Выборка.ТоргТочка;
				Иначе
					Стр.ТоргТочка = "" 
				КонецЕсли;
				
				Стр.Док 	  = Выборка.Ссылка;
				Стр.кпкДата   = Выборка.ДатаВремяСоздания;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	СтрСорт = "";
	ТГруппировки = Новый ТаблицаЗначений; 
	ТГруппировки.Колонки.Добавить("Грп");
	ТГруппировки.Колонки.Добавить("ТекЗнач");
	ТГруппировки.Колонки.Добавить("ИтогСум");
	ТГруппировки.Колонки.Добавить("ИтогСтр");
	ТГруппировки.Колонки.Добавить("СтрОтчета");
	ПечГруппировки = ""; 
	Стр = "";
	Для Поз = 0 По СписокДетализаций.Количество() - 1 Цикл
		Эл = СписокДетализаций.Получить(Поз);
		Если Эл.Пометка Тогда
			Группировка = Эл.Значение;
		    СтрСорт = СтрСорт + Группировка + ",";
			Если Группировка <> "ВремяДок" Тогда //по времени в КПК никогда не группируем
				ГрСтр = ТГруппировки.Добавить();
				ГрСтр.Грп = Эл.Значение;
				ПечГруппировки = ПечГруппировки + Эл.Представление + ", ";
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	Если ПечГруппировки <> "" Тогда
		ПечГруппировки = Лев(ПечГруппировки, СтрДлина(ПечГруппировки) - 2) + ".";
	    Заг = "Порядок группировок: " + ПечГруппировки;
	Иначе
		Заг = "";
	КонецЕсли;
	СтрСорт = СтрСорт + "Док";
	ТЗдок.Сортировать(СтрСорт);
	
	Макет = ЭтотОбъект.ПолучитьМакет("Макет");
	ОбластьШапкиНач = Макет.ПолучитьОбласть("Отчет|Начало");
	ОбластьШапкиТочка = Макет.ПолучитьОбласть("Отчет|ТоргТочка");
	ОбластьШапкиКон = Макет.ПолучитьОбласть("Отчет|Окончание");
	
	ОбластьШапкиНач.Параметры.Период = кпкАгентПлюс.ПолучитьПредставлениеПериода(ДатаНач, ДатаКон);
	Таб.Вывести(ОбластьШапкиНач);
	Если ИспТочек Тогда
		Таб.Присоединить(ОбластьШапкиТочка);
	Иначе
		Таб.Присоединить(ОбластьШапкиКон);
	КонецЕсли;
	НПП = 0;	
	
	Для Каждого СтрДок Из ТЗДок Цикл		
		
		Док 	  = СтрДок.Док;
		ВидДок    = СтрДок.ВидДок;
		СтрокДок  = 0;
		СуммаДок  = 0;
		ПечСкидка = 0;      
		
		Если ВидДок = "ЗаказПокупателя" или ВидДок = "ВозвратТоваровОтПокупателя" или
			 ВидДок = "ПоступлениеТоваровУслуг" или ВидДок = "РеализацияТоваровУслуг" Тогда
			СтрокДок = Док.Товары.Количество();
			СуммаДок = Док.Товары.Итог("Сумма");
			ПечСкидка = 0;
		ИначеЕсли ВидДок = "ПриходныйКассовыйОрдер" или ВидДок = "РасходныйКассовыйОрдер" Тогда
			СтрокДок = 0;
			СуммаДок = Док.СуммаДокумента;
		ИначеЕсли ВидДок = "кпкМерчендайзинг" Тогда
			СтрокДок = Док.Номенклатура.Количество();
			СуммаДок = Док.Номенклатура.Итог("Сумма");
		ИначеЕсли ВидДок = "кпкПосещение" Тогда
			СтрокДок = Док.Вопросы.Количество();			
			СуммаДок = 0;		
 		КонецЕсли;    		
			
		НовГрп = ЭтоНоваяГруппировка(ТГруппировки, СтрДок);
		Если НовГрп <> -1 Тогда			
			Если (ТГруппировки.Получить(НовГрп).СтрОтчета = Неопределено) Тогда
				ВыводЗаголовковГруппировок(НовГрп, ТГруппировки, СтрДок, Таб);
			Иначе
				ВыводИтоговГруппировок(НовГрп, ТГруппировки, Таб);
				ВыводЗаголовковГруппировок(НовГрп, ТГруппировки, СтрДок, Таб);
				НПП = 0;			    
			КонецЕсли;				
			Если НовГрп = 0 Тогда
				//НПП = НПП + 1;			    
			КонецЕсли;			
		КонецЕсли;
				
		Для Каждого ГрСтр Из ТГруппировки Цикл
		    ГрСтр.ИтогСум = ГрСтр.ИтогСум + СуммаДок;
			ГрСтр.ИтогСтр = ГрСтр.ИтогСтр + СтрокДок;
		КонецЦикла;
		
		НПП = НПП + 1;
		
		Если Док.Проведен Тогда
		    СостДок="ю";
		ИначеЕсли Док.ПометкаУдаления Тогда
			СостДок="э";
		Иначе
			СостДок="o";
		КонецЕсли;

		ПечАгент 	 = СтрДок.Агент;
		ПечВидДок 	 = Док.Метаданные().Представление();
		ПечВремя  	 = СокрЛП(СтрДок.кпкДата);
		ПечКлиент 	 = Док.Контрагент;
		ПечТоргТочка = СтрДок.ТоргТочка;
		ПечСумма 	 = Формат(СуммаДок, "ЧЦ=15; ЧДЦ=2; ЧВН");
		ПечСтрок 	 = ?(СтрокДок = 0, "", СтрокДок);
		
		СтрОбласть		= Макет.ПолучитьОбласть("Строка|Начало");
		СтрОбластьТочка = Макет.ПолучитьОбласть("Строка|ТоргТочка");
		СтрОбластьКон   = Макет.ПолучитьОбласть("Строка|Окончание");
		
		СтрОбласть.Параметры.НПП 		 = НПП;
		СтрОбласть.Параметры.ПечДатаДок  = Строка(Док.Дата);
		СтрОбласть.Параметры.СостДок 	 = СостДок;
		СтрОбласть.Параметры.ПечВремя 	 = ПечВремя; 	
		СтрОбласть.Параметры.ПечВидДок   = Док;		
		СтрОбласть.Параметры.ПечСумма	 = ПечСумма;
		СтрОбласть.Параметры.ПечСтрок    = ПечСтрок;
		СтрОбласть.Параметры.ПечСкидка 	 = ПечСкидка;
		СтрОбласть.Параметры.ПечАгент    = ПечАгент;
		СтрОбласть.Параметры.ПечКлиент   = ПечКлиент;
		Если ИспТочек Тогда
			СтрОбластьТочка.Параметры.ПечТоргТочка = ПечТоргТочка;
		КонецЕсли;	
		
		Таб.Вывести(СтрОбласть);
		Если ИспТочек Тогда
			Таб.Присоединить(СтрОбластьТочка);
		Иначе
			Таб.Присоединить(СтрОбластьКон);
		КонецЕсли;		
	КонецЦикла;
	
	Если ТЗДок.Количество() <> 0 Тогда
	    ВыводИтоговГруппировок(1, ТГруппировки, Таб);
	КонецЕсли;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал|Начало");
	ОбластьПодвалТочка = Макет.ПолучитьОбласть("Подвал|ТоргТочка");
	ОбластьПодвалКон = Макет.ПолучитьОбласть("Подвал|Окончание");
	
	Таб.Вывести(ОбластьПодвал);
	Если ИспТочек Тогда
		Таб.Присоединить(ОбластьПодвалТочка);
	Иначе
		Таб.Присоединить(ОбластьПодвалКон);
	КонецЕсли;	
	
	Таб.ТолькоПросмотр = Истина;
	Таб.АвтоМасштаб = Истина;
	Таб.Показать();   
		
КонецПроцедуры //СформироватьОтчет()

ИспТочек = Константы.кпкРежимТоргТочек.Получить();

#КонецЕсли
